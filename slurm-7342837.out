NODELIST=lrdn3232
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torch/distributed/launch.py:181: FutureWarning: The module torch.distributed.launch is deprecated
and will be removed in future. Use torchrun.
Note that --use-env is set by default in torchrun.
If your script expects `--local-rank` argument to be set, please
change it to read from `os.environ['LOCAL_RANK']` instead. See 
https://pytorch.org/docs/stable/distributed.html#launch-utility for 
further instructions

  warnings.warn(
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
3
2
1
0
DEVICE SET
DEVICE SET
DEVICE SET
DEVICE SET
08/31/2024 18:26:00 - INFO - torch.distributed.distributed_c10d -   Added key: store_based_barrier_key:1 to store for rank: 0
08/31/2024 18:26:00 - INFO - torch.distributed.distributed_c10d -   Added key: store_based_barrier_key:1 to store for rank: 1
08/31/2024 18:26:00 - INFO - torch.distributed.distributed_c10d -   Added key: store_based_barrier_key:1 to store for rank: 3
08/31/2024 18:26:00 - INFO - torch.distributed.distributed_c10d -   Added key: store_based_barrier_key:1 to store for rank: 2
08/31/2024 18:26:00 - INFO - torch.distributed.distributed_c10d -   Rank 1: Completed store-based barrier for key:store_based_barrier_key:1 with 4 nodes.
08/31/2024 18:26:00 - INFO - torch.distributed.distributed_c10d -   Rank 3: Completed store-based barrier for key:store_based_barrier_key:1 with 4 nodes.
08/31/2024 18:26:00 - INFO - torch.distributed.distributed_c10d -   Rank 0: Completed store-based barrier for key:store_based_barrier_key:1 with 4 nodes.
08/31/2024 18:26:00 - INFO - torch.distributed.distributed_c10d -   Rank 2: Completed store-based barrier for key:store_based_barrier_key:1 with 4 nodes.
08/31/2024 18:26:00 - INFO - __main__ -   ==================model_configs==================

08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_model_type : vast
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_itm_ratio : 0.1
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_frozen_vision : False
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_frozen_audio : False
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_checkpointing : True
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_max_caption_len : 40
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_max_omni_caption_len : 70
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_max_subtitle_len : 70
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_contra_dim : 512
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_inherit_keys : ['vision_encoder_type', 'audio_encoder_type', 'audio_melbins', 'audio_target_length']
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_frame_embedding_type : adaptive
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_vision_resolution : 224
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_vision_encoder_type : evaclip01_giant
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_audio_encoder_type : beats
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_audio_melbins : 64
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_audio_target_length : 1024
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_beam_size : 3
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_captioner_mode : False
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_generate_nums : 1
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_ret_bidirection_evaluation : False
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_itm_rerank_num : 50
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_evaluation_type : evaluation_mm
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_default : ./config/vast/default_model_cfg.json
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_max_vision_sample_num : 8
08/31/2024 18:26:00 - INFO - __main__ -   model_cfg_max_audio_sample_num : 1
08/31/2024 18:26:00 - INFO - __main__ -   ==================run_configs==================

08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_checkpoint : 
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_output_dir : ./output/vast/pretrain_vast/downstream/retrieval-msrvtt
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_gradient_accumulation_steps : 1
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_clip_lr : 5e-07
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_optim : adamw
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_learning_rate : 2e-05
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_betas : [0.9, 0.98]
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_weight_decay : 0.01
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_grad_norm : 2.0
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_warmup_ratio : 0.1
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_resume : False
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_seed : 50
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_fp16 : True
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_bf16 : False
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_zero_shot : False
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_scheduler : warmup_linear
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_new_lr : 0
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_new_params_name : []
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_valid_freq : 10
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_dataset_mix_type : random
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_remove_before_ckpt : True
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_first_eval : False
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_pretrain_dir : ./output/vast/pretrain_vast
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_num_train_steps : 0
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_save_best : True
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_pin_mem : True
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_vision_resolution : 224
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_use_ddp : False
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_mode : training
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_log_steps : 100
08/31/2024 18:26:00 - INFO - __main__ -   run_cfg_default : ./config/vast/default_run_cfg.json
08/31/2024 18:26:00 - INFO - __main__ -   ==================data_configs==================

08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_train_type : annoindexed
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_train_training : True
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_train_name : msrvtt_ret
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_train_txt : datasets/annotations/msrvtt/descs_ret_train.json
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_train_vision : ../MSRVTT/videos/videos
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_train_audio : ../MSRVTT/audios
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_train_vision_transforms : crop_flip
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_train_vision_format : video_rawvideo
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_train_vision_sample_num : 8
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_train_audio_sample_num : 1
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_train_task : ret%tv%ta
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_train_epoch : 3
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_train_n_workers : 8
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_train_batch_size : 64
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_val_type : annoindexed
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_val_training : False
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_val_name : msrvtt_ret
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_val_txt : datasets/annotations/msrvtt/descs_ret_test.json
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_val_vision : ../MSRVTT/video_test
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_val_vision_transforms : crop_flip
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_val_vision_format : video_rawvideo
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_val_audio : ../MSRVTT/audio_test
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_val_vision_sample_num : 8
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_val_audio_sample_num : 1
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_val_task : ret%tv
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_val_n_workers : 8
08/31/2024 18:26:00 - INFO - __main__ -   data_cfg_msrvtt_ret_val_batch_size : 32
wandb: Tracking run with wandb version 0.17.8
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
08/31/2024 18:26:04 - INFO - __main__ -   msrvtt_ret Using clip mean and std.
08/31/2024 18:26:04 - INFO - __main__ -   msrvtt_ret transforms crop_flip
ci sono 158540 labels
ci sono 158540 labels
ci sono 158540 labels
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
ci sono 884 labelsci sono 884 labels

ci sono 884 labels
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
ci sono 158540 labels
08/31/2024 18:26:11 - INFO - __main__ -   Create Dataset msrvtt_ret Success
08/31/2024 18:26:11 - INFO - __main__ -    loader ret%tv%ta--msrvtt_ret , ratio 7431 , bs_pergpu 16, n_workers 8
Please 'pip install xformers'
Please 'pip install xformers'
Please 'pip install xformers'
Please 'pip install xformers'
Please 'pip install xformers'
Please 'pip install xformers'
Please 'pip install xformers'
Please 'pip install xformers'
Please 'pip install xformers'
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
08/31/2024 18:26:12 - INFO - root -   Loaded EVA01-CLIP-g-14 model config.
08/31/2024 18:26:12 - INFO - root -   Loaded EVA01-CLIP-g-14 model config.
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
08/31/2024 18:26:12 - INFO - root -   Loaded EVA01-CLIP-g-14 model config.
08/31/2024 18:26:13 - INFO - __main__ -   msrvtt_ret Using clip mean and std.
08/31/2024 18:26:13 - INFO - __main__ -   msrvtt_ret transforms crop_flip
ci sono 884 labels
08/31/2024 18:26:13 - INFO - __main__ -   Create Dataset msrvtt_ret Success
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
Please 'pip install xformers'
Please 'pip install xformers'
Please 'pip install xformers'
08/31/2024 18:26:15 - INFO - root -   Loaded EVA01-CLIP-g-14 model config.
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
08/31/2024 18:27:06 - INFO - root -   Loading pretrained EVA01-CLIP-g-14 weights (./pretrained_weights/clip/EVA01_CLIP_g_14_psz14_s11B.pt).
08/31/2024 18:27:06 - INFO - root -   Loading pretrained EVA01-CLIP-g-14 weights (./pretrained_weights/clip/EVA01_CLIP_g_14_psz14_s11B.pt).
08/31/2024 18:27:06 - INFO - root -   Loading pretrained EVA01-CLIP-g-14 weights (./pretrained_weights/clip/EVA01_CLIP_g_14_psz14_s11B.pt).
08/31/2024 18:27:07 - INFO - root -   Loading pretrained EVA01-CLIP-g-14 weights (./pretrained_weights/clip/EVA01_CLIP_g_14_psz14_s11B.pt).
08/31/2024 18:27:09 - INFO - root -   incompatible_keys.missing_keys: []
08/31/2024 18:27:09 - INFO - root -   incompatible_keys.missing_keys: []
08/31/2024 18:27:09 - INFO - root -   incompatible_keys.missing_keys: []
08/31/2024 18:27:09 - INFO - model.audio_encoders.beats.beats -   BEATs Config: {'input_patch_size': 16, 'embed_dim': 512, 'conv_bias': False, 'encoder_layers': 12, 'encoder_embed_dim': 768, 'encoder_ffn_embed_dim': 3072, 'encoder_attention_heads': 12, 'activation_fn': 'gelu', 'layer_wise_gradient_decay_ratio': 1.0, 'layer_norm_first': False, 'deep_norm': True, 'dropout': 0.1, 'attention_dropout': 0.1, 'activation_dropout': 0.0, 'encoder_layerdrop': 0.05, 'dropout_input': 0.1, 'conv_pos': 128, 'conv_pos_groups': 16, 'relative_position_embedding': True, 'num_buckets': 320, 'max_distance': 800, 'gru_rel_pos': True, 'finetuned_model': False, 'predictor_dropout': 0.1, 'predictor_class': 527}
08/31/2024 18:27:09 - INFO - model.audio_encoders.beats.beats -   BEATs Config: {'input_patch_size': 16, 'embed_dim': 512, 'conv_bias': False, 'encoder_layers': 12, 'encoder_embed_dim': 768, 'encoder_ffn_embed_dim': 3072, 'encoder_attention_heads': 12, 'activation_fn': 'gelu', 'layer_wise_gradient_decay_ratio': 1.0, 'layer_norm_first': False, 'deep_norm': True, 'dropout': 0.1, 'attention_dropout': 0.1, 'activation_dropout': 0.0, 'encoder_layerdrop': 0.05, 'dropout_input': 0.1, 'conv_pos': 128, 'conv_pos_groups': 16, 'relative_position_embedding': True, 'num_buckets': 320, 'max_distance': 800, 'gru_rel_pos': True, 'finetuned_model': False, 'predictor_dropout': 0.1, 'predictor_class': 527}
08/31/2024 18:27:09 - INFO - model.audio_encoders.beats.beats -   BEATs Config: {'input_patch_size': 16, 'embed_dim': 512, 'conv_bias': False, 'encoder_layers': 12, 'encoder_embed_dim': 768, 'encoder_ffn_embed_dim': 3072, 'encoder_attention_heads': 12, 'activation_fn': 'gelu', 'layer_wise_gradient_decay_ratio': 1.0, 'layer_norm_first': False, 'deep_norm': True, 'dropout': 0.1, 'attention_dropout': 0.1, 'activation_dropout': 0.0, 'encoder_layerdrop': 0.05, 'dropout_input': 0.1, 'conv_pos': 128, 'conv_pos_groups': 16, 'relative_position_embedding': True, 'num_buckets': 320, 'max_distance': 800, 'gru_rel_pos': True, 'finetuned_model': False, 'predictor_dropout': 0.1, 'predictor_class': 527}
08/31/2024 18:27:09 - INFO - root -   incompatible_keys.missing_keys: []
08/31/2024 18:27:10 - INFO - model.audio_encoders.beats.beats -   BEATs Config: {'input_patch_size': 16, 'embed_dim': 512, 'conv_bias': False, 'encoder_layers': 12, 'encoder_embed_dim': 768, 'encoder_ffn_embed_dim': 3072, 'encoder_attention_heads': 12, 'activation_fn': 'gelu', 'layer_wise_gradient_decay_ratio': 1.0, 'layer_norm_first': False, 'deep_norm': True, 'dropout': 0.1, 'attention_dropout': 0.1, 'activation_dropout': 0.0, 'encoder_layerdrop': 0.05, 'dropout_input': 0.1, 'conv_pos': 128, 'conv_pos_groups': 16, 'relative_position_embedding': True, 'num_buckets': 320, 'max_distance': 800, 'gru_rel_pos': True, 'finetuned_model': False, 'predictor_dropout': 0.1, 'predictor_class': 527}
08/31/2024 18:27:11 - WARNING - model.text_encoders.bert.bert -   If you want to use `BertForMaskedLM` make sure `config.is_decoder=False` for bi-directional self-attention.
08/31/2024 18:27:11 - WARNING - model.text_encoders.bert.bert -   If you want to use `BertForMaskedLM` make sure `config.is_decoder=False` for bi-directional self-attention.
08/31/2024 18:27:11 - WARNING - model.text_encoders.bert.bert -   If you want to use `BertForMaskedLM` make sure `config.is_decoder=False` for bi-directional self-attention.
08/31/2024 18:27:12 - WARNING - model.text_encoders.bert.bert -   If you want to use `BertForMaskedLM` make sure `config.is_decoder=False` for bi-directional self-attention.
Some weights of BertForMaskedLM were not initialized from the model checkpoint at ./pretrained_weights/bert/bert-base-uncased and are newly initialized: ['encoder.layer.10.crossattention.output.dense.weight', 'encoder.layer.11.crossattention.output.LayerNorm.bias', 'encoder.layer.9.crossattention.output.dense.weight', 'encoder.layer.2.crossattention.self.key.weight', 'encoder.layer.9.crossattention.output.LayerNorm.bias', 'encoder.layer.6.crossattention.output.LayerNorm.bias', 'cls.predictions.transform.dense.weight', 'encoder.layer.8.crossattention.self.query.bias', 'encoder.layer.1.crossattention.self.value.weight', 'encoder.layer.9.crossattention.self.query.bias', 'encoder.layer.6.crossattention.self.query.bias', 'encoder.layer.7.crossattention.output.dense.bias', 'encoder.layer.5.crossattention.self.key.bias', 'encoder.layer.11.crossattention.output.LayerNorm.weight', 'encoder.layer.0.crossattention.self.value.weight', 'encoder.layer.10.crossattention.self.key.bias', 'encoder.layer.1.crossattention.output.LayerNorm.weight', 'encoder.layer.3.crossattention.output.dense.bias', 'encoder.layer.7.crossattention.self.value.bias', 'encoder.layer.6.crossattention.output.dense.bias', 'encoder.layer.3.crossattention.self.key.weight', 'encoder.layer.4.crossattention.self.value.bias', 'encoder.layer.3.crossattention.self.value.weight', 'encoder.layer.0.crossattention.self.key.weight', 'encoder.layer.2.crossattention.output.LayerNorm.bias', 'cls.predictions.transform.dense.bias', 'encoder.layer.6.crossattention.self.query.weight', 'encoder.layer.2.crossattention.self.value.bias', 'encoder.layer.11.crossattention.output.dense.weight', 'encoder.layer.1.crossattention.output.LayerNorm.bias', 'encoder.layer.1.crossattention.output.dense.weight', 'encoder.layer.8.crossattention.self.value.weight', 'encoder.layer.10.crossattention.self.value.bias', 'encoder.layer.0.crossattention.output.dense.weight', 'encoder.layer.9.crossattention.self.value.weight', 'encoder.layer.10.crossattention.self.value.weight', 'encoder.layer.6.crossattention.self.value.bias', 'encoder.layer.10.crossattention.output.LayerNorm.weight', 'encoder.layer.11.crossattention.self.key.bias', 'encoder.layer.8.crossattention.self.query.weight', 'encoder.layer.5.crossattention.self.query.weight', 'encoder.layer.2.crossattention.self.query.bias', 'encoder.layer.9.crossattention.output.LayerNorm.weight', 'encoder.layer.9.crossattention.self.key.weight', 'encoder.layer.8.crossattention.output.LayerNorm.bias', 'encoder.layer.1.crossattention.self.value.bias', 'encoder.layer.8.crossattention.self.key.weight', 'encoder.layer.3.crossattention.output.LayerNorm.bias', 'encoder.layer.10.crossattention.output.dense.bias', 'encoder.layer.8.crossattention.output.dense.weight', 'encoder.layer.0.crossattention.self.key.bias', 'encoder.layer.4.crossattention.output.LayerNorm.weight', 'encoder.layer.2.crossattention.output.LayerNorm.weight', 'encoder.layer.0.crossattention.self.query.weight', 'encoder.layer.11.crossattention.self.value.weight', 'encoder.layer.4.crossattention.self.key.bias', 'encoder.layer.7.crossattention.self.query.bias', 'encoder.layer.5.crossattention.self.query.bias', 'encoder.layer.8.crossattention.output.LayerNorm.weight', 'encoder.layer.4.crossattention.output.dense.bias', 'encoder.layer.6.crossattention.output.LayerNorm.weight', 'encoder.layer.4.crossattention.self.query.weight', 'encoder.layer.0.crossattention.output.dense.bias', 'encoder.layer.0.crossattention.self.query.bias', 'encoder.layer.0.crossattention.self.value.bias', 'encoder.layer.7.crossattention.output.LayerNorm.bias', 'encoder.layer.10.crossattention.self.key.weight', 'encoder.layer.6.crossattention.self.key.weight', 'encoder.layer.11.crossattention.self.query.weight', 'encoder.layer.9.crossattention.self.key.bias', 'encoder.layer.7.crossattention.self.query.weight', 'encoder.layer.2.crossattention.self.value.weight', 'encoder.layer.5.crossattention.output.dense.weight', 'encoder.layer.9.crossattention.output.dense.bias', 'cls.predictions.transform.LayerNorm.bias', 'encoder.layer.7.crossattention.output.dense.weight', 'encoder.layer.7.crossattention.self.key.weight', 'encoder.layer.0.crossattention.output.LayerNorm.bias', 'encoder.layer.7.crossattention.self.value.weight', 'encoder.layer.6.crossattention.self.key.bias', 'encoder.layer.2.crossattention.self.key.bias', 'encoder.layer.5.crossattention.output.dense.bias', 'encoder.layer.7.crossattention.output.LayerNorm.weight', 'encoder.layer.1.crossattention.output.dense.bias', 'encoder.layer.6.crossattention.output.dense.weight', 'encoder.layer.10.crossattention.output.LayerNorm.bias', 'encoder.layer.1.crossattention.self.key.bias', 'encoder.layer.7.crossattention.self.key.bias', 'encoder.layer.5.crossattention.output.LayerNorm.bias', 'encoder.layer.2.crossattention.self.query.weight', 'encoder.layer.8.crossattention.self.key.bias', 'cls.predictions.bias', 'encoder.layer.1.crossattention.self.query.weight', 'encoder.layer.4.crossattention.self.value.weight', 'encoder.layer.8.crossattention.self.value.bias', 'encoder.layer.1.crossattention.self.query.bias', 'encoder.layer.3.crossattention.self.key.bias', 'encoder.layer.2.crossattention.output.dense.weight', 'encoder.layer.3.crossattention.output.LayerNorm.weight', 'encoder.layer.5.crossattention.self.key.weight', 'encoder.layer.8.crossattention.output.dense.bias', 'encoder.layer.10.crossattention.self.query.bias', 'encoder.layer.3.crossattention.output.dense.weight', 'encoder.layer.9.crossattention.self.query.weight', 'encoder.layer.0.crossattention.output.LayerNorm.weight', 'encoder.layer.11.crossattention.self.query.bias', 'encoder.layer.11.crossattention.self.key.weight', 'encoder.layer.4.crossattention.self.query.bias', 'encoder.layer.4.crossattention.self.key.weight', 'encoder.layer.4.crossattention.output.LayerNorm.bias', 'encoder.layer.3.crossattention.self.query.weight', 'encoder.layer.10.crossattention.self.query.weight', 'encoder.layer.9.crossattention.self.value.bias', 'cls.predictions.transform.LayerNorm.weight', 'encoder.layer.5.crossattention.self.value.weight', 'encoder.layer.6.crossattention.self.value.weight', 'encoder.layer.4.crossattention.output.dense.weight', 'encoder.layer.2.crossattention.output.dense.bias', 'encoder.layer.5.crossattention.self.value.bias', 'encoder.layer.1.crossattention.self.key.weight', 'encoder.layer.3.crossattention.self.value.bias', 'encoder.layer.11.crossattention.self.value.bias', 'encoder.layer.5.crossattention.output.LayerNorm.weight', 'encoder.layer.11.crossattention.output.dense.bias', 'encoder.layer.3.crossattention.self.query.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Some weights of BertForMaskedLM were not initialized from the model checkpoint at ./pretrained_weights/bert/bert-base-uncased and are newly initialized: ['encoder.layer.5.crossattention.output.LayerNorm.weight', 'encoder.layer.4.crossattention.output.LayerNorm.bias', 'encoder.layer.1.crossattention.self.key.bias', 'encoder.layer.5.crossattention.output.dense.weight', 'encoder.layer.9.crossattention.output.dense.bias', 'encoder.layer.4.crossattention.self.value.bias', 'encoder.layer.4.crossattention.self.key.bias', 'encoder.layer.8.crossattention.self.key.bias', 'encoder.layer.9.crossattention.self.value.bias', 'encoder.layer.8.crossattention.self.key.weight', 'encoder.layer.7.crossattention.output.dense.bias', 'encoder.layer.9.crossattention.self.query.weight', 'encoder.layer.0.crossattention.output.dense.weight', 'encoder.layer.10.crossattention.self.query.bias', 'cls.predictions.transform.LayerNorm.bias', 'encoder.layer.3.crossattention.output.LayerNorm.weight', 'encoder.layer.5.crossattention.self.value.bias', 'encoder.layer.6.crossattention.self.query.bias', 'encoder.layer.11.crossattention.self.value.weight', 'encoder.layer.7.crossattention.self.key.weight', 'encoder.layer.0.crossattention.output.LayerNorm.bias', 'encoder.layer.10.crossattention.self.key.bias', 'encoder.layer.10.crossattention.self.value.bias', 'encoder.layer.7.crossattention.output.dense.weight', 'encoder.layer.5.crossattention.self.query.weight', 'encoder.layer.11.crossattention.self.query.bias', 'encoder.layer.7.crossattention.output.LayerNorm.weight', 'encoder.layer.9.crossattention.self.key.bias', 'encoder.layer.0.crossattention.self.key.weight', 'encoder.layer.3.crossattention.self.key.weight', 'encoder.layer.5.crossattention.self.query.bias', 'encoder.layer.2.crossattention.self.key.weight', 'encoder.layer.7.crossattention.self.value.bias', 'encoder.layer.2.crossattention.self.query.bias', 'encoder.layer.2.crossattention.self.key.bias', 'encoder.layer.8.crossattention.self.value.weight', 'encoder.layer.9.crossattention.self.key.weight', 'encoder.layer.9.crossattention.output.LayerNorm.bias', 'encoder.layer.9.crossattention.output.dense.weight', 'encoder.layer.0.crossattention.self.value.bias', 'encoder.layer.8.crossattention.self.query.bias', 'encoder.layer.9.crossattention.self.query.bias', 'encoder.layer.11.crossattention.output.LayerNorm.bias', 'encoder.layer.11.crossattention.self.key.weight', 'encoder.layer.7.crossattention.self.query.weight', 'encoder.layer.6.crossattention.output.LayerNorm.weight', 'encoder.layer.6.crossattention.self.value.bias', 'encoder.layer.3.crossattention.self.query.weight', 'encoder.layer.3.crossattention.output.dense.bias', 'encoder.layer.1.crossattention.output.LayerNorm.bias', 'encoder.layer.4.crossattention.self.query.bias', 'encoder.layer.5.crossattention.output.LayerNorm.bias', 'encoder.layer.6.crossattention.output.dense.bias', 'encoder.layer.0.crossattention.self.query.bias', 'cls.predictions.transform.LayerNorm.weight', 'encoder.layer.2.crossattention.output.LayerNorm.bias', 'encoder.layer.7.crossattention.self.value.weight', 'encoder.layer.4.crossattention.output.LayerNorm.weight', 'encoder.layer.8.crossattention.output.dense.bias', 'encoder.layer.8.crossattention.output.LayerNorm.weight', 'encoder.layer.1.crossattention.self.query.weight', 'encoder.layer.9.crossattention.self.value.weight', 'encoder.layer.3.crossattention.self.query.bias', 'encoder.layer.1.crossattention.output.LayerNorm.weight', 'encoder.layer.2.crossattention.self.query.weight', 'encoder.layer.10.crossattention.self.value.weight', 'encoder.layer.4.crossattention.self.key.weight', 'encoder.layer.5.crossattention.self.value.weight', 'encoder.layer.4.crossattention.self.value.weight', 'encoder.layer.4.crossattention.self.query.weight', 'encoder.layer.10.crossattention.output.LayerNorm.bias', 'encoder.layer.11.crossattention.output.dense.bias', 'encoder.layer.2.crossattention.output.dense.weight', 'encoder.layer.6.crossattention.output.dense.weight', 'encoder.layer.0.crossattention.output.dense.bias', 'encoder.layer.0.crossattention.output.LayerNorm.weight', 'encoder.layer.10.crossattention.self.query.weight', 'encoder.layer.1.crossattention.output.dense.weight', 'encoder.layer.3.crossattention.self.key.bias', 'encoder.layer.6.crossattention.self.value.weight', 'encoder.layer.3.crossattention.output.dense.weight', 'encoder.layer.3.crossattention.output.LayerNorm.bias', 'encoder.layer.1.crossattention.self.query.bias', 'encoder.layer.1.crossattention.self.key.weight', 'encoder.layer.7.crossattention.output.LayerNorm.bias', 'encoder.layer.1.crossattention.output.dense.bias', 'encoder.layer.10.crossattention.output.dense.bias', 'encoder.layer.5.crossattention.output.dense.bias', 'encoder.layer.8.crossattention.output.LayerNorm.bias', 'encoder.layer.11.crossattention.output.dense.weight', 'encoder.layer.7.crossattention.self.query.bias', 'cls.predictions.transform.dense.bias', 'encoder.layer.10.crossattention.output.LayerNorm.weight', 'encoder.layer.10.crossattention.self.key.weight', 'encoder.layer.6.crossattention.self.key.weight', 'encoder.layer.2.crossattention.self.value.bias', 'encoder.layer.11.crossattention.self.query.weight', 'encoder.layer.4.crossattention.output.dense.bias', 'encoder.layer.11.crossattention.self.value.bias', 'encoder.layer.5.crossattention.self.key.bias', 'encoder.layer.5.crossattention.self.key.weight', 'encoder.layer.4.crossattention.output.dense.weight', 'encoder.layer.1.crossattention.self.value.bias', 'encoder.layer.11.crossattention.self.key.bias', 'encoder.layer.8.crossattention.self.value.bias', 'encoder.layer.2.crossattention.output.dense.bias', 'encoder.layer.0.crossattention.self.key.bias', 'encoder.layer.10.crossattention.output.dense.weight', 'encoder.layer.8.crossattention.self.query.weight', 'encoder.layer.2.crossattention.self.value.weight', 'encoder.layer.7.crossattention.self.key.bias', 'encoder.layer.8.crossattention.output.dense.weight', 'encoder.layer.1.crossattention.self.value.weight', 'encoder.layer.6.crossattention.self.key.bias', 'encoder.layer.0.crossattention.self.query.weight', 'encoder.layer.11.crossattention.output.LayerNorm.weight', 'cls.predictions.transform.dense.weight', 'encoder.layer.3.crossattention.self.value.weight', 'encoder.layer.9.crossattention.output.LayerNorm.weight', 'cls.predictions.bias', 'encoder.layer.6.crossattention.output.LayerNorm.bias', 'encoder.layer.6.crossattention.self.query.weight', 'encoder.layer.3.crossattention.self.value.bias', 'encoder.layer.2.crossattention.output.LayerNorm.weight', 'encoder.layer.0.crossattention.self.value.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Some weights of BertForMaskedLM were not initialized from the model checkpoint at ./pretrained_weights/bert/bert-base-uncased and are newly initialized: ['encoder.layer.5.crossattention.output.LayerNorm.bias', 'encoder.layer.3.crossattention.self.value.weight', 'encoder.layer.7.crossattention.self.value.weight', 'encoder.layer.8.crossattention.self.key.bias', 'encoder.layer.11.crossattention.self.query.bias', 'encoder.layer.10.crossattention.self.query.bias', 'encoder.layer.10.crossattention.self.key.weight', 'encoder.layer.10.crossattention.output.LayerNorm.bias', 'encoder.layer.7.crossattention.self.key.bias', 'encoder.layer.5.crossattention.self.query.weight', 'encoder.layer.3.crossattention.output.LayerNorm.weight', 'encoder.layer.2.crossattention.self.key.weight', 'encoder.layer.4.crossattention.output.LayerNorm.bias', 'encoder.layer.6.crossattention.output.dense.bias', 'encoder.layer.5.crossattention.self.query.bias', 'encoder.layer.1.crossattention.output.dense.bias', 'encoder.layer.3.crossattention.self.value.bias', 'encoder.layer.3.crossattention.self.query.bias', 'encoder.layer.11.crossattention.output.dense.weight', 'encoder.layer.3.crossattention.self.key.weight', 'encoder.layer.11.crossattention.self.query.weight', 'encoder.layer.2.crossattention.self.value.bias', 'encoder.layer.0.crossattention.output.LayerNorm.bias', 'encoder.layer.5.crossattention.self.value.bias', 'encoder.layer.2.crossattention.self.query.bias', 'encoder.layer.8.crossattention.output.dense.bias', 'encoder.layer.6.crossattention.self.query.weight', 'cls.predictions.transform.dense.weight', 'encoder.layer.9.crossattention.self.key.weight', 'encoder.layer.3.crossattention.output.dense.weight', 'encoder.layer.8.crossattention.self.key.weight', 'encoder.layer.11.crossattention.output.dense.bias', 'encoder.layer.6.crossattention.self.value.bias', 'encoder.layer.7.crossattention.output.dense.weight', 'encoder.layer.0.crossattention.self.key.weight', 'encoder.layer.0.crossattention.self.value.weight', 'encoder.layer.5.crossattention.output.dense.bias', 'encoder.layer.6.crossattention.output.LayerNorm.bias', 'encoder.layer.6.crossattention.output.LayerNorm.weight', 'encoder.layer.10.crossattention.self.value.bias', 'encoder.layer.0.crossattention.self.value.bias', 'encoder.layer.6.crossattention.output.dense.weight', 'encoder.layer.4.crossattention.self.query.weight', 'encoder.layer.6.crossattention.self.key.weight', 'encoder.layer.9.crossattention.self.value.bias', 'encoder.layer.3.crossattention.self.query.weight', 'encoder.layer.4.crossattention.self.key.bias', 'encoder.layer.4.crossattention.self.value.bias', 'encoder.layer.9.crossattention.output.dense.weight', 'encoder.layer.10.crossattention.output.LayerNorm.weight', 'encoder.layer.1.crossattention.self.value.weight', 'encoder.layer.11.crossattention.self.key.weight', 'encoder.layer.2.crossattention.output.LayerNorm.bias', 'encoder.layer.10.crossattention.self.key.bias', 'encoder.layer.2.crossattention.output.LayerNorm.weight', 'encoder.layer.1.crossattention.self.query.weight', 'encoder.layer.4.crossattention.output.LayerNorm.weight', 'encoder.layer.8.crossattention.self.value.bias', 'encoder.layer.11.crossattention.output.LayerNorm.weight', 'encoder.layer.7.crossattention.output.dense.bias', 'encoder.layer.0.crossattention.self.query.weight', 'encoder.layer.11.crossattention.self.value.bias', 'encoder.layer.10.crossattention.output.dense.bias', 'encoder.layer.8.crossattention.output.LayerNorm.bias', 'encoder.layer.1.crossattention.output.LayerNorm.bias', 'encoder.layer.9.crossattention.self.key.bias', 'encoder.layer.0.crossattention.output.dense.bias', 'encoder.layer.2.crossattention.self.value.weight', 'encoder.layer.2.crossattention.self.key.bias', 'encoder.layer.3.crossattention.output.dense.bias', 'encoder.layer.9.crossattention.output.dense.bias', 'encoder.layer.4.crossattention.self.value.weight', 'encoder.layer.1.crossattention.self.key.bias', 'cls.predictions.transform.dense.bias', 'encoder.layer.5.crossattention.output.LayerNorm.weight', 'encoder.layer.7.crossattention.output.LayerNorm.bias', 'encoder.layer.10.crossattention.self.value.weight', 'encoder.layer.1.crossattention.output.LayerNorm.weight', 'encoder.layer.7.crossattention.self.key.weight', 'encoder.layer.3.crossattention.output.LayerNorm.bias', 'encoder.layer.7.crossattention.self.value.bias', 'encoder.layer.6.crossattention.self.query.bias', 'encoder.layer.9.crossattention.self.query.weight', 'encoder.layer.4.crossattention.output.dense.bias', 'encoder.layer.7.crossattention.self.query.bias', 'encoder.layer.8.crossattention.self.query.weight', 'encoder.layer.8.crossattention.self.query.bias', 'encoder.layer.4.crossattention.output.dense.weight', 'cls.predictions.bias', 'cls.predictions.transform.LayerNorm.bias', 'encoder.layer.5.crossattention.self.key.bias', 'encoder.layer.1.crossattention.output.dense.weight', 'encoder.layer.7.crossattention.output.LayerNorm.weight', 'encoder.layer.9.crossattention.output.LayerNorm.bias', 'encoder.layer.8.crossattention.output.dense.weight', 'encoder.layer.5.crossattention.self.value.weight', 'encoder.layer.0.crossattention.output.dense.weight', 'encoder.layer.5.crossattention.output.dense.weight', 'encoder.layer.4.crossattention.self.query.bias', 'encoder.layer.0.crossattention.self.key.bias', 'encoder.layer.5.crossattention.self.key.weight', 'encoder.layer.3.crossattention.self.key.bias', 'encoder.layer.0.crossattention.self.query.bias', 'encoder.layer.2.crossattention.self.query.weight', 'encoder.layer.2.crossattention.output.dense.weight', 'encoder.layer.6.crossattention.self.value.weight', 'encoder.layer.11.crossattention.output.LayerNorm.bias', 'encoder.layer.10.crossattention.output.dense.weight', 'encoder.layer.1.crossattention.self.query.bias', 'encoder.layer.6.crossattention.self.key.bias', 'encoder.layer.8.crossattention.output.LayerNorm.weight', 'encoder.layer.9.crossattention.output.LayerNorm.weight', 'encoder.layer.9.crossattention.self.value.weight', 'encoder.layer.10.crossattention.self.query.weight', 'encoder.layer.0.crossattention.output.LayerNorm.weight', 'encoder.layer.8.crossattention.self.value.weight', 'encoder.layer.11.crossattention.self.key.bias', 'cls.predictions.transform.LayerNorm.weight', 'encoder.layer.4.crossattention.self.key.weight', 'encoder.layer.2.crossattention.output.dense.bias', 'encoder.layer.1.crossattention.self.key.weight', 'encoder.layer.11.crossattention.self.value.weight', 'encoder.layer.1.crossattention.self.value.bias', 'encoder.layer.7.crossattention.self.query.weight', 'encoder.layer.9.crossattention.self.query.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Some weights of BertForMaskedLM were not initialized from the model checkpoint at ./pretrained_weights/bert/bert-base-uncased and are newly initialized: ['encoder.layer.5.crossattention.self.query.bias', 'encoder.layer.4.crossattention.self.query.weight', 'encoder.layer.9.crossattention.output.LayerNorm.bias', 'cls.predictions.transform.dense.weight', 'encoder.layer.9.crossattention.self.value.weight', 'encoder.layer.10.crossattention.self.query.bias', 'encoder.layer.1.crossattention.self.key.bias', 'encoder.layer.4.crossattention.self.key.weight', 'encoder.layer.11.crossattention.self.query.weight', 'encoder.layer.7.crossattention.output.LayerNorm.bias', 'encoder.layer.6.crossattention.output.LayerNorm.weight', 'encoder.layer.2.crossattention.output.dense.bias', 'encoder.layer.6.crossattention.self.value.weight', 'encoder.layer.7.crossattention.self.query.bias', 'encoder.layer.0.crossattention.self.value.weight', 'encoder.layer.10.crossattention.output.dense.bias', 'encoder.layer.9.crossattention.self.key.weight', 'encoder.layer.2.crossattention.self.key.bias', 'encoder.layer.10.crossattention.output.LayerNorm.weight', 'encoder.layer.10.crossattention.self.key.bias', 'encoder.layer.1.crossattention.output.LayerNorm.weight', 'encoder.layer.4.crossattention.output.dense.weight', 'encoder.layer.2.crossattention.self.value.bias', 'encoder.layer.5.crossattention.self.value.weight', 'encoder.layer.3.crossattention.self.value.bias', 'encoder.layer.0.crossattention.output.dense.weight', 'encoder.layer.7.crossattention.output.LayerNorm.weight', 'encoder.layer.7.crossattention.self.value.weight', 'encoder.layer.6.crossattention.self.query.bias', 'cls.predictions.transform.LayerNorm.bias', 'encoder.layer.11.crossattention.self.key.weight', 'encoder.layer.0.crossattention.self.key.weight', 'encoder.layer.8.crossattention.self.query.weight', 'encoder.layer.7.crossattention.output.dense.bias', 'encoder.layer.5.crossattention.output.dense.weight', 'encoder.layer.10.crossattention.self.key.weight', 'encoder.layer.0.crossattention.self.key.bias', 'encoder.layer.9.crossattention.self.key.bias', 'encoder.layer.11.crossattention.self.value.weight', 'encoder.layer.2.crossattention.output.dense.weight', 'encoder.layer.9.crossattention.output.LayerNorm.weight', 'encoder.layer.2.crossattention.self.value.weight', 'encoder.layer.3.crossattention.self.value.weight', 'encoder.layer.7.crossattention.self.key.bias', 'encoder.layer.11.crossattention.output.LayerNorm.bias', 'cls.predictions.transform.dense.bias', 'encoder.layer.10.crossattention.output.LayerNorm.bias', 'encoder.layer.3.crossattention.self.key.weight', 'encoder.layer.0.crossattention.self.query.weight', 'encoder.layer.4.crossattention.output.LayerNorm.bias', 'encoder.layer.8.crossattention.output.LayerNorm.weight', 'encoder.layer.4.crossattention.self.value.bias', 'encoder.layer.7.crossattention.self.key.weight', 'encoder.layer.10.crossattention.self.value.weight', 'encoder.layer.9.crossattention.self.query.bias', 'encoder.layer.1.crossattention.self.query.weight', 'encoder.layer.0.crossattention.output.LayerNorm.weight', 'encoder.layer.6.crossattention.self.key.weight', 'encoder.layer.11.crossattention.output.LayerNorm.weight', 'encoder.layer.3.crossattention.self.query.weight', 'encoder.layer.2.crossattention.self.key.weight', 'encoder.layer.10.crossattention.self.query.weight', 'encoder.layer.11.crossattention.self.key.bias', 'encoder.layer.10.crossattention.self.value.bias', 'encoder.layer.10.crossattention.output.dense.weight', 'encoder.layer.2.crossattention.output.LayerNorm.bias', 'encoder.layer.6.crossattention.output.dense.bias', 'encoder.layer.8.crossattention.output.LayerNorm.bias', 'encoder.layer.1.crossattention.output.LayerNorm.bias', 'encoder.layer.2.crossattention.self.query.weight', 'encoder.layer.7.crossattention.output.dense.weight', 'encoder.layer.6.crossattention.self.key.bias', 'encoder.layer.3.crossattention.output.dense.weight', 'cls.predictions.transform.LayerNorm.weight', 'encoder.layer.9.crossattention.output.dense.bias', 'encoder.layer.1.crossattention.self.key.weight', 'encoder.layer.11.crossattention.output.dense.weight', 'encoder.layer.6.crossattention.self.value.bias', 'encoder.layer.8.crossattention.output.dense.weight', 'encoder.layer.1.crossattention.output.dense.weight', 'encoder.layer.8.crossattention.self.key.bias', 'encoder.layer.5.crossattention.output.LayerNorm.bias', 'encoder.layer.1.crossattention.self.query.bias', 'encoder.layer.0.crossattention.output.LayerNorm.bias', 'encoder.layer.4.crossattention.self.value.weight', 'encoder.layer.3.crossattention.self.query.bias', 'encoder.layer.1.crossattention.self.value.bias', 'encoder.layer.4.crossattention.self.query.bias', 'encoder.layer.5.crossattention.self.value.bias', 'encoder.layer.0.crossattention.self.query.bias', 'encoder.layer.2.crossattention.output.LayerNorm.weight', 'encoder.layer.5.crossattention.output.dense.bias', 'encoder.layer.3.crossattention.output.LayerNorm.bias', 'encoder.layer.5.crossattention.self.key.bias', 'encoder.layer.9.crossattention.self.value.bias', 'encoder.layer.6.crossattention.self.query.weight', 'encoder.layer.4.crossattention.output.dense.bias', 'encoder.layer.11.crossattention.output.dense.bias', 'cls.predictions.bias', 'encoder.layer.11.crossattention.self.query.bias', 'encoder.layer.9.crossattention.output.dense.weight', 'encoder.layer.8.crossattention.self.key.weight', 'encoder.layer.1.crossattention.output.dense.bias', 'encoder.layer.5.crossattention.self.query.weight', 'encoder.layer.0.crossattention.output.dense.bias', 'encoder.layer.5.crossattention.self.key.weight', 'encoder.layer.3.crossattention.output.LayerNorm.weight', 'encoder.layer.8.crossattention.self.query.bias', 'encoder.layer.9.crossattention.self.query.weight', 'encoder.layer.3.crossattention.output.dense.bias', 'encoder.layer.8.crossattention.output.dense.bias', 'encoder.layer.6.crossattention.output.LayerNorm.bias', 'encoder.layer.8.crossattention.self.value.bias', 'encoder.layer.5.crossattention.output.LayerNorm.weight', 'encoder.layer.4.crossattention.output.LayerNorm.weight', 'encoder.layer.2.crossattention.self.query.bias', 'encoder.layer.0.crossattention.self.value.bias', 'encoder.layer.3.crossattention.self.key.bias', 'encoder.layer.7.crossattention.self.query.weight', 'encoder.layer.6.crossattention.output.dense.weight', 'encoder.layer.8.crossattention.self.value.weight', 'encoder.layer.4.crossattention.self.key.bias', 'encoder.layer.7.crossattention.self.value.bias', 'encoder.layer.1.crossattention.self.value.weight', 'encoder.layer.11.crossattention.self.value.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
08/31/2024 18:27:18 - INFO - __main__ -   load_from_pretrained: ./output/vast/pretrain_vast/ckpt/model_step_204994.pt
08/31/2024 18:27:18 - INFO - __main__ -   Load from pretrained dir ./output/vast/pretrain_vast
08/31/2024 18:27:19 - INFO - __main__ -   Unexpected keys ['vision_encoder.text.logit_scale']
08/31/2024 18:27:19 - INFO - __main__ -   missing_keys  ['vision_encoder.logit_scale']
08/31/2024 18:27:20 - INFO - __main__ -   ==================learning_rate_settings==================

08/31/2024 18:27:20 - INFO - __main__ -     basic_lr : 2e-05
08/31/2024 18:27:20 - INFO - __main__ -     clip_lr_visual : 5e-07
08/31/2024 18:27:20 - INFO - __main__ -     clip_lr_visual_len : 245
08/31/2024 18:27:20 - INFO - __main__ -     new_lr : 0
08/31/2024 18:27:20 - INFO - __main__ -     new_params_name: []
  0%|          | 0/7431 [00:00<?, ?it/s]  0%|          | 1/7431 [00:10<22:27:50, 10.88s/it]  0%|          | 2/7431 [00:13<12:36:01,  6.11s/it]  0%|          | 3/7431 [00:16<9:39:09,  4.68s/it]   0%|          | 4/7431 [00:19<8:12:32,  3.98s/it]  0%|          | 5/7431 [00:22<7:29:18,  3.63s/it]/leonardo_scratch/fast/IscrC_GenOpt/giordano/VAST/utils/build_optimizer.py:171: UserWarning: This overload of add_ is deprecated:
	add_(Number alpha, Tensor other)
Consider using one of the following signatures instead:
	add_(Tensor other, *, Number alpha) (Triggered internally at ../torch/csrc/utils/python_arg_parser.cpp:1485.)
  exp_avg.mul_(beta1).add_(1.0 - beta1, grad)
/leonardo_scratch/fast/IscrC_GenOpt/giordano/VAST/utils/build_optimizer.py:171: UserWarning: This overload of add_ is deprecated:
	add_(Number alpha, Tensor other)
Consider using one of the following signatures instead:
	add_(Tensor other, *, Number alpha) (Triggered internally at ../torch/csrc/utils/python_arg_parser.cpp:1485.)
  exp_avg.mul_(beta1).add_(1.0 - beta1, grad)
/leonardo_scratch/fast/IscrC_GenOpt/giordano/VAST/utils/build_optimizer.py:171: UserWarning: This overload of add_ is deprecated:
	add_(Number alpha, Tensor other)
Consider using one of the following signatures instead:
	add_(Tensor other, *, Number alpha) (Triggered internally at ../torch/csrc/utils/python_arg_parser.cpp:1485.)
  exp_avg.mul_(beta1).add_(1.0 - beta1, grad)
/leonardo_scratch/fast/IscrC_GenOpt/giordano/VAST/utils/build_optimizer.py:171: UserWarning: This overload of add_ is deprecated:
	add_(Number alpha, Tensor other)
Consider using one of the following signatures instead:
	add_(Tensor other, *, Number alpha) (Triggered internally at ../torch/csrc/utils/python_arg_parser.cpp:1485.)
  exp_avg.mul_(beta1).add_(1.0 - beta1, grad)
  0%|          | 6/7431 [00:25<7:13:30,  3.50s/it]  0%|          | 7/7431 [00:28<6:59:26,  3.39s/it]  0%|          | 8/7431 [00:32<6:55:27,  3.36s/it]  0%|          | 9/7431 [00:35<6:52:55,  3.34s/it]  0%|          | 10/7431 [00:38<6:47:58,  3.30s/it]  0%|          | 11/7431 [00:41<6:42:36,  3.26s/it]  0%|          | 12/7431 [00:45<6:39:10,  3.23s/it]  0%|          | 13/7431 [00:48<6:39:54,  3.23s/it]  0%|          | 14/7431 [00:51<6:36:27,  3.21s/it]  0%|          | 15/7431 [00:54<6:29:57,  3.15s/it]  0%|          | 16/7431 [00:57<6:24:24,  3.11s/it]  0%|          | 17/7431 [01:00<6:33:11,  3.18s/it]  0%|          | 18/7431 [01:03<6:29:42,  3.15s/it]  0%|          | 19/7431 [01:07<6:30:47,  3.16s/it]  0%|          | 20/7431 [01:10<6:31:20,  3.17s/it]  0%|          | 21/7431 [01:13<6:29:11,  3.15s/it]  0%|          | 22/7431 [01:16<6:26:15,  3.13s/it]  0%|          | 23/7431 [01:19<6:27:41,  3.14s/it]  0%|          | 24/7431 [01:22<6:29:13,  3.15s/it]  0%|          | 25/7431 [01:26<6:29:48,  3.16s/it]  0%|          | 26/7431 [01:29<6:35:55,  3.21s/it]  0%|          | 27/7431 [01:32<6:30:37,  3.17s/it]  0%|          | 28/7431 [01:35<6:29:23,  3.16s/it]  0%|          | 29/7431 [01:38<6:31:46,  3.18s/it]  0%|          | 30/7431 [01:41<6:33:45,  3.19s/it]  0%|          | 31/7431 [01:45<6:28:39,  3.15s/it]  0%|          | 32/7431 [01:48<6:27:36,  3.14s/it]  0%|          | 33/7431 [01:51<6:35:41,  3.21s/it]  0%|          | 34/7431 [01:54<6:38:47,  3.23s/it]  0%|          | 35/7431 [01:57<6:32:03,  3.18s/it]  0%|          | 36/7431 [02:01<6:34:56,  3.20s/it]  0%|          | 37/7431 [02:04<6:39:18,  3.24s/it]  1%|          | 38/7431 [02:07<6:34:39,  3.20s/it]  1%|          | 39/7431 [02:10<6:30:32,  3.17s/it]  1%|          | 40/7431 [02:13<6:28:47,  3.16s/it]  1%|          | 41/7431 [02:17<6:35:00,  3.21s/it]  1%|          | 42/7431 [02:20<6:30:14,  3.17s/it]  1%|          | 43/7431 [02:23<6:34:31,  3.20s/it]  1%|          | 44/7431 [02:26<6:36:30,  3.22s/it]  1%|          | 45/7431 [02:30<6:41:05,  3.26s/it]  1%|          | 46/7431 [02:33<6:36:13,  3.22s/it]  1%|          | 47/7431 [02:36<6:34:29,  3.21s/it]  1%|          | 48/7431 [02:39<6:30:00,  3.17s/it]  1%|          | 49/7431 [02:42<6:33:05,  3.19s/it]08/31/2024 18:30:04 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.089604377746582, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.059045810252428055, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 3.039065361022949, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 5.187715530395508}
  1%|          | 50/7431 [02:45<6:30:56,  3.18s/it]  1%|          | 51/7431 [02:49<6:34:27,  3.21s/it]  1%|          | 52/7431 [02:52<6:39:36,  3.25s/it]  1%|          | 53/7431 [02:55<6:33:29,  3.20s/it]  1%|          | 54/7431 [02:58<6:36:59,  3.23s/it]  1%|          | 55/7431 [03:01<6:31:57,  3.19s/it]  1%|          | 56/7431 [03:05<6:25:56,  3.14s/it]  1%|          | 57/7431 [03:08<6:31:08,  3.18s/it]  1%|          | 58/7431 [03:11<6:29:24,  3.17s/it]  1%|          | 59/7431 [03:14<6:27:13,  3.15s/it]  1%|          | 60/7431 [03:17<6:21:33,  3.11s/it]  1%|          | 61/7431 [03:20<6:25:16,  3.14s/it]  1%|          | 62/7431 [03:23<6:20:45,  3.10s/it]  1%|          | 63/7431 [03:27<6:28:44,  3.17s/it]  1%|          | 64/7431 [03:30<6:32:26,  3.20s/it]  1%|          | 65/7431 [03:33<6:34:58,  3.22s/it]  1%|          | 66/7431 [03:36<6:29:54,  3.18s/it]  1%|          | 67/7431 [03:39<6:26:55,  3.15s/it]  1%|          | 68/7431 [03:42<6:28:20,  3.16s/it]  1%|          | 69/7431 [03:46<6:28:22,  3.17s/it]  1%|          | 70/7431 [03:49<6:31:51,  3.19s/it]  1%|          | 71/7431 [03:52<6:28:50,  3.17s/it]  1%|          | 72/7431 [03:55<6:29:41,  3.18s/it]  1%|          | 73/7431 [03:58<6:26:33,  3.15s/it]  1%|          | 74/7431 [04:02<6:33:59,  3.21s/it]  1%|          | 75/7431 [04:05<6:29:48,  3.18s/it]  1%|          | 76/7431 [04:08<6:27:18,  3.16s/it]  1%|          | 77/7431 [04:11<6:27:18,  3.16s/it]  1%|          | 78/7431 [04:14<6:30:43,  3.19s/it]  1%|          | 79/7431 [04:17<6:29:33,  3.18s/it]  1%|          | 80/7431 [04:20<6:24:02,  3.13s/it]  1%|          | 81/7431 [04:24<6:28:35,  3.17s/it]  1%|          | 82/7431 [04:27<6:27:59,  3.17s/it]  1%|          | 83/7431 [04:30<6:27:05,  3.16s/it]  1%|          | 84/7431 [04:33<6:25:19,  3.15s/it]  1%|          | 85/7431 [04:36<6:24:57,  3.14s/it]  1%|          | 86/7431 [04:40<6:30:51,  3.19s/it]  1%|          | 87/7431 [04:43<6:30:39,  3.19s/it]  1%|          | 88/7431 [04:46<6:36:42,  3.24s/it]  1%|          | 89/7431 [04:49<6:35:43,  3.23s/it]  1%|          | 90/7431 [04:53<6:37:14,  3.25s/it]  1%|          | 91/7431 [04:56<6:28:55,  3.18s/it]  1%|          | 92/7431 [04:59<6:24:35,  3.14s/it]  1%|▏         | 93/7431 [05:02<6:26:22,  3.16s/it]  1%|▏         | 94/7431 [05:05<6:32:44,  3.21s/it]  1%|▏         | 95/7431 [05:08<6:31:52,  3.21s/it]  1%|▏         | 96/7431 [05:12<6:34:08,  3.22s/it]  1%|▏         | 97/7431 [05:15<6:30:20,  3.19s/it]  1%|▏         | 98/7431 [05:18<6:31:40,  3.20s/it]  1%|▏         | 99/7431 [05:21<6:31:02,  3.20s/it]08/31/2024 18:32:43 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.1631617546081543, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04452814906835556, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.932673215866089, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 5.1403632164001465}
  1%|▏         | 100/7431 [05:25<6:34:11,  3.23s/it]  1%|▏         | 101/7431 [05:27<6:23:54,  3.14s/it]  1%|▏         | 102/7431 [05:31<6:26:20,  3.16s/it]  1%|▏         | 103/7431 [05:34<6:22:49,  3.13s/it]  1%|▏         | 104/7431 [05:37<6:34:29,  3.23s/it]  1%|▏         | 105/7431 [05:40<6:32:53,  3.22s/it]  1%|▏         | 106/7431 [05:43<6:27:45,  3.18s/it]  1%|▏         | 107/7431 [05:47<6:25:28,  3.16s/it]  1%|▏         | 108/7431 [05:50<6:29:19,  3.19s/it]  1%|▏         | 109/7431 [05:53<6:29:34,  3.19s/it]  1%|▏         | 110/7431 [05:56<6:33:36,  3.23s/it]  1%|▏         | 111/7431 [05:59<6:22:33,  3.14s/it]  2%|▏         | 112/7431 [06:03<6:25:57,  3.16s/it]  2%|▏         | 113/7431 [06:06<6:30:08,  3.20s/it]  2%|▏         | 114/7431 [06:09<6:30:22,  3.20s/it]  2%|▏         | 115/7431 [06:12<6:28:49,  3.19s/it]  2%|▏         | 116/7431 [06:15<6:24:21,  3.15s/it]  2%|▏         | 117/7431 [06:18<6:26:52,  3.17s/it]  2%|▏         | 118/7431 [06:22<6:28:19,  3.19s/it]  2%|▏         | 119/7431 [06:25<6:28:44,  3.19s/it]  2%|▏         | 120/7431 [06:28<6:25:58,  3.17s/it]  2%|▏         | 121/7431 [06:31<6:18:33,  3.11s/it]  2%|▏         | 122/7431 [06:34<6:18:20,  3.11s/it]  2%|▏         | 123/7431 [06:37<6:26:23,  3.17s/it]  2%|▏         | 124/7431 [06:41<6:29:41,  3.20s/it]  2%|▏         | 125/7431 [06:44<6:30:28,  3.21s/it]  2%|▏         | 126/7431 [06:47<6:25:42,  3.17s/it]  2%|▏         | 127/7431 [06:50<6:29:48,  3.20s/it]  2%|▏         | 128/7431 [06:54<6:35:46,  3.25s/it]  2%|▏         | 129/7431 [06:57<6:29:55,  3.20s/it]  2%|▏         | 130/7431 [07:00<6:23:18,  3.15s/it]  2%|▏         | 131/7431 [07:03<6:30:48,  3.21s/it]  2%|▏         | 132/7431 [07:06<6:25:20,  3.17s/it]  2%|▏         | 133/7431 [07:09<6:23:34,  3.15s/it]  2%|▏         | 134/7431 [07:12<6:23:35,  3.15s/it]  2%|▏         | 135/7431 [07:16<6:23:52,  3.16s/it]  2%|▏         | 136/7431 [07:19<6:21:19,  3.14s/it]  2%|▏         | 137/7431 [07:22<6:23:33,  3.16s/it]  2%|▏         | 138/7431 [07:25<6:26:59,  3.18s/it]  2%|▏         | 139/7431 [07:28<6:30:45,  3.22s/it]  2%|▏         | 140/7431 [07:31<6:26:04,  3.18s/it]  2%|▏         | 141/7431 [07:34<6:17:43,  3.11s/it]  2%|▏         | 142/7431 [07:38<6:25:53,  3.18s/it]  2%|▏         | 143/7431 [07:41<6:25:16,  3.17s/it]  2%|▏         | 144/7431 [07:44<6:26:42,  3.18s/it]  2%|▏         | 145/7431 [07:47<6:19:57,  3.13s/it]  2%|▏         | 146/7431 [07:50<6:17:58,  3.11s/it]  2%|▏         | 147/7431 [07:54<6:31:40,  3.23s/it]  2%|▏         | 148/7431 [07:57<6:35:55,  3.26s/it]  2%|▏         | 149/7431 [08:00<6:27:45,  3.19s/it]08/31/2024 18:35:22 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 3.2016472816467285, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.06156301498413086, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 3.460171699523926, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 6.723381996154785}
  2%|▏         | 150/7431 [08:03<6:25:40,  3.18s/it]  2%|▏         | 151/7431 [08:06<6:27:48,  3.20s/it]  2%|▏         | 152/7431 [08:10<6:25:09,  3.17s/it]  2%|▏         | 153/7431 [08:13<6:28:48,  3.21s/it]  2%|▏         | 154/7431 [08:16<6:31:21,  3.23s/it]  2%|▏         | 155/7431 [08:19<6:27:04,  3.19s/it]  2%|▏         | 156/7431 [08:22<6:28:17,  3.20s/it]  2%|▏         | 157/7431 [08:26<6:24:48,  3.17s/it]  2%|▏         | 158/7431 [08:29<6:19:39,  3.13s/it]  2%|▏         | 159/7431 [08:32<6:18:46,  3.13s/it]  2%|▏         | 160/7431 [08:35<6:17:30,  3.12s/it]  2%|▏         | 161/7431 [08:38<6:19:07,  3.13s/it]  2%|▏         | 162/7431 [08:41<6:18:06,  3.12s/it]  2%|▏         | 163/7431 [08:44<6:18:23,  3.12s/it]  2%|▏         | 164/7431 [08:47<6:21:00,  3.15s/it]  2%|▏         | 165/7431 [08:51<6:21:09,  3.15s/it]  2%|▏         | 166/7431 [08:54<6:25:53,  3.19s/it]  2%|▏         | 167/7431 [08:57<6:28:48,  3.21s/it]  2%|▏         | 168/7431 [09:00<6:27:25,  3.20s/it]  2%|▏         | 169/7431 [09:03<6:23:20,  3.17s/it]  2%|▏         | 170/7431 [09:06<6:15:57,  3.11s/it]  2%|▏         | 171/7431 [09:09<6:15:06,  3.10s/it]  2%|▏         | 172/7431 [09:13<6:27:28,  3.20s/it]  2%|▏         | 173/7431 [09:16<6:31:01,  3.23s/it]  2%|▏         | 174/7431 [09:19<6:28:40,  3.21s/it]  2%|▏         | 175/7431 [09:22<6:25:03,  3.18s/it]  2%|▏         | 176/7431 [09:26<6:24:28,  3.18s/it]  2%|▏         | 177/7431 [09:29<6:26:23,  3.20s/it]  2%|▏         | 178/7431 [09:32<6:34:04,  3.26s/it]  2%|▏         | 179/7431 [09:35<6:26:00,  3.19s/it]  2%|▏         | 180/7431 [09:39<6:26:29,  3.20s/it]  2%|▏         | 181/7431 [09:42<6:25:02,  3.19s/it]  2%|▏         | 182/7431 [09:45<6:27:58,  3.21s/it]  2%|▏         | 183/7431 [09:48<6:29:15,  3.22s/it]  2%|▏         | 184/7431 [09:51<6:27:36,  3.21s/it]  2%|▏         | 185/7431 [09:55<6:29:24,  3.22s/it]  3%|▎         | 186/7431 [09:58<6:28:25,  3.22s/it]  3%|▎         | 187/7431 [10:01<6:29:37,  3.23s/it]  3%|▎         | 188/7431 [10:04<6:29:05,  3.22s/it]  3%|▎         | 189/7431 [10:08<6:28:53,  3.22s/it]  3%|▎         | 190/7431 [10:11<6:35:47,  3.28s/it]  3%|▎         | 191/7431 [10:14<6:32:59,  3.26s/it]  3%|▎         | 192/7431 [10:17<6:30:36,  3.24s/it]  3%|▎         | 193/7431 [10:20<6:27:06,  3.21s/it]  3%|▎         | 194/7431 [10:24<6:23:49,  3.18s/it]  3%|▎         | 195/7431 [10:27<6:20:38,  3.16s/it]  3%|▎         | 196/7431 [10:30<6:21:49,  3.17s/it]  3%|▎         | 197/7431 [10:33<6:35:51,  3.28s/it]  3%|▎         | 198/7431 [10:37<6:34:58,  3.28s/it]  3%|▎         | 199/7431 [10:40<6:32:19,  3.25s/it]08/31/2024 18:38:02 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.3132615089416504, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.05027526617050171, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.9080052375793457, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 5.271542072296143}
  3%|▎         | 200/7431 [10:43<6:19:40,  3.15s/it]  3%|▎         | 201/7431 [10:46<6:13:49,  3.10s/it]  3%|▎         | 202/7431 [10:49<6:18:42,  3.14s/it]  3%|▎         | 203/7431 [10:52<6:16:51,  3.13s/it]  3%|▎         | 204/7431 [10:55<6:21:12,  3.16s/it]  3%|▎         | 205/7431 [10:59<6:24:53,  3.20s/it]  3%|▎         | 206/7431 [11:02<6:19:56,  3.16s/it]  3%|▎         | 207/7431 [11:05<6:24:52,  3.20s/it]  3%|▎         | 208/7431 [11:08<6:21:22,  3.17s/it]  3%|▎         | 209/7431 [11:11<6:18:31,  3.14s/it]  3%|▎         | 210/7431 [11:14<6:20:54,  3.17s/it]  3%|▎         | 211/7431 [11:18<6:19:45,  3.16s/it]  3%|▎         | 212/7431 [11:21<6:19:28,  3.15s/it]  3%|▎         | 213/7431 [11:24<6:14:09,  3.11s/it]  3%|▎         | 214/7431 [11:27<6:15:31,  3.12s/it]  3%|▎         | 215/7431 [11:30<6:21:46,  3.17s/it]  3%|▎         | 216/7431 [11:33<6:19:09,  3.15s/it]  3%|▎         | 217/7431 [11:36<6:14:26,  3.11s/it]  3%|▎         | 218/7431 [11:39<6:17:53,  3.14s/it]  3%|▎         | 219/7431 [11:43<6:20:24,  3.16s/it]  3%|▎         | 220/7431 [11:46<6:17:57,  3.14s/it]  3%|▎         | 221/7431 [11:49<6:15:51,  3.13s/it]  3%|▎         | 222/7431 [11:52<6:17:36,  3.14s/it]  3%|▎         | 223/7431 [11:55<6:18:30,  3.15s/it]  3%|▎         | 224/7431 [11:58<6:18:00,  3.15s/it]  3%|▎         | 225/7431 [12:02<6:26:34,  3.22s/it]  3%|▎         | 226/7431 [12:05<6:25:31,  3.21s/it]  3%|▎         | 227/7431 [12:08<6:23:27,  3.19s/it]  3%|▎         | 228/7431 [12:11<6:24:26,  3.20s/it]  3%|▎         | 229/7431 [12:14<6:21:07,  3.18s/it]  3%|▎         | 230/7431 [12:18<6:21:37,  3.18s/it]  3%|▎         | 231/7431 [12:21<6:18:51,  3.16s/it]  3%|▎         | 232/7431 [12:24<6:20:22,  3.17s/it]  3%|▎         | 233/7431 [12:27<6:21:20,  3.18s/it]  3%|▎         | 234/7431 [12:30<6:23:36,  3.20s/it]  3%|▎         | 235/7431 [12:34<6:22:00,  3.19s/it]  3%|▎         | 236/7431 [12:37<6:23:28,  3.20s/it]  3%|▎         | 237/7431 [12:40<6:25:06,  3.21s/it]  3%|▎         | 238/7431 [12:43<6:22:50,  3.19s/it]  3%|▎         | 239/7431 [12:46<6:24:01,  3.20s/it]  3%|▎         | 240/7431 [12:50<6:24:21,  3.21s/it]  3%|▎         | 241/7431 [12:53<6:24:35,  3.21s/it]  3%|▎         | 242/7431 [12:56<6:24:18,  3.21s/it]  3%|▎         | 243/7431 [12:59<6:21:37,  3.19s/it]  3%|▎         | 244/7431 [13:02<6:20:29,  3.18s/it]  3%|▎         | 245/7431 [13:06<6:23:47,  3.20s/it]  3%|▎         | 246/7431 [13:09<6:29:50,  3.26s/it]  3%|▎         | 247/7431 [13:12<6:23:57,  3.21s/it]  3%|▎         | 248/7431 [13:15<6:16:18,  3.14s/it]  3%|▎         | 249/7431 [13:18<6:19:48,  3.17s/it]08/31/2024 18:40:40 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.2192821502685547, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.045771703124046326, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.862748146057129, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 5.127801895141602}
  3%|▎         | 250/7431 [13:21<6:19:57,  3.17s/it]  3%|▎         | 251/7431 [13:25<6:17:37,  3.16s/it]  3%|▎         | 252/7431 [13:28<6:27:32,  3.24s/it]  3%|▎         | 253/7431 [13:31<6:24:33,  3.21s/it]  3%|▎         | 254/7431 [13:34<6:18:37,  3.17s/it]  3%|▎         | 255/7431 [13:37<6:15:07,  3.14s/it]  3%|▎         | 256/7431 [13:40<6:08:27,  3.08s/it]  3%|▎         | 257/7431 [13:43<6:12:49,  3.12s/it]  3%|▎         | 258/7431 [13:47<6:14:05,  3.13s/it]  3%|▎         | 259/7431 [13:50<6:10:14,  3.10s/it]  3%|▎         | 260/7431 [13:53<6:07:31,  3.08s/it]  4%|▎         | 261/7431 [13:56<6:16:24,  3.15s/it]  4%|▎         | 262/7431 [13:59<6:17:45,  3.16s/it]  4%|▎         | 263/7431 [14:02<6:18:04,  3.16s/it]  4%|▎         | 264/7431 [14:05<6:17:35,  3.16s/it]  4%|▎         | 265/7431 [14:09<6:19:46,  3.18s/it]  4%|▎         | 266/7431 [14:12<6:18:39,  3.17s/it]  4%|▎         | 267/7431 [14:15<6:22:06,  3.20s/it]  4%|▎         | 268/7431 [14:19<6:29:26,  3.26s/it]  4%|▎         | 269/7431 [14:22<6:33:34,  3.30s/it]  4%|▎         | 270/7431 [14:25<6:24:47,  3.22s/it]  4%|▎         | 271/7431 [14:28<6:20:54,  3.19s/it]  4%|▎         | 272/7431 [14:31<6:22:04,  3.20s/it]  4%|▎         | 273/7431 [14:34<6:18:09,  3.17s/it]  4%|▎         | 274/7431 [14:38<6:20:19,  3.19s/it]  4%|▎         | 275/7431 [14:41<6:15:48,  3.15s/it]  4%|▎         | 276/7431 [14:44<6:14:13,  3.14s/it]  4%|▎         | 277/7431 [14:47<6:15:21,  3.15s/it]  4%|▎         | 278/7431 [14:50<6:27:24,  3.25s/it]  4%|▍         | 279/7431 [14:54<6:30:00,  3.27s/it]  4%|▍         | 280/7431 [14:57<6:22:01,  3.21s/it]  4%|▍         | 281/7431 [15:00<6:18:11,  3.17s/it]  4%|▍         | 282/7431 [15:03<6:16:28,  3.16s/it]  4%|▍         | 283/7431 [15:06<6:20:20,  3.19s/it]  4%|▍         | 284/7431 [15:10<6:21:46,  3.20s/it]  4%|▍         | 285/7431 [15:13<6:15:40,  3.15s/it]  4%|▍         | 286/7431 [15:16<6:18:07,  3.18s/it]  4%|▍         | 287/7431 [15:19<6:25:06,  3.23s/it]  4%|▍         | 288/7431 [15:22<6:16:15,  3.16s/it]  4%|▍         | 289/7431 [15:25<6:14:18,  3.14s/it]  4%|▍         | 290/7431 [15:29<6:23:00,  3.22s/it]  4%|▍         | 291/7431 [15:32<6:16:31,  3.16s/it]  4%|▍         | 292/7431 [15:35<6:16:19,  3.16s/it]  4%|▍         | 293/7431 [15:38<6:23:26,  3.22s/it]  4%|▍         | 294/7431 [15:41<6:22:04,  3.21s/it]  4%|▍         | 295/7431 [15:45<6:19:29,  3.19s/it]  4%|▍         | 296/7431 [15:48<6:20:27,  3.20s/it]  4%|▍         | 297/7431 [15:51<6:17:17,  3.17s/it]  4%|▍         | 298/7431 [15:54<6:22:40,  3.22s/it]  4%|▍         | 299/7431 [15:57<6:20:44,  3.20s/it]08/31/2024 18:43:19 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.7492153644561768, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.053414326161146164, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 3.1426963806152344, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 5.94532585144043}
  4%|▍         | 300/7431 [16:01<6:24:32,  3.24s/it]  4%|▍         | 301/7431 [16:04<6:16:05,  3.16s/it]  4%|▍         | 302/7431 [16:07<6:13:14,  3.14s/it]  4%|▍         | 303/7431 [16:10<6:17:17,  3.18s/it]  4%|▍         | 304/7431 [16:13<6:16:21,  3.17s/it]  4%|▍         | 305/7431 [16:16<6:17:11,  3.18s/it]  4%|▍         | 306/7431 [16:19<6:12:31,  3.14s/it]  4%|▍         | 307/7431 [16:23<6:13:26,  3.15s/it]  4%|▍         | 308/7431 [16:26<6:13:30,  3.15s/it]  4%|▍         | 309/7431 [16:29<6:21:40,  3.22s/it]  4%|▍         | 310/7431 [16:32<6:20:03,  3.20s/it]  4%|▍         | 311/7431 [16:35<6:16:41,  3.17s/it]  4%|▍         | 312/7431 [16:39<6:20:19,  3.21s/it]  4%|▍         | 313/7431 [16:42<6:18:58,  3.19s/it]  4%|▍         | 314/7431 [16:45<6:15:54,  3.17s/it]  4%|▍         | 315/7431 [16:48<6:18:03,  3.19s/it]  4%|▍         | 316/7431 [16:51<6:19:42,  3.20s/it]  4%|▍         | 317/7431 [16:55<6:17:45,  3.19s/it]  4%|▍         | 318/7431 [16:58<6:15:06,  3.16s/it]  4%|▍         | 319/7431 [17:01<6:17:19,  3.18s/it]  4%|▍         | 320/7431 [17:04<6:16:53,  3.18s/it]  4%|▍         | 321/7431 [17:07<6:14:38,  3.16s/it]  4%|▍         | 322/7431 [17:10<6:17:14,  3.18s/it]  4%|▍         | 323/7431 [17:14<6:19:46,  3.21s/it]  4%|▍         | 324/7431 [17:17<6:18:05,  3.19s/it]  4%|▍         | 325/7431 [17:20<6:13:36,  3.15s/it]  4%|▍         | 326/7431 [17:23<6:20:08,  3.21s/it]  4%|▍         | 327/7431 [17:27<6:26:02,  3.26s/it]  4%|▍         | 328/7431 [17:30<6:17:28,  3.19s/it]  4%|▍         | 329/7431 [17:33<6:19:34,  3.21s/it]  4%|▍         | 330/7431 [17:36<6:17:50,  3.19s/it]  4%|▍         | 331/7431 [17:39<6:17:42,  3.19s/it]  4%|▍         | 332/7431 [17:42<6:16:38,  3.18s/it]  4%|▍         | 333/7431 [17:46<6:22:26,  3.23s/it]  4%|▍         | 334/7431 [17:49<6:21:47,  3.23s/it]  5%|▍         | 335/7431 [17:52<6:19:48,  3.21s/it]  5%|▍         | 336/7431 [17:55<6:15:03,  3.17s/it]  5%|▍         | 337/7431 [17:59<6:18:22,  3.20s/it]  5%|▍         | 338/7431 [18:02<6:16:51,  3.19s/it]  5%|▍         | 339/7431 [18:05<6:18:32,  3.20s/it]  5%|▍         | 340/7431 [18:08<6:15:23,  3.18s/it]  5%|▍         | 341/7431 [18:11<6:08:53,  3.12s/it]  5%|▍         | 342/7431 [18:14<6:13:41,  3.16s/it]  5%|▍         | 343/7431 [18:17<6:09:56,  3.13s/it]  5%|▍         | 344/7431 [18:20<6:09:23,  3.13s/it]  5%|▍         | 345/7431 [18:24<6:16:43,  3.19s/it]  5%|▍         | 346/7431 [18:27<6:12:24,  3.15s/it]  5%|▍         | 347/7431 [18:30<6:07:19,  3.11s/it]  5%|▍         | 348/7431 [18:33<6:15:19,  3.18s/it]  5%|▍         | 349/7431 [18:36<6:12:44,  3.16s/it]08/31/2024 18:45:58 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.3931045532226562, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.046349018812179565, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.975403308868408, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 5.414856910705566}
  5%|▍         | 350/7431 [18:40<6:19:02,  3.21s/it]  5%|▍         | 351/7431 [18:43<6:16:10,  3.19s/it]  5%|▍         | 352/7431 [18:46<6:12:43,  3.16s/it]  5%|▍         | 353/7431 [18:49<6:08:11,  3.12s/it]  5%|▍         | 354/7431 [18:52<6:12:40,  3.16s/it]  5%|▍         | 355/7431 [18:55<6:13:29,  3.17s/it]  5%|▍         | 356/7431 [18:59<6:13:49,  3.17s/it]  5%|▍         | 357/7431 [19:02<6:14:45,  3.18s/it]  5%|▍         | 358/7431 [19:05<6:18:29,  3.21s/it]  5%|▍         | 359/7431 [19:08<6:16:59,  3.20s/it]  5%|▍         | 360/7431 [19:11<6:13:01,  3.17s/it]  5%|▍         | 361/7431 [19:14<6:14:39,  3.18s/it]  5%|▍         | 362/7431 [19:18<6:18:30,  3.21s/it]  5%|▍         | 363/7431 [19:21<6:10:46,  3.15s/it]  5%|▍         | 364/7431 [19:24<6:13:12,  3.17s/it]  5%|▍         | 365/7431 [19:27<6:21:03,  3.24s/it]  5%|▍         | 366/7431 [19:31<6:18:29,  3.21s/it]  5%|▍         | 367/7431 [19:34<6:18:45,  3.22s/it]  5%|▍         | 368/7431 [19:37<6:21:39,  3.24s/it]  5%|▍         | 369/7431 [19:40<6:21:35,  3.24s/it]  5%|▍         | 370/7431 [19:43<6:18:15,  3.21s/it]  5%|▍         | 371/7431 [19:47<6:23:43,  3.26s/it]  5%|▌         | 372/7431 [19:50<6:21:57,  3.25s/it]  5%|▌         | 373/7431 [19:53<6:22:09,  3.25s/it]  5%|▌         | 374/7431 [19:56<6:19:27,  3.23s/it]  5%|▌         | 375/7431 [20:00<6:15:16,  3.19s/it]  5%|▌         | 376/7431 [20:03<6:16:08,  3.20s/it]  5%|▌         | 377/7431 [20:06<6:20:07,  3.23s/it]  5%|▌         | 378/7431 [20:09<6:16:11,  3.20s/it]  5%|▌         | 379/7431 [20:12<6:14:38,  3.19s/it]  5%|▌         | 380/7431 [20:16<6:12:03,  3.17s/it]  5%|▌         | 381/7431 [20:19<6:08:43,  3.14s/it]  5%|▌         | 382/7431 [20:22<6:09:26,  3.14s/it]  5%|▌         | 383/7431 [20:25<6:16:42,  3.21s/it]  5%|▌         | 384/7431 [20:28<6:20:21,  3.24s/it]  5%|▌         | 385/7431 [20:32<6:16:40,  3.21s/it]  5%|▌         | 386/7431 [20:35<6:13:09,  3.18s/it]  5%|▌         | 387/7431 [20:38<6:07:52,  3.13s/it]  5%|▌         | 388/7431 [20:41<6:13:33,  3.18s/it]  5%|▌         | 389/7431 [20:44<6:08:27,  3.14s/it]  5%|▌         | 390/7431 [20:47<6:14:04,  3.19s/it]  5%|▌         | 391/7431 [20:50<6:11:55,  3.17s/it]  5%|▌         | 392/7431 [20:54<6:08:08,  3.14s/it]  5%|▌         | 393/7431 [20:57<6:09:02,  3.15s/it]  5%|▌         | 394/7431 [21:00<6:24:48,  3.28s/it]  5%|▌         | 395/7431 [21:03<6:15:29,  3.20s/it]  5%|▌         | 396/7431 [21:06<6:15:26,  3.20s/it]  5%|▌         | 397/7431 [21:10<6:10:21,  3.16s/it]  5%|▌         | 398/7431 [21:13<6:11:25,  3.17s/it]  5%|▌         | 399/7431 [21:16<6:10:50,  3.16s/it]08/31/2024 18:48:38 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.14768123626709, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04419519007205963, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.8964791297912598, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 5.088355541229248}
  5%|▌         | 400/7431 [21:19<6:13:30,  3.19s/it]  5%|▌         | 401/7431 [21:22<6:17:53,  3.23s/it]  5%|▌         | 402/7431 [21:25<6:09:36,  3.16s/it]  5%|▌         | 403/7431 [21:29<6:08:05,  3.14s/it]  5%|▌         | 404/7431 [21:32<6:14:16,  3.20s/it]  5%|▌         | 405/7431 [21:35<6:20:14,  3.25s/it]  5%|▌         | 406/7431 [21:38<6:18:17,  3.23s/it]  5%|▌         | 407/7431 [21:41<6:09:51,  3.16s/it]  5%|▌         | 408/7431 [21:45<6:12:07,  3.18s/it]  6%|▌         | 409/7431 [21:48<6:15:01,  3.20s/it]  6%|▌         | 410/7431 [21:51<6:11:51,  3.18s/it]  6%|▌         | 411/7431 [21:54<6:19:45,  3.25s/it]  6%|▌         | 412/7431 [21:58<6:17:57,  3.23s/it]  6%|▌         | 413/7431 [22:01<6:11:04,  3.17s/it]  6%|▌         | 414/7431 [22:04<6:12:39,  3.19s/it]  6%|▌         | 415/7431 [22:07<6:14:55,  3.21s/it]  6%|▌         | 416/7431 [22:10<6:12:35,  3.19s/it]  6%|▌         | 417/7431 [22:14<6:13:58,  3.20s/it]  6%|▌         | 418/7431 [22:17<6:09:56,  3.17s/it]  6%|▌         | 419/7431 [22:20<6:14:02,  3.20s/it]  6%|▌         | 420/7431 [22:23<6:13:03,  3.19s/it]  6%|▌         | 421/7431 [22:26<6:05:22,  3.13s/it]  6%|▌         | 422/7431 [22:29<6:10:13,  3.17s/it]  6%|▌         | 423/7431 [22:33<6:12:33,  3.19s/it]  6%|▌         | 424/7431 [22:36<6:12:33,  3.19s/it]  6%|▌         | 425/7431 [22:39<6:12:13,  3.19s/it]  6%|▌         | 426/7431 [22:42<6:13:25,  3.20s/it]  6%|▌         | 427/7431 [22:45<6:15:00,  3.21s/it]  6%|▌         | 428/7431 [22:49<6:15:28,  3.22s/it]  6%|▌         | 429/7431 [22:52<6:09:03,  3.16s/it]  6%|▌         | 430/7431 [22:55<6:11:53,  3.19s/it]  6%|▌         | 431/7431 [22:58<6:19:13,  3.25s/it]  6%|▌         | 432/7431 [23:01<6:15:35,  3.22s/it]  6%|▌         | 433/7431 [23:04<6:07:53,  3.15s/it]  6%|▌         | 434/7431 [23:07<6:04:08,  3.12s/it]  6%|▌         | 435/7431 [23:11<6:07:41,  3.15s/it]  6%|▌         | 436/7431 [23:14<6:14:08,  3.21s/it]  6%|▌         | 437/7431 [23:17<6:10:57,  3.18s/it]  6%|▌         | 438/7431 [23:20<6:07:29,  3.15s/it]  6%|▌         | 439/7431 [23:23<6:10:30,  3.18s/it]  6%|▌         | 440/7431 [23:27<6:14:23,  3.21s/it]  6%|▌         | 441/7431 [23:30<6:16:37,  3.23s/it]  6%|▌         | 442/7431 [23:33<6:14:49,  3.22s/it]  6%|▌         | 443/7431 [23:36<6:15:27,  3.22s/it]  6%|▌         | 444/7431 [23:40<6:08:35,  3.17s/it]  6%|▌         | 445/7431 [23:43<6:05:17,  3.14s/it]  6%|▌         | 446/7431 [23:46<6:08:16,  3.16s/it]  6%|▌         | 447/7431 [23:49<6:08:31,  3.17s/it]  6%|▌         | 448/7431 [23:52<6:06:31,  3.15s/it]  6%|▌         | 449/7431 [23:55<6:01:02,  3.10s/it]08/31/2024 18:51:17 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.4410452842712402, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04907327517867088, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.982250690460205, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 5.472369194030762}
  6%|▌         | 450/7431 [23:58<6:05:19,  3.14s/it]  6%|▌         | 451/7431 [24:02<6:12:25,  3.20s/it]  6%|▌         | 452/7431 [24:05<6:07:53,  3.16s/it]  6%|▌         | 453/7431 [24:08<6:09:47,  3.18s/it]  6%|▌         | 454/7431 [24:11<6:10:53,  3.19s/it]  6%|▌         | 455/7431 [24:15<6:18:36,  3.26s/it]  6%|▌         | 456/7431 [24:18<6:19:44,  3.27s/it]  6%|▌         | 457/7431 [24:21<6:18:59,  3.26s/it]  6%|▌         | 458/7431 [24:24<6:16:51,  3.24s/it]  6%|▌         | 459/7431 [24:27<6:12:40,  3.21s/it]  6%|▌         | 460/7431 [24:31<6:17:41,  3.25s/it]  6%|▌         | 461/7431 [24:34<6:13:52,  3.22s/it]  6%|▌         | 462/7431 [24:37<6:12:36,  3.21s/it]  6%|▌         | 463/7431 [24:40<6:10:28,  3.19s/it]  6%|▌         | 464/7431 [24:43<6:07:41,  3.17s/it]  6%|▋         | 465/7431 [24:46<6:04:26,  3.14s/it]  6%|▋         | 466/7431 [24:50<6:15:18,  3.23s/it]  6%|▋         | 467/7431 [24:53<6:13:30,  3.22s/it]  6%|▋         | 468/7431 [24:56<6:08:00,  3.17s/it]  6%|▋         | 469/7431 [24:59<6:05:54,  3.15s/it]  6%|▋         | 470/7431 [25:02<6:03:41,  3.13s/it]  6%|▋         | 471/7431 [25:06<6:04:57,  3.15s/it]  6%|▋         | 472/7431 [25:09<6:15:56,  3.24s/it]  6%|▋         | 473/7431 [25:12<6:13:35,  3.22s/it]  6%|▋         | 474/7431 [25:15<6:13:55,  3.22s/it]  6%|▋         | 475/7431 [25:18<6:09:45,  3.19s/it]  6%|▋         | 476/7431 [25:22<6:05:21,  3.15s/it]  6%|▋         | 477/7431 [25:25<6:04:42,  3.15s/it]  6%|▋         | 478/7431 [25:28<6:05:47,  3.16s/it]  6%|▋         | 479/7431 [25:31<6:03:13,  3.13s/it]  6%|▋         | 480/7431 [25:34<6:05:37,  3.16s/it]  6%|▋         | 481/7431 [25:37<6:04:01,  3.14s/it]  6%|▋         | 482/7431 [25:40<6:02:39,  3.13s/it]  6%|▋         | 483/7431 [25:44<6:05:21,  3.16s/it]  7%|▋         | 484/7431 [25:47<6:02:03,  3.13s/it]  7%|▋         | 485/7431 [25:50<6:03:33,  3.14s/it]  7%|▋         | 486/7431 [25:53<6:10:13,  3.20s/it]  7%|▋         | 487/7431 [25:56<6:04:27,  3.15s/it]  7%|▋         | 488/7431 [25:59<6:07:40,  3.18s/it]  7%|▋         | 489/7431 [26:03<6:06:04,  3.16s/it]  7%|▋         | 490/7431 [26:06<6:03:47,  3.14s/it]  7%|▋         | 491/7431 [26:09<6:02:11,  3.13s/it]  7%|▋         | 492/7431 [26:12<5:57:23,  3.09s/it]  7%|▋         | 493/7431 [26:15<6:08:30,  3.19s/it]  7%|▋         | 494/7431 [26:18<6:03:46,  3.15s/it]  7%|▋         | 495/7431 [26:21<6:02:11,  3.13s/it]  7%|▋         | 496/7431 [26:25<6:07:37,  3.18s/it]  7%|▋         | 497/7431 [26:28<6:08:37,  3.19s/it]  7%|▋         | 498/7431 [26:31<6:06:58,  3.18s/it]  7%|▋         | 499/7431 [26:34<6:04:52,  3.16s/it]08/31/2024 18:53:55 - INFO - __main__ -   evaluate on ret%tv--msrvtt_ret task
08/31/2024 18:53:55 - INFO - __main__ -   start running ret%tv validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torch/utils/checkpoint.py:31: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn("None of the inputs have requires_grad=True. Gradients will be None")
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torch/utils/checkpoint.py:31: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn("None of the inputs have requires_grad=True. Gradients will be None")
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torch/utils/checkpoint.py:31: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn("None of the inputs have requires_grad=True. Gradients will be None")
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torch/utils/checkpoint.py:31: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn("None of the inputs have requires_grad=True. Gradients will be None")

  0%|          | 0/221 [00:00<?, ?it/s][A
  1%|          | 2/221 [00:00<01:19,  2.77it/s][A
  1%|▏         | 3/221 [00:00<01:06,  3.27it/s][A
  2%|▏         | 4/221 [00:01<00:58,  3.68it/s][A
  2%|▏         | 5/221 [00:01<00:46,  4.68it/s][A
  3%|▎         | 7/221 [00:01<00:51,  4.19it/s][A
  4%|▎         | 8/221 [00:01<00:45,  4.71it/s][A
  4%|▍         | 9/221 [00:02<00:41,  5.05it/s][A
  5%|▍         | 10/221 [00:02<01:00,  3.48it/s][A
  5%|▍         | 11/221 [00:02<00:52,  4.00it/s][A
  5%|▌         | 12/221 [00:02<00:49,  4.20it/s][A
  6%|▌         | 13/221 [00:03<00:49,  4.18it/s][A
  6%|▋         | 14/221 [00:03<00:50,  4.09it/s][A
  7%|▋         | 15/221 [00:03<00:48,  4.29it/s][A
  7%|▋         | 16/221 [00:04<00:58,  3.48it/s][A
  8%|▊         | 17/221 [00:04<01:03,  3.23it/s][A
  8%|▊         | 18/221 [00:04<00:53,  3.81it/s][A
  9%|▊         | 19/221 [00:04<00:55,  3.65it/s][A
 10%|▉         | 21/221 [00:05<00:42,  4.66it/s][A
 10%|▉         | 22/221 [00:05<00:48,  4.06it/s][A
 11%|█         | 24/221 [00:05<00:39,  5.00it/s][A
 11%|█▏        | 25/221 [00:06<00:39,  4.94it/s][A
 12%|█▏        | 26/221 [00:06<00:44,  4.40it/s][A
 12%|█▏        | 27/221 [00:06<00:38,  5.07it/s][A
 13%|█▎        | 28/221 [00:06<00:49,  3.90it/s][A
 13%|█▎        | 29/221 [00:07<00:46,  4.09it/s][A
 14%|█▎        | 30/221 [00:07<00:49,  3.83it/s][A
 14%|█▍        | 31/221 [00:07<00:49,  3.84it/s][A
 14%|█▍        | 32/221 [00:07<00:46,  4.10it/s][A
 15%|█▍        | 33/221 [00:08<00:42,  4.45it/s][A
 15%|█▌        | 34/221 [00:08<00:40,  4.67it/s][A
 16%|█▌        | 35/221 [00:08<00:49,  3.78it/s][A
 16%|█▋        | 36/221 [00:08<00:50,  3.65it/s][A
 17%|█▋        | 37/221 [00:09<00:44,  4.12it/s][A
 17%|█▋        | 38/221 [00:09<00:47,  3.88it/s][A
 18%|█▊        | 39/221 [00:09<00:50,  3.61it/s][A
 18%|█▊        | 40/221 [00:10<00:54,  3.30it/s][A
 19%|█▊        | 41/221 [00:10<00:56,  3.19it/s][A
 19%|█▉        | 42/221 [00:10<00:45,  3.97it/s][A
 19%|█▉        | 43/221 [00:10<00:37,  4.70it/s][A
 20%|█▉        | 44/221 [00:10<00:38,  4.59it/s][A
 20%|██        | 45/221 [00:11<00:54,  3.25it/s][A
 21%|██        | 46/221 [00:11<00:46,  3.79it/s][A
 21%|██▏       | 47/221 [00:11<00:42,  4.08it/s][A
 22%|██▏       | 49/221 [00:12<00:37,  4.62it/s][A
 23%|██▎       | 50/221 [00:12<00:42,  4.02it/s][A
 23%|██▎       | 51/221 [00:12<00:41,  4.08it/s][A
 24%|██▎       | 52/221 [00:12<00:44,  3.81it/s][A
 24%|██▍       | 53/221 [00:13<00:40,  4.17it/s][A
 24%|██▍       | 54/221 [00:13<00:52,  3.20it/s][A
 25%|██▍       | 55/221 [00:13<00:52,  3.13it/s][A
 25%|██▌       | 56/221 [00:14<00:48,  3.40it/s][A
 26%|██▌       | 57/221 [00:14<00:43,  3.80it/s][A
 26%|██▌       | 58/221 [00:14<00:38,  4.22it/s][A
 27%|██▋       | 59/221 [00:14<00:34,  4.66it/s][A
 27%|██▋       | 60/221 [00:14<00:34,  4.67it/s][A
 28%|██▊       | 61/221 [00:15<00:36,  4.43it/s][A
 28%|██▊       | 62/221 [00:15<00:34,  4.55it/s][A
 29%|██▊       | 63/221 [00:15<00:37,  4.20it/s][A
 29%|██▉       | 64/221 [00:16<00:52,  3.01it/s][A
 29%|██▉       | 65/221 [00:16<00:55,  2.80it/s][A
 30%|██▉       | 66/221 [00:17<00:58,  2.66it/s][A
 30%|███       | 67/221 [00:17<00:53,  2.88it/s][A
 31%|███       | 68/221 [00:17<00:44,  3.47it/s][A
 31%|███       | 69/221 [00:18<01:10,  2.15it/s][A
 32%|███▏      | 70/221 [00:18<00:58,  2.57it/s][A
 32%|███▏      | 71/221 [00:18<00:46,  3.20it/s][A
 33%|███▎      | 72/221 [00:19<00:46,  3.20it/s][A
 33%|███▎      | 73/221 [00:19<00:41,  3.55it/s][A
 33%|███▎      | 74/221 [00:19<00:43,  3.35it/s][A
 34%|███▍      | 75/221 [00:19<00:44,  3.27it/s][A
 34%|███▍      | 76/221 [00:20<00:40,  3.61it/s][A
 35%|███▍      | 77/221 [00:20<00:52,  2.76it/s][A
 35%|███▌      | 78/221 [00:20<00:42,  3.35it/s][A
 36%|███▌      | 79/221 [00:21<00:47,  2.97it/s][A
 36%|███▌      | 80/221 [00:21<00:44,  3.18it/s][A
 37%|███▋      | 81/221 [00:21<00:39,  3.53it/s][A
 37%|███▋      | 82/221 [00:22<00:39,  3.51it/s][A
 38%|███▊      | 83/221 [00:22<00:43,  3.15it/s][A
 38%|███▊      | 84/221 [00:22<00:38,  3.57it/s][A
 39%|███▉      | 86/221 [00:22<00:31,  4.35it/s][A
 39%|███▉      | 87/221 [00:23<00:35,  3.74it/s][A
 40%|███▉      | 88/221 [00:23<00:39,  3.35it/s][A
 40%|████      | 89/221 [00:24<00:39,  3.37it/s][A
 41%|████      | 90/221 [00:24<00:34,  3.83it/s][A
 41%|████      | 91/221 [00:24<00:29,  4.35it/s][A
 42%|████▏     | 92/221 [00:24<00:35,  3.64it/s][A
 42%|████▏     | 93/221 [00:25<00:35,  3.57it/s][A
 43%|████▎     | 94/221 [00:25<00:37,  3.43it/s][A
 43%|████▎     | 95/221 [00:25<00:34,  3.66it/s][A
 43%|████▎     | 96/221 [00:26<00:42,  2.95it/s][A
 44%|████▍     | 97/221 [00:26<00:39,  3.15it/s][A
 44%|████▍     | 98/221 [00:27<01:05,  1.89it/s][A
 45%|████▍     | 99/221 [00:27<01:01,  1.98it/s][A
 45%|████▌     | 100/221 [00:28<00:51,  2.36it/s][A
 46%|████▌     | 101/221 [00:28<00:43,  2.73it/s][A
 46%|████▌     | 102/221 [00:28<00:39,  3.00it/s][A
 47%|████▋     | 103/221 [00:28<00:31,  3.71it/s][A
 47%|████▋     | 104/221 [00:29<00:35,  3.27it/s][A
 48%|████▊     | 105/221 [00:29<00:42,  2.75it/s][A
 48%|████▊     | 106/221 [00:29<00:40,  2.85it/s][A
 48%|████▊     | 107/221 [00:30<00:36,  3.10it/s][A
 49%|████▉     | 108/221 [00:30<00:34,  3.31it/s][A
 49%|████▉     | 109/221 [00:30<00:28,  3.98it/s][A
 50%|████▉     | 110/221 [00:30<00:30,  3.62it/s][A
 50%|█████     | 111/221 [00:31<00:30,  3.60it/s][A
 51%|█████     | 112/221 [00:31<00:29,  3.66it/s][A
 51%|█████     | 113/221 [00:31<00:25,  4.17it/s][A
 52%|█████▏    | 115/221 [00:31<00:21,  4.84it/s][A
 52%|█████▏    | 116/221 [00:32<00:22,  4.69it/s][A
 53%|█████▎    | 117/221 [00:32<00:26,  3.88it/s][A
 53%|█████▎    | 118/221 [00:32<00:25,  3.99it/s][A
 54%|█████▍    | 119/221 [00:32<00:26,  3.92it/s][A
 54%|█████▍    | 120/221 [00:33<00:23,  4.22it/s][A
 55%|█████▍    | 121/221 [00:33<00:22,  4.39it/s][A
 55%|█████▌    | 122/221 [00:33<00:21,  4.66it/s][A
 56%|█████▌    | 123/221 [00:33<00:19,  5.06it/s][A
 56%|█████▌    | 124/221 [00:34<00:23,  4.13it/s][A
 57%|█████▋    | 125/221 [00:34<00:24,  3.88it/s][A
 57%|█████▋    | 126/221 [00:34<00:23,  4.09it/s][A
 57%|█████▋    | 127/221 [00:34<00:26,  3.58it/s][A
 58%|█████▊    | 128/221 [00:35<00:24,  3.76it/s][A
 58%|█████▊    | 129/221 [00:35<00:20,  4.59it/s][A
 59%|█████▉    | 130/221 [00:35<00:23,  3.82it/s][A
 59%|█████▉    | 131/221 [00:35<00:19,  4.56it/s][A
 60%|█████▉    | 132/221 [00:36<00:29,  3.06it/s][A
 60%|██████    | 133/221 [00:36<00:26,  3.37it/s][A
 61%|██████    | 134/221 [00:36<00:28,  3.01it/s][A
 61%|██████    | 135/221 [00:37<00:29,  2.93it/s][A
 62%|██████▏   | 136/221 [00:37<00:25,  3.32it/s][A
 62%|██████▏   | 137/221 [00:37<00:23,  3.64it/s][A
 62%|██████▏   | 138/221 [00:38<00:21,  3.80it/s][A
 63%|██████▎   | 139/221 [00:38<00:19,  4.21it/s][A
 63%|██████▎   | 140/221 [00:38<00:20,  3.88it/s][A
 64%|██████▍   | 141/221 [00:38<00:22,  3.63it/s][A
 64%|██████▍   | 142/221 [00:39<00:20,  3.80it/s][A
 65%|██████▍   | 143/221 [00:39<00:22,  3.49it/s][A
 65%|██████▌   | 144/221 [00:39<00:25,  3.02it/s][A
 66%|██████▌   | 145/221 [00:40<00:22,  3.36it/s][A
 67%|██████▋   | 147/221 [00:40<00:16,  4.36it/s][A
 67%|██████▋   | 148/221 [00:40<00:17,  4.21it/s][A
 67%|██████▋   | 149/221 [00:41<00:23,  3.01it/s][A
 68%|██████▊   | 150/221 [00:41<00:21,  3.36it/s][A
 68%|██████▊   | 151/221 [00:41<00:21,  3.31it/s][A
 69%|██████▉   | 152/221 [00:42<00:23,  2.94it/s][A
 69%|██████▉   | 153/221 [00:42<00:19,  3.42it/s][A
 70%|██████▉   | 154/221 [00:42<00:16,  3.96it/s][A
 70%|███████   | 155/221 [00:42<00:19,  3.40it/s][A
 71%|███████   | 156/221 [00:43<00:18,  3.61it/s][A
 71%|███████   | 157/221 [00:43<00:17,  3.57it/s][A
 71%|███████▏  | 158/221 [00:43<00:18,  3.43it/s][A
 72%|███████▏  | 159/221 [00:43<00:14,  4.15it/s][A
 72%|███████▏  | 160/221 [00:44<00:13,  4.50it/s][A
 73%|███████▎  | 161/221 [00:44<00:15,  3.80it/s][A
 74%|███████▍  | 163/221 [00:44<00:14,  3.87it/s][A
 74%|███████▍  | 164/221 [00:44<00:12,  4.54it/s][A
 75%|███████▍  | 165/221 [00:45<00:11,  4.72it/s][A
 75%|███████▌  | 166/221 [00:45<00:11,  4.61it/s][A
 76%|███████▌  | 167/221 [00:46<00:18,  2.85it/s][A
 76%|███████▌  | 168/221 [00:46<00:16,  3.21it/s][A
 76%|███████▋  | 169/221 [00:46<00:14,  3.71it/s][A
 77%|███████▋  | 170/221 [00:46<00:14,  3.57it/s][A
 77%|███████▋  | 171/221 [00:46<00:13,  3.83it/s][A
 78%|███████▊  | 172/221 [00:47<00:16,  3.06it/s][A
 78%|███████▊  | 173/221 [00:47<00:16,  2.96it/s][A
 79%|███████▊  | 174/221 [00:48<00:15,  3.06it/s][A
 79%|███████▉  | 175/221 [00:48<00:14,  3.13it/s][A
 80%|███████▉  | 176/221 [00:48<00:12,  3.59it/s][A
 81%|████████  | 178/221 [00:48<00:09,  4.35it/s][A
 81%|████████  | 179/221 [00:49<00:09,  4.49it/s][A
 81%|████████▏ | 180/221 [00:49<00:08,  4.70it/s][A
 82%|████████▏ | 182/221 [00:49<00:09,  4.30it/s][A
 83%|████████▎ | 183/221 [00:50<00:09,  3.90it/s][A
 83%|████████▎ | 184/221 [00:50<00:09,  3.98it/s][A
 84%|████████▎ | 185/221 [00:50<00:10,  3.45it/s][A
 84%|████████▍ | 186/221 [00:51<00:12,  2.71it/s][A
 85%|████████▍ | 187/221 [00:51<00:12,  2.83it/s][A
 85%|████████▌ | 188/221 [00:51<00:10,  3.13it/s][A
 86%|████████▌ | 189/221 [00:52<00:09,  3.45it/s][A
 86%|████████▌ | 190/221 [00:52<00:09,  3.13it/s][A
 86%|████████▋ | 191/221 [00:52<00:08,  3.71it/s][A
 87%|████████▋ | 192/221 [00:52<00:07,  3.79it/s][A
 87%|████████▋ | 193/221 [00:53<00:06,  4.41it/s][A
 88%|████████▊ | 194/221 [00:53<00:06,  4.45it/s][A
 88%|████████▊ | 195/221 [00:53<00:05,  4.67it/s][A
 89%|████████▊ | 196/221 [00:53<00:05,  4.34it/s][A
 89%|████████▉ | 197/221 [00:54<00:06,  3.63it/s][A
 90%|████████▉ | 198/221 [00:54<00:07,  2.99it/s][A
 90%|█████████ | 199/221 [00:55<00:07,  2.91it/s][A
 90%|█████████ | 200/221 [00:55<00:06,  3.29it/s][A
 91%|█████████ | 201/221 [00:55<00:05,  3.64it/s][A
 91%|█████████▏| 202/221 [00:55<00:06,  2.93it/s][A
 92%|█████████▏| 203/221 [00:56<00:05,  3.07it/s][A
 92%|█████████▏| 204/221 [00:56<00:05,  3.25it/s][A
 93%|█████████▎| 205/221 [00:56<00:04,  3.97it/s][A
 93%|█████████▎| 206/221 [00:56<00:04,  3.68it/s][A
 94%|█████████▎| 207/221 [00:57<00:03,  4.14it/s][A
 94%|█████████▍| 208/221 [00:57<00:03,  3.66it/s][A
 95%|█████████▍| 209/221 [00:57<00:03,  3.97it/s][A
 95%|█████████▌| 211/221 [00:58<00:02,  4.26it/s][A
 96%|█████████▌| 212/221 [00:58<00:02,  4.28it/s][A
 96%|█████████▋| 213/221 [00:58<00:01,  4.58it/s][A
 97%|█████████▋| 214/221 [00:58<00:01,  3.79it/s][A
 97%|█████████▋| 215/221 [00:59<00:01,  4.31it/s][A
 98%|█████████▊| 216/221 [00:59<00:01,  4.58it/s][A
 98%|█████████▊| 217/221 [00:59<00:01,  3.77it/s][A
 99%|█████████▊| 218/221 [00:59<00:00,  3.81it/s][A
 99%|█████████▉| 219/221 [01:00<00:00,  3.45it/s][A
100%|█████████▉| 220/221 [01:00<00:00,  4.08it/s][A
100%|██████████| 221/221 [01:00<00:00,  4.25it/s][A100%|██████████| 221/221 [01:00<00:00,  3.65it/s]
08/31/2024 18:56:17 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forward=====step 499--===========

08/31/2024 18:56:17 - INFO - __main__ -   {'area_r1': 11.2, 'area_recall': '11.2/25.8/33.6', 'area_ravg': 23.5}
08/31/2024 18:56:17 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_backard=====step 499--===========

08/31/2024 18:56:17 - INFO - __main__ -   {'forward_r1': 45.8, 'forward_recall': '45.8/74.5/82.4', 'forward_ravg': 67.6}
08/31/2024 18:56:17 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forw_with_video=====step 499--===========

08/31/2024 18:56:17 - INFO - __main__ -   {'forward_r1': 60.4, 'forward_recall': '60.4/83.9/89.6', 'forward_ravg': 78.0}
08/31/2024 18:56:17 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itc_tv=====step 499--===========

08/31/2024 18:56:17 - INFO - __main__ -   {'video_r1': 46.0, 'video_recall': '46.0/73.8/82.4', 'video_ravg': 67.4}
08/31/2024 18:56:17 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itc_tv====history best step: 499=======

08/31/2024 18:56:17 - INFO - __main__ -   {'video_r1': 46.0, 'video_recall': '46.0/73.8/82.4', 'video_ravg': 67.4}
08/31/2024 18:56:17 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itm_tv=====step 499--===========

08/31/2024 18:56:17 - INFO - __main__ -   {'video_r1': 54.8, 'video_recall': '54.8/76.6/85.0', 'video_ravg': 72.1}
08/31/2024 18:56:17 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itm_tv====history best step: 499=======

08/31/2024 18:56:17 - INFO - __main__ -   {'video_r1': 54.8, 'video_recall': '54.8/76.6/85.0', 'video_ravg': 72.1}
08/31/2024 18:56:53 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.7125728130340576, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.055269863456487656, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.9872851371765137, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 5.755127906799316}
  7%|▋         | 500/7431 [29:34<108:22:29, 56.29s/it]  7%|▋         | 501/7431 [29:38<77:42:36, 40.37s/it]   7%|▋         | 502/7431 [29:41<56:16:50, 29.24s/it]  7%|▋         | 503/7431 [29:44<41:15:03, 21.44s/it]  7%|▋         | 504/7431 [29:47<30:42:35, 15.96s/it]  7%|▋         | 505/7431 [29:51<23:26:18, 12.18s/it]  7%|▋         | 506/7431 [29:54<18:16:33,  9.50s/it]  7%|▋         | 507/7431 [29:57<14:52:18,  7.73s/it]  7%|▋         | 508/7431 [30:01<12:17:58,  6.40s/it]  7%|▋         | 509/7431 [30:04<10:36:48,  5.52s/it]  7%|▋         | 510/7431 [30:07<9:17:26,  4.83s/it]   7%|▋         | 511/7431 [30:11<8:21:48,  4.35s/it]  7%|▋         | 512/7431 [30:14<7:41:47,  4.00s/it]  7%|▋         | 513/7431 [30:17<7:15:15,  3.78s/it]  7%|▋         | 514/7431 [30:21<7:12:06,  3.75s/it]  7%|▋         | 515/7431 [30:24<6:58:35,  3.63s/it]  7%|▋         | 516/7431 [30:27<6:45:55,  3.52s/it]  7%|▋         | 517/7431 [30:31<6:41:07,  3.48s/it]  7%|▋         | 518/7431 [30:34<6:35:23,  3.43s/it]  7%|▋         | 519/7431 [30:37<6:28:53,  3.38s/it]  7%|▋         | 520/7431 [30:41<6:21:59,  3.32s/it]  7%|▋         | 521/7431 [30:44<6:29:49,  3.38s/it]  7%|▋         | 522/7431 [30:47<6:23:01,  3.33s/it]  7%|▋         | 523/7431 [30:51<6:21:55,  3.32s/it]  7%|▋         | 524/7431 [30:54<6:16:31,  3.27s/it]  7%|▋         | 525/7431 [30:57<6:24:34,  3.34s/it]  7%|▋         | 526/7431 [31:00<6:17:19,  3.28s/it]  7%|▋         | 527/7431 [31:04<6:16:47,  3.27s/it]  7%|▋         | 528/7431 [31:07<6:22:41,  3.33s/it]  7%|▋         | 529/7431 [31:10<6:24:48,  3.35s/it]  7%|▋         | 530/7431 [31:14<6:24:27,  3.34s/it]  7%|▋         | 531/7431 [31:17<6:22:06,  3.32s/it]  7%|▋         | 532/7431 [31:20<6:20:28,  3.31s/it]  7%|▋         | 533/7431 [31:24<6:18:34,  3.29s/it]  7%|▋         | 534/7431 [31:27<6:16:48,  3.28s/it]  7%|▋         | 535/7431 [31:30<6:26:39,  3.36s/it]  7%|▋         | 536/7431 [31:34<6:18:11,  3.29s/it]  7%|▋         | 537/7431 [31:37<6:19:57,  3.31s/it]  7%|▋         | 538/7431 [31:40<6:21:42,  3.32s/it]  7%|▋         | 539/7431 [31:44<6:28:40,  3.38s/it]  7%|▋         | 540/7431 [31:47<6:20:47,  3.32s/it]  7%|▋         | 541/7431 [31:50<6:17:04,  3.28s/it]  7%|▋         | 542/7431 [31:53<6:14:53,  3.27s/it]  7%|▋         | 543/7431 [31:57<6:15:12,  3.27s/it]  7%|▋         | 544/7431 [32:00<6:11:33,  3.24s/it]  7%|▋         | 545/7431 [32:03<6:15:55,  3.28s/it]  7%|▋         | 546/7431 [32:06<6:12:27,  3.25s/it]  7%|▋         | 547/7431 [32:10<6:14:22,  3.26s/it]  7%|▋         | 548/7431 [32:13<6:20:33,  3.32s/it]  7%|▋         | 549/7431 [32:17<6:24:56,  3.36s/it]08/31/2024 18:59:38 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.2820234298706055, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.05103950947523117, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.9077305793762207, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 5.240793228149414}
  7%|▋         | 550/7431 [32:20<6:27:20,  3.38s/it]  7%|▋         | 551/7431 [32:23<6:20:37,  3.32s/it]  7%|▋         | 552/7431 [32:27<6:27:51,  3.38s/it]  7%|▋         | 553/7431 [32:30<6:23:30,  3.35s/it]  7%|▋         | 554/7431 [32:33<6:21:56,  3.33s/it]  7%|▋         | 555/7431 [32:36<6:15:07,  3.27s/it]  7%|▋         | 556/7431 [32:40<6:19:20,  3.31s/it]  7%|▋         | 557/7431 [32:43<6:15:49,  3.28s/it]  8%|▊         | 558/7431 [32:46<6:10:43,  3.24s/it]  8%|▊         | 559/7431 [32:49<6:11:45,  3.25s/it]  8%|▊         | 560/7431 [32:53<6:17:21,  3.30s/it]  8%|▊         | 561/7431 [32:56<6:27:54,  3.39s/it]  8%|▊         | 562/7431 [33:00<6:21:55,  3.34s/it]  8%|▊         | 563/7431 [33:03<6:21:52,  3.34s/it]  8%|▊         | 564/7431 [33:06<6:13:51,  3.27s/it]  8%|▊         | 565/7431 [33:09<6:15:12,  3.28s/it]  8%|▊         | 566/7431 [33:13<6:15:58,  3.29s/it]  8%|▊         | 567/7431 [33:16<6:14:32,  3.27s/it]  8%|▊         | 568/7431 [33:19<6:17:04,  3.30s/it]  8%|▊         | 569/7431 [33:23<6:18:37,  3.31s/it]  8%|▊         | 570/7431 [33:26<6:15:58,  3.29s/it]  8%|▊         | 571/7431 [33:29<6:17:51,  3.30s/it]  8%|▊         | 572/7431 [33:32<6:15:58,  3.29s/it]  8%|▊         | 573/7431 [33:36<6:16:06,  3.29s/it]  8%|▊         | 574/7431 [33:39<6:08:29,  3.22s/it]  8%|▊         | 575/7431 [33:42<6:12:27,  3.26s/it]  8%|▊         | 576/7431 [33:46<6:16:05,  3.29s/it]  8%|▊         | 577/7431 [33:49<6:12:42,  3.26s/it]  8%|▊         | 578/7431 [33:52<6:11:26,  3.25s/it]  8%|▊         | 579/7431 [33:55<6:08:52,  3.23s/it]  8%|▊         | 580/7431 [33:58<6:07:02,  3.21s/it]  8%|▊         | 581/7431 [34:02<6:19:37,  3.33s/it]  8%|▊         | 582/7431 [34:05<6:13:31,  3.27s/it]  8%|▊         | 583/7431 [34:08<6:13:32,  3.27s/it]  8%|▊         | 584/7431 [34:12<6:16:35,  3.30s/it]  8%|▊         | 585/7431 [34:15<6:16:19,  3.30s/it]  8%|▊         | 586/7431 [34:18<6:12:09,  3.26s/it]  8%|▊         | 587/7431 [34:21<6:10:26,  3.25s/it]  8%|▊         | 588/7431 [34:25<6:16:56,  3.30s/it]  8%|▊         | 589/7431 [34:28<6:10:07,  3.25s/it]  8%|▊         | 590/7431 [34:31<6:10:35,  3.25s/it]  8%|▊         | 591/7431 [34:34<6:05:46,  3.21s/it]  8%|▊         | 592/7431 [34:38<6:09:18,  3.24s/it]  8%|▊         | 593/7431 [34:41<6:10:40,  3.25s/it]  8%|▊         | 594/7431 [34:44<6:12:54,  3.27s/it]  8%|▊         | 595/7431 [34:47<6:08:01,  3.23s/it]  8%|▊         | 596/7431 [34:50<6:05:06,  3.21s/it]  8%|▊         | 597/7431 [34:54<6:07:12,  3.22s/it]  8%|▊         | 598/7431 [34:57<6:10:22,  3.25s/it]  8%|▊         | 599/7431 [35:00<6:06:27,  3.22s/it]08/31/2024 19:02:22 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.5048160552978516, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.05574342608451843, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.8802521228790283, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 5.440811634063721}
  8%|▊         | 600/7431 [35:04<6:09:58,  3.25s/it]  8%|▊         | 601/7431 [35:07<6:09:54,  3.25s/it]  8%|▊         | 602/7431 [35:10<6:09:37,  3.25s/it]  8%|▊         | 603/7431 [35:13<6:16:56,  3.31s/it]  8%|▊         | 604/7431 [35:17<6:12:15,  3.27s/it]  8%|▊         | 605/7431 [35:20<6:10:32,  3.26s/it]  8%|▊         | 606/7431 [35:23<6:05:18,  3.21s/it]  8%|▊         | 607/7431 [35:26<6:04:15,  3.20s/it]  8%|▊         | 608/7431 [35:29<6:06:21,  3.22s/it]  8%|▊         | 609/7431 [35:33<6:08:21,  3.24s/it]  8%|▊         | 610/7431 [35:36<6:14:49,  3.30s/it]  8%|▊         | 611/7431 [35:39<6:09:29,  3.25s/it]  8%|▊         | 612/7431 [35:43<6:08:25,  3.24s/it]  8%|▊         | 613/7431 [35:46<6:26:38,  3.40s/it]  8%|▊         | 614/7431 [35:50<6:20:45,  3.35s/it]  8%|▊         | 615/7431 [35:53<6:16:19,  3.31s/it]  8%|▊         | 616/7431 [35:56<6:12:41,  3.28s/it]  8%|▊         | 617/7431 [35:59<6:14:49,  3.30s/it]  8%|▊         | 618/7431 [36:02<6:10:59,  3.27s/it]  8%|▊         | 619/7431 [36:06<6:09:11,  3.25s/it]  8%|▊         | 620/7431 [36:09<6:08:59,  3.25s/it]  8%|▊         | 621/7431 [36:12<6:17:11,  3.32s/it]  8%|▊         | 622/7431 [36:16<6:13:55,  3.30s/it]  8%|▊         | 623/7431 [36:19<6:12:28,  3.28s/it]  8%|▊         | 624/7431 [36:22<6:10:59,  3.27s/it]  8%|▊         | 625/7431 [36:26<6:14:31,  3.30s/it]  8%|▊         | 626/7431 [36:29<6:15:01,  3.31s/it]  8%|▊         | 627/7431 [36:32<6:06:02,  3.23s/it]  8%|▊         | 628/7431 [36:35<6:04:13,  3.21s/it]  8%|▊         | 629/7431 [36:38<6:06:46,  3.24s/it]  8%|▊         | 630/7431 [36:42<6:07:07,  3.24s/it]  8%|▊         | 631/7431 [36:45<6:06:38,  3.24s/it]  9%|▊         | 632/7431 [36:48<6:07:07,  3.24s/it]  9%|▊         | 633/7431 [36:51<6:05:38,  3.23s/it]  9%|▊         | 634/7431 [36:55<6:12:21,  3.29s/it]  9%|▊         | 635/7431 [36:58<6:11:39,  3.28s/it]  9%|▊         | 636/7431 [37:01<6:12:17,  3.29s/it]  9%|▊         | 637/7431 [37:05<6:11:09,  3.28s/it]  9%|▊         | 638/7431 [37:08<6:08:30,  3.25s/it]  9%|▊         | 639/7431 [37:11<6:09:21,  3.26s/it]  9%|▊         | 640/7431 [37:14<6:08:54,  3.26s/it]  9%|▊         | 641/7431 [37:18<6:19:31,  3.35s/it]  9%|▊         | 642/7431 [37:21<6:17:22,  3.34s/it]  9%|▊         | 643/7431 [37:24<6:15:17,  3.32s/it]  9%|▊         | 644/7431 [37:28<6:18:31,  3.35s/it]  9%|▊         | 645/7431 [37:31<6:10:57,  3.28s/it]  9%|▊         | 646/7431 [37:35<6:31:35,  3.46s/it]  9%|▊         | 647/7431 [37:38<6:18:09,  3.34s/it]  9%|▊         | 648/7431 [37:41<6:13:51,  3.31s/it]  9%|▊         | 649/7431 [37:44<6:14:26,  3.31s/it]08/31/2024 19:05:06 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.3795578479766846, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.046803101897239685, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.814901351928711, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 5.241262435913086}
  9%|▊         | 650/7431 [37:48<6:18:45,  3.35s/it]  9%|▉         | 651/7431 [37:51<6:18:48,  3.35s/it]  9%|▉         | 652/7431 [37:55<6:17:26,  3.34s/it]  9%|▉         | 653/7431 [37:58<6:19:46,  3.36s/it]  9%|▉         | 654/7431 [38:01<6:11:30,  3.29s/it]  9%|▉         | 655/7431 [38:04<6:10:15,  3.28s/it]  9%|▉         | 656/7431 [38:08<6:11:16,  3.29s/it]  9%|▉         | 657/7431 [38:11<6:06:12,  3.24s/it]  9%|▉         | 658/7431 [38:14<6:14:55,  3.32s/it]  9%|▉         | 659/7431 [38:17<6:09:36,  3.27s/it]  9%|▉         | 660/7431 [38:21<6:24:18,  3.41s/it]  9%|▉         | 661/7431 [38:24<6:18:33,  3.35s/it]  9%|▉         | 662/7431 [38:28<6:15:29,  3.33s/it]  9%|▉         | 663/7431 [38:31<6:11:14,  3.29s/it]  9%|▉         | 664/7431 [38:34<6:07:51,  3.26s/it]  9%|▉         | 665/7431 [38:38<6:14:59,  3.33s/it]  9%|▉         | 666/7431 [38:41<6:16:01,  3.34s/it]  9%|▉         | 667/7431 [38:44<6:17:08,  3.35s/it]  9%|▉         | 668/7431 [38:48<6:19:35,  3.37s/it]  9%|▉         | 669/7431 [38:51<6:13:01,  3.31s/it]  9%|▉         | 670/7431 [38:54<6:16:04,  3.34s/it]  9%|▉         | 671/7431 [38:57<6:11:56,  3.30s/it]  9%|▉         | 672/7431 [39:01<6:05:02,  3.24s/it]  9%|▉         | 673/7431 [39:04<6:04:47,  3.24s/it]  9%|▉         | 674/7431 [39:07<6:04:17,  3.23s/it]  9%|▉         | 675/7431 [39:10<6:03:53,  3.23s/it]  9%|▉         | 676/7431 [39:13<6:02:49,  3.22s/it]  9%|▉         | 677/7431 [39:17<6:05:32,  3.25s/it]  9%|▉         | 678/7431 [39:20<6:13:20,  3.32s/it]  9%|▉         | 679/7431 [39:23<6:08:30,  3.27s/it]  9%|▉         | 680/7431 [39:27<6:09:43,  3.29s/it]  9%|▉         | 681/7431 [39:30<6:09:11,  3.28s/it]  9%|▉         | 682/7431 [39:33<6:12:36,  3.31s/it]  9%|▉         | 683/7431 [39:37<6:16:55,  3.35s/it]  9%|▉         | 684/7431 [39:40<6:17:59,  3.36s/it]  9%|▉         | 685/7431 [39:43<6:12:49,  3.32s/it]  9%|▉         | 686/7431 [39:47<6:14:54,  3.34s/it]  9%|▉         | 687/7431 [39:50<6:07:37,  3.27s/it]  9%|▉         | 688/7431 [39:53<6:08:22,  3.28s/it]  9%|▉         | 689/7431 [39:56<6:03:15,  3.23s/it]  9%|▉         | 690/7431 [40:00<6:06:20,  3.26s/it]  9%|▉         | 691/7431 [40:03<6:05:02,  3.25s/it]  9%|▉         | 692/7431 [40:06<6:15:11,  3.34s/it]  9%|▉         | 693/7431 [40:10<6:11:23,  3.31s/it]  9%|▉         | 694/7431 [40:13<6:05:28,  3.25s/it]  9%|▉         | 695/7431 [40:16<6:08:21,  3.28s/it]  9%|▉         | 696/7431 [40:20<6:19:45,  3.38s/it]  9%|▉         | 697/7431 [40:23<6:10:55,  3.30s/it]  9%|▉         | 698/7431 [40:26<6:09:51,  3.30s/it]  9%|▉         | 699/7431 [40:29<6:08:56,  3.29s/it]08/31/2024 19:07:51 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.778536081314087, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04433409124612808, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.700867176055908, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.52373743057251}
  9%|▉         | 700/7431 [40:33<6:10:21,  3.30s/it]  9%|▉         | 701/7431 [40:36<6:05:44,  3.26s/it]  9%|▉         | 702/7431 [40:39<6:06:05,  3.26s/it]  9%|▉         | 703/7431 [40:43<6:07:18,  3.28s/it]  9%|▉         | 704/7431 [40:46<6:08:29,  3.29s/it]  9%|▉         | 705/7431 [40:49<6:10:59,  3.31s/it] 10%|▉         | 706/7431 [40:52<6:08:34,  3.29s/it] 10%|▉         | 707/7431 [40:56<6:07:28,  3.28s/it] 10%|▉         | 708/7431 [40:59<6:11:36,  3.32s/it] 10%|▉         | 709/7431 [41:02<6:09:47,  3.30s/it] 10%|▉         | 710/7431 [41:06<6:07:45,  3.28s/it] 10%|▉         | 711/7431 [41:09<6:05:43,  3.27s/it] 10%|▉         | 712/7431 [41:12<6:09:06,  3.30s/it] 10%|▉         | 713/7431 [41:15<6:07:10,  3.28s/it] 10%|▉         | 714/7431 [41:19<6:02:12,  3.24s/it] 10%|▉         | 715/7431 [41:22<5:57:52,  3.20s/it] 10%|▉         | 716/7431 [41:25<6:00:28,  3.22s/it] 10%|▉         | 717/7431 [41:28<6:02:54,  3.24s/it] 10%|▉         | 718/7431 [41:32<6:02:54,  3.24s/it] 10%|▉         | 719/7431 [41:35<6:06:56,  3.28s/it] 10%|▉         | 720/7431 [41:38<6:09:00,  3.30s/it] 10%|▉         | 721/7431 [41:42<6:09:29,  3.30s/it] 10%|▉         | 722/7431 [41:45<6:03:25,  3.25s/it] 10%|▉         | 723/7431 [41:48<6:00:47,  3.23s/it] 10%|▉         | 724/7431 [41:51<6:01:51,  3.24s/it] 10%|▉         | 725/7431 [41:54<6:01:30,  3.23s/it] 10%|▉         | 726/7431 [41:58<6:02:04,  3.24s/it] 10%|▉         | 727/7431 [42:01<6:01:32,  3.24s/it] 10%|▉         | 728/7431 [42:04<5:57:18,  3.20s/it] 10%|▉         | 729/7431 [42:07<5:57:42,  3.20s/it] 10%|▉         | 730/7431 [42:11<6:07:55,  3.29s/it] 10%|▉         | 731/7431 [42:14<6:09:37,  3.31s/it] 10%|▉         | 732/7431 [42:17<6:08:57,  3.30s/it] 10%|▉         | 733/7431 [42:21<6:06:41,  3.28s/it] 10%|▉         | 734/7431 [42:24<5:59:26,  3.22s/it] 10%|▉         | 735/7431 [42:27<6:05:42,  3.28s/it] 10%|▉         | 736/7431 [42:30<6:10:40,  3.32s/it] 10%|▉         | 737/7431 [42:34<6:06:07,  3.28s/it] 10%|▉         | 738/7431 [42:37<6:05:14,  3.27s/it] 10%|▉         | 739/7431 [42:40<6:05:35,  3.28s/it] 10%|▉         | 740/7431 [42:43<6:07:32,  3.30s/it] 10%|▉         | 741/7431 [42:47<6:04:49,  3.27s/it] 10%|▉         | 742/7431 [42:50<6:00:30,  3.23s/it] 10%|▉         | 743/7431 [42:53<5:58:07,  3.21s/it] 10%|█         | 744/7431 [42:56<5:58:17,  3.21s/it] 10%|█         | 745/7431 [43:00<6:05:55,  3.28s/it] 10%|█         | 746/7431 [43:03<6:14:46,  3.36s/it] 10%|█         | 747/7431 [43:06<6:08:05,  3.30s/it] 10%|█         | 748/7431 [43:10<6:06:18,  3.29s/it] 10%|█         | 749/7431 [43:13<6:13:22,  3.35s/it]08/31/2024 19:10:35 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.7026472091674805, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.054240867495536804, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 3.162092685699463, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 5.918980598449707}
 10%|█         | 750/7431 [43:16<6:12:12,  3.34s/it] 10%|█         | 751/7431 [43:20<6:08:07,  3.31s/it] 10%|█         | 752/7431 [43:23<6:07:37,  3.30s/it] 10%|█         | 753/7431 [43:26<6:11:25,  3.34s/it] 10%|█         | 754/7431 [43:30<6:06:53,  3.30s/it] 10%|█         | 755/7431 [43:33<6:04:22,  3.27s/it] 10%|█         | 756/7431 [43:36<6:03:24,  3.27s/it] 10%|█         | 757/7431 [43:39<6:04:35,  3.28s/it] 10%|█         | 758/7431 [43:43<6:11:34,  3.34s/it] 10%|█         | 759/7431 [43:46<6:06:38,  3.30s/it] 10%|█         | 760/7431 [43:49<6:02:40,  3.26s/it] 10%|█         | 761/7431 [43:53<6:06:53,  3.30s/it] 10%|█         | 762/7431 [43:56<6:06:31,  3.30s/it] 10%|█         | 763/7431 [43:59<6:03:28,  3.27s/it] 10%|█         | 764/7431 [44:02<6:05:27,  3.29s/it] 10%|█         | 765/7431 [44:06<6:08:53,  3.32s/it] 10%|█         | 766/7431 [44:09<6:08:49,  3.32s/it] 10%|█         | 767/7431 [44:12<6:07:34,  3.31s/it] 10%|█         | 768/7431 [44:16<6:06:15,  3.30s/it] 10%|█         | 769/7431 [44:19<6:03:24,  3.27s/it] 10%|█         | 770/7431 [44:22<6:01:02,  3.25s/it] 10%|█         | 771/7431 [44:25<6:02:37,  3.27s/it] 10%|█         | 772/7431 [44:29<6:01:36,  3.26s/it] 10%|█         | 773/7431 [44:32<6:03:05,  3.27s/it] 10%|█         | 774/7431 [44:35<6:02:51,  3.27s/it] 10%|█         | 775/7431 [44:39<6:04:42,  3.29s/it] 10%|█         | 776/7431 [44:42<6:02:03,  3.26s/it] 10%|█         | 777/7431 [44:45<5:57:07,  3.22s/it] 10%|█         | 778/7431 [44:48<6:03:11,  3.28s/it] 10%|█         | 779/7431 [44:52<6:05:20,  3.30s/it] 10%|█         | 780/7431 [44:55<6:00:54,  3.26s/it] 11%|█         | 781/7431 [44:58<6:06:31,  3.31s/it] 11%|█         | 782/7431 [45:01<6:04:15,  3.29s/it] 11%|█         | 783/7431 [45:05<6:07:10,  3.31s/it] 11%|█         | 784/7431 [45:08<6:05:59,  3.30s/it] 11%|█         | 785/7431 [45:11<6:06:44,  3.31s/it] 11%|█         | 786/7431 [45:15<6:03:03,  3.28s/it] 11%|█         | 787/7431 [45:18<6:00:52,  3.26s/it] 11%|█         | 788/7431 [45:21<5:54:50,  3.20s/it] 11%|█         | 789/7431 [45:24<5:55:25,  3.21s/it] 11%|█         | 790/7431 [45:27<5:53:37,  3.19s/it] 11%|█         | 791/7431 [45:31<5:56:27,  3.22s/it] 11%|█         | 792/7431 [45:34<5:58:12,  3.24s/it] 11%|█         | 793/7431 [45:37<5:57:31,  3.23s/it] 11%|█         | 794/7431 [45:40<5:58:53,  3.24s/it] 11%|█         | 795/7431 [45:44<5:59:30,  3.25s/it] 11%|█         | 796/7431 [45:47<5:59:03,  3.25s/it] 11%|█         | 797/7431 [45:50<6:03:14,  3.29s/it] 11%|█         | 798/7431 [45:54<6:02:36,  3.28s/it] 11%|█         | 799/7431 [45:57<6:04:14,  3.30s/it]08/31/2024 19:13:19 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.2544684410095215, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04940716549754143, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 3.086077928543091, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 5.38995361328125}
 11%|█         | 800/7431 [46:00<6:02:57,  3.28s/it] 11%|█         | 801/7431 [46:03<6:04:15,  3.30s/it] 11%|█         | 802/7431 [46:07<6:02:17,  3.28s/it] 11%|█         | 803/7431 [46:10<5:58:19,  3.24s/it] 11%|█         | 804/7431 [46:13<6:00:04,  3.26s/it] 11%|█         | 805/7431 [46:17<6:09:19,  3.34s/it] 11%|█         | 806/7431 [46:20<6:03:21,  3.29s/it] 11%|█         | 807/7431 [46:23<6:02:43,  3.29s/it] 11%|█         | 808/7431 [46:26<6:01:48,  3.28s/it] 11%|█         | 809/7431 [46:30<6:10:32,  3.36s/it] 11%|█         | 810/7431 [46:33<6:05:09,  3.31s/it] 11%|█         | 811/7431 [46:36<6:01:39,  3.28s/it] 11%|█         | 812/7431 [46:40<6:07:38,  3.33s/it] 11%|█         | 813/7431 [46:43<6:04:03,  3.30s/it] 11%|█         | 814/7431 [46:46<6:04:42,  3.31s/it] 11%|█         | 815/7431 [46:50<6:01:53,  3.28s/it] 11%|█         | 816/7431 [46:53<5:58:01,  3.25s/it] 11%|█         | 817/7431 [46:56<5:58:32,  3.25s/it] 11%|█         | 818/7431 [46:59<5:57:33,  3.24s/it] 11%|█         | 819/7431 [47:03<6:02:27,  3.29s/it] 11%|█         | 820/7431 [47:06<6:08:20,  3.34s/it] 11%|█         | 821/7431 [47:09<6:05:41,  3.32s/it] 11%|█         | 822/7431 [47:12<5:59:45,  3.27s/it] 11%|█         | 823/7431 [47:16<5:58:14,  3.25s/it] 11%|█         | 824/7431 [47:19<6:06:27,  3.33s/it] 11%|█         | 825/7431 [47:22<6:01:40,  3.28s/it] 11%|█         | 826/7431 [47:26<5:57:56,  3.25s/it] 11%|█         | 827/7431 [47:29<5:56:53,  3.24s/it] 11%|█         | 828/7431 [47:32<5:56:56,  3.24s/it] 11%|█         | 829/7431 [47:35<5:58:06,  3.25s/it] 11%|█         | 830/7431 [47:39<6:00:06,  3.27s/it] 11%|█         | 831/7431 [47:42<6:02:46,  3.30s/it] 11%|█         | 832/7431 [47:45<6:00:33,  3.28s/it] 11%|█         | 833/7431 [47:48<5:58:43,  3.26s/it] 11%|█         | 834/7431 [47:52<5:55:18,  3.23s/it] 11%|█         | 835/7431 [47:55<5:55:32,  3.23s/it] 11%|█▏        | 836/7431 [47:58<6:00:58,  3.28s/it] 11%|█▏        | 837/7431 [48:02<6:03:42,  3.31s/it] 11%|█▏        | 838/7431 [48:05<6:03:45,  3.31s/it] 11%|█▏        | 839/7431 [48:08<6:00:49,  3.28s/it] 11%|█▏        | 840/7431 [48:12<6:03:00,  3.30s/it] 11%|█▏        | 841/7431 [48:15<6:03:34,  3.31s/it] 11%|█▏        | 842/7431 [48:18<5:59:28,  3.27s/it] 11%|█▏        | 843/7431 [48:21<6:00:03,  3.28s/it] 11%|█▏        | 844/7431 [48:25<6:07:58,  3.35s/it] 11%|█▏        | 845/7431 [48:28<6:13:09,  3.40s/it] 11%|█▏        | 846/7431 [48:32<6:17:21,  3.44s/it] 11%|█▏        | 847/7431 [48:35<6:08:47,  3.36s/it] 11%|█▏        | 848/7431 [48:38<6:08:25,  3.36s/it] 11%|█▏        | 849/7431 [48:41<5:58:54,  3.27s/it]08/31/2024 19:16:03 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.0891642570495605, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04642840847373009, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6868529319763184, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.822445869445801}
 11%|█▏        | 850/7431 [48:45<6:02:40,  3.31s/it] 11%|█▏        | 851/7431 [48:48<6:00:14,  3.28s/it] 11%|█▏        | 852/7431 [48:51<5:58:41,  3.27s/it] 11%|█▏        | 853/7431 [48:55<5:55:50,  3.25s/it] 11%|█▏        | 854/7431 [48:58<5:58:03,  3.27s/it] 12%|█▏        | 855/7431 [49:01<5:59:00,  3.28s/it] 12%|█▏        | 856/7431 [49:04<5:59:46,  3.28s/it] 12%|█▏        | 857/7431 [49:08<5:56:59,  3.26s/it] 12%|█▏        | 858/7431 [49:11<5:58:40,  3.27s/it] 12%|█▏        | 859/7431 [49:14<5:58:29,  3.27s/it] 12%|█▏        | 860/7431 [49:17<5:53:25,  3.23s/it] 12%|█▏        | 861/7431 [49:21<6:01:58,  3.31s/it] 12%|█▏        | 862/7431 [49:24<5:59:13,  3.28s/it] 12%|█▏        | 863/7431 [49:27<6:04:23,  3.33s/it] 12%|█▏        | 864/7431 [49:31<6:03:41,  3.32s/it] 12%|█▏        | 865/7431 [49:34<6:01:31,  3.30s/it] 12%|█▏        | 866/7431 [49:37<5:56:02,  3.25s/it] 12%|█▏        | 867/7431 [49:40<5:54:22,  3.24s/it] 12%|█▏        | 868/7431 [49:44<6:02:25,  3.31s/it] 12%|█▏        | 869/7431 [49:47<6:03:47,  3.33s/it] 12%|█▏        | 870/7431 [49:50<5:59:39,  3.29s/it] 12%|█▏        | 871/7431 [49:54<5:56:54,  3.26s/it] 12%|█▏        | 872/7431 [49:57<5:53:50,  3.24s/it] 12%|█▏        | 873/7431 [50:00<5:50:32,  3.21s/it] 12%|█▏        | 874/7431 [50:03<5:53:59,  3.24s/it] 12%|█▏        | 875/7431 [50:06<5:52:48,  3.23s/it] 12%|█▏        | 876/7431 [50:10<5:59:14,  3.29s/it] 12%|█▏        | 877/7431 [50:13<5:54:59,  3.25s/it] 12%|█▏        | 878/7431 [50:17<6:02:57,  3.32s/it] 12%|█▏        | 879/7431 [50:20<5:59:42,  3.29s/it] 12%|█▏        | 880/7431 [50:23<5:58:20,  3.28s/it] 12%|█▏        | 881/7431 [50:26<5:58:14,  3.28s/it] 12%|█▏        | 882/7431 [50:30<6:01:51,  3.32s/it] 12%|█▏        | 883/7431 [50:33<6:06:17,  3.36s/it] 12%|█▏        | 884/7431 [50:36<6:00:30,  3.30s/it] 12%|█▏        | 885/7431 [50:40<6:01:09,  3.31s/it] 12%|█▏        | 886/7431 [50:43<6:01:36,  3.31s/it] 12%|█▏        | 887/7431 [50:46<5:58:37,  3.29s/it] 12%|█▏        | 888/7431 [50:50<5:59:10,  3.29s/it] 12%|█▏        | 889/7431 [50:53<6:00:34,  3.31s/it] 12%|█▏        | 890/7431 [50:56<5:55:28,  3.26s/it] 12%|█▏        | 891/7431 [50:59<5:56:49,  3.27s/it] 12%|█▏        | 892/7431 [51:03<5:58:55,  3.29s/it] 12%|█▏        | 893/7431 [51:06<5:53:10,  3.24s/it] 12%|█▏        | 894/7431 [51:09<5:57:44,  3.28s/it] 12%|█▏        | 895/7431 [51:12<5:53:07,  3.24s/it] 12%|█▏        | 896/7431 [51:15<5:48:39,  3.20s/it] 12%|█▏        | 897/7431 [51:19<5:45:13,  3.17s/it] 12%|█▏        | 898/7431 [51:22<5:51:51,  3.23s/it] 12%|█▏        | 899/7431 [51:25<5:53:27,  3.25s/it]08/31/2024 19:18:47 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.053823471069336, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.045792557299137115, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.829935312271118, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.929551124572754}
 12%|█▏        | 900/7431 [51:28<5:52:04,  3.23s/it] 12%|█▏        | 901/7431 [51:32<6:00:00,  3.31s/it] 12%|█▏        | 902/7431 [51:35<5:56:04,  3.27s/it] 12%|█▏        | 903/7431 [51:38<5:53:39,  3.25s/it] 12%|█▏        | 904/7431 [51:42<5:54:27,  3.26s/it] 12%|█▏        | 905/7431 [51:45<5:54:19,  3.26s/it] 12%|█▏        | 906/7431 [51:48<5:56:46,  3.28s/it] 12%|█▏        | 907/7431 [51:51<5:56:14,  3.28s/it] 12%|█▏        | 908/7431 [51:55<5:54:11,  3.26s/it] 12%|█▏        | 909/7431 [51:58<5:50:27,  3.22s/it] 12%|█▏        | 910/7431 [52:01<5:46:45,  3.19s/it] 12%|█▏        | 911/7431 [52:05<6:02:39,  3.34s/it] 12%|█▏        | 912/7431 [52:08<6:02:27,  3.34s/it] 12%|█▏        | 913/7431 [52:11<6:00:43,  3.32s/it] 12%|█▏        | 914/7431 [52:15<6:03:16,  3.34s/it] 12%|█▏        | 915/7431 [52:18<6:06:07,  3.37s/it] 12%|█▏        | 916/7431 [52:21<6:01:22,  3.33s/it] 12%|█▏        | 917/7431 [52:24<5:59:41,  3.31s/it] 12%|█▏        | 918/7431 [52:28<5:58:31,  3.30s/it] 12%|█▏        | 919/7431 [52:31<5:50:59,  3.23s/it] 12%|█▏        | 920/7431 [52:34<5:47:27,  3.20s/it] 12%|█▏        | 921/7431 [52:37<5:48:14,  3.21s/it] 12%|█▏        | 922/7431 [52:40<5:49:24,  3.22s/it] 12%|█▏        | 923/7431 [52:44<5:51:52,  3.24s/it] 12%|█▏        | 924/7431 [52:47<5:55:09,  3.27s/it] 12%|█▏        | 925/7431 [52:50<5:56:23,  3.29s/it] 12%|█▏        | 926/7431 [52:54<5:50:59,  3.24s/it] 12%|█▏        | 927/7431 [52:57<5:47:59,  3.21s/it] 12%|█▏        | 928/7431 [53:00<5:49:41,  3.23s/it] 13%|█▎        | 929/7431 [53:03<5:55:43,  3.28s/it] 13%|█▎        | 930/7431 [53:07<6:00:19,  3.33s/it] 13%|█▎        | 931/7431 [53:10<5:59:38,  3.32s/it] 13%|█▎        | 932/7431 [53:13<5:52:56,  3.26s/it] 13%|█▎        | 933/7431 [53:17<5:59:37,  3.32s/it] 13%|█▎        | 934/7431 [53:20<5:55:00,  3.28s/it] 13%|█▎        | 935/7431 [53:23<5:55:34,  3.28s/it] 13%|█▎        | 936/7431 [53:26<5:56:46,  3.30s/it] 13%|█▎        | 937/7431 [53:30<5:54:45,  3.28s/it] 13%|█▎        | 938/7431 [53:33<5:53:20,  3.27s/it] 13%|█▎        | 939/7431 [53:36<5:55:44,  3.29s/it] 13%|█▎        | 940/7431 [53:40<6:01:36,  3.34s/it] 13%|█▎        | 941/7431 [53:43<5:55:38,  3.29s/it] 13%|█▎        | 942/7431 [53:46<5:56:51,  3.30s/it] 13%|█▎        | 943/7431 [53:49<5:52:11,  3.26s/it] 13%|█▎        | 944/7431 [53:53<5:49:51,  3.24s/it] 13%|█▎        | 945/7431 [53:56<5:55:35,  3.29s/it] 13%|█▎        | 946/7431 [53:59<5:53:39,  3.27s/it] 13%|█▎        | 947/7431 [54:03<5:55:13,  3.29s/it] 13%|█▎        | 948/7431 [54:06<5:55:22,  3.29s/it] 13%|█▎        | 949/7431 [54:09<5:53:18,  3.27s/it]08/31/2024 19:21:31 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.7564902305603027, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.047911372035741806, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6964271068573, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.500828742980957}
 13%|█▎        | 950/7431 [54:12<5:54:32,  3.28s/it] 13%|█▎        | 951/7431 [54:16<5:51:00,  3.25s/it] 13%|█▎        | 952/7431 [54:19<5:50:07,  3.24s/it] 13%|█▎        | 953/7431 [54:22<5:51:18,  3.25s/it] 13%|█▎        | 954/7431 [54:26<5:59:36,  3.33s/it] 13%|█▎        | 955/7431 [54:29<5:59:06,  3.33s/it] 13%|█▎        | 956/7431 [54:32<5:59:07,  3.33s/it] 13%|█▎        | 957/7431 [54:36<5:57:52,  3.32s/it] 13%|█▎        | 958/7431 [54:39<5:52:02,  3.26s/it] 13%|█▎        | 959/7431 [54:42<5:53:58,  3.28s/it] 13%|█▎        | 960/7431 [54:45<5:53:46,  3.28s/it] 13%|█▎        | 961/7431 [54:49<6:00:07,  3.34s/it] 13%|█▎        | 962/7431 [54:52<5:56:52,  3.31s/it] 13%|█▎        | 963/7431 [54:55<5:59:50,  3.34s/it] 13%|█▎        | 964/7431 [54:59<6:00:48,  3.35s/it] 13%|█▎        | 965/7431 [55:02<5:58:41,  3.33s/it] 13%|█▎        | 966/7431 [55:05<5:55:48,  3.30s/it] 13%|█▎        | 967/7431 [55:08<5:52:43,  3.27s/it] 13%|█▎        | 968/7431 [55:12<5:49:41,  3.25s/it] 13%|█▎        | 969/7431 [55:15<5:46:26,  3.22s/it] 13%|█▎        | 970/7431 [55:18<5:52:42,  3.28s/it] 13%|█▎        | 971/7431 [55:22<6:00:06,  3.34s/it] 13%|█▎        | 972/7431 [55:25<5:52:12,  3.27s/it] 13%|█▎        | 973/7431 [55:28<5:52:14,  3.27s/it] 13%|█▎        | 974/7431 [55:32<5:57:52,  3.33s/it] 13%|█▎        | 975/7431 [55:35<5:55:55,  3.31s/it] 13%|█▎        | 976/7431 [55:38<6:01:46,  3.36s/it] 13%|█▎        | 977/7431 [55:42<5:56:47,  3.32s/it] 13%|█▎        | 978/7431 [55:45<6:02:18,  3.37s/it] 13%|█▎        | 979/7431 [55:48<6:02:09,  3.37s/it] 13%|█▎        | 980/7431 [55:52<5:54:52,  3.30s/it] 13%|█▎        | 981/7431 [55:55<5:50:19,  3.26s/it] 13%|█▎        | 982/7431 [55:58<5:50:26,  3.26s/it] 13%|█▎        | 983/7431 [56:01<5:48:11,  3.24s/it] 13%|█▎        | 984/7431 [56:04<5:47:11,  3.23s/it] 13%|█▎        | 985/7431 [56:08<5:45:05,  3.21s/it] 13%|█▎        | 986/7431 [56:11<5:44:29,  3.21s/it] 13%|█▎        | 987/7431 [56:14<5:51:49,  3.28s/it] 13%|█▎        | 988/7431 [56:17<5:53:25,  3.29s/it] 13%|█▎        | 989/7431 [56:21<5:46:39,  3.23s/it] 13%|█▎        | 990/7431 [56:24<5:43:24,  3.20s/it] 13%|█▎        | 991/7431 [56:27<5:52:09,  3.28s/it] 13%|█▎        | 992/7431 [56:31<5:58:49,  3.34s/it] 13%|█▎        | 993/7431 [56:34<5:54:37,  3.30s/it] 13%|█▎        | 994/7431 [56:37<5:49:09,  3.25s/it] 13%|█▎        | 995/7431 [56:40<5:51:27,  3.28s/it] 13%|█▎        | 996/7431 [56:44<5:52:25,  3.29s/it] 13%|█▎        | 997/7431 [56:47<6:02:01,  3.38s/it] 13%|█▎        | 998/7431 [56:50<5:57:10,  3.33s/it] 13%|█▎        | 999/7431 [56:54<5:56:40,  3.33s/it]08/31/2024 19:24:15 - INFO - __main__ -   evaluate on ret%tv--msrvtt_ret task
08/31/2024 19:24:15 - INFO - __main__ -   start running ret%tv validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  1%|          | 2/221 [00:00<00:57,  3.83it/s][A
  1%|▏         | 3/221 [00:00<00:52,  4.17it/s][A
  2%|▏         | 4/221 [00:00<00:47,  4.54it/s][A
  2%|▏         | 5/221 [00:01<00:43,  4.94it/s][A
  3%|▎         | 7/221 [00:01<00:39,  5.45it/s][A
  4%|▎         | 8/221 [00:01<00:35,  5.92it/s][A
  4%|▍         | 9/221 [00:01<00:35,  6.04it/s][A
  5%|▍         | 10/221 [00:02<00:53,  3.96it/s][A
  5%|▍         | 11/221 [00:02<00:49,  4.26it/s][A
  5%|▌         | 12/221 [00:02<00:48,  4.35it/s][A
  6%|▌         | 13/221 [00:02<00:55,  3.74it/s][A
  6%|▋         | 14/221 [00:03<00:50,  4.09it/s][A
  7%|▋         | 15/221 [00:03<00:46,  4.39it/s][A
  7%|▋         | 16/221 [00:03<01:01,  3.32it/s][A
  8%|▊         | 17/221 [00:04<01:01,  3.30it/s][A
  8%|▊         | 18/221 [00:04<00:52,  3.85it/s][A
  9%|▊         | 19/221 [00:04<00:54,  3.70it/s][A
  9%|▉         | 20/221 [00:04<00:44,  4.52it/s][A
 10%|▉         | 21/221 [00:04<00:43,  4.57it/s][A
 10%|▉         | 22/221 [00:05<00:50,  3.91it/s][A
 11%|█         | 24/221 [00:05<00:38,  5.07it/s][A
 11%|█▏        | 25/221 [00:05<00:41,  4.69it/s][A
 12%|█▏        | 26/221 [00:06<00:45,  4.29it/s][A
 12%|█▏        | 27/221 [00:06<00:41,  4.69it/s][A
 13%|█▎        | 28/221 [00:06<00:52,  3.70it/s][A
 13%|█▎        | 29/221 [00:06<00:50,  3.77it/s][A
 14%|█▎        | 30/221 [00:07<00:55,  3.46it/s][A
 14%|█▍        | 31/221 [00:07<00:48,  3.94it/s][A
 14%|█▍        | 32/221 [00:07<00:41,  4.59it/s][A
 15%|█▍        | 33/221 [00:07<00:38,  4.82it/s][A
 15%|█▌        | 34/221 [00:07<00:38,  4.87it/s][A
 16%|█▌        | 35/221 [00:08<00:45,  4.11it/s][A
 16%|█▋        | 36/221 [00:08<00:47,  3.89it/s][A
 17%|█▋        | 37/221 [00:08<00:42,  4.29it/s][A
 17%|█▋        | 38/221 [00:08<00:45,  4.02it/s][A
 18%|█▊        | 39/221 [00:09<00:42,  4.32it/s][A
 18%|█▊        | 40/221 [00:09<00:49,  3.63it/s][A
 19%|█▊        | 41/221 [00:09<00:53,  3.35it/s][A
 19%|█▉        | 43/221 [00:10<00:36,  4.84it/s][A
 20%|█▉        | 44/221 [00:10<00:35,  4.99it/s][A
 20%|██        | 45/221 [00:10<00:44,  4.00it/s][A
 21%|██        | 46/221 [00:10<00:43,  4.04it/s][A
 21%|██▏       | 47/221 [00:11<00:38,  4.54it/s][A
 22%|██▏       | 48/221 [00:11<00:32,  5.28it/s][A
 22%|██▏       | 49/221 [00:11<00:42,  4.04it/s][A
 23%|██▎       | 50/221 [00:11<00:41,  4.10it/s][A
 23%|██▎       | 51/221 [00:11<00:37,  4.51it/s][A
 24%|██▎       | 52/221 [00:12<00:43,  3.89it/s][A
 24%|██▍       | 53/221 [00:12<00:39,  4.21it/s][A
 24%|██▍       | 54/221 [00:13<00:57,  2.92it/s][A
 25%|██▍       | 55/221 [00:13<00:51,  3.25it/s][A
 25%|██▌       | 56/221 [00:13<00:45,  3.66it/s][A
 26%|██▌       | 57/221 [00:13<00:42,  3.90it/s][A
 26%|██▌       | 58/221 [00:13<00:38,  4.28it/s][A
 27%|██▋       | 59/221 [00:14<00:32,  4.94it/s][A
 27%|██▋       | 60/221 [00:14<00:33,  4.76it/s][A
 28%|██▊       | 61/221 [00:14<00:34,  4.61it/s][A
 28%|██▊       | 62/221 [00:14<00:33,  4.71it/s][A
 29%|██▊       | 63/221 [00:14<00:35,  4.40it/s][A
 29%|██▉       | 64/221 [00:15<00:47,  3.30it/s][A
 29%|██▉       | 65/221 [00:15<00:43,  3.60it/s][A
 30%|██▉       | 66/221 [00:16<00:57,  2.70it/s][A
 30%|███       | 67/221 [00:16<00:59,  2.59it/s][A
 31%|███       | 68/221 [00:16<00:47,  3.22it/s][A
 31%|███       | 69/221 [00:17<01:04,  2.37it/s][A
 32%|███▏      | 70/221 [00:17<00:54,  2.78it/s][A
 32%|███▏      | 71/221 [00:17<00:49,  3.04it/s][A
 33%|███▎      | 72/221 [00:18<00:47,  3.14it/s][A
 33%|███▎      | 73/221 [00:18<00:42,  3.52it/s][A
 33%|███▎      | 74/221 [00:18<00:38,  3.80it/s][A
 34%|███▍      | 75/221 [00:18<00:37,  3.94it/s][A
 34%|███▍      | 76/221 [00:19<00:38,  3.78it/s][A
 35%|███▍      | 77/221 [00:19<00:48,  2.95it/s][A
 35%|███▌      | 78/221 [00:19<00:45,  3.16it/s][A
 36%|███▌      | 79/221 [00:20<00:54,  2.59it/s][A
 36%|███▌      | 80/221 [00:20<00:44,  3.15it/s][A
 37%|███▋      | 81/221 [00:20<00:38,  3.63it/s][A
 37%|███▋      | 82/221 [00:21<00:39,  3.56it/s][A
 38%|███▊      | 83/221 [00:21<00:42,  3.25it/s][A
 38%|███▊      | 84/221 [00:21<00:38,  3.58it/s][A
 38%|███▊      | 85/221 [00:21<00:31,  4.28it/s][A
 39%|███▉      | 86/221 [00:22<00:36,  3.66it/s][A
 39%|███▉      | 87/221 [00:22<00:42,  3.19it/s][A
 40%|███▉      | 88/221 [00:22<00:43,  3.08it/s][A
 40%|████      | 89/221 [00:23<00:42,  3.14it/s][A
 41%|████      | 90/221 [00:23<00:36,  3.58it/s][A
 41%|████      | 91/221 [00:23<00:31,  4.15it/s][A
 42%|████▏     | 92/221 [00:24<00:38,  3.34it/s][A
 42%|████▏     | 93/221 [00:24<00:42,  3.01it/s][A
 43%|████▎     | 94/221 [00:24<00:39,  3.24it/s][A
 43%|████▎     | 95/221 [00:24<00:36,  3.49it/s][A
 43%|████▎     | 96/221 [00:25<00:49,  2.53it/s][A
 44%|████▍     | 97/221 [00:25<00:43,  2.83it/s][A
 44%|████▍     | 98/221 [00:26<00:55,  2.20it/s][A
 45%|████▍     | 99/221 [00:26<00:49,  2.48it/s][A
 45%|████▌     | 100/221 [00:27<00:45,  2.67it/s][A
 46%|████▌     | 101/221 [00:27<00:38,  3.10it/s][A
 46%|████▌     | 102/221 [00:27<00:44,  2.70it/s][A
 47%|████▋     | 103/221 [00:27<00:36,  3.24it/s][A
 47%|████▋     | 104/221 [00:28<00:35,  3.25it/s][A
 48%|████▊     | 105/221 [00:28<00:36,  3.18it/s][A
 48%|████▊     | 106/221 [00:28<00:37,  3.09it/s][A
 48%|████▊     | 107/221 [00:29<00:36,  3.10it/s][A
 49%|████▉     | 108/221 [00:29<00:32,  3.45it/s][A
 49%|████▉     | 109/221 [00:29<00:27,  4.04it/s][A
 50%|████▉     | 110/221 [00:29<00:30,  3.59it/s][A
 50%|█████     | 111/221 [00:30<00:29,  3.74it/s][A
 51%|█████     | 112/221 [00:30<00:28,  3.78it/s][A
 51%|█████     | 113/221 [00:30<00:25,  4.24it/s][A
 52%|█████▏    | 115/221 [00:31<00:21,  4.84it/s][A
 52%|█████▏    | 116/221 [00:31<00:22,  4.64it/s][A
 53%|█████▎    | 117/221 [00:31<00:23,  4.42it/s][A
 53%|█████▎    | 118/221 [00:31<00:23,  4.37it/s][A
 54%|█████▍    | 119/221 [00:32<00:24,  4.21it/s][A
 54%|█████▍    | 120/221 [00:32<00:24,  4.12it/s][A
 55%|█████▌    | 122/221 [00:32<00:19,  5.04it/s][A
 56%|█████▌    | 123/221 [00:32<00:19,  5.14it/s][A
 56%|█████▌    | 124/221 [00:33<00:26,  3.68it/s][A
 57%|█████▋    | 125/221 [00:33<00:27,  3.45it/s][A
 57%|█████▋    | 126/221 [00:33<00:24,  3.88it/s][A
 57%|█████▋    | 127/221 [00:34<00:26,  3.54it/s][A
 58%|█████▊    | 128/221 [00:34<00:25,  3.60it/s][A
 58%|█████▊    | 129/221 [00:34<00:21,  4.24it/s][A
 59%|█████▉    | 130/221 [00:34<00:23,  3.90it/s][A
 59%|█████▉    | 131/221 [00:34<00:19,  4.52it/s][A
 60%|█████▉    | 132/221 [00:35<00:31,  2.83it/s][A
 60%|██████    | 133/221 [00:35<00:28,  3.06it/s][A
 61%|██████    | 134/221 [00:36<00:30,  2.85it/s][A
 61%|██████    | 135/221 [00:36<00:32,  2.67it/s][A
 62%|██████▏   | 136/221 [00:36<00:28,  3.03it/s][A
 62%|██████▏   | 137/221 [00:37<00:24,  3.38it/s][A
 62%|██████▏   | 138/221 [00:37<00:25,  3.30it/s][A
 63%|██████▎   | 139/221 [00:37<00:22,  3.59it/s][A
 63%|██████▎   | 140/221 [00:37<00:23,  3.44it/s][A
 64%|██████▍   | 141/221 [00:38<00:21,  3.79it/s][A
 64%|██████▍   | 142/221 [00:38<00:20,  3.78it/s][A
 65%|██████▍   | 143/221 [00:38<00:22,  3.39it/s][A
 65%|██████▌   | 144/221 [00:39<00:23,  3.31it/s][A
 66%|██████▌   | 145/221 [00:39<00:22,  3.35it/s][A
 67%|██████▋   | 147/221 [00:39<00:16,  4.48it/s][A
 67%|██████▋   | 148/221 [00:39<00:16,  4.31it/s][A
 67%|██████▋   | 149/221 [00:40<00:22,  3.17it/s][A
 68%|██████▊   | 150/221 [00:40<00:22,  3.18it/s][A
 68%|██████▊   | 151/221 [00:41<00:23,  3.00it/s][A
 69%|██████▉   | 152/221 [00:41<00:24,  2.78it/s][A
 69%|██████▉   | 153/221 [00:41<00:20,  3.31it/s][A
 70%|██████▉   | 154/221 [00:41<00:16,  3.98it/s][A
 70%|███████   | 155/221 [00:42<00:21,  3.04it/s][A
 71%|███████   | 156/221 [00:42<00:22,  2.95it/s][A
 71%|███████   | 157/221 [00:43<00:21,  3.04it/s][A
 71%|███████▏  | 158/221 [00:43<00:20,  3.14it/s][A
 72%|███████▏  | 159/221 [00:43<00:16,  3.86it/s][A
 72%|███████▏  | 160/221 [00:43<00:13,  4.55it/s][A
 73%|███████▎  | 161/221 [00:43<00:14,  4.17it/s][A
 74%|███████▍  | 163/221 [00:44<00:12,  4.50it/s][A
 74%|███████▍  | 164/221 [00:44<00:11,  5.08it/s][A
 75%|███████▍  | 165/221 [00:44<00:10,  5.31it/s][A
 75%|███████▌  | 166/221 [00:44<00:11,  4.98it/s][A
 76%|███████▌  | 167/221 [00:45<00:13,  4.06it/s][A
 76%|███████▌  | 168/221 [00:45<00:14,  3.75it/s][A
 76%|███████▋  | 169/221 [00:45<00:14,  3.48it/s][A
 77%|███████▋  | 170/221 [00:46<00:16,  3.10it/s][A
 77%|███████▋  | 171/221 [00:46<00:14,  3.41it/s][A
 78%|███████▊  | 172/221 [00:46<00:16,  2.99it/s][A
 78%|███████▊  | 173/221 [00:47<00:18,  2.64it/s][A
 79%|███████▊  | 174/221 [00:47<00:17,  2.67it/s][A
 79%|███████▉  | 175/221 [00:48<00:17,  2.56it/s][A
 80%|███████▉  | 176/221 [00:48<00:13,  3.27it/s][A
 80%|████████  | 177/221 [00:48<00:11,  3.91it/s][A
 81%|████████  | 178/221 [00:48<00:11,  3.69it/s][A
 81%|████████  | 179/221 [00:48<00:10,  3.95it/s][A
 81%|████████▏ | 180/221 [00:49<00:09,  4.40it/s][A
 82%|████████▏ | 182/221 [00:49<00:09,  3.96it/s][A
 83%|████████▎ | 183/221 [00:50<00:10,  3.47it/s][A
 83%|████████▎ | 184/221 [00:50<00:09,  3.73it/s][A
 84%|████████▎ | 185/221 [00:50<00:10,  3.49it/s][A
 84%|████████▍ | 186/221 [00:51<00:10,  3.26it/s][A
 85%|████████▍ | 187/221 [00:51<00:10,  3.15it/s][A
 85%|████████▌ | 188/221 [00:51<00:10,  3.22it/s][A
 86%|████████▌ | 189/221 [00:51<00:09,  3.41it/s][A
 86%|████████▌ | 190/221 [00:52<00:08,  3.52it/s][A
 86%|████████▋ | 191/221 [00:52<00:07,  4.01it/s][A
 87%|████████▋ | 192/221 [00:52<00:07,  3.80it/s][A
 87%|████████▋ | 193/221 [00:52<00:06,  4.09it/s][A
 88%|████████▊ | 194/221 [00:53<00:06,  4.29it/s][A
 88%|████████▊ | 195/221 [00:53<00:06,  4.29it/s][A
 89%|████████▊ | 196/221 [00:53<00:06,  3.72it/s][A
 89%|████████▉ | 197/221 [00:53<00:06,  3.67it/s][A
 90%|████████▉ | 198/221 [00:54<00:07,  3.27it/s][A
 90%|█████████ | 199/221 [00:54<00:06,  3.52it/s][A
 90%|█████████ | 200/221 [00:54<00:06,  3.35it/s][A
 91%|█████████ | 201/221 [00:55<00:05,  3.51it/s][A
 91%|█████████▏| 202/221 [00:55<00:06,  3.16it/s][A
 92%|█████████▏| 203/221 [00:55<00:05,  3.12it/s][A
 92%|█████████▏| 204/221 [00:56<00:05,  3.10it/s][A
 93%|█████████▎| 205/221 [00:56<00:04,  3.81it/s][A
 93%|█████████▎| 206/221 [00:56<00:03,  4.04it/s][A
 94%|█████████▎| 207/221 [00:56<00:02,  4.90it/s][A
 94%|█████████▍| 208/221 [00:57<00:03,  3.54it/s][A
 95%|█████████▍| 209/221 [00:57<00:03,  3.96it/s][A
 95%|█████████▌| 210/221 [00:57<00:02,  4.47it/s][A
 95%|█████████▌| 211/221 [00:57<00:03,  3.23it/s][A
 96%|█████████▌| 212/221 [00:58<00:02,  3.40it/s][A
 96%|█████████▋| 213/221 [00:58<00:02,  3.98it/s][A
 97%|█████████▋| 214/221 [00:58<00:02,  3.25it/s][A
 97%|█████████▋| 215/221 [00:58<00:01,  3.74it/s][A
 98%|█████████▊| 216/221 [00:59<00:01,  4.10it/s][A
 98%|█████████▊| 217/221 [00:59<00:01,  3.32it/s][A
 99%|█████████▊| 218/221 [00:59<00:00,  3.37it/s][A
 99%|█████████▉| 219/221 [01:00<00:00,  3.15it/s][A
100%|█████████▉| 220/221 [01:00<00:00,  3.67it/s][A
100%|██████████| 221/221 [01:00<00:00,  4.07it/s][A100%|██████████| 221/221 [01:00<00:00,  3.65it/s]
08/31/2024 19:26:36 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forward=====step 999--===========

08/31/2024 19:26:36 - INFO - __main__ -   {'area_r1': 11.9, 'area_recall': '11.9/28.2/36.8', 'area_ravg': 25.6}
08/31/2024 19:26:36 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_backard=====step 999--===========

08/31/2024 19:26:36 - INFO - __main__ -   {'forward_r1': 47.1, 'forward_recall': '47.1/75.8/83.4', 'forward_ravg': 68.7}
08/31/2024 19:26:36 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forw_with_video=====step 999--===========

08/31/2024 19:26:36 - INFO - __main__ -   {'forward_r1': 61.1, 'forward_recall': '61.1/84.8/90.6', 'forward_ravg': 78.8}
08/31/2024 19:26:36 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itc_tv=====step 999--===========

08/31/2024 19:26:36 - INFO - __main__ -   {'video_r1': 46.0, 'video_recall': '46.0/74.9/83.0', 'video_ravg': 68.0}
08/31/2024 19:26:36 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itc_tv====history best step: 999=======

08/31/2024 19:26:36 - INFO - __main__ -   {'video_r1': 46.0, 'video_recall': '46.0/74.9/83.0', 'video_ravg': 68.0}
08/31/2024 19:26:36 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itm_tv=====step 999--===========

08/31/2024 19:26:36 - INFO - __main__ -   {'video_r1': 56.9, 'video_recall': '56.9/78.3/85.3', 'video_ravg': 73.5}
08/31/2024 19:26:36 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itm_tv====history best step: 999=======

08/31/2024 19:26:36 - INFO - __main__ -   {'video_r1': 56.9, 'video_recall': '56.9/78.3/85.3', 'video_ravg': 73.5}
08/31/2024 19:27:13 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.8505316972732544, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04716150462627411, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.772339344024658, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.670032501220703}
 13%|█▎        | 1000/7431 [59:55<101:08:39, 56.62s/it] 13%|█▎        | 1001/7431 [59:58<72:28:56, 40.58s/it]  13%|█▎        | 1002/7431 [1:00:01<52:23:43, 29.34s/it] 13%|█▎        | 1003/7431 [1:00:04<38:20:48, 21.48s/it] 14%|█▎        | 1004/7431 [1:00:07<28:34:18, 16.00s/it] 14%|█▎        | 1005/7431 [1:00:11<21:44:06, 12.18s/it] 14%|█▎        | 1006/7431 [1:00:14<17:00:33,  9.53s/it] 14%|█▎        | 1007/7431 [1:00:17<13:45:32,  7.71s/it] 14%|█▎        | 1008/7431 [1:00:21<11:26:20,  6.41s/it] 14%|█▎        | 1009/7431 [1:00:24<9:46:32,  5.48s/it]  14%|█▎        | 1010/7431 [1:00:28<8:40:50,  4.87s/it] 14%|█▎        | 1011/7431 [1:00:31<7:51:22,  4.41s/it] 14%|█▎        | 1012/7431 [1:00:34<7:14:47,  4.06s/it] 14%|█▎        | 1013/7431 [1:00:38<6:53:07,  3.86s/it] 14%|█▎        | 1014/7431 [1:00:41<6:37:30,  3.72s/it] 14%|█▎        | 1015/7431 [1:00:44<6:26:21,  3.61s/it] 14%|█▎        | 1016/7431 [1:00:47<6:12:28,  3.48s/it] 14%|█▎        | 1017/7431 [1:00:51<6:09:16,  3.45s/it] 14%|█▎        | 1018/7431 [1:00:54<6:04:23,  3.41s/it] 14%|█▎        | 1019/7431 [1:00:58<6:06:25,  3.43s/it] 14%|█▎        | 1020/7431 [1:01:01<5:59:05,  3.36s/it] 14%|█▎        | 1021/7431 [1:01:04<5:54:36,  3.32s/it] 14%|█▍        | 1022/7431 [1:01:08<6:00:28,  3.37s/it] 14%|█▍        | 1023/7431 [1:01:11<5:57:05,  3.34s/it] 14%|█▍        | 1024/7431 [1:01:14<5:53:10,  3.31s/it] 14%|█▍        | 1025/7431 [1:01:17<5:54:50,  3.32s/it] 14%|█▍        | 1026/7431 [1:01:21<5:52:02,  3.30s/it] 14%|█▍        | 1027/7431 [1:01:24<5:51:50,  3.30s/it] 14%|█▍        | 1028/7431 [1:01:27<5:54:21,  3.32s/it] 14%|█▍        | 1029/7431 [1:01:31<5:56:33,  3.34s/it] 14%|█▍        | 1030/7431 [1:01:34<5:54:36,  3.32s/it] 14%|█▍        | 1031/7431 [1:01:37<5:54:00,  3.32s/it] 14%|█▍        | 1032/7431 [1:01:41<5:56:38,  3.34s/it] 14%|█▍        | 1033/7431 [1:01:44<5:51:38,  3.30s/it] 14%|█▍        | 1034/7431 [1:01:47<5:45:51,  3.24s/it] 14%|█▍        | 1035/7431 [1:01:50<5:45:13,  3.24s/it] 14%|█▍        | 1036/7431 [1:01:53<5:42:52,  3.22s/it] 14%|█▍        | 1037/7431 [1:01:57<5:48:11,  3.27s/it] 14%|█▍        | 1038/7431 [1:02:00<5:52:04,  3.30s/it] 14%|█▍        | 1039/7431 [1:02:03<5:51:26,  3.30s/it] 14%|█▍        | 1040/7431 [1:02:07<5:49:46,  3.28s/it] 14%|█▍        | 1041/7431 [1:02:10<5:49:30,  3.28s/it] 14%|█▍        | 1042/7431 [1:02:13<5:49:20,  3.28s/it] 14%|█▍        | 1043/7431 [1:02:16<5:44:23,  3.23s/it] 14%|█▍        | 1044/7431 [1:02:20<5:47:38,  3.27s/it] 14%|█▍        | 1045/7431 [1:02:23<5:44:16,  3.23s/it] 14%|█▍        | 1046/7431 [1:02:26<5:48:11,  3.27s/it] 14%|█▍        | 1047/7431 [1:02:30<5:52:43,  3.32s/it] 14%|█▍        | 1048/7431 [1:02:33<5:48:27,  3.28s/it] 14%|█▍        | 1049/7431 [1:02:36<5:44:46,  3.24s/it]08/31/2024 19:29:58 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.1564688682556152, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.049403708428144455, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.736893653869629, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.942766189575195}
 14%|█▍        | 1050/7431 [1:02:39<5:49:09,  3.28s/it] 14%|█▍        | 1051/7431 [1:02:43<5:57:24,  3.36s/it] 14%|█▍        | 1052/7431 [1:02:46<5:54:23,  3.33s/it] 14%|█▍        | 1053/7431 [1:02:49<5:49:10,  3.28s/it] 14%|█▍        | 1054/7431 [1:02:53<5:47:44,  3.27s/it] 14%|█▍        | 1055/7431 [1:02:56<5:57:37,  3.37s/it] 14%|█▍        | 1056/7431 [1:03:00<5:59:04,  3.38s/it] 14%|█▍        | 1057/7431 [1:03:03<5:55:21,  3.35s/it] 14%|█▍        | 1058/7431 [1:03:06<5:54:09,  3.33s/it] 14%|█▍        | 1059/7431 [1:03:09<5:51:55,  3.31s/it] 14%|█▍        | 1060/7431 [1:03:13<5:46:43,  3.27s/it] 14%|█▍        | 1061/7431 [1:03:16<5:43:07,  3.23s/it] 14%|█▍        | 1062/7431 [1:03:19<5:40:59,  3.21s/it] 14%|█▍        | 1063/7431 [1:03:22<5:45:48,  3.26s/it] 14%|█▍        | 1064/7431 [1:03:25<5:42:09,  3.22s/it] 14%|█▍        | 1065/7431 [1:03:29<5:40:38,  3.21s/it] 14%|█▍        | 1066/7431 [1:03:32<5:46:01,  3.26s/it] 14%|█▍        | 1067/7431 [1:03:35<5:45:28,  3.26s/it] 14%|█▍        | 1068/7431 [1:03:39<5:56:25,  3.36s/it] 14%|█▍        | 1069/7431 [1:03:42<5:46:30,  3.27s/it] 14%|█▍        | 1070/7431 [1:03:45<5:48:32,  3.29s/it] 14%|█▍        | 1071/7431 [1:03:49<5:49:33,  3.30s/it] 14%|█▍        | 1072/7431 [1:03:52<5:51:41,  3.32s/it] 14%|█▍        | 1073/7431 [1:03:55<5:49:57,  3.30s/it] 14%|█▍        | 1074/7431 [1:03:58<5:49:38,  3.30s/it] 14%|█▍        | 1075/7431 [1:04:02<5:48:43,  3.29s/it] 14%|█▍        | 1076/7431 [1:04:05<5:44:06,  3.25s/it] 14%|█▍        | 1077/7431 [1:04:08<5:43:53,  3.25s/it] 15%|█▍        | 1078/7431 [1:04:11<5:43:53,  3.25s/it] 15%|█▍        | 1079/7431 [1:04:15<5:45:21,  3.26s/it] 15%|█▍        | 1080/7431 [1:04:18<5:49:09,  3.30s/it] 15%|█▍        | 1081/7431 [1:04:21<5:45:52,  3.27s/it] 15%|█▍        | 1082/7431 [1:04:25<5:53:59,  3.35s/it] 15%|█▍        | 1083/7431 [1:04:28<5:51:06,  3.32s/it] 15%|█▍        | 1084/7431 [1:04:31<5:52:55,  3.34s/it] 15%|█▍        | 1085/7431 [1:04:35<5:50:35,  3.31s/it] 15%|█▍        | 1086/7431 [1:04:38<5:51:44,  3.33s/it] 15%|█▍        | 1087/7431 [1:04:41<5:49:30,  3.31s/it] 15%|█▍        | 1088/7431 [1:04:44<5:45:32,  3.27s/it] 15%|█▍        | 1089/7431 [1:04:48<5:55:14,  3.36s/it] 15%|█▍        | 1090/7431 [1:04:51<5:55:51,  3.37s/it] 15%|█▍        | 1091/7431 [1:04:55<5:49:10,  3.30s/it] 15%|█▍        | 1092/7431 [1:04:58<5:54:26,  3.35s/it] 15%|█▍        | 1093/7431 [1:05:01<5:52:20,  3.34s/it] 15%|█▍        | 1094/7431 [1:05:05<5:51:13,  3.33s/it] 15%|█▍        | 1095/7431 [1:05:08<5:51:35,  3.33s/it] 15%|█▍        | 1096/7431 [1:05:11<5:53:12,  3.35s/it] 15%|█▍        | 1097/7431 [1:05:15<5:48:02,  3.30s/it] 15%|█▍        | 1098/7431 [1:05:18<5:46:41,  3.28s/it] 15%|█▍        | 1099/7431 [1:05:21<5:46:24,  3.28s/it]08/31/2024 19:32:43 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.404642343521118, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.052425213158130646, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 3.031252384185791, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 5.4883198738098145}
 15%|█▍        | 1100/7431 [1:05:24<5:46:02,  3.28s/it] 15%|█▍        | 1101/7431 [1:05:28<5:45:11,  3.27s/it] 15%|█▍        | 1102/7431 [1:05:31<5:57:53,  3.39s/it] 15%|█▍        | 1103/7431 [1:05:35<5:52:58,  3.35s/it] 15%|█▍        | 1104/7431 [1:05:38<5:43:15,  3.26s/it] 15%|█▍        | 1105/7431 [1:05:41<5:39:40,  3.22s/it] 15%|█▍        | 1106/7431 [1:05:44<5:40:33,  3.23s/it] 15%|█▍        | 1107/7431 [1:05:47<5:38:45,  3.21s/it] 15%|█▍        | 1108/7431 [1:05:51<5:47:42,  3.30s/it] 15%|█▍        | 1109/7431 [1:05:54<5:51:07,  3.33s/it] 15%|█▍        | 1110/7431 [1:05:57<5:50:45,  3.33s/it] 15%|█▍        | 1111/7431 [1:06:01<5:49:46,  3.32s/it] 15%|█▍        | 1112/7431 [1:06:04<5:52:47,  3.35s/it] 15%|█▍        | 1113/7431 [1:06:07<5:48:49,  3.31s/it] 15%|█▍        | 1114/7431 [1:06:11<5:47:57,  3.31s/it] 15%|█▌        | 1115/7431 [1:06:14<5:49:56,  3.32s/it] 15%|█▌        | 1116/7431 [1:06:17<5:44:57,  3.28s/it] 15%|█▌        | 1117/7431 [1:06:20<5:42:06,  3.25s/it] 15%|█▌        | 1118/7431 [1:06:24<5:47:26,  3.30s/it] 15%|█▌        | 1119/7431 [1:06:27<5:43:15,  3.26s/it] 15%|█▌        | 1120/7431 [1:06:30<5:47:48,  3.31s/it] 15%|█▌        | 1121/7431 [1:06:34<5:45:26,  3.28s/it] 15%|█▌        | 1122/7431 [1:06:37<5:44:44,  3.28s/it] 15%|█▌        | 1123/7431 [1:06:40<5:47:25,  3.30s/it] 15%|█▌        | 1124/7431 [1:06:44<5:49:51,  3.33s/it] 15%|█▌        | 1125/7431 [1:06:47<5:49:57,  3.33s/it] 15%|█▌        | 1126/7431 [1:06:50<5:44:20,  3.28s/it] 15%|█▌        | 1127/7431 [1:06:53<5:42:18,  3.26s/it] 15%|█▌        | 1128/7431 [1:06:57<5:41:07,  3.25s/it] 15%|█▌        | 1129/7431 [1:07:00<5:41:58,  3.26s/it] 15%|█▌        | 1130/7431 [1:07:03<5:45:08,  3.29s/it] 15%|█▌        | 1131/7431 [1:07:07<5:54:48,  3.38s/it] 15%|█▌        | 1132/7431 [1:07:10<5:48:53,  3.32s/it] 15%|█▌        | 1133/7431 [1:07:13<5:42:25,  3.26s/it] 15%|█▌        | 1134/7431 [1:07:16<5:39:41,  3.24s/it] 15%|█▌        | 1135/7431 [1:07:20<5:41:50,  3.26s/it] 15%|█▌        | 1136/7431 [1:07:23<5:48:42,  3.32s/it] 15%|█▌        | 1137/7431 [1:07:26<5:46:01,  3.30s/it] 15%|█▌        | 1138/7431 [1:07:30<5:46:06,  3.30s/it] 15%|█▌        | 1139/7431 [1:07:33<5:50:58,  3.35s/it] 15%|█▌        | 1140/7431 [1:07:36<5:46:51,  3.31s/it] 15%|█▌        | 1141/7431 [1:07:40<5:50:33,  3.34s/it] 15%|█▌        | 1142/7431 [1:07:43<5:50:22,  3.34s/it] 15%|█▌        | 1143/7431 [1:07:46<5:49:22,  3.33s/it] 15%|█▌        | 1144/7431 [1:07:50<5:49:13,  3.33s/it] 15%|█▌        | 1145/7431 [1:07:53<5:42:48,  3.27s/it] 15%|█▌        | 1146/7431 [1:07:56<5:53:10,  3.37s/it] 15%|█▌        | 1147/7431 [1:08:00<5:50:20,  3.35s/it] 15%|█▌        | 1148/7431 [1:08:03<5:58:47,  3.43s/it] 15%|█▌        | 1149/7431 [1:08:07<5:52:08,  3.36s/it]08/31/2024 19:35:28 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.2551987171173096, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.05283646658062935, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.795792818069458, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 5.103827953338623}
 15%|█▌        | 1150/7431 [1:08:10<5:46:36,  3.31s/it] 15%|█▌        | 1151/7431 [1:08:13<5:43:20,  3.28s/it] 16%|█▌        | 1152/7431 [1:08:16<5:43:27,  3.28s/it] 16%|█▌        | 1153/7431 [1:08:19<5:42:51,  3.28s/it] 16%|█▌        | 1154/7431 [1:08:23<5:52:33,  3.37s/it] 16%|█▌        | 1155/7431 [1:08:26<5:53:03,  3.38s/it] 16%|█▌        | 1156/7431 [1:08:30<5:51:55,  3.37s/it] 16%|█▌        | 1157/7431 [1:08:33<5:45:28,  3.30s/it] 16%|█▌        | 1158/7431 [1:08:36<5:48:10,  3.33s/it] 16%|█▌        | 1159/7431 [1:08:40<5:45:07,  3.30s/it] 16%|█▌        | 1160/7431 [1:08:43<5:40:57,  3.26s/it] 16%|█▌        | 1161/7431 [1:08:46<5:37:45,  3.23s/it] 16%|█▌        | 1162/7431 [1:08:49<5:47:17,  3.32s/it] 16%|█▌        | 1163/7431 [1:08:53<5:49:33,  3.35s/it] 16%|█▌        | 1164/7431 [1:08:56<5:48:13,  3.33s/it] 16%|█▌        | 1165/7431 [1:08:59<5:46:35,  3.32s/it] 16%|█▌        | 1166/7431 [1:09:03<5:49:28,  3.35s/it] 16%|█▌        | 1167/7431 [1:09:06<5:44:26,  3.30s/it] 16%|█▌        | 1168/7431 [1:09:09<5:41:36,  3.27s/it] 16%|█▌        | 1169/7431 [1:09:12<5:39:33,  3.25s/it] 16%|█▌        | 1170/7431 [1:09:16<5:39:12,  3.25s/it] 16%|█▌        | 1171/7431 [1:09:19<5:41:56,  3.28s/it] 16%|█▌        | 1172/7431 [1:09:22<5:42:09,  3.28s/it] 16%|█▌        | 1173/7431 [1:09:26<5:41:23,  3.27s/it] 16%|█▌        | 1174/7431 [1:09:29<5:45:59,  3.32s/it] 16%|█▌        | 1175/7431 [1:09:32<5:41:58,  3.28s/it] 16%|█▌        | 1176/7431 [1:09:35<5:39:31,  3.26s/it] 16%|█▌        | 1177/7431 [1:09:39<5:36:38,  3.23s/it] 16%|█▌        | 1178/7431 [1:09:42<5:44:28,  3.31s/it] 16%|█▌        | 1179/7431 [1:09:45<5:45:52,  3.32s/it] 16%|█▌        | 1180/7431 [1:09:49<5:40:37,  3.27s/it] 16%|█▌        | 1181/7431 [1:09:52<5:48:59,  3.35s/it] 16%|█▌        | 1182/7431 [1:09:55<5:46:26,  3.33s/it] 16%|█▌        | 1183/7431 [1:09:59<5:50:22,  3.36s/it] 16%|█▌        | 1184/7431 [1:10:02<5:46:28,  3.33s/it] 16%|█▌        | 1185/7431 [1:10:05<5:41:27,  3.28s/it] 16%|█▌        | 1186/7431 [1:10:08<5:41:34,  3.28s/it] 16%|█▌        | 1187/7431 [1:10:12<5:45:47,  3.32s/it] 16%|█▌        | 1188/7431 [1:10:15<5:42:45,  3.29s/it] 16%|█▌        | 1189/7431 [1:10:18<5:40:46,  3.28s/it] 16%|█▌        | 1190/7431 [1:10:22<5:40:45,  3.28s/it] 16%|█▌        | 1191/7431 [1:10:25<5:38:56,  3.26s/it] 16%|█▌        | 1192/7431 [1:10:28<5:42:22,  3.29s/it] 16%|█▌        | 1193/7431 [1:10:32<5:41:37,  3.29s/it] 16%|█▌        | 1194/7431 [1:10:35<5:40:49,  3.28s/it] 16%|█▌        | 1195/7431 [1:10:38<5:40:47,  3.28s/it] 16%|█▌        | 1196/7431 [1:10:41<5:42:49,  3.30s/it] 16%|█▌        | 1197/7431 [1:10:45<5:44:37,  3.32s/it] 16%|█▌        | 1198/7431 [1:10:48<5:49:40,  3.37s/it] 16%|█▌        | 1199/7431 [1:10:51<5:43:57,  3.31s/it]08/31/2024 19:38:13 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.963226318359375, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04169629514217377, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7701473236083984, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.7750701904296875}
 16%|█▌        | 1200/7431 [1:10:55<5:40:06,  3.27s/it] 16%|█▌        | 1201/7431 [1:10:58<5:43:20,  3.31s/it] 16%|█▌        | 1202/7431 [1:11:01<5:43:38,  3.31s/it] 16%|█▌        | 1203/7431 [1:11:05<5:44:40,  3.32s/it] 16%|█▌        | 1204/7431 [1:11:08<5:38:44,  3.26s/it] 16%|█▌        | 1205/7431 [1:11:11<5:38:56,  3.27s/it] 16%|█▌        | 1206/7431 [1:11:14<5:36:47,  3.25s/it] 16%|█▌        | 1207/7431 [1:11:17<5:35:51,  3.24s/it] 16%|█▋        | 1208/7431 [1:11:21<5:42:34,  3.30s/it] 16%|█▋        | 1209/7431 [1:11:24<5:42:27,  3.30s/it] 16%|█▋        | 1210/7431 [1:11:27<5:39:34,  3.28s/it] 16%|█▋        | 1211/7431 [1:11:31<5:37:35,  3.26s/it] 16%|█▋        | 1212/7431 [1:11:34<5:41:40,  3.30s/it] 16%|█▋        | 1213/7431 [1:11:37<5:36:39,  3.25s/it] 16%|█▋        | 1214/7431 [1:11:41<5:42:03,  3.30s/it] 16%|█▋        | 1215/7431 [1:11:44<5:40:26,  3.29s/it] 16%|█▋        | 1216/7431 [1:11:47<5:32:11,  3.21s/it] 16%|█▋        | 1217/7431 [1:11:50<5:33:36,  3.22s/it] 16%|█▋        | 1218/7431 [1:11:53<5:34:05,  3.23s/it] 16%|█▋        | 1219/7431 [1:11:57<5:40:53,  3.29s/it] 16%|█▋        | 1220/7431 [1:12:00<5:36:01,  3.25s/it] 16%|█▋        | 1221/7431 [1:12:03<5:38:55,  3.27s/it] 16%|█▋        | 1222/7431 [1:12:06<5:34:51,  3.24s/it] 16%|█▋        | 1223/7431 [1:12:10<5:44:21,  3.33s/it] 16%|█▋        | 1224/7431 [1:12:13<5:42:00,  3.31s/it] 16%|█▋        | 1225/7431 [1:12:16<5:36:46,  3.26s/it] 16%|█▋        | 1226/7431 [1:12:20<5:36:06,  3.25s/it] 17%|█▋        | 1227/7431 [1:12:23<5:31:42,  3.21s/it] 17%|█▋        | 1228/7431 [1:12:26<5:36:56,  3.26s/it] 17%|█▋        | 1229/7431 [1:12:29<5:36:10,  3.25s/it] 17%|█▋        | 1230/7431 [1:12:33<5:37:15,  3.26s/it] 17%|█▋        | 1231/7431 [1:12:36<5:36:32,  3.26s/it] 17%|█▋        | 1232/7431 [1:12:39<5:32:32,  3.22s/it] 17%|█▋        | 1233/7431 [1:12:42<5:38:30,  3.28s/it] 17%|█▋        | 1234/7431 [1:12:46<5:48:30,  3.37s/it] 17%|█▋        | 1235/7431 [1:12:49<5:46:16,  3.35s/it] 17%|█▋        | 1236/7431 [1:12:53<5:47:26,  3.37s/it] 17%|█▋        | 1237/7431 [1:12:56<5:41:06,  3.30s/it] 17%|█▋        | 1238/7431 [1:12:59<5:39:58,  3.29s/it] 17%|█▋        | 1239/7431 [1:13:02<5:36:24,  3.26s/it] 17%|█▋        | 1240/7431 [1:13:06<5:36:51,  3.26s/it] 17%|█▋        | 1241/7431 [1:13:09<5:35:23,  3.25s/it] 17%|█▋        | 1242/7431 [1:13:12<5:34:46,  3.25s/it] 17%|█▋        | 1243/7431 [1:13:15<5:33:26,  3.23s/it] 17%|█▋        | 1244/7431 [1:13:18<5:32:44,  3.23s/it] 17%|█▋        | 1245/7431 [1:13:22<5:34:21,  3.24s/it] 17%|█▋        | 1246/7431 [1:13:25<5:39:18,  3.29s/it] 17%|█▋        | 1247/7431 [1:13:29<5:41:04,  3.31s/it] 17%|█▋        | 1248/7431 [1:13:32<5:37:49,  3.28s/it] 17%|█▋        | 1249/7431 [1:13:35<5:42:21,  3.32s/it]08/31/2024 19:40:57 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.7173840999603271, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04533875361084938, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6528513431549072, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.415574073791504}
 17%|█▋        | 1250/7431 [1:13:39<5:46:10,  3.36s/it] 17%|█▋        | 1251/7431 [1:13:42<5:39:20,  3.29s/it] 17%|█▋        | 1252/7431 [1:13:45<5:35:43,  3.26s/it] 17%|█▋        | 1253/7431 [1:13:48<5:41:08,  3.31s/it] 17%|█▋        | 1254/7431 [1:13:52<5:36:43,  3.27s/it] 17%|█▋        | 1255/7431 [1:13:55<5:36:45,  3.27s/it] 17%|█▋        | 1256/7431 [1:13:58<5:34:21,  3.25s/it] 17%|█▋        | 1257/7431 [1:14:01<5:38:06,  3.29s/it] 17%|█▋        | 1258/7431 [1:14:04<5:32:29,  3.23s/it] 17%|█▋        | 1259/7431 [1:14:08<5:38:23,  3.29s/it] 17%|█▋        | 1260/7431 [1:14:11<5:39:25,  3.30s/it] 17%|█▋        | 1261/7431 [1:14:14<5:35:03,  3.26s/it] 17%|█▋        | 1262/7431 [1:14:17<5:30:12,  3.21s/it] 17%|█▋        | 1263/7431 [1:14:21<5:36:04,  3.27s/it] 17%|█▋        | 1264/7431 [1:14:24<5:46:46,  3.37s/it] 17%|█▋        | 1265/7431 [1:14:28<5:43:01,  3.34s/it] 17%|█▋        | 1266/7431 [1:14:31<5:37:10,  3.28s/it] 17%|█▋        | 1267/7431 [1:14:34<5:33:42,  3.25s/it] 17%|█▋        | 1268/7431 [1:14:37<5:37:59,  3.29s/it] 17%|█▋        | 1269/7431 [1:14:41<5:36:11,  3.27s/it] 17%|█▋        | 1270/7431 [1:14:44<5:31:48,  3.23s/it] 17%|█▋        | 1271/7431 [1:14:47<5:30:05,  3.22s/it] 17%|█▋        | 1272/7431 [1:14:50<5:31:18,  3.23s/it] 17%|█▋        | 1273/7431 [1:14:54<5:32:04,  3.24s/it] 17%|█▋        | 1274/7431 [1:14:57<5:48:03,  3.39s/it] 17%|█▋        | 1275/7431 [1:15:01<5:47:48,  3.39s/it] 17%|█▋        | 1276/7431 [1:15:04<5:45:38,  3.37s/it] 17%|█▋        | 1277/7431 [1:15:07<5:41:47,  3.33s/it] 17%|█▋        | 1278/7431 [1:15:11<5:40:38,  3.32s/it] 17%|█▋        | 1279/7431 [1:15:14<5:36:16,  3.28s/it] 17%|█▋        | 1280/7431 [1:15:17<5:37:21,  3.29s/it] 17%|█▋        | 1281/7431 [1:15:20<5:36:36,  3.28s/it] 17%|█▋        | 1282/7431 [1:15:24<5:43:09,  3.35s/it] 17%|█▋        | 1283/7431 [1:15:27<5:41:51,  3.34s/it] 17%|█▋        | 1284/7431 [1:15:30<5:37:30,  3.29s/it] 17%|█▋        | 1285/7431 [1:15:34<5:40:08,  3.32s/it] 17%|█▋        | 1286/7431 [1:15:37<5:36:05,  3.28s/it] 17%|█▋        | 1287/7431 [1:15:40<5:37:23,  3.29s/it] 17%|█▋        | 1288/7431 [1:15:43<5:33:49,  3.26s/it] 17%|█▋        | 1289/7431 [1:15:47<5:37:46,  3.30s/it] 17%|█▋        | 1290/7431 [1:15:50<5:36:46,  3.29s/it] 17%|█▋        | 1291/7431 [1:15:53<5:33:36,  3.26s/it] 17%|█▋        | 1292/7431 [1:15:57<5:34:32,  3.27s/it] 17%|█▋        | 1293/7431 [1:16:00<5:32:35,  3.25s/it] 17%|█▋        | 1294/7431 [1:16:03<5:35:36,  3.28s/it] 17%|█▋        | 1295/7431 [1:16:06<5:33:44,  3.26s/it] 17%|█▋        | 1296/7431 [1:16:10<5:37:05,  3.30s/it] 17%|█▋        | 1297/7431 [1:16:13<5:43:55,  3.36s/it] 17%|█▋        | 1298/7431 [1:16:16<5:38:32,  3.31s/it] 17%|█▋        | 1299/7431 [1:16:20<5:38:08,  3.31s/it]08/31/2024 19:43:42 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.1841955184936523, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.047546133399009705, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.8205413818359375, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 5.05228328704834}
 17%|█▋        | 1300/7431 [1:16:23<5:35:37,  3.28s/it] 18%|█▊        | 1301/7431 [1:16:26<5:41:20,  3.34s/it] 18%|█▊        | 1302/7431 [1:16:30<5:36:20,  3.29s/it] 18%|█▊        | 1303/7431 [1:16:33<5:39:12,  3.32s/it] 18%|█▊        | 1304/7431 [1:16:36<5:38:55,  3.32s/it] 18%|█▊        | 1305/7431 [1:16:40<5:40:27,  3.33s/it] 18%|█▊        | 1306/7431 [1:16:43<5:36:24,  3.30s/it] 18%|█▊        | 1307/7431 [1:16:46<5:33:37,  3.27s/it] 18%|█▊        | 1308/7431 [1:16:49<5:36:53,  3.30s/it] 18%|█▊        | 1309/7431 [1:16:53<5:42:07,  3.35s/it] 18%|█▊        | 1310/7431 [1:16:56<5:38:25,  3.32s/it] 18%|█▊        | 1311/7431 [1:16:59<5:31:16,  3.25s/it] 18%|█▊        | 1312/7431 [1:17:03<5:34:49,  3.28s/it] 18%|█▊        | 1313/7431 [1:17:06<5:27:45,  3.21s/it] 18%|█▊        | 1314/7431 [1:17:09<5:27:53,  3.22s/it] 18%|█▊        | 1315/7431 [1:17:12<5:25:20,  3.19s/it] 18%|█▊        | 1316/7431 [1:17:15<5:28:24,  3.22s/it] 18%|█▊        | 1317/7431 [1:17:19<5:30:30,  3.24s/it] 18%|█▊        | 1318/7431 [1:17:22<5:39:14,  3.33s/it] 18%|█▊        | 1319/7431 [1:17:25<5:40:16,  3.34s/it] 18%|█▊        | 1320/7431 [1:17:29<5:37:08,  3.31s/it] 18%|█▊        | 1321/7431 [1:17:32<5:39:50,  3.34s/it] 18%|█▊        | 1322/7431 [1:17:35<5:36:40,  3.31s/it] 18%|█▊        | 1323/7431 [1:17:39<5:32:55,  3.27s/it] 18%|█▊        | 1324/7431 [1:17:42<5:33:40,  3.28s/it] 18%|█▊        | 1325/7431 [1:17:45<5:36:23,  3.31s/it] 18%|█▊        | 1326/7431 [1:17:49<5:36:56,  3.31s/it] 18%|█▊        | 1327/7431 [1:17:52<5:31:50,  3.26s/it] 18%|█▊        | 1328/7431 [1:17:55<5:36:31,  3.31s/it] 18%|█▊        | 1329/7431 [1:17:58<5:32:39,  3.27s/it] 18%|█▊        | 1330/7431 [1:18:01<5:30:25,  3.25s/it] 18%|█▊        | 1331/7431 [1:18:05<5:27:44,  3.22s/it] 18%|█▊        | 1332/7431 [1:18:08<5:33:01,  3.28s/it] 18%|█▊        | 1333/7431 [1:18:11<5:33:27,  3.28s/it] 18%|█▊        | 1334/7431 [1:18:15<5:33:34,  3.28s/it] 18%|█▊        | 1335/7431 [1:18:18<5:39:07,  3.34s/it] 18%|█▊        | 1336/7431 [1:18:21<5:30:34,  3.25s/it] 18%|█▊        | 1337/7431 [1:18:24<5:30:58,  3.26s/it] 18%|█▊        | 1338/7431 [1:18:28<5:32:53,  3.28s/it] 18%|█▊        | 1339/7431 [1:18:31<5:32:27,  3.27s/it] 18%|█▊        | 1340/7431 [1:18:34<5:27:27,  3.23s/it] 18%|█▊        | 1341/7431 [1:18:37<5:28:10,  3.23s/it] 18%|█▊        | 1342/7431 [1:18:40<5:23:27,  3.19s/it] 18%|█▊        | 1343/7431 [1:18:44<5:25:34,  3.21s/it] 18%|█▊        | 1344/7431 [1:18:47<5:29:19,  3.25s/it] 18%|█▊        | 1345/7431 [1:18:50<5:28:14,  3.24s/it] 18%|█▊        | 1346/7431 [1:18:53<5:26:32,  3.22s/it] 18%|█▊        | 1347/7431 [1:18:57<5:29:46,  3.25s/it] 18%|█▊        | 1348/7431 [1:19:00<5:25:41,  3.21s/it] 18%|█▊        | 1349/7431 [1:19:03<5:25:30,  3.21s/it]08/31/2024 19:46:25 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.087711811065674, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.045933835208415985, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.798833131790161, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.932478904724121}
 18%|█▊        | 1350/7431 [1:19:06<5:25:00,  3.21s/it] 18%|█▊        | 1351/7431 [1:19:10<5:29:55,  3.26s/it] 18%|█▊        | 1352/7431 [1:19:13<5:30:47,  3.26s/it] 18%|█▊        | 1353/7431 [1:19:16<5:34:13,  3.30s/it] 18%|█▊        | 1354/7431 [1:19:20<5:35:05,  3.31s/it] 18%|█▊        | 1355/7431 [1:19:23<5:35:52,  3.32s/it] 18%|█▊        | 1356/7431 [1:19:26<5:32:49,  3.29s/it] 18%|█▊        | 1357/7431 [1:19:30<5:34:30,  3.30s/it] 18%|█▊        | 1358/7431 [1:19:33<5:35:37,  3.32s/it] 18%|█▊        | 1359/7431 [1:19:36<5:41:45,  3.38s/it] 18%|█▊        | 1360/7431 [1:19:40<5:42:10,  3.38s/it] 18%|█▊        | 1361/7431 [1:19:43<5:36:56,  3.33s/it] 18%|█▊        | 1362/7431 [1:19:46<5:32:30,  3.29s/it] 18%|█▊        | 1363/7431 [1:19:50<5:33:24,  3.30s/it] 18%|█▊        | 1364/7431 [1:19:53<5:34:36,  3.31s/it] 18%|█▊        | 1365/7431 [1:19:56<5:29:47,  3.26s/it] 18%|█▊        | 1366/7431 [1:19:59<5:33:01,  3.29s/it] 18%|█▊        | 1367/7431 [1:20:03<5:35:55,  3.32s/it] 18%|█▊        | 1368/7431 [1:20:06<5:33:02,  3.30s/it] 18%|█▊        | 1369/7431 [1:20:09<5:33:15,  3.30s/it] 18%|█▊        | 1370/7431 [1:20:13<5:41:42,  3.38s/it] 18%|█▊        | 1371/7431 [1:20:16<5:37:10,  3.34s/it] 18%|█▊        | 1372/7431 [1:20:19<5:32:16,  3.29s/it] 18%|█▊        | 1373/7431 [1:20:22<5:27:39,  3.25s/it] 18%|█▊        | 1374/7431 [1:20:26<5:30:26,  3.27s/it] 19%|█▊        | 1375/7431 [1:20:29<5:29:06,  3.26s/it] 19%|█▊        | 1376/7431 [1:20:32<5:32:44,  3.30s/it] 19%|█▊        | 1377/7431 [1:20:36<5:31:47,  3.29s/it] 19%|█▊        | 1378/7431 [1:20:39<5:29:04,  3.26s/it] 19%|█▊        | 1379/7431 [1:20:42<5:27:27,  3.25s/it] 19%|█▊        | 1380/7431 [1:20:45<5:27:50,  3.25s/it] 19%|█▊        | 1381/7431 [1:20:49<5:29:22,  3.27s/it] 19%|█▊        | 1382/7431 [1:20:52<5:26:50,  3.24s/it] 19%|█▊        | 1383/7431 [1:20:55<5:27:59,  3.25s/it] 19%|█▊        | 1384/7431 [1:20:58<5:29:00,  3.26s/it] 19%|█▊        | 1385/7431 [1:21:02<5:38:19,  3.36s/it] 19%|█▊        | 1386/7431 [1:21:05<5:31:58,  3.29s/it] 19%|█▊        | 1387/7431 [1:21:08<5:32:28,  3.30s/it] 19%|█▊        | 1388/7431 [1:21:12<5:33:55,  3.32s/it] 19%|█▊        | 1389/7431 [1:21:15<5:28:44,  3.26s/it] 19%|█▊        | 1390/7431 [1:21:18<5:29:27,  3.27s/it] 19%|█▊        | 1391/7431 [1:21:22<5:36:58,  3.35s/it] 19%|█▊        | 1392/7431 [1:21:25<5:32:38,  3.30s/it] 19%|█▊        | 1393/7431 [1:21:28<5:27:52,  3.26s/it] 19%|█▉        | 1394/7431 [1:21:31<5:26:18,  3.24s/it] 19%|█▉        | 1395/7431 [1:21:35<5:30:58,  3.29s/it] 19%|█▉        | 1396/7431 [1:21:38<5:28:03,  3.26s/it] 19%|█▉        | 1397/7431 [1:21:41<5:29:03,  3.27s/it] 19%|█▉        | 1398/7431 [1:21:44<5:24:51,  3.23s/it] 19%|█▉        | 1399/7431 [1:21:47<5:22:28,  3.21s/it]08/31/2024 19:49:09 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.130462646484375, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.050166673958301544, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.855569362640381, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 5.036198616027832}
 19%|█▉        | 1400/7431 [1:21:51<5:25:38,  3.24s/it] 19%|█▉        | 1401/7431 [1:21:54<5:32:05,  3.30s/it] 19%|█▉        | 1402/7431 [1:21:58<5:37:12,  3.36s/it] 19%|█▉        | 1403/7431 [1:22:01<5:39:04,  3.37s/it] 19%|█▉        | 1404/7431 [1:22:04<5:32:49,  3.31s/it] 19%|█▉        | 1405/7431 [1:22:08<5:35:05,  3.34s/it] 19%|█▉        | 1406/7431 [1:22:11<5:31:20,  3.30s/it] 19%|█▉        | 1407/7431 [1:22:14<5:28:19,  3.27s/it] 19%|█▉        | 1408/7431 [1:22:17<5:29:21,  3.28s/it] 19%|█▉        | 1409/7431 [1:22:21<5:37:30,  3.36s/it] 19%|█▉        | 1410/7431 [1:22:24<5:34:54,  3.34s/it] 19%|█▉        | 1411/7431 [1:22:27<5:26:40,  3.26s/it] 19%|█▉        | 1412/7431 [1:22:31<5:27:50,  3.27s/it] 19%|█▉        | 1413/7431 [1:22:34<5:26:25,  3.25s/it] 19%|█▉        | 1414/7431 [1:22:37<5:28:16,  3.27s/it] 19%|█▉        | 1415/7431 [1:22:40<5:29:49,  3.29s/it] 19%|█▉        | 1416/7431 [1:22:44<5:29:28,  3.29s/it] 19%|█▉        | 1417/7431 [1:22:47<5:24:52,  3.24s/it] 19%|█▉        | 1418/7431 [1:22:50<5:24:26,  3.24s/it] 19%|█▉        | 1419/7431 [1:22:53<5:21:01,  3.20s/it] 19%|█▉        | 1420/7431 [1:22:57<5:26:37,  3.26s/it] 19%|█▉        | 1421/7431 [1:23:00<5:25:12,  3.25s/it] 19%|█▉        | 1422/7431 [1:23:03<5:25:29,  3.25s/it] 19%|█▉        | 1423/7431 [1:23:06<5:26:42,  3.26s/it] 19%|█▉        | 1424/7431 [1:23:10<5:33:21,  3.33s/it] 19%|█▉        | 1425/7431 [1:23:13<5:36:46,  3.36s/it] 19%|█▉        | 1426/7431 [1:23:17<5:39:05,  3.39s/it] 19%|█▉        | 1427/7431 [1:23:20<5:36:19,  3.36s/it] 19%|█▉        | 1428/7431 [1:23:23<5:30:11,  3.30s/it] 19%|█▉        | 1429/7431 [1:23:26<5:23:23,  3.23s/it] 19%|█▉        | 1430/7431 [1:23:30<5:25:54,  3.26s/it] 19%|█▉        | 1431/7431 [1:23:33<5:29:46,  3.30s/it] 19%|█▉        | 1432/7431 [1:23:36<5:30:16,  3.30s/it] 19%|█▉        | 1433/7431 [1:23:40<5:29:47,  3.30s/it] 19%|█▉        | 1434/7431 [1:23:43<5:28:44,  3.29s/it] 19%|█▉        | 1435/7431 [1:23:46<5:28:39,  3.29s/it] 19%|█▉        | 1436/7431 [1:23:50<5:35:36,  3.36s/it] 19%|█▉        | 1437/7431 [1:23:53<5:28:46,  3.29s/it] 19%|█▉        | 1438/7431 [1:23:56<5:24:29,  3.25s/it] 19%|█▉        | 1439/7431 [1:23:59<5:22:15,  3.23s/it] 19%|█▉        | 1440/7431 [1:24:02<5:23:05,  3.24s/it] 19%|█▉        | 1441/7431 [1:24:06<5:23:35,  3.24s/it] 19%|█▉        | 1442/7431 [1:24:09<5:24:45,  3.25s/it] 19%|█▉        | 1443/7431 [1:24:12<5:22:03,  3.23s/it] 19%|█▉        | 1444/7431 [1:24:16<5:36:06,  3.37s/it] 19%|█▉        | 1445/7431 [1:24:19<5:32:58,  3.34s/it] 19%|█▉        | 1446/7431 [1:24:22<5:29:56,  3.31s/it] 19%|█▉        | 1447/7431 [1:24:26<5:29:34,  3.30s/it] 19%|█▉        | 1448/7431 [1:24:29<5:32:06,  3.33s/it] 19%|█▉        | 1449/7431 [1:24:32<5:35:28,  3.36s/it]08/31/2024 19:51:54 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.6421363353729248, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.0394066646695137, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6579198837280273, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.339462757110596}
 20%|█▉        | 1450/7431 [1:24:36<5:34:12,  3.35s/it] 20%|█▉        | 1451/7431 [1:24:39<5:33:08,  3.34s/it] 20%|█▉        | 1452/7431 [1:24:42<5:27:45,  3.29s/it] 20%|█▉        | 1453/7431 [1:24:46<5:26:29,  3.28s/it] 20%|█▉        | 1454/7431 [1:24:49<5:23:13,  3.24s/it] 20%|█▉        | 1455/7431 [1:24:52<5:29:03,  3.30s/it] 20%|█▉        | 1456/7431 [1:24:56<5:32:14,  3.34s/it] 20%|█▉        | 1457/7431 [1:24:59<5:35:08,  3.37s/it] 20%|█▉        | 1458/7431 [1:25:02<5:27:42,  3.29s/it] 20%|█▉        | 1459/7431 [1:25:05<5:29:09,  3.31s/it] 20%|█▉        | 1460/7431 [1:25:09<5:28:25,  3.30s/it] 20%|█▉        | 1461/7431 [1:25:12<5:26:17,  3.28s/it] 20%|█▉        | 1462/7431 [1:25:15<5:23:12,  3.25s/it] 20%|█▉        | 1463/7431 [1:25:18<5:24:31,  3.26s/it] 20%|█▉        | 1464/7431 [1:25:22<5:24:12,  3.26s/it] 20%|█▉        | 1465/7431 [1:25:25<5:18:38,  3.20s/it] 20%|█▉        | 1466/7431 [1:25:28<5:22:48,  3.25s/it] 20%|█▉        | 1467/7431 [1:25:31<5:23:38,  3.26s/it] 20%|█▉        | 1468/7431 [1:25:35<5:24:52,  3.27s/it] 20%|█▉        | 1469/7431 [1:25:38<5:25:39,  3.28s/it] 20%|█▉        | 1470/7431 [1:25:41<5:22:47,  3.25s/it] 20%|█▉        | 1471/7431 [1:25:44<5:24:09,  3.26s/it] 20%|█▉        | 1472/7431 [1:25:48<5:28:54,  3.31s/it] 20%|█▉        | 1473/7431 [1:25:51<5:26:19,  3.29s/it] 20%|█▉        | 1474/7431 [1:25:54<5:25:50,  3.28s/it] 20%|█▉        | 1475/7431 [1:25:58<5:26:24,  3.29s/it] 20%|█▉        | 1476/7431 [1:26:01<5:23:07,  3.26s/it] 20%|█▉        | 1477/7431 [1:26:04<5:23:20,  3.26s/it] 20%|█▉        | 1478/7431 [1:26:07<5:24:20,  3.27s/it] 20%|█▉        | 1479/7431 [1:26:11<5:26:01,  3.29s/it] 20%|█▉        | 1480/7431 [1:26:14<5:28:57,  3.32s/it] 20%|█▉        | 1481/7431 [1:26:17<5:25:57,  3.29s/it] 20%|█▉        | 1482/7431 [1:26:21<5:31:45,  3.35s/it] 20%|█▉        | 1483/7431 [1:26:24<5:33:08,  3.36s/it] 20%|█▉        | 1484/7431 [1:26:27<5:29:13,  3.32s/it] 20%|█▉        | 1485/7431 [1:26:31<5:24:29,  3.27s/it] 20%|█▉        | 1486/7431 [1:26:34<5:27:10,  3.30s/it] 20%|██        | 1487/7431 [1:26:37<5:25:01,  3.28s/it] 20%|██        | 1488/7431 [1:26:40<5:21:07,  3.24s/it] 20%|██        | 1489/7431 [1:26:44<5:22:42,  3.26s/it] 20%|██        | 1490/7431 [1:26:47<5:19:43,  3.23s/it] 20%|██        | 1491/7431 [1:26:50<5:21:36,  3.25s/it] 20%|██        | 1492/7431 [1:26:53<5:22:54,  3.26s/it] 20%|██        | 1493/7431 [1:26:57<5:21:09,  3.25s/it] 20%|██        | 1494/7431 [1:27:00<5:26:46,  3.30s/it] 20%|██        | 1495/7431 [1:27:03<5:22:45,  3.26s/it] 20%|██        | 1496/7431 [1:27:07<5:28:07,  3.32s/it] 20%|██        | 1497/7431 [1:27:10<5:25:16,  3.29s/it] 20%|██        | 1498/7431 [1:27:13<5:28:01,  3.32s/it] 20%|██        | 1499/7431 [1:27:16<5:21:51,  3.26s/it]08/31/2024 19:54:37 - INFO - __main__ -   evaluate on ret%tv--msrvtt_ret task
08/31/2024 19:54:37 - INFO - __main__ -   start running ret%tv validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  1%|          | 2/221 [00:00<00:48,  4.50it/s][A
  1%|▏         | 3/221 [00:00<00:44,  4.94it/s][A
  2%|▏         | 4/221 [00:00<00:38,  5.62it/s][A
  3%|▎         | 6/221 [00:00<00:28,  7.52it/s][A
  3%|▎         | 7/221 [00:01<00:33,  6.36it/s][A
  4%|▎         | 8/221 [00:01<00:33,  6.34it/s][A
  4%|▍         | 9/221 [00:01<00:32,  6.58it/s][A
  5%|▍         | 10/221 [00:01<00:49,  4.26it/s][A
  5%|▍         | 11/221 [00:02<00:47,  4.38it/s][A
  5%|▌         | 12/221 [00:02<00:48,  4.27it/s][A
  6%|▌         | 13/221 [00:02<00:48,  4.28it/s][A
  6%|▋         | 14/221 [00:02<00:49,  4.15it/s][A
  7%|▋         | 15/221 [00:03<00:47,  4.32it/s][A
  7%|▋         | 16/221 [00:03<00:59,  3.42it/s][A
  8%|▊         | 17/221 [00:03<01:08,  2.99it/s][A
  8%|▊         | 18/221 [00:04<00:54,  3.73it/s][A
  9%|▊         | 19/221 [00:04<00:52,  3.88it/s][A
  9%|▉         | 20/221 [00:04<00:45,  4.38it/s][A
 10%|▉         | 21/221 [00:04<00:46,  4.26it/s][A
 10%|▉         | 22/221 [00:04<00:51,  3.85it/s][A
 11%|█         | 24/221 [00:05<00:40,  4.89it/s][A
 11%|█▏        | 25/221 [00:05<00:42,  4.57it/s][A
 12%|█▏        | 26/221 [00:05<00:44,  4.34it/s][A
 12%|█▏        | 27/221 [00:06<00:45,  4.31it/s][A
 13%|█▎        | 28/221 [00:06<00:52,  3.71it/s][A
 13%|█▎        | 29/221 [00:06<00:53,  3.57it/s][A
 14%|█▎        | 30/221 [00:07<00:53,  3.54it/s][A
 14%|█▍        | 31/221 [00:07<00:51,  3.67it/s][A
 14%|█▍        | 32/221 [00:07<00:46,  4.06it/s][A
 15%|█▍        | 33/221 [00:07<00:43,  4.36it/s][A
 15%|█▌        | 34/221 [00:07<00:44,  4.21it/s][A
 16%|█▌        | 35/221 [00:08<00:54,  3.41it/s][A
 16%|█▋        | 36/221 [00:08<00:58,  3.14it/s][A
 17%|█▋        | 37/221 [00:08<00:53,  3.43it/s][A
 17%|█▋        | 38/221 [00:09<00:52,  3.52it/s][A
 18%|█▊        | 39/221 [00:09<00:51,  3.53it/s][A
 18%|█▊        | 40/221 [00:09<00:59,  3.06it/s][A
 19%|█▊        | 41/221 [00:10<01:00,  2.95it/s][A
 19%|█▉        | 43/221 [00:10<00:42,  4.19it/s][A
 20%|█▉        | 44/221 [00:10<00:40,  4.36it/s][A
 20%|██        | 45/221 [00:11<00:49,  3.57it/s][A
 21%|██        | 46/221 [00:11<00:49,  3.51it/s][A
 21%|██▏       | 47/221 [00:11<00:44,  3.90it/s][A
 22%|██▏       | 48/221 [00:11<00:39,  4.43it/s][A
 22%|██▏       | 49/221 [00:12<00:46,  3.67it/s][A
 23%|██▎       | 50/221 [00:12<00:49,  3.43it/s][A
 23%|██▎       | 51/221 [00:12<00:46,  3.65it/s][A
 24%|██▎       | 52/221 [00:12<00:44,  3.80it/s][A
 24%|██▍       | 53/221 [00:13<00:41,  4.07it/s][A
 24%|██▍       | 54/221 [00:13<00:53,  3.11it/s][A
 25%|██▍       | 55/221 [00:13<00:52,  3.14it/s][A
 25%|██▌       | 56/221 [00:14<00:47,  3.50it/s][A
 26%|██▌       | 57/221 [00:14<00:42,  3.90it/s][A
 26%|██▌       | 58/221 [00:14<00:36,  4.53it/s][A
 27%|██▋       | 59/221 [00:14<00:35,  4.51it/s][A
 27%|██▋       | 60/221 [00:14<00:35,  4.50it/s][A
 28%|██▊       | 61/221 [00:15<00:36,  4.42it/s][A
 28%|██▊       | 62/221 [00:15<00:37,  4.25it/s][A
 29%|██▊       | 63/221 [00:15<00:45,  3.46it/s][A
 29%|██▉       | 64/221 [00:16<00:51,  3.03it/s][A
 29%|██▉       | 65/221 [00:16<00:47,  3.27it/s][A
 30%|██▉       | 66/221 [00:17<00:55,  2.78it/s][A
 30%|███       | 67/221 [00:17<00:53,  2.87it/s][A
 31%|███       | 68/221 [00:17<00:43,  3.55it/s][A
 31%|███       | 69/221 [00:18<01:04,  2.37it/s][A
 32%|███▏      | 70/221 [00:18<00:55,  2.73it/s][A
 32%|███▏      | 71/221 [00:18<00:48,  3.07it/s][A
 33%|███▎      | 72/221 [00:19<00:51,  2.92it/s][A
 33%|███▎      | 73/221 [00:19<00:46,  3.15it/s][A
 33%|███▎      | 74/221 [00:19<00:43,  3.34it/s][A
 34%|███▍      | 75/221 [00:19<00:43,  3.36it/s][A
 34%|███▍      | 76/221 [00:20<00:41,  3.54it/s][A
 35%|███▍      | 77/221 [00:20<00:47,  3.01it/s][A
 35%|███▌      | 78/221 [00:20<00:44,  3.24it/s][A
 36%|███▌      | 79/221 [00:21<00:48,  2.93it/s][A
 36%|███▌      | 80/221 [00:21<00:39,  3.57it/s][A
 37%|███▋      | 81/221 [00:21<00:36,  3.88it/s][A
 37%|███▋      | 82/221 [00:21<00:38,  3.65it/s][A
 38%|███▊      | 83/221 [00:22<00:44,  3.09it/s][A
 38%|███▊      | 84/221 [00:22<00:38,  3.58it/s][A
 38%|███▊      | 85/221 [00:22<00:31,  4.35it/s][A
 39%|███▉      | 86/221 [00:22<00:31,  4.22it/s][A
 39%|███▉      | 87/221 [00:23<00:38,  3.52it/s][A
 40%|███▉      | 88/221 [00:23<00:36,  3.65it/s][A
 40%|████      | 89/221 [00:23<00:34,  3.79it/s][A
 41%|████      | 90/221 [00:23<00:32,  4.00it/s][A
 41%|████      | 91/221 [00:24<00:27,  4.73it/s][A
 42%|████▏     | 92/221 [00:24<00:30,  4.19it/s][A
 42%|████▏     | 93/221 [00:24<00:34,  3.72it/s][A
 43%|████▎     | 94/221 [00:25<00:34,  3.64it/s][A
 43%|████▎     | 95/221 [00:25<00:34,  3.70it/s][A
 43%|████▎     | 96/221 [00:25<00:47,  2.66it/s][A
 44%|████▍     | 97/221 [00:26<00:42,  2.94it/s][A
 44%|████▍     | 98/221 [00:26<00:51,  2.38it/s][A
 45%|████▍     | 99/221 [00:27<00:46,  2.62it/s][A
 45%|████▌     | 100/221 [00:27<00:41,  2.95it/s][A
 46%|████▌     | 101/221 [00:27<00:40,  3.00it/s][A
 46%|████▌     | 102/221 [00:28<00:41,  2.86it/s][A
 47%|████▋     | 103/221 [00:28<00:34,  3.42it/s][A
 47%|████▋     | 104/221 [00:28<00:34,  3.41it/s][A
 48%|████▊     | 105/221 [00:28<00:38,  2.99it/s][A
 48%|████▊     | 106/221 [00:29<00:37,  3.04it/s][A
 48%|████▊     | 107/221 [00:29<00:36,  3.15it/s][A
 49%|████▉     | 108/221 [00:29<00:32,  3.46it/s][A
 49%|████▉     | 109/221 [00:29<00:29,  3.76it/s][A
 50%|████▉     | 110/221 [00:30<00:35,  3.09it/s][A
 50%|█████     | 111/221 [00:30<00:32,  3.36it/s][A
 51%|█████     | 112/221 [00:30<00:33,  3.24it/s][A
 51%|█████     | 113/221 [00:31<00:29,  3.66it/s][A
 52%|█████▏    | 114/221 [00:31<00:24,  4.30it/s][A
 52%|█████▏    | 115/221 [00:31<00:28,  3.68it/s][A
 52%|█████▏    | 116/221 [00:31<00:26,  3.97it/s][A
 53%|█████▎    | 117/221 [00:32<00:26,  3.90it/s][A
 53%|█████▎    | 118/221 [00:32<00:26,  3.92it/s][A
 54%|█████▍    | 119/221 [00:32<00:27,  3.65it/s][A
 54%|█████▍    | 120/221 [00:32<00:27,  3.70it/s][A
 55%|█████▍    | 121/221 [00:33<00:22,  4.43it/s][A
 55%|█████▌    | 122/221 [00:33<00:22,  4.45it/s][A
 56%|█████▌    | 123/221 [00:33<00:21,  4.65it/s][A
 56%|█████▌    | 124/221 [00:33<00:27,  3.51it/s][A
 57%|█████▋    | 125/221 [00:34<00:28,  3.39it/s][A
 57%|█████▋    | 126/221 [00:34<00:22,  4.16it/s][A
 57%|█████▋    | 127/221 [00:34<00:25,  3.66it/s][A
 58%|█████▊    | 128/221 [00:35<00:25,  3.63it/s][A
 58%|█████▊    | 129/221 [00:35<00:21,  4.37it/s][A
 59%|█████▉    | 130/221 [00:35<00:23,  3.80it/s][A
 59%|█████▉    | 131/221 [00:35<00:20,  4.33it/s][A
 60%|█████▉    | 132/221 [00:36<00:38,  2.30it/s][A
 60%|██████    | 133/221 [00:36<00:34,  2.55it/s][A
 61%|██████    | 134/221 [00:37<00:35,  2.42it/s][A
 61%|██████    | 135/221 [00:37<00:33,  2.54it/s][A
 62%|██████▏   | 136/221 [00:37<00:29,  2.91it/s][A
 62%|██████▏   | 137/221 [00:38<00:24,  3.40it/s][A
 62%|██████▏   | 138/221 [00:38<00:22,  3.69it/s][A
 63%|██████▎   | 139/221 [00:38<00:20,  3.96it/s][A
 63%|██████▎   | 140/221 [00:38<00:21,  3.81it/s][A
 64%|██████▍   | 141/221 [00:38<00:20,  3.90it/s][A
 64%|██████▍   | 142/221 [00:39<00:20,  3.94it/s][A
 65%|██████▍   | 143/221 [00:39<00:23,  3.38it/s][A
 65%|██████▌   | 144/221 [00:40<00:25,  3.01it/s][A
 66%|██████▌   | 145/221 [00:40<00:22,  3.35it/s][A
 67%|██████▋   | 147/221 [00:40<00:17,  4.19it/s][A
 67%|██████▋   | 148/221 [00:40<00:19,  3.79it/s][A
 67%|██████▋   | 149/221 [00:41<00:21,  3.38it/s][A
 68%|██████▊   | 150/221 [00:41<00:19,  3.69it/s][A
 68%|██████▊   | 151/221 [00:41<00:20,  3.41it/s][A
 69%|██████▉   | 152/221 [00:42<00:23,  2.96it/s][A
 69%|██████▉   | 153/221 [00:42<00:19,  3.46it/s][A
 70%|██████▉   | 154/221 [00:42<00:17,  3.88it/s][A
 70%|███████   | 155/221 [00:43<00:18,  3.48it/s][A
 71%|███████   | 156/221 [00:43<00:19,  3.38it/s][A
 71%|███████   | 157/221 [00:43<00:17,  3.62it/s][A
 71%|███████▏  | 158/221 [00:43<00:19,  3.22it/s][A
 72%|███████▏  | 159/221 [00:44<00:16,  3.77it/s][A
 72%|███████▏  | 160/221 [00:44<00:13,  4.61it/s][A
 73%|███████▎  | 161/221 [00:44<00:15,  3.89it/s][A
 73%|███████▎  | 162/221 [00:44<00:13,  4.52it/s][A
 74%|███████▍  | 163/221 [00:45<00:14,  3.90it/s][A
 74%|███████▍  | 164/221 [00:45<00:12,  4.53it/s][A
 75%|███████▍  | 165/221 [00:45<00:12,  4.49it/s][A
 75%|███████▌  | 166/221 [00:45<00:12,  4.38it/s][A
 76%|███████▌  | 167/221 [00:46<00:13,  3.87it/s][A
 76%|███████▌  | 168/221 [00:46<00:12,  4.34it/s][A
 76%|███████▋  | 169/221 [00:46<00:11,  4.45it/s][A
 77%|███████▋  | 170/221 [00:46<00:12,  4.03it/s][A
 77%|███████▋  | 171/221 [00:47<00:13,  3.78it/s][A
 78%|███████▊  | 172/221 [00:47<00:13,  3.72it/s][A
 78%|███████▊  | 173/221 [00:47<00:13,  3.65it/s][A
 79%|███████▊  | 174/221 [00:47<00:12,  3.63it/s][A
 79%|███████▉  | 175/221 [00:48<00:13,  3.37it/s][A
 80%|███████▉  | 176/221 [00:48<00:11,  4.06it/s][A
 80%|████████  | 177/221 [00:48<00:09,  4.71it/s][A
 81%|████████  | 178/221 [00:48<00:10,  4.25it/s][A
 81%|████████  | 179/221 [00:48<00:09,  4.56it/s][A
 81%|████████▏ | 180/221 [00:49<00:08,  4.86it/s][A
 82%|████████▏ | 182/221 [00:49<00:09,  4.32it/s][A
 83%|████████▎ | 183/221 [00:50<00:10,  3.56it/s][A
 83%|████████▎ | 184/221 [00:50<00:10,  3.61it/s][A
 84%|████████▎ | 185/221 [00:50<00:09,  3.65it/s][A
 84%|████████▍ | 186/221 [00:51<00:11,  3.14it/s][A
 85%|████████▍ | 187/221 [00:51<00:11,  2.97it/s][A
 85%|████████▌ | 188/221 [00:51<00:10,  3.18it/s][A
 86%|████████▌ | 189/221 [00:51<00:08,  3.60it/s][A
 86%|████████▌ | 190/221 [00:52<00:09,  3.40it/s][A
 86%|████████▋ | 191/221 [00:52<00:07,  3.94it/s][A
 87%|████████▋ | 192/221 [00:52<00:07,  4.04it/s][A
 87%|████████▋ | 193/221 [00:52<00:07,  3.83it/s][A
 88%|████████▊ | 194/221 [00:53<00:07,  3.85it/s][A
 88%|████████▊ | 195/221 [00:53<00:06,  3.82it/s][A
 89%|████████▊ | 196/221 [00:53<00:06,  3.58it/s][A
 89%|████████▉ | 197/221 [00:54<00:07,  3.40it/s][A
 90%|████████▉ | 198/221 [00:54<00:07,  3.17it/s][A
 90%|█████████ | 199/221 [00:54<00:06,  3.33it/s][A
 90%|█████████ | 200/221 [00:54<00:06,  3.34it/s][A
 91%|█████████ | 201/221 [00:55<00:06,  3.30it/s][A
 91%|█████████▏| 202/221 [00:55<00:06,  2.99it/s][A
 92%|█████████▏| 203/221 [00:56<00:05,  3.03it/s][A
 92%|█████████▏| 204/221 [00:56<00:05,  3.12it/s][A
 93%|█████████▎| 205/221 [00:56<00:04,  3.67it/s][A
 93%|█████████▎| 206/221 [00:56<00:04,  3.38it/s][A
 94%|█████████▎| 207/221 [00:57<00:03,  3.69it/s][A
 94%|█████████▍| 208/221 [00:57<00:03,  3.41it/s][A
 95%|█████████▍| 209/221 [00:57<00:03,  3.74it/s][A
 95%|█████████▌| 210/221 [00:57<00:02,  4.21it/s][A
 95%|█████████▌| 211/221 [00:58<00:02,  3.82it/s][A
 96%|█████████▌| 212/221 [00:58<00:02,  3.67it/s][A
 96%|█████████▋| 213/221 [00:58<00:01,  4.45it/s][A
 97%|█████████▋| 214/221 [00:58<00:01,  3.91it/s][A
 97%|█████████▋| 215/221 [00:58<00:01,  4.30it/s][A
 98%|█████████▊| 216/221 [00:59<00:01,  4.14it/s][A
 98%|█████████▊| 217/221 [00:59<00:01,  3.71it/s][A
 99%|█████████▊| 218/221 [00:59<00:00,  3.92it/s][A
 99%|█████████▉| 219/221 [01:00<00:00,  3.95it/s][A
100%|█████████▉| 220/221 [01:00<00:00,  4.46it/s][A
100%|██████████| 221/221 [01:00<00:00,  4.29it/s][A100%|██████████| 221/221 [01:00<00:00,  3.66it/s]
08/31/2024 19:56:59 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forward=====step 1499--===========

08/31/2024 19:56:59 - INFO - __main__ -   {'area_r1': 13.8, 'area_recall': '13.8/29.4/38.2', 'area_ravg': 27.1}
08/31/2024 19:56:59 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_backard=====step 1499--===========

08/31/2024 19:56:59 - INFO - __main__ -   {'forward_r1': 47.4, 'forward_recall': '47.4/75.2/83.9', 'forward_ravg': 68.9}
08/31/2024 19:56:59 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forw_with_video=====step 1499--===========

08/31/2024 19:56:59 - INFO - __main__ -   {'forward_r1': 61.9, 'forward_recall': '61.9/85.7/90.6', 'forward_ravg': 79.4}
08/31/2024 19:56:59 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itc_tv=====step 1499--===========

08/31/2024 19:56:59 - INFO - __main__ -   {'video_r1': 45.8, 'video_recall': '45.8/74.7/83.8', 'video_ravg': 68.1}
08/31/2024 19:56:59 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itc_tv====history best step: 999=======

08/31/2024 19:56:59 - INFO - __main__ -   {'video_r1': 46.0, 'video_recall': '46.0/74.9/83.0', 'video_ravg': 68.0}
08/31/2024 19:56:59 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itm_tv=====step 1499--===========

08/31/2024 19:56:59 - INFO - __main__ -   {'video_r1': 55.2, 'video_recall': '55.2/78.6/85.7', 'video_ravg': 73.2}
08/31/2024 19:56:59 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itm_tv====history best step: 999=======

08/31/2024 19:56:59 - INFO - __main__ -   {'video_r1': 56.9, 'video_recall': '56.9/78.3/85.3', 'video_ravg': 73.5}
08/31/2024 19:57:24 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.1979689598083496, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.05309861898422241, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.8930892944335938, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 5.1441569328308105}
 20%|██        | 1500/7431 [1:30:05<87:05:49, 52.87s/it] 20%|██        | 1501/7431 [1:30:08<62:29:39, 37.94s/it] 20%|██        | 1502/7431 [1:30:11<45:19:10, 27.52s/it] 20%|██        | 1503/7431 [1:30:15<33:24:59, 20.29s/it] 20%|██        | 1504/7431 [1:30:18<24:58:18, 15.17s/it] 20%|██        | 1505/7431 [1:30:21<19:02:51, 11.57s/it] 20%|██        | 1506/7431 [1:30:25<15:00:31,  9.12s/it] 20%|██        | 1507/7431 [1:30:28<12:04:18,  7.34s/it] 20%|██        | 1508/7431 [1:30:31<10:07:31,  6.15s/it] 20%|██        | 1509/7431 [1:30:34<8:37:09,  5.24s/it]  20%|██        | 1510/7431 [1:30:38<7:39:32,  4.66s/it] 20%|██        | 1511/7431 [1:30:41<7:07:23,  4.33s/it] 20%|██        | 1512/7431 [1:30:44<6:32:49,  3.98s/it] 20%|██        | 1513/7431 [1:30:48<6:11:58,  3.77s/it] 20%|██        | 1514/7431 [1:30:51<5:54:56,  3.60s/it] 20%|██        | 1515/7431 [1:30:54<5:46:13,  3.51s/it] 20%|██        | 1516/7431 [1:30:57<5:41:28,  3.46s/it] 20%|██        | 1517/7431 [1:31:01<5:32:00,  3.37s/it] 20%|██        | 1518/7431 [1:31:04<5:31:55,  3.37s/it] 20%|██        | 1519/7431 [1:31:07<5:29:29,  3.34s/it] 20%|██        | 1520/7431 [1:31:11<5:29:10,  3.34s/it] 20%|██        | 1521/7431 [1:31:14<5:33:41,  3.39s/it] 20%|██        | 1522/7431 [1:31:17<5:31:52,  3.37s/it] 20%|██        | 1523/7431 [1:31:21<5:25:33,  3.31s/it] 21%|██        | 1524/7431 [1:31:24<5:24:15,  3.29s/it] 21%|██        | 1525/7431 [1:31:27<5:29:02,  3.34s/it] 21%|██        | 1526/7431 [1:31:30<5:23:14,  3.28s/it] 21%|██        | 1527/7431 [1:31:34<5:22:13,  3.27s/it] 21%|██        | 1528/7431 [1:31:37<5:24:38,  3.30s/it] 21%|██        | 1529/7431 [1:31:40<5:28:45,  3.34s/it] 21%|██        | 1530/7431 [1:31:44<5:34:50,  3.40s/it] 21%|██        | 1531/7431 [1:31:47<5:26:42,  3.32s/it] 21%|██        | 1532/7431 [1:31:51<5:29:25,  3.35s/it] 21%|██        | 1533/7431 [1:31:54<5:25:31,  3.31s/it] 21%|██        | 1534/7431 [1:31:57<5:26:31,  3.32s/it] 21%|██        | 1535/7431 [1:32:00<5:21:57,  3.28s/it] 21%|██        | 1536/7431 [1:32:04<5:27:42,  3.34s/it] 21%|██        | 1537/7431 [1:32:07<5:23:32,  3.29s/it] 21%|██        | 1538/7431 [1:32:10<5:22:21,  3.28s/it] 21%|██        | 1539/7431 [1:32:14<5:23:31,  3.29s/it] 21%|██        | 1540/7431 [1:32:17<5:29:40,  3.36s/it] 21%|██        | 1541/7431 [1:32:20<5:23:58,  3.30s/it] 21%|██        | 1542/7431 [1:32:24<5:25:12,  3.31s/it] 21%|██        | 1543/7431 [1:32:27<5:21:11,  3.27s/it] 21%|██        | 1544/7431 [1:32:30<5:17:39,  3.24s/it] 21%|██        | 1545/7431 [1:32:33<5:15:42,  3.22s/it] 21%|██        | 1546/7431 [1:32:36<5:19:09,  3.25s/it] 21%|██        | 1547/7431 [1:32:40<5:23:13,  3.30s/it] 21%|██        | 1548/7431 [1:32:43<5:24:33,  3.31s/it] 21%|██        | 1549/7431 [1:32:46<5:20:35,  3.27s/it]08/31/2024 20:00:08 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.6932483911514282, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.038477446883916855, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7015390396118164, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.43326473236084}
 21%|██        | 1550/7431 [1:32:49<5:17:10,  3.24s/it] 21%|██        | 1551/7431 [1:32:53<5:18:06,  3.25s/it] 21%|██        | 1552/7431 [1:32:56<5:20:23,  3.27s/it] 21%|██        | 1553/7431 [1:32:59<5:21:39,  3.28s/it] 21%|██        | 1554/7431 [1:33:03<5:25:14,  3.32s/it] 21%|██        | 1555/7431 [1:33:06<5:26:17,  3.33s/it] 21%|██        | 1556/7431 [1:33:09<5:18:02,  3.25s/it] 21%|██        | 1557/7431 [1:33:12<5:17:28,  3.24s/it] 21%|██        | 1558/7431 [1:33:16<5:26:48,  3.34s/it] 21%|██        | 1559/7431 [1:33:19<5:22:01,  3.29s/it] 21%|██        | 1560/7431 [1:33:23<5:24:05,  3.31s/it] 21%|██        | 1561/7431 [1:33:26<5:25:01,  3.32s/it] 21%|██        | 1562/7431 [1:33:29<5:22:20,  3.30s/it] 21%|██        | 1563/7431 [1:33:32<5:20:53,  3.28s/it] 21%|██        | 1564/7431 [1:33:36<5:17:48,  3.25s/it] 21%|██        | 1565/7431 [1:33:39<5:16:33,  3.24s/it] 21%|██        | 1566/7431 [1:33:42<5:18:35,  3.26s/it] 21%|██        | 1567/7431 [1:33:45<5:18:20,  3.26s/it] 21%|██        | 1568/7431 [1:33:48<5:13:21,  3.21s/it] 21%|██        | 1569/7431 [1:33:52<5:13:07,  3.20s/it] 21%|██        | 1570/7431 [1:33:55<5:13:36,  3.21s/it] 21%|██        | 1571/7431 [1:33:58<5:16:45,  3.24s/it] 21%|██        | 1572/7431 [1:34:01<5:17:47,  3.25s/it] 21%|██        | 1573/7431 [1:34:05<5:21:11,  3.29s/it] 21%|██        | 1574/7431 [1:34:08<5:19:51,  3.28s/it] 21%|██        | 1575/7431 [1:34:11<5:25:03,  3.33s/it] 21%|██        | 1576/7431 [1:34:15<5:24:10,  3.32s/it] 21%|██        | 1577/7431 [1:34:18<5:23:16,  3.31s/it] 21%|██        | 1578/7431 [1:34:21<5:18:31,  3.27s/it] 21%|██        | 1579/7431 [1:34:25<5:24:59,  3.33s/it] 21%|██▏       | 1580/7431 [1:34:28<5:21:19,  3.30s/it] 21%|██▏       | 1581/7431 [1:34:31<5:17:51,  3.26s/it] 21%|██▏       | 1582/7431 [1:34:34<5:17:18,  3.26s/it] 21%|██▏       | 1583/7431 [1:34:38<5:17:56,  3.26s/it] 21%|██▏       | 1584/7431 [1:34:41<5:17:34,  3.26s/it] 21%|██▏       | 1585/7431 [1:34:44<5:14:57,  3.23s/it] 21%|██▏       | 1586/7431 [1:34:47<5:15:47,  3.24s/it] 21%|██▏       | 1587/7431 [1:34:51<5:17:31,  3.26s/it] 21%|██▏       | 1588/7431 [1:34:54<5:17:55,  3.26s/it] 21%|██▏       | 1589/7431 [1:34:57<5:17:13,  3.26s/it] 21%|██▏       | 1590/7431 [1:35:01<5:21:51,  3.31s/it] 21%|██▏       | 1591/7431 [1:35:04<5:20:07,  3.29s/it] 21%|██▏       | 1592/7431 [1:35:07<5:17:43,  3.26s/it] 21%|██▏       | 1593/7431 [1:35:10<5:21:06,  3.30s/it] 21%|██▏       | 1594/7431 [1:35:14<5:16:54,  3.26s/it] 21%|██▏       | 1595/7431 [1:35:17<5:21:04,  3.30s/it] 21%|██▏       | 1596/7431 [1:35:20<5:22:33,  3.32s/it] 21%|██▏       | 1597/7431 [1:35:24<5:21:24,  3.31s/it] 22%|██▏       | 1598/7431 [1:35:27<5:21:44,  3.31s/it] 22%|██▏       | 1599/7431 [1:35:30<5:16:21,  3.25s/it]08/31/2024 20:02:52 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.781018853187561, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04364272207021713, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7272868156433105, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.551948547363281}
 22%|██▏       | 1600/7431 [1:35:33<5:16:56,  3.26s/it] 22%|██▏       | 1601/7431 [1:35:36<5:13:52,  3.23s/it] 22%|██▏       | 1602/7431 [1:35:40<5:13:45,  3.23s/it] 22%|██▏       | 1603/7431 [1:35:43<5:19:16,  3.29s/it] 22%|██▏       | 1604/7431 [1:35:46<5:14:33,  3.24s/it] 22%|██▏       | 1605/7431 [1:35:50<5:21:28,  3.31s/it] 22%|██▏       | 1606/7431 [1:35:53<5:16:01,  3.26s/it] 22%|██▏       | 1607/7431 [1:35:56<5:21:38,  3.31s/it] 22%|██▏       | 1608/7431 [1:36:00<5:27:15,  3.37s/it] 22%|██▏       | 1609/7431 [1:36:03<5:22:27,  3.32s/it] 22%|██▏       | 1610/7431 [1:36:06<5:20:47,  3.31s/it] 22%|██▏       | 1611/7431 [1:36:10<5:25:21,  3.35s/it] 22%|██▏       | 1612/7431 [1:36:13<5:27:55,  3.38s/it] 22%|██▏       | 1613/7431 [1:36:16<5:23:01,  3.33s/it] 22%|██▏       | 1614/7431 [1:36:20<5:23:05,  3.33s/it] 22%|██▏       | 1615/7431 [1:36:23<5:17:13,  3.27s/it] 22%|██▏       | 1616/7431 [1:36:26<5:20:58,  3.31s/it] 22%|██▏       | 1617/7431 [1:36:30<5:18:53,  3.29s/it] 22%|██▏       | 1618/7431 [1:36:33<5:19:09,  3.29s/it] 22%|██▏       | 1619/7431 [1:36:36<5:19:48,  3.30s/it] 22%|██▏       | 1620/7431 [1:36:39<5:17:28,  3.28s/it] 22%|██▏       | 1621/7431 [1:36:42<5:13:47,  3.24s/it] 22%|██▏       | 1622/7431 [1:36:46<5:13:45,  3.24s/it] 22%|██▏       | 1623/7431 [1:36:49<5:25:09,  3.36s/it] 22%|██▏       | 1624/7431 [1:36:53<5:19:45,  3.30s/it] 22%|██▏       | 1625/7431 [1:36:56<5:23:59,  3.35s/it] 22%|██▏       | 1626/7431 [1:36:59<5:23:45,  3.35s/it] 22%|██▏       | 1627/7431 [1:37:03<5:28:50,  3.40s/it] 22%|██▏       | 1628/7431 [1:37:06<5:21:15,  3.32s/it] 22%|██▏       | 1629/7431 [1:37:09<5:19:03,  3.30s/it] 22%|██▏       | 1630/7431 [1:37:12<5:14:32,  3.25s/it] 22%|██▏       | 1631/7431 [1:37:16<5:12:30,  3.23s/it] 22%|██▏       | 1632/7431 [1:37:19<5:20:33,  3.32s/it] 22%|██▏       | 1633/7431 [1:37:22<5:22:01,  3.33s/it] 22%|██▏       | 1634/7431 [1:37:26<5:23:22,  3.35s/it] 22%|██▏       | 1635/7431 [1:37:29<5:23:00,  3.34s/it] 22%|██▏       | 1636/7431 [1:37:33<5:24:10,  3.36s/it] 22%|██▏       | 1637/7431 [1:37:36<5:23:59,  3.36s/it] 22%|██▏       | 1638/7431 [1:37:39<5:29:20,  3.41s/it] 22%|██▏       | 1639/7431 [1:37:43<5:24:31,  3.36s/it] 22%|██▏       | 1640/7431 [1:37:46<5:20:08,  3.32s/it] 22%|██▏       | 1641/7431 [1:37:49<5:17:32,  3.29s/it] 22%|██▏       | 1642/7431 [1:37:52<5:14:11,  3.26s/it] 22%|██▏       | 1643/7431 [1:37:56<5:13:11,  3.25s/it] 22%|██▏       | 1644/7431 [1:37:59<5:17:54,  3.30s/it] 22%|██▏       | 1645/7431 [1:38:02<5:15:54,  3.28s/it] 22%|██▏       | 1646/7431 [1:38:05<5:12:43,  3.24s/it] 22%|██▏       | 1647/7431 [1:38:09<5:13:55,  3.26s/it] 22%|██▏       | 1648/7431 [1:38:12<5:22:38,  3.35s/it] 22%|██▏       | 1649/7431 [1:38:16<5:21:09,  3.33s/it]08/31/2024 20:05:37 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.689512014389038, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.05475855618715286, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 3.170701742172241, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 5.914972305297852}
 22%|██▏       | 1650/7431 [1:38:19<5:16:01,  3.28s/it] 22%|██▏       | 1651/7431 [1:38:22<5:16:08,  3.28s/it] 22%|██▏       | 1652/7431 [1:38:25<5:12:08,  3.24s/it] 22%|██▏       | 1653/7431 [1:38:28<5:16:14,  3.28s/it] 22%|██▏       | 1654/7431 [1:38:32<5:21:35,  3.34s/it] 22%|██▏       | 1655/7431 [1:38:35<5:19:33,  3.32s/it] 22%|██▏       | 1656/7431 [1:38:38<5:14:07,  3.26s/it] 22%|██▏       | 1657/7431 [1:38:42<5:14:07,  3.26s/it] 22%|██▏       | 1658/7431 [1:38:45<5:16:06,  3.29s/it] 22%|██▏       | 1659/7431 [1:38:48<5:14:37,  3.27s/it] 22%|██▏       | 1660/7431 [1:38:52<5:17:51,  3.30s/it] 22%|██▏       | 1661/7431 [1:38:55<5:14:05,  3.27s/it] 22%|██▏       | 1662/7431 [1:38:58<5:11:52,  3.24s/it] 22%|██▏       | 1663/7431 [1:39:01<5:16:21,  3.29s/it] 22%|██▏       | 1664/7431 [1:39:05<5:17:15,  3.30s/it] 22%|██▏       | 1665/7431 [1:39:08<5:23:19,  3.36s/it] 22%|██▏       | 1666/7431 [1:39:12<5:28:14,  3.42s/it] 22%|██▏       | 1667/7431 [1:39:15<5:24:04,  3.37s/it] 22%|██▏       | 1668/7431 [1:39:18<5:19:17,  3.32s/it] 22%|██▏       | 1669/7431 [1:39:21<5:18:26,  3.32s/it] 22%|██▏       | 1670/7431 [1:39:25<5:17:42,  3.31s/it] 22%|██▏       | 1671/7431 [1:39:28<5:15:53,  3.29s/it] 23%|██▎       | 1672/7431 [1:39:31<5:20:43,  3.34s/it] 23%|██▎       | 1673/7431 [1:39:35<5:20:29,  3.34s/it] 23%|██▎       | 1674/7431 [1:39:38<5:20:10,  3.34s/it] 23%|██▎       | 1675/7431 [1:39:41<5:15:45,  3.29s/it] 23%|██▎       | 1676/7431 [1:39:45<5:12:34,  3.26s/it] 23%|██▎       | 1677/7431 [1:39:48<5:11:53,  3.25s/it] 23%|██▎       | 1678/7431 [1:39:51<5:14:59,  3.29s/it] 23%|██▎       | 1679/7431 [1:39:54<5:16:57,  3.31s/it] 23%|██▎       | 1680/7431 [1:39:58<5:14:57,  3.29s/it] 23%|██▎       | 1681/7431 [1:40:01<5:14:47,  3.28s/it] 23%|██▎       | 1682/7431 [1:40:04<5:16:03,  3.30s/it] 23%|██▎       | 1683/7431 [1:40:08<5:14:08,  3.28s/it] 23%|██▎       | 1684/7431 [1:40:11<5:17:31,  3.32s/it] 23%|██▎       | 1685/7431 [1:40:14<5:18:17,  3.32s/it] 23%|██▎       | 1686/7431 [1:40:17<5:14:16,  3.28s/it] 23%|██▎       | 1687/7431 [1:40:21<5:17:43,  3.32s/it] 23%|██▎       | 1688/7431 [1:40:24<5:17:48,  3.32s/it] 23%|██▎       | 1689/7431 [1:40:27<5:16:20,  3.31s/it] 23%|██▎       | 1690/7431 [1:40:31<5:17:58,  3.32s/it] 23%|██▎       | 1691/7431 [1:40:34<5:12:56,  3.27s/it] 23%|██▎       | 1692/7431 [1:40:37<5:13:50,  3.28s/it] 23%|██▎       | 1693/7431 [1:40:41<5:20:35,  3.35s/it] 23%|██▎       | 1694/7431 [1:40:44<5:17:49,  3.32s/it] 23%|██▎       | 1695/7431 [1:40:47<5:15:28,  3.30s/it] 23%|██▎       | 1696/7431 [1:40:51<5:16:27,  3.31s/it] 23%|██▎       | 1697/7431 [1:40:54<5:16:35,  3.31s/it] 23%|██▎       | 1698/7431 [1:40:57<5:16:54,  3.32s/it] 23%|██▎       | 1699/7431 [1:41:01<5:18:03,  3.33s/it]08/31/2024 20:08:22 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.2017173767089844, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04576814919710159, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.810227155685425, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 5.057712554931641}
 23%|██▎       | 1700/7431 [1:41:04<5:15:36,  3.30s/it] 23%|██▎       | 1701/7431 [1:41:07<5:09:56,  3.25s/it] 23%|██▎       | 1702/7431 [1:41:10<5:08:16,  3.23s/it] 23%|██▎       | 1703/7431 [1:41:13<5:08:02,  3.23s/it] 23%|██▎       | 1704/7431 [1:41:17<5:10:47,  3.26s/it] 23%|██▎       | 1705/7431 [1:41:20<5:12:08,  3.27s/it] 23%|██▎       | 1706/7431 [1:41:23<5:11:01,  3.26s/it] 23%|██▎       | 1707/7431 [1:41:27<5:12:05,  3.27s/it] 23%|██▎       | 1708/7431 [1:41:30<5:11:54,  3.27s/it] 23%|██▎       | 1709/7431 [1:41:33<5:16:29,  3.32s/it] 23%|██▎       | 1710/7431 [1:41:37<5:20:47,  3.36s/it] 23%|██▎       | 1711/7431 [1:41:40<5:15:19,  3.31s/it] 23%|██▎       | 1712/7431 [1:41:43<5:19:25,  3.35s/it] 23%|██▎       | 1713/7431 [1:41:47<5:17:53,  3.34s/it] 23%|██▎       | 1714/7431 [1:41:50<5:15:15,  3.31s/it] 23%|██▎       | 1715/7431 [1:41:53<5:13:32,  3.29s/it] 23%|██▎       | 1716/7431 [1:41:57<5:16:02,  3.32s/it] 23%|██▎       | 1717/7431 [1:42:00<5:12:08,  3.28s/it] 23%|██▎       | 1718/7431 [1:42:03<5:10:51,  3.26s/it] 23%|██▎       | 1719/7431 [1:42:06<5:15:39,  3.32s/it] 23%|██▎       | 1720/7431 [1:42:10<5:14:27,  3.30s/it] 23%|██▎       | 1721/7431 [1:42:13<5:19:10,  3.35s/it] 23%|██▎       | 1722/7431 [1:42:16<5:13:50,  3.30s/it] 23%|██▎       | 1723/7431 [1:42:20<5:20:43,  3.37s/it] 23%|██▎       | 1724/7431 [1:42:23<5:19:51,  3.36s/it] 23%|██▎       | 1725/7431 [1:42:27<5:20:15,  3.37s/it] 23%|██▎       | 1726/7431 [1:42:30<5:14:21,  3.31s/it] 23%|██▎       | 1727/7431 [1:42:33<5:10:05,  3.26s/it] 23%|██▎       | 1728/7431 [1:42:36<5:13:39,  3.30s/it] 23%|██▎       | 1729/7431 [1:42:40<5:14:34,  3.31s/it] 23%|██▎       | 1730/7431 [1:42:43<5:15:32,  3.32s/it] 23%|██▎       | 1731/7431 [1:42:47<5:22:43,  3.40s/it] 23%|██▎       | 1732/7431 [1:42:50<5:16:29,  3.33s/it] 23%|██▎       | 1733/7431 [1:42:54<5:28:41,  3.46s/it] 23%|██▎       | 1734/7431 [1:42:57<5:17:22,  3.34s/it] 23%|██▎       | 1735/7431 [1:43:00<5:13:41,  3.30s/it] 23%|██▎       | 1736/7431 [1:43:03<5:08:47,  3.25s/it] 23%|██▎       | 1737/7431 [1:43:06<5:09:00,  3.26s/it] 23%|██▎       | 1738/7431 [1:43:10<5:11:45,  3.29s/it] 23%|██▎       | 1739/7431 [1:43:13<5:17:25,  3.35s/it] 23%|██▎       | 1740/7431 [1:43:16<5:16:34,  3.34s/it] 23%|██▎       | 1741/7431 [1:43:19<5:09:57,  3.27s/it] 23%|██▎       | 1742/7431 [1:43:23<5:11:02,  3.28s/it] 23%|██▎       | 1743/7431 [1:43:26<5:14:10,  3.31s/it] 23%|██▎       | 1744/7431 [1:43:29<5:11:32,  3.29s/it] 23%|██▎       | 1745/7431 [1:43:33<5:16:26,  3.34s/it] 23%|██▎       | 1746/7431 [1:43:36<5:11:42,  3.29s/it] 24%|██▎       | 1747/7431 [1:43:39<5:11:20,  3.29s/it] 24%|██▎       | 1748/7431 [1:43:43<5:13:11,  3.31s/it] 24%|██▎       | 1749/7431 [1:43:46<5:13:58,  3.32s/it]08/31/2024 20:11:08 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.9029674530029297, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04869253933429718, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.845083475112915, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.796743392944336}
 24%|██▎       | 1750/7431 [1:43:49<5:10:15,  3.28s/it] 24%|██▎       | 1751/7431 [1:43:53<5:13:28,  3.31s/it] 24%|██▎       | 1752/7431 [1:43:56<5:11:09,  3.29s/it] 24%|██▎       | 1753/7431 [1:43:59<5:20:23,  3.39s/it] 24%|██▎       | 1754/7431 [1:44:03<5:16:43,  3.35s/it] 24%|██▎       | 1755/7431 [1:44:06<5:15:19,  3.33s/it] 24%|██▎       | 1756/7431 [1:44:09<5:14:59,  3.33s/it] 24%|██▎       | 1757/7431 [1:44:13<5:11:38,  3.30s/it] 24%|██▎       | 1758/7431 [1:44:16<5:13:03,  3.31s/it] 24%|██▎       | 1759/7431 [1:44:19<5:19:19,  3.38s/it] 24%|██▎       | 1760/7431 [1:44:23<5:23:16,  3.42s/it] 24%|██▎       | 1761/7431 [1:44:26<5:16:52,  3.35s/it] 24%|██▎       | 1762/7431 [1:44:29<5:13:33,  3.32s/it] 24%|██▎       | 1763/7431 [1:44:33<5:10:40,  3.29s/it] 24%|██▎       | 1764/7431 [1:44:36<5:09:38,  3.28s/it] 24%|██▍       | 1765/7431 [1:44:39<5:05:21,  3.23s/it] 24%|██▍       | 1766/7431 [1:44:42<5:07:14,  3.25s/it] 24%|██▍       | 1767/7431 [1:44:45<5:04:11,  3.22s/it] 24%|██▍       | 1768/7431 [1:44:49<5:09:22,  3.28s/it] 24%|██▍       | 1769/7431 [1:44:52<5:09:24,  3.28s/it] 24%|██▍       | 1770/7431 [1:44:55<5:09:41,  3.28s/it] 24%|██▍       | 1771/7431 [1:44:59<5:15:59,  3.35s/it] 24%|██▍       | 1772/7431 [1:45:02<5:11:09,  3.30s/it] 24%|██▍       | 1773/7431 [1:45:05<5:12:40,  3.32s/it] 24%|██▍       | 1774/7431 [1:45:09<5:06:41,  3.25s/it] 24%|██▍       | 1775/7431 [1:45:12<5:02:26,  3.21s/it] 24%|██▍       | 1776/7431 [1:45:15<5:08:02,  3.27s/it] 24%|██▍       | 1777/7431 [1:45:18<5:07:40,  3.27s/it] 24%|██▍       | 1778/7431 [1:45:22<5:11:05,  3.30s/it] 24%|██▍       | 1779/7431 [1:45:25<5:11:43,  3.31s/it] 24%|██▍       | 1780/7431 [1:45:28<5:09:10,  3.28s/it] 24%|██▍       | 1781/7431 [1:45:32<5:14:33,  3.34s/it] 24%|██▍       | 1782/7431 [1:45:35<5:08:42,  3.28s/it] 24%|██▍       | 1783/7431 [1:45:38<5:06:03,  3.25s/it] 24%|██▍       | 1784/7431 [1:45:41<5:05:21,  3.24s/it] 24%|██▍       | 1785/7431 [1:45:45<5:11:23,  3.31s/it] 24%|██▍       | 1786/7431 [1:45:48<5:11:06,  3.31s/it] 24%|██▍       | 1787/7431 [1:45:51<5:14:06,  3.34s/it] 24%|██▍       | 1788/7431 [1:45:55<5:17:37,  3.38s/it] 24%|██▍       | 1789/7431 [1:45:58<5:12:13,  3.32s/it] 24%|██▍       | 1790/7431 [1:46:01<5:11:13,  3.31s/it] 24%|██▍       | 1791/7431 [1:46:05<5:13:38,  3.34s/it] 24%|██▍       | 1792/7431 [1:46:08<5:09:25,  3.29s/it] 24%|██▍       | 1793/7431 [1:46:11<5:11:13,  3.31s/it] 24%|██▍       | 1794/7431 [1:46:15<5:11:55,  3.32s/it] 24%|██▍       | 1795/7431 [1:46:18<5:12:12,  3.32s/it] 24%|██▍       | 1796/7431 [1:46:21<5:06:32,  3.26s/it] 24%|██▍       | 1797/7431 [1:46:24<5:04:18,  3.24s/it] 24%|██▍       | 1798/7431 [1:46:28<5:03:10,  3.23s/it] 24%|██▍       | 1799/7431 [1:46:31<5:07:22,  3.27s/it]08/31/2024 20:13:53 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.8773126602172852, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.042370572686195374, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6968796253204346, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.616562843322754}
 24%|██▍       | 1800/7431 [1:46:34<5:07:45,  3.28s/it] 24%|██▍       | 1801/7431 [1:46:37<5:07:41,  3.28s/it] 24%|██▍       | 1802/7431 [1:46:41<5:08:57,  3.29s/it] 24%|██▍       | 1803/7431 [1:46:44<5:07:38,  3.28s/it] 24%|██▍       | 1804/7431 [1:46:47<5:10:08,  3.31s/it] 24%|██▍       | 1805/7431 [1:46:51<5:08:08,  3.29s/it] 24%|██▍       | 1806/7431 [1:46:54<5:05:26,  3.26s/it] 24%|██▍       | 1807/7431 [1:46:57<5:02:29,  3.23s/it] 24%|██▍       | 1808/7431 [1:47:00<5:02:33,  3.23s/it] 24%|██▍       | 1809/7431 [1:47:04<5:05:41,  3.26s/it] 24%|██▍       | 1810/7431 [1:47:07<5:05:23,  3.26s/it] 24%|██▍       | 1811/7431 [1:47:10<5:07:34,  3.28s/it] 24%|██▍       | 1812/7431 [1:47:13<5:05:44,  3.26s/it] 24%|██▍       | 1813/7431 [1:47:17<5:07:47,  3.29s/it] 24%|██▍       | 1814/7431 [1:47:20<5:10:38,  3.32s/it] 24%|██▍       | 1815/7431 [1:47:24<5:14:27,  3.36s/it] 24%|██▍       | 1816/7431 [1:47:27<5:09:10,  3.30s/it] 24%|██▍       | 1817/7431 [1:47:30<5:10:05,  3.31s/it] 24%|██▍       | 1818/7431 [1:47:33<5:07:06,  3.28s/it] 24%|██▍       | 1819/7431 [1:47:37<5:05:31,  3.27s/it] 24%|██▍       | 1820/7431 [1:47:40<5:13:03,  3.35s/it] 25%|██▍       | 1821/7431 [1:47:43<5:06:24,  3.28s/it] 25%|██▍       | 1822/7431 [1:47:46<5:05:58,  3.27s/it] 25%|██▍       | 1823/7431 [1:47:50<5:05:57,  3.27s/it] 25%|██▍       | 1824/7431 [1:47:53<5:06:02,  3.28s/it] 25%|██▍       | 1825/7431 [1:47:56<5:05:11,  3.27s/it] 25%|██▍       | 1826/7431 [1:48:00<5:14:02,  3.36s/it] 25%|██▍       | 1827/7431 [1:48:03<5:12:53,  3.35s/it] 25%|██▍       | 1828/7431 [1:48:06<5:07:51,  3.30s/it] 25%|██▍       | 1829/7431 [1:48:10<5:07:24,  3.29s/it] 25%|██▍       | 1830/7431 [1:48:13<5:05:04,  3.27s/it] 25%|██▍       | 1831/7431 [1:48:16<5:08:26,  3.30s/it] 25%|██▍       | 1832/7431 [1:48:20<5:14:01,  3.37s/it] 25%|██▍       | 1833/7431 [1:48:23<5:09:17,  3.32s/it] 25%|██▍       | 1834/7431 [1:48:26<5:11:48,  3.34s/it] 25%|██▍       | 1835/7431 [1:48:30<5:17:44,  3.41s/it] 25%|██▍       | 1836/7431 [1:48:33<5:11:44,  3.34s/it] 25%|██▍       | 1837/7431 [1:48:36<5:09:01,  3.31s/it] 25%|██▍       | 1838/7431 [1:48:40<5:11:36,  3.34s/it] 25%|██▍       | 1839/7431 [1:48:43<5:07:34,  3.30s/it] 25%|██▍       | 1840/7431 [1:48:46<5:11:34,  3.34s/it] 25%|██▍       | 1841/7431 [1:48:50<5:16:32,  3.40s/it] 25%|██▍       | 1842/7431 [1:48:53<5:15:36,  3.39s/it] 25%|██▍       | 1843/7431 [1:48:57<5:13:14,  3.36s/it] 25%|██▍       | 1844/7431 [1:49:00<5:10:48,  3.34s/it] 25%|██▍       | 1845/7431 [1:49:03<5:04:32,  3.27s/it] 25%|██▍       | 1846/7431 [1:49:06<5:06:55,  3.30s/it] 25%|██▍       | 1847/7431 [1:49:10<5:13:58,  3.37s/it] 25%|██▍       | 1848/7431 [1:49:13<5:08:20,  3.31s/it] 25%|██▍       | 1849/7431 [1:49:16<5:11:26,  3.35s/it]08/31/2024 20:16:38 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.9567434787750244, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04078821465373039, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7503557205200195, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.74788761138916}
 25%|██▍       | 1850/7431 [1:49:20<5:08:44,  3.32s/it] 25%|██▍       | 1851/7431 [1:49:23<5:05:28,  3.28s/it] 25%|██▍       | 1852/7431 [1:49:26<5:07:20,  3.31s/it] 25%|██▍       | 1853/7431 [1:49:29<5:04:54,  3.28s/it] 25%|██▍       | 1854/7431 [1:49:33<5:08:05,  3.31s/it] 25%|██▍       | 1855/7431 [1:49:36<5:08:56,  3.32s/it] 25%|██▍       | 1856/7431 [1:49:40<5:09:47,  3.33s/it] 25%|██▍       | 1857/7431 [1:49:43<5:14:06,  3.38s/it] 25%|██▌       | 1858/7431 [1:49:46<5:09:28,  3.33s/it] 25%|██▌       | 1859/7431 [1:49:49<5:06:00,  3.30s/it] 25%|██▌       | 1860/7431 [1:49:53<5:09:08,  3.33s/it] 25%|██▌       | 1861/7431 [1:49:56<5:06:28,  3.30s/it] 25%|██▌       | 1862/7431 [1:49:59<5:01:03,  3.24s/it] 25%|██▌       | 1863/7431 [1:50:03<5:08:23,  3.32s/it] 25%|██▌       | 1864/7431 [1:50:06<5:07:13,  3.31s/it] 25%|██▌       | 1865/7431 [1:50:09<5:05:07,  3.29s/it] 25%|██▌       | 1866/7431 [1:50:13<5:07:17,  3.31s/it] 25%|██▌       | 1867/7431 [1:50:16<5:04:08,  3.28s/it] 25%|██▌       | 1868/7431 [1:50:19<5:09:00,  3.33s/it] 25%|██▌       | 1869/7431 [1:50:23<5:10:20,  3.35s/it] 25%|██▌       | 1870/7431 [1:50:26<5:13:07,  3.38s/it] 25%|██▌       | 1871/7431 [1:50:29<5:09:08,  3.34s/it] 25%|██▌       | 1872/7431 [1:50:33<5:03:58,  3.28s/it] 25%|██▌       | 1873/7431 [1:50:36<5:08:07,  3.33s/it] 25%|██▌       | 1874/7431 [1:50:39<5:07:35,  3.32s/it] 25%|██▌       | 1875/7431 [1:50:43<5:05:30,  3.30s/it] 25%|██▌       | 1876/7431 [1:50:46<5:03:53,  3.28s/it] 25%|██▌       | 1877/7431 [1:50:49<5:02:08,  3.26s/it] 25%|██▌       | 1878/7431 [1:50:52<5:06:11,  3.31s/it] 25%|██▌       | 1879/7431 [1:50:56<5:03:43,  3.28s/it] 25%|██▌       | 1880/7431 [1:50:59<5:05:37,  3.30s/it] 25%|██▌       | 1881/7431 [1:51:02<5:02:58,  3.28s/it] 25%|██▌       | 1882/7431 [1:51:05<4:59:11,  3.24s/it] 25%|██▌       | 1883/7431 [1:51:09<5:11:02,  3.36s/it] 25%|██▌       | 1884/7431 [1:51:12<5:13:12,  3.39s/it] 25%|██▌       | 1885/7431 [1:51:16<5:07:21,  3.33s/it] 25%|██▌       | 1886/7431 [1:51:19<5:07:52,  3.33s/it] 25%|██▌       | 1887/7431 [1:51:22<5:07:56,  3.33s/it] 25%|██▌       | 1888/7431 [1:51:25<5:01:53,  3.27s/it] 25%|██▌       | 1889/7431 [1:51:29<5:08:07,  3.34s/it] 25%|██▌       | 1890/7431 [1:51:32<5:06:58,  3.32s/it] 25%|██▌       | 1891/7431 [1:51:35<5:04:54,  3.30s/it] 25%|██▌       | 1892/7431 [1:51:39<5:00:52,  3.26s/it] 25%|██▌       | 1893/7431 [1:51:42<4:59:43,  3.25s/it] 25%|██▌       | 1894/7431 [1:51:45<5:06:52,  3.33s/it] 26%|██▌       | 1895/7431 [1:51:49<5:08:39,  3.35s/it] 26%|██▌       | 1896/7431 [1:51:52<5:04:50,  3.30s/it] 26%|██▌       | 1897/7431 [1:51:55<5:06:08,  3.32s/it] 26%|██▌       | 1898/7431 [1:51:59<5:03:28,  3.29s/it] 26%|██▌       | 1899/7431 [1:52:02<4:57:55,  3.23s/it]08/31/2024 20:19:23 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.7791683673858643, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04578235000371933, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.8025944232940674, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.627545356750488}
 26%|██▌       | 1900/7431 [1:52:05<4:59:52,  3.25s/it] 26%|██▌       | 1901/7431 [1:52:08<5:06:41,  3.33s/it] 26%|██▌       | 1902/7431 [1:52:12<5:07:12,  3.33s/it] 26%|██▌       | 1903/7431 [1:52:15<5:02:54,  3.29s/it] 26%|██▌       | 1904/7431 [1:52:18<5:00:00,  3.26s/it] 26%|██▌       | 1905/7431 [1:52:21<4:58:55,  3.25s/it] 26%|██▌       | 1906/7431 [1:52:25<5:00:59,  3.27s/it] 26%|██▌       | 1907/7431 [1:52:28<4:59:38,  3.25s/it] 26%|██▌       | 1908/7431 [1:52:31<4:56:04,  3.22s/it] 26%|██▌       | 1909/7431 [1:52:34<4:55:37,  3.21s/it] 26%|██▌       | 1910/7431 [1:52:37<4:56:47,  3.23s/it] 26%|██▌       | 1911/7431 [1:52:41<4:58:20,  3.24s/it] 26%|██▌       | 1912/7431 [1:52:44<5:01:34,  3.28s/it] 26%|██▌       | 1913/7431 [1:52:47<5:02:27,  3.29s/it] 26%|██▌       | 1914/7431 [1:52:51<4:59:55,  3.26s/it] 26%|██▌       | 1915/7431 [1:52:54<4:59:01,  3.25s/it] 26%|██▌       | 1916/7431 [1:52:57<5:01:09,  3.28s/it] 26%|██▌       | 1917/7431 [1:53:01<5:02:11,  3.29s/it] 26%|██▌       | 1918/7431 [1:53:04<4:59:09,  3.26s/it] 26%|██▌       | 1919/7431 [1:53:07<4:58:09,  3.25s/it] 26%|██▌       | 1920/7431 [1:53:10<4:58:58,  3.26s/it] 26%|██▌       | 1921/7431 [1:53:13<4:57:21,  3.24s/it] 26%|██▌       | 1922/7431 [1:53:17<5:05:00,  3.32s/it] 26%|██▌       | 1923/7431 [1:53:20<5:05:53,  3.33s/it] 26%|██▌       | 1924/7431 [1:53:24<5:04:12,  3.31s/it] 26%|██▌       | 1925/7431 [1:53:27<4:58:58,  3.26s/it] 26%|██▌       | 1926/7431 [1:53:30<4:59:53,  3.27s/it] 26%|██▌       | 1927/7431 [1:53:33<4:58:26,  3.25s/it] 26%|██▌       | 1928/7431 [1:53:36<4:57:57,  3.25s/it] 26%|██▌       | 1929/7431 [1:53:40<5:02:52,  3.30s/it] 26%|██▌       | 1930/7431 [1:53:43<5:06:04,  3.34s/it] 26%|██▌       | 1931/7431 [1:53:46<4:59:17,  3.27s/it] 26%|██▌       | 1932/7431 [1:53:50<5:00:23,  3.28s/it] 26%|██▌       | 1933/7431 [1:53:53<4:57:24,  3.25s/it] 26%|██▌       | 1934/7431 [1:53:56<5:06:16,  3.34s/it] 26%|██▌       | 1935/7431 [1:54:00<5:04:11,  3.32s/it] 26%|██▌       | 1936/7431 [1:54:03<5:01:31,  3.29s/it] 26%|██▌       | 1937/7431 [1:54:06<4:59:11,  3.27s/it] 26%|██▌       | 1938/7431 [1:54:09<5:01:58,  3.30s/it] 26%|██▌       | 1939/7431 [1:54:13<5:09:15,  3.38s/it] 26%|██▌       | 1940/7431 [1:54:16<5:05:26,  3.34s/it] 26%|██▌       | 1941/7431 [1:54:20<5:02:21,  3.30s/it] 26%|██▌       | 1942/7431 [1:54:23<5:01:29,  3.30s/it] 26%|██▌       | 1943/7431 [1:54:26<5:01:23,  3.30s/it] 26%|██▌       | 1944/7431 [1:54:29<5:00:35,  3.29s/it] 26%|██▌       | 1945/7431 [1:54:33<4:58:27,  3.26s/it] 26%|██▌       | 1946/7431 [1:54:36<4:59:02,  3.27s/it] 26%|██▌       | 1947/7431 [1:54:39<5:01:26,  3.30s/it] 26%|██▌       | 1948/7431 [1:54:43<5:02:25,  3.31s/it] 26%|██▌       | 1949/7431 [1:54:46<5:06:56,  3.36s/it]08/31/2024 20:22:08 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.7291522026062012, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.048714566975831985, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7091188430786133, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.486985683441162}
 26%|██▌       | 1950/7431 [1:54:49<5:04:45,  3.34s/it] 26%|██▋       | 1951/7431 [1:54:53<5:04:01,  3.33s/it] 26%|██▋       | 1952/7431 [1:54:56<5:00:30,  3.29s/it] 26%|██▋       | 1953/7431 [1:54:59<5:02:00,  3.31s/it] 26%|██▋       | 1954/7431 [1:55:02<5:00:02,  3.29s/it] 26%|██▋       | 1955/7431 [1:55:06<5:00:05,  3.29s/it] 26%|██▋       | 1956/7431 [1:55:09<5:10:56,  3.41s/it] 26%|██▋       | 1957/7431 [1:55:13<5:05:39,  3.35s/it] 26%|██▋       | 1958/7431 [1:55:16<5:02:01,  3.31s/it] 26%|██▋       | 1959/7431 [1:55:19<4:59:23,  3.28s/it] 26%|██▋       | 1960/7431 [1:55:22<4:57:32,  3.26s/it] 26%|██▋       | 1961/7431 [1:55:26<4:59:48,  3.29s/it] 26%|██▋       | 1962/7431 [1:55:29<4:55:49,  3.25s/it] 26%|██▋       | 1963/7431 [1:55:32<5:00:35,  3.30s/it] 26%|██▋       | 1964/7431 [1:55:35<5:01:11,  3.31s/it] 26%|██▋       | 1965/7431 [1:55:39<5:01:15,  3.31s/it] 26%|██▋       | 1966/7431 [1:55:42<5:03:26,  3.33s/it] 26%|██▋       | 1967/7431 [1:55:45<4:59:27,  3.29s/it] 26%|██▋       | 1968/7431 [1:55:49<5:00:01,  3.30s/it] 26%|██▋       | 1969/7431 [1:55:52<5:02:33,  3.32s/it] 27%|██▋       | 1970/7431 [1:55:55<5:02:06,  3.32s/it] 27%|██▋       | 1971/7431 [1:55:59<4:58:28,  3.28s/it] 27%|██▋       | 1972/7431 [1:56:02<4:58:10,  3.28s/it] 27%|██▋       | 1973/7431 [1:56:05<4:55:34,  3.25s/it] 27%|██▋       | 1974/7431 [1:56:08<4:55:20,  3.25s/it] 27%|██▋       | 1975/7431 [1:56:11<4:54:22,  3.24s/it] 27%|██▋       | 1976/7431 [1:56:15<4:53:22,  3.23s/it] 27%|██▋       | 1977/7431 [1:56:18<4:57:07,  3.27s/it] 27%|██▋       | 1978/7431 [1:56:21<4:51:06,  3.20s/it] 27%|██▋       | 1979/7431 [1:56:25<4:58:35,  3.29s/it] 27%|██▋       | 1980/7431 [1:56:28<5:09:08,  3.40s/it] 27%|██▋       | 1981/7431 [1:56:31<5:03:25,  3.34s/it] 27%|██▋       | 1982/7431 [1:56:35<5:04:30,  3.35s/it] 27%|██▋       | 1983/7431 [1:56:38<5:04:27,  3.35s/it] 27%|██▋       | 1984/7431 [1:56:42<5:04:39,  3.36s/it] 27%|██▋       | 1985/7431 [1:56:45<4:58:13,  3.29s/it] 27%|██▋       | 1986/7431 [1:56:48<4:57:09,  3.27s/it] 27%|██▋       | 1987/7431 [1:56:51<4:56:24,  3.27s/it] 27%|██▋       | 1988/7431 [1:56:54<4:56:14,  3.27s/it] 27%|██▋       | 1989/7431 [1:56:58<4:54:11,  3.24s/it] 27%|██▋       | 1990/7431 [1:57:01<4:55:55,  3.26s/it] 27%|██▋       | 1991/7431 [1:57:04<4:55:59,  3.26s/it] 27%|██▋       | 1992/7431 [1:57:07<4:51:03,  3.21s/it] 27%|██▋       | 1993/7431 [1:57:11<4:53:04,  3.23s/it] 27%|██▋       | 1994/7431 [1:57:14<4:51:48,  3.22s/it] 27%|██▋       | 1995/7431 [1:57:17<4:56:10,  3.27s/it] 27%|██▋       | 1996/7431 [1:57:20<4:58:32,  3.30s/it] 27%|██▋       | 1997/7431 [1:57:24<4:55:38,  3.26s/it] 27%|██▋       | 1998/7431 [1:57:27<5:01:42,  3.33s/it] 27%|██▋       | 1999/7431 [1:57:30<5:01:05,  3.33s/it]08/31/2024 20:24:51 - INFO - __main__ -   evaluate on ret%tv--msrvtt_ret task
08/31/2024 20:24:51 - INFO - __main__ -   start running ret%tv validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  1%|          | 2/221 [00:00<00:55,  3.92it/s][A
  1%|▏         | 3/221 [00:00<00:56,  3.84it/s][A
  2%|▏         | 4/221 [00:00<00:46,  4.70it/s][A
  2%|▏         | 5/221 [00:01<00:42,  5.13it/s][A
  3%|▎         | 6/221 [00:01<00:38,  5.54it/s][A
  3%|▎         | 7/221 [00:01<00:42,  5.04it/s][A
  4%|▎         | 8/221 [00:01<00:40,  5.21it/s][A
  4%|▍         | 9/221 [00:01<00:38,  5.50it/s][A
  5%|▍         | 10/221 [00:02<00:51,  4.10it/s][A
  5%|▍         | 11/221 [00:02<00:48,  4.33it/s][A
  5%|▌         | 12/221 [00:02<00:45,  4.58it/s][A
  6%|▌         | 13/221 [00:02<00:50,  4.14it/s][A
  6%|▋         | 14/221 [00:03<00:46,  4.43it/s][A
  7%|▋         | 15/221 [00:03<00:42,  4.81it/s][A
  7%|▋         | 16/221 [00:03<01:06,  3.06it/s][A
  8%|▊         | 17/221 [00:04<01:01,  3.32it/s][A
  8%|▊         | 18/221 [00:04<00:49,  4.12it/s][A
  9%|▊         | 19/221 [00:04<00:53,  3.79it/s][A
  9%|▉         | 20/221 [00:04<00:44,  4.52it/s][A
 10%|▉         | 21/221 [00:04<00:46,  4.34it/s][A
 10%|▉         | 22/221 [00:05<00:47,  4.23it/s][A
 10%|█         | 23/221 [00:05<00:38,  5.11it/s][A
 11%|█         | 24/221 [00:05<00:38,  5.06it/s][A
 11%|█▏        | 25/221 [00:05<00:44,  4.36it/s][A
 12%|█▏        | 26/221 [00:05<00:41,  4.70it/s][A
 12%|█▏        | 27/221 [00:06<00:42,  4.56it/s][A
 13%|█▎        | 28/221 [00:06<00:52,  3.67it/s][A
 13%|█▎        | 29/221 [00:06<01:01,  3.11it/s][A
 14%|█▎        | 30/221 [00:07<00:59,  3.23it/s][A
 14%|█▍        | 31/221 [00:07<00:58,  3.25it/s][A
 14%|█▍        | 32/221 [00:07<00:51,  3.66it/s][A
 15%|█▍        | 33/221 [00:07<00:43,  4.33it/s][A
 15%|█▌        | 34/221 [00:08<00:41,  4.56it/s][A
 16%|█▌        | 35/221 [00:08<00:56,  3.29it/s][A
 16%|█▋        | 36/221 [00:08<01:03,  2.93it/s][A
 17%|█▋        | 37/221 [00:09<00:53,  3.47it/s][A
 17%|█▋        | 38/221 [00:09<00:55,  3.31it/s][A
 18%|█▊        | 39/221 [00:09<00:48,  3.73it/s][A
 18%|█▊        | 40/221 [00:10<00:52,  3.43it/s][A
 19%|█▊        | 41/221 [00:10<00:54,  3.29it/s][A
 19%|█▉        | 42/221 [00:10<00:44,  4.06it/s][A
 19%|█▉        | 43/221 [00:10<00:40,  4.34it/s][A
 20%|█▉        | 44/221 [00:10<00:42,  4.14it/s][A
 20%|██        | 45/221 [00:11<00:47,  3.67it/s][A
 21%|██        | 46/221 [00:11<00:49,  3.52it/s][A
 21%|██▏       | 47/221 [00:11<00:41,  4.23it/s][A
 22%|██▏       | 48/221 [00:11<00:36,  4.74it/s][A
 22%|██▏       | 49/221 [00:12<00:44,  3.88it/s][A
 23%|██▎       | 50/221 [00:12<00:47,  3.62it/s][A
 23%|██▎       | 51/221 [00:12<00:47,  3.60it/s][A
 24%|██▎       | 52/221 [00:13<00:44,  3.79it/s][A
 24%|██▍       | 53/221 [00:13<00:42,  3.98it/s][A
 24%|██▍       | 54/221 [00:13<00:54,  3.09it/s][A
 25%|██▍       | 55/221 [00:14<00:52,  3.16it/s][A
 25%|██▌       | 56/221 [00:14<00:49,  3.33it/s][A
 26%|██▌       | 57/221 [00:14<00:43,  3.73it/s][A
 26%|██▌       | 58/221 [00:14<00:41,  3.90it/s][A
 27%|██▋       | 59/221 [00:14<00:37,  4.31it/s][A
 27%|██▋       | 60/221 [00:15<00:36,  4.43it/s][A
 28%|██▊       | 61/221 [00:15<00:37,  4.26it/s][A
 28%|██▊       | 62/221 [00:15<00:38,  4.09it/s][A
 29%|██▊       | 63/221 [00:15<00:42,  3.74it/s][A
 29%|██▉       | 64/221 [00:16<00:45,  3.49it/s][A
 29%|██▉       | 65/221 [00:16<00:43,  3.63it/s][A
 30%|██▉       | 66/221 [00:17<00:53,  2.92it/s][A
 30%|███       | 67/221 [00:17<00:53,  2.87it/s][A
 31%|███       | 69/221 [00:18<00:50,  2.99it/s][A
 32%|███▏      | 70/221 [00:18<00:45,  3.30it/s][A
 32%|███▏      | 71/221 [00:18<00:41,  3.58it/s][A
 33%|███▎      | 72/221 [00:18<00:43,  3.44it/s][A
 33%|███▎      | 73/221 [00:19<00:40,  3.63it/s][A
 33%|███▎      | 74/221 [00:19<00:38,  3.81it/s][A
 34%|███▍      | 75/221 [00:19<00:38,  3.83it/s][A
 34%|███▍      | 76/221 [00:19<00:35,  4.08it/s][A
 35%|███▍      | 77/221 [00:20<00:45,  3.15it/s][A
 35%|███▌      | 78/221 [00:20<00:40,  3.49it/s][A
 36%|███▌      | 79/221 [00:20<00:48,  2.93it/s][A
 36%|███▌      | 80/221 [00:21<00:43,  3.22it/s][A
 37%|███▋      | 81/221 [00:21<00:38,  3.67it/s][A
 37%|███▋      | 82/221 [00:21<00:38,  3.57it/s][A
 38%|███▊      | 83/221 [00:22<00:42,  3.24it/s][A
 38%|███▊      | 84/221 [00:22<00:38,  3.56it/s][A
 38%|███▊      | 85/221 [00:22<00:32,  4.19it/s][A
 39%|███▉      | 86/221 [00:22<00:32,  4.11it/s][A
 39%|███▉      | 87/221 [00:22<00:37,  3.55it/s][A
 40%|███▉      | 88/221 [00:23<00:38,  3.47it/s][A
 40%|████      | 89/221 [00:23<00:36,  3.59it/s][A
 41%|████      | 90/221 [00:23<00:32,  4.00it/s][A
 41%|████      | 91/221 [00:23<00:27,  4.66it/s][A
 42%|████▏     | 92/221 [00:24<00:29,  4.33it/s][A
 42%|████▏     | 93/221 [00:24<00:34,  3.74it/s][A
 43%|████▎     | 94/221 [00:24<00:38,  3.33it/s][A
 43%|████▎     | 95/221 [00:25<00:33,  3.74it/s][A
 43%|████▎     | 96/221 [00:25<00:42,  2.92it/s][A
 44%|████▍     | 97/221 [00:25<00:39,  3.17it/s][A
 44%|████▍     | 98/221 [00:26<00:52,  2.34it/s][A
 45%|████▍     | 99/221 [00:26<00:50,  2.42it/s][A
 45%|████▌     | 100/221 [00:27<00:43,  2.76it/s][A
 46%|████▌     | 101/221 [00:27<00:39,  3.02it/s][A
 46%|████▌     | 102/221 [00:27<00:37,  3.14it/s][A
 47%|████▋     | 103/221 [00:27<00:32,  3.61it/s][A
 47%|████▋     | 104/221 [00:28<00:33,  3.50it/s][A
 48%|████▊     | 105/221 [00:28<00:40,  2.90it/s][A
 48%|████▊     | 106/221 [00:28<00:38,  2.98it/s][A
 48%|████▊     | 107/221 [00:29<00:38,  3.00it/s][A
 49%|████▉     | 108/221 [00:29<00:32,  3.44it/s][A
 49%|████▉     | 109/221 [00:29<00:28,  3.97it/s][A
 50%|████▉     | 110/221 [00:30<00:33,  3.34it/s][A
 50%|█████     | 111/221 [00:30<00:31,  3.49it/s][A
 51%|█████     | 112/221 [00:30<00:30,  3.60it/s][A
 51%|█████     | 113/221 [00:30<00:26,  4.03it/s][A
 52%|█████▏    | 115/221 [00:31<00:26,  4.07it/s][A
 52%|█████▏    | 116/221 [00:31<00:24,  4.27it/s][A
 53%|█████▎    | 117/221 [00:31<00:25,  4.11it/s][A
 53%|█████▎    | 118/221 [00:31<00:24,  4.27it/s][A
 54%|█████▍    | 119/221 [00:32<00:27,  3.76it/s][A
 54%|█████▍    | 120/221 [00:32<00:28,  3.58it/s][A
 55%|█████▍    | 121/221 [00:32<00:23,  4.24it/s][A
 55%|█████▌    | 122/221 [00:32<00:24,  4.10it/s][A
 56%|█████▌    | 123/221 [00:33<00:21,  4.58it/s][A
 56%|█████▌    | 124/221 [00:33<00:28,  3.43it/s][A
 57%|█████▋    | 125/221 [00:33<00:29,  3.27it/s][A
 57%|█████▋    | 126/221 [00:34<00:24,  3.95it/s][A
 57%|█████▋    | 127/221 [00:34<00:27,  3.44it/s][A
 58%|█████▊    | 128/221 [00:34<00:27,  3.39it/s][A
 59%|█████▉    | 130/221 [00:35<00:22,  3.99it/s][A
 59%|█████▉    | 131/221 [00:35<00:20,  4.42it/s][A
 60%|█████▉    | 132/221 [00:36<00:35,  2.54it/s][A
 60%|██████    | 133/221 [00:36<00:32,  2.68it/s][A
 61%|██████    | 134/221 [00:36<00:33,  2.61it/s][A
 61%|██████    | 135/221 [00:37<00:33,  2.60it/s][A
 62%|██████▏   | 136/221 [00:37<00:29,  2.88it/s][A
 62%|██████▏   | 137/221 [00:37<00:25,  3.34it/s][A
 62%|██████▏   | 138/221 [00:38<00:24,  3.32it/s][A
 63%|██████▎   | 139/221 [00:38<00:22,  3.72it/s][A
 63%|██████▎   | 140/221 [00:38<00:22,  3.65it/s][A
 64%|██████▍   | 141/221 [00:38<00:22,  3.48it/s][A
 64%|██████▍   | 142/221 [00:39<00:24,  3.27it/s][A
 65%|██████▍   | 143/221 [00:39<00:24,  3.18it/s][A
 65%|██████▌   | 144/221 [00:39<00:27,  2.85it/s][A
 66%|██████▌   | 145/221 [00:40<00:23,  3.30it/s][A
 67%|██████▋   | 147/221 [00:40<00:17,  4.14it/s][A
 67%|██████▋   | 148/221 [00:40<00:17,  4.07it/s][A
 67%|██████▋   | 149/221 [00:41<00:18,  3.83it/s][A
 68%|██████▊   | 150/221 [00:41<00:18,  3.88it/s][A
 68%|██████▊   | 151/221 [00:41<00:17,  3.89it/s][A
 69%|██████▉   | 152/221 [00:41<00:19,  3.49it/s][A
 69%|██████▉   | 153/221 [00:42<00:16,  4.19it/s][A
 70%|██████▉   | 154/221 [00:42<00:15,  4.20it/s][A
 70%|███████   | 155/221 [00:42<00:19,  3.43it/s][A
 71%|███████   | 156/221 [00:43<00:20,  3.11it/s][A
 71%|███████   | 157/221 [00:43<00:20,  3.16it/s][A
 71%|███████▏  | 158/221 [00:43<00:22,  2.81it/s][A
 72%|███████▏  | 159/221 [00:43<00:18,  3.32it/s][A
 72%|███████▏  | 160/221 [00:44<00:15,  3.95it/s][A
 73%|███████▎  | 161/221 [00:44<00:16,  3.53it/s][A
 73%|███████▎  | 162/221 [00:44<00:13,  4.36it/s][A
 74%|███████▍  | 163/221 [00:44<00:14,  3.90it/s][A
 74%|███████▍  | 164/221 [00:45<00:12,  4.53it/s][A
 75%|███████▍  | 165/221 [00:45<00:11,  4.71it/s][A
 75%|███████▌  | 166/221 [00:45<00:11,  4.91it/s][A
 76%|███████▌  | 167/221 [00:45<00:12,  4.23it/s][A
 76%|███████▌  | 168/221 [00:45<00:12,  4.11it/s][A
 76%|███████▋  | 169/221 [00:46<00:12,  4.08it/s][A
 77%|███████▋  | 170/221 [00:46<00:13,  3.83it/s][A
 77%|███████▋  | 171/221 [00:46<00:12,  3.94it/s][A
 78%|███████▊  | 172/221 [00:47<00:13,  3.72it/s][A
 78%|███████▊  | 173/221 [00:47<00:13,  3.51it/s][A
 79%|███████▊  | 174/221 [00:47<00:13,  3.43it/s][A
 79%|███████▉  | 175/221 [00:48<00:14,  3.15it/s][A
 80%|███████▉  | 176/221 [00:48<00:11,  3.87it/s][A
 80%|████████  | 177/221 [00:48<00:09,  4.66it/s][A
 81%|████████  | 178/221 [00:48<00:09,  4.56it/s][A
 81%|████████  | 179/221 [00:48<00:09,  4.50it/s][A
 81%|████████▏ | 180/221 [00:48<00:07,  5.15it/s][A
 82%|████████▏ | 181/221 [00:49<00:06,  5.94it/s][A
 82%|████████▏ | 182/221 [00:49<00:09,  4.24it/s][A
 83%|████████▎ | 183/221 [00:49<00:10,  3.54it/s][A
 83%|████████▎ | 184/221 [00:50<00:10,  3.39it/s][A
 84%|████████▎ | 185/221 [00:50<00:10,  3.38it/s][A
 84%|████████▍ | 186/221 [00:50<00:11,  3.07it/s][A
 85%|████████▍ | 187/221 [00:51<00:12,  2.81it/s][A
 85%|████████▌ | 188/221 [00:51<00:11,  2.81it/s][A
 86%|████████▌ | 189/221 [00:51<00:10,  3.08it/s][A
 86%|████████▌ | 190/221 [00:52<00:10,  2.90it/s][A
 87%|████████▋ | 192/221 [00:52<00:07,  3.76it/s][A
 87%|████████▋ | 193/221 [00:52<00:07,  3.89it/s][A
 88%|████████▊ | 194/221 [00:53<00:06,  4.18it/s][A
 88%|████████▊ | 195/221 [00:53<00:07,  3.69it/s][A
 89%|████████▊ | 196/221 [00:53<00:07,  3.46it/s][A
 89%|████████▉ | 197/221 [00:54<00:07,  3.24it/s][A
 90%|████████▉ | 198/221 [00:54<00:07,  3.28it/s][A
 90%|█████████ | 199/221 [00:54<00:06,  3.24it/s][A
 90%|█████████ | 200/221 [00:55<00:06,  3.16it/s][A
 91%|█████████ | 201/221 [00:55<00:06,  3.03it/s][A
 91%|█████████▏| 202/221 [00:55<00:06,  2.81it/s][A
 92%|█████████▏| 203/221 [00:56<00:06,  2.69it/s][A
 92%|█████████▏| 204/221 [00:56<00:06,  2.81it/s][A
 93%|█████████▎| 205/221 [00:56<00:04,  3.20it/s][A
 93%|█████████▎| 206/221 [00:56<00:04,  3.55it/s][A
 94%|█████████▎| 207/221 [00:57<00:03,  3.96it/s][A
 94%|█████████▍| 208/221 [00:57<00:03,  3.34it/s][A
 95%|█████████▍| 209/221 [00:57<00:03,  3.33it/s][A
 95%|█████████▌| 210/221 [00:57<00:02,  4.06it/s][A
 95%|█████████▌| 211/221 [00:58<00:03,  3.22it/s][A
 96%|█████████▌| 212/221 [00:58<00:02,  3.39it/s][A
 96%|█████████▋| 213/221 [00:58<00:02,  3.97it/s][A
 97%|█████████▋| 214/221 [00:59<00:02,  3.41it/s][A
 97%|█████████▋| 215/221 [00:59<00:01,  4.10it/s][A
 98%|█████████▊| 216/221 [00:59<00:01,  3.89it/s][A
 98%|█████████▊| 217/221 [00:59<00:01,  3.51it/s][A
 99%|█████████▊| 218/221 [01:00<00:00,  3.43it/s][A
 99%|█████████▉| 219/221 [01:00<00:00,  3.54it/s][A
100%|█████████▉| 220/221 [01:00<00:00,  4.18it/s][A
100%|██████████| 221/221 [01:00<00:00,  4.06it/s][A100%|██████████| 221/221 [01:00<00:00,  3.63it/s]
08/31/2024 20:27:10 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forward=====step 1999--===========

08/31/2024 20:27:10 - INFO - __main__ -   {'area_r1': 12.7, 'area_recall': '12.7/27.8/37.8', 'area_ravg': 26.1}
08/31/2024 20:27:10 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_backard=====step 1999--===========

08/31/2024 20:27:10 - INFO - __main__ -   {'forward_r1': 45.7, 'forward_recall': '45.7/76.0/83.4', 'forward_ravg': 68.4}
08/31/2024 20:27:10 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forw_with_video=====step 1999--===========

08/31/2024 20:27:10 - INFO - __main__ -   {'forward_r1': 61.4, 'forward_recall': '61.4/85.1/89.8', 'forward_ravg': 78.8}
08/31/2024 20:27:10 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itc_tv=====step 1999--===========

08/31/2024 20:27:10 - INFO - __main__ -   {'video_r1': 44.3, 'video_recall': '44.3/74.3/83.6', 'video_ravg': 67.4}
08/31/2024 20:27:10 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itc_tv====history best step: 999=======

08/31/2024 20:27:10 - INFO - __main__ -   {'video_r1': 46.0, 'video_recall': '46.0/74.9/83.0', 'video_ravg': 68.0}
08/31/2024 20:27:10 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itm_tv=====step 1999--===========

08/31/2024 20:27:10 - INFO - __main__ -   {'video_r1': 56.4, 'video_recall': '56.4/78.1/85.0', 'video_ravg': 73.2}
08/31/2024 20:27:10 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itm_tv====history best step: 999=======

08/31/2024 20:27:10 - INFO - __main__ -   {'video_r1': 56.9, 'video_recall': '56.9/78.3/85.3', 'video_ravg': 73.5}
08/31/2024 20:27:37 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.9152930974960327, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.045748088508844376, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7962708473205566, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.757311820983887}
 27%|██▋       | 2000/7431 [2:00:18<79:19:16, 52.58s/it] 27%|██▋       | 2001/7431 [2:00:21<56:56:43, 37.75s/it] 27%|██▋       | 2002/7431 [2:00:24<41:13:21, 27.33s/it] 27%|██▋       | 2003/7431 [2:00:28<30:23:01, 20.15s/it] 27%|██▋       | 2004/7431 [2:00:31<22:46:42, 15.11s/it] 27%|██▋       | 2005/7431 [2:00:34<17:27:13, 11.58s/it] 27%|██▋       | 2006/7431 [2:00:37<13:39:24,  9.06s/it] 27%|██▋       | 2007/7431 [2:00:41<11:01:22,  7.32s/it] 27%|██▋       | 2008/7431 [2:00:44<9:08:41,  6.07s/it]  27%|██▋       | 2009/7431 [2:00:47<7:51:33,  5.22s/it] 27%|██▋       | 2010/7431 [2:00:50<7:00:41,  4.66s/it] 27%|██▋       | 2011/7431 [2:00:54<6:24:16,  4.25s/it] 27%|██▋       | 2012/7431 [2:00:57<5:59:27,  3.98s/it] 27%|██▋       | 2013/7431 [2:01:01<5:45:12,  3.82s/it] 27%|██▋       | 2014/7431 [2:01:04<5:28:33,  3.64s/it] 27%|██▋       | 2015/7431 [2:01:07<5:19:21,  3.54s/it] 27%|██▋       | 2016/7431 [2:01:10<5:11:13,  3.45s/it] 27%|██▋       | 2017/7431 [2:01:14<5:06:06,  3.39s/it] 27%|██▋       | 2018/7431 [2:01:17<5:05:33,  3.39s/it] 27%|██▋       | 2019/7431 [2:01:20<5:01:10,  3.34s/it] 27%|██▋       | 2020/7431 [2:01:24<5:04:14,  3.37s/it] 27%|██▋       | 2021/7431 [2:01:27<5:00:15,  3.33s/it] 27%|██▋       | 2022/7431 [2:01:30<5:00:56,  3.34s/it] 27%|██▋       | 2023/7431 [2:01:34<5:09:02,  3.43s/it] 27%|██▋       | 2024/7431 [2:01:37<5:09:12,  3.43s/it] 27%|██▋       | 2025/7431 [2:01:40<5:03:25,  3.37s/it] 27%|██▋       | 2026/7431 [2:01:44<5:01:07,  3.34s/it] 27%|██▋       | 2027/7431 [2:01:47<5:02:11,  3.36s/it] 27%|██▋       | 2028/7431 [2:01:50<4:57:48,  3.31s/it] 27%|██▋       | 2029/7431 [2:01:54<4:54:43,  3.27s/it] 27%|██▋       | 2030/7431 [2:01:57<4:55:33,  3.28s/it] 27%|██▋       | 2031/7431 [2:02:00<4:51:37,  3.24s/it] 27%|██▋       | 2032/7431 [2:02:03<4:49:20,  3.22s/it] 27%|██▋       | 2033/7431 [2:02:06<4:51:14,  3.24s/it] 27%|██▋       | 2034/7431 [2:02:10<4:50:22,  3.23s/it] 27%|██▋       | 2035/7431 [2:02:13<4:50:21,  3.23s/it] 27%|██▋       | 2036/7431 [2:02:16<4:51:05,  3.24s/it] 27%|██▋       | 2037/7431 [2:02:20<4:57:28,  3.31s/it] 27%|██▋       | 2038/7431 [2:02:23<4:53:57,  3.27s/it] 27%|██▋       | 2039/7431 [2:02:26<4:57:27,  3.31s/it] 27%|██▋       | 2040/7431 [2:02:29<4:54:25,  3.28s/it] 27%|██▋       | 2041/7431 [2:02:33<4:55:20,  3.29s/it] 27%|██▋       | 2042/7431 [2:02:36<4:57:17,  3.31s/it] 27%|██▋       | 2043/7431 [2:02:39<4:56:14,  3.30s/it] 28%|██▊       | 2044/7431 [2:02:43<4:57:43,  3.32s/it] 28%|██▊       | 2045/7431 [2:02:46<4:58:28,  3.32s/it] 28%|██▊       | 2046/7431 [2:02:49<4:53:34,  3.27s/it] 28%|██▊       | 2047/7431 [2:02:53<4:57:51,  3.32s/it] 28%|██▊       | 2048/7431 [2:02:56<4:54:45,  3.29s/it] 28%|██▊       | 2049/7431 [2:02:59<4:54:46,  3.29s/it]08/31/2024 20:30:21 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.7015235424041748, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04696105420589447, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6948602199554443, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.443345069885254}
 28%|██▊       | 2050/7431 [2:03:02<4:56:52,  3.31s/it] 28%|██▊       | 2051/7431 [2:03:06<4:56:46,  3.31s/it] 28%|██▊       | 2052/7431 [2:03:09<5:00:01,  3.35s/it] 28%|██▊       | 2053/7431 [2:03:12<4:57:11,  3.32s/it] 28%|██▊       | 2054/7431 [2:03:16<4:54:11,  3.28s/it] 28%|██▊       | 2055/7431 [2:03:19<4:51:20,  3.25s/it] 28%|██▊       | 2056/7431 [2:03:22<4:52:12,  3.26s/it] 28%|██▊       | 2057/7431 [2:03:25<4:52:10,  3.26s/it] 28%|██▊       | 2058/7431 [2:03:29<4:50:05,  3.24s/it] 28%|██▊       | 2059/7431 [2:03:32<4:47:41,  3.21s/it] 28%|██▊       | 2060/7431 [2:03:35<4:52:48,  3.27s/it] 28%|██▊       | 2061/7431 [2:03:38<4:54:23,  3.29s/it] 28%|██▊       | 2062/7431 [2:03:42<4:56:48,  3.32s/it] 28%|██▊       | 2063/7431 [2:03:45<4:54:03,  3.29s/it] 28%|██▊       | 2064/7431 [2:03:48<4:52:59,  3.28s/it] 28%|██▊       | 2065/7431 [2:03:52<5:00:50,  3.36s/it] 28%|██▊       | 2066/7431 [2:03:55<4:58:32,  3.34s/it] 28%|██▊       | 2067/7431 [2:03:58<4:51:05,  3.26s/it] 28%|██▊       | 2068/7431 [2:04:02<4:52:35,  3.27s/it] 28%|██▊       | 2069/7431 [2:04:05<4:51:52,  3.27s/it] 28%|██▊       | 2070/7431 [2:04:08<4:54:14,  3.29s/it] 28%|██▊       | 2071/7431 [2:04:11<4:50:11,  3.25s/it] 28%|██▊       | 2072/7431 [2:04:15<4:54:32,  3.30s/it] 28%|██▊       | 2073/7431 [2:04:18<4:53:30,  3.29s/it] 28%|██▊       | 2074/7431 [2:04:21<4:52:23,  3.27s/it] 28%|██▊       | 2075/7431 [2:04:25<4:53:55,  3.29s/it] 28%|██▊       | 2076/7431 [2:04:28<4:52:47,  3.28s/it] 28%|██▊       | 2077/7431 [2:04:31<4:51:46,  3.27s/it] 28%|██▊       | 2078/7431 [2:04:34<4:47:05,  3.22s/it] 28%|██▊       | 2079/7431 [2:04:37<4:48:39,  3.24s/it] 28%|██▊       | 2080/7431 [2:04:41<4:51:28,  3.27s/it] 28%|██▊       | 2081/7431 [2:04:44<4:51:21,  3.27s/it] 28%|██▊       | 2082/7431 [2:04:47<4:56:01,  3.32s/it] 28%|██▊       | 2083/7431 [2:04:51<4:57:59,  3.34s/it] 28%|██▊       | 2084/7431 [2:04:54<4:56:22,  3.33s/it] 28%|██▊       | 2085/7431 [2:04:57<4:55:46,  3.32s/it] 28%|██▊       | 2086/7431 [2:05:01<4:54:11,  3.30s/it] 28%|██▊       | 2087/7431 [2:05:04<4:54:39,  3.31s/it] 28%|██▊       | 2088/7431 [2:05:07<4:52:07,  3.28s/it] 28%|██▊       | 2089/7431 [2:05:11<4:51:49,  3.28s/it] 28%|██▊       | 2090/7431 [2:05:14<4:52:54,  3.29s/it] 28%|██▊       | 2091/7431 [2:05:17<4:50:44,  3.27s/it] 28%|██▊       | 2092/7431 [2:05:20<4:49:19,  3.25s/it] 28%|██▊       | 2093/7431 [2:05:24<4:51:15,  3.27s/it] 28%|██▊       | 2094/7431 [2:05:27<4:51:05,  3.27s/it] 28%|██▊       | 2095/7431 [2:05:30<4:49:30,  3.26s/it] 28%|██▊       | 2096/7431 [2:05:33<4:51:51,  3.28s/it] 28%|██▊       | 2097/7431 [2:05:37<4:54:08,  3.31s/it] 28%|██▊       | 2098/7431 [2:05:40<4:53:37,  3.30s/it] 28%|██▊       | 2099/7431 [2:05:44<4:56:06,  3.33s/it]08/31/2024 20:33:05 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.5241001844406128, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.038920558989048004, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.575470447540283, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.138491153717041}
 28%|██▊       | 2100/7431 [2:05:47<4:53:49,  3.31s/it] 28%|██▊       | 2101/7431 [2:05:50<4:51:20,  3.28s/it] 28%|██▊       | 2102/7431 [2:05:53<4:55:35,  3.33s/it] 28%|██▊       | 2103/7431 [2:05:57<4:56:36,  3.34s/it] 28%|██▊       | 2104/7431 [2:06:00<4:56:44,  3.34s/it] 28%|██▊       | 2105/7431 [2:06:03<4:52:04,  3.29s/it] 28%|██▊       | 2106/7431 [2:06:07<4:52:25,  3.29s/it] 28%|██▊       | 2107/7431 [2:06:10<4:49:46,  3.27s/it] 28%|██▊       | 2108/7431 [2:06:13<4:49:06,  3.26s/it] 28%|██▊       | 2109/7431 [2:06:16<4:49:17,  3.26s/it] 28%|██▊       | 2110/7431 [2:06:20<4:51:31,  3.29s/it] 28%|██▊       | 2111/7431 [2:06:23<4:49:34,  3.27s/it] 28%|██▊       | 2112/7431 [2:06:26<4:44:44,  3.21s/it] 28%|██▊       | 2113/7431 [2:06:29<4:42:22,  3.19s/it] 28%|██▊       | 2114/7431 [2:06:32<4:43:50,  3.20s/it] 28%|██▊       | 2115/7431 [2:06:36<4:48:19,  3.25s/it] 28%|██▊       | 2116/7431 [2:06:39<4:47:35,  3.25s/it] 28%|██▊       | 2117/7431 [2:06:42<4:46:24,  3.23s/it] 29%|██▊       | 2118/7431 [2:06:45<4:47:39,  3.25s/it] 29%|██▊       | 2119/7431 [2:06:49<4:49:41,  3.27s/it] 29%|██▊       | 2120/7431 [2:06:52<4:51:33,  3.29s/it] 29%|██▊       | 2121/7431 [2:06:55<4:53:24,  3.32s/it] 29%|██▊       | 2122/7431 [2:06:59<4:53:10,  3.31s/it] 29%|██▊       | 2123/7431 [2:07:02<4:57:31,  3.36s/it] 29%|██▊       | 2124/7431 [2:07:05<4:53:53,  3.32s/it] 29%|██▊       | 2125/7431 [2:07:09<4:47:08,  3.25s/it] 29%|██▊       | 2126/7431 [2:07:12<4:48:54,  3.27s/it] 29%|██▊       | 2127/7431 [2:07:15<4:47:05,  3.25s/it] 29%|██▊       | 2128/7431 [2:07:18<4:50:31,  3.29s/it] 29%|██▊       | 2129/7431 [2:07:22<4:52:11,  3.31s/it] 29%|██▊       | 2130/7431 [2:07:25<4:51:41,  3.30s/it] 29%|██▊       | 2131/7431 [2:07:29<4:55:26,  3.34s/it] 29%|██▊       | 2132/7431 [2:07:32<4:49:35,  3.28s/it] 29%|██▊       | 2133/7431 [2:07:35<4:51:48,  3.30s/it] 29%|██▊       | 2134/7431 [2:07:38<4:48:02,  3.26s/it] 29%|██▊       | 2135/7431 [2:07:41<4:46:19,  3.24s/it] 29%|██▊       | 2136/7431 [2:07:45<4:45:42,  3.24s/it] 29%|██▉       | 2137/7431 [2:07:48<4:51:02,  3.30s/it] 29%|██▉       | 2138/7431 [2:07:51<4:50:09,  3.29s/it] 29%|██▉       | 2139/7431 [2:07:55<4:52:18,  3.31s/it] 29%|██▉       | 2140/7431 [2:07:58<4:54:53,  3.34s/it] 29%|██▉       | 2141/7431 [2:08:01<4:50:32,  3.30s/it] 29%|██▉       | 2142/7431 [2:08:04<4:48:11,  3.27s/it] 29%|██▉       | 2143/7431 [2:08:08<4:47:20,  3.26s/it] 29%|██▉       | 2144/7431 [2:08:11<4:45:38,  3.24s/it] 29%|██▉       | 2145/7431 [2:08:14<4:47:00,  3.26s/it] 29%|██▉       | 2146/7431 [2:08:17<4:45:13,  3.24s/it] 29%|██▉       | 2147/7431 [2:08:21<4:48:01,  3.27s/it] 29%|██▉       | 2148/7431 [2:08:24<4:49:29,  3.29s/it] 29%|██▉       | 2149/7431 [2:08:27<4:52:44,  3.33s/it]08/31/2024 20:35:49 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.9770123958587646, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04510030895471573, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7074389457702637, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.729551315307617}
 29%|██▉       | 2150/7431 [2:08:31<4:53:16,  3.33s/it] 29%|██▉       | 2151/7431 [2:08:34<4:53:15,  3.33s/it] 29%|██▉       | 2152/7431 [2:08:37<4:51:35,  3.31s/it] 29%|██▉       | 2153/7431 [2:08:41<4:50:16,  3.30s/it] 29%|██▉       | 2154/7431 [2:08:44<4:49:54,  3.30s/it] 29%|██▉       | 2155/7431 [2:08:47<4:46:53,  3.26s/it] 29%|██▉       | 2156/7431 [2:08:51<4:48:09,  3.28s/it] 29%|██▉       | 2157/7431 [2:08:54<4:45:35,  3.25s/it] 29%|██▉       | 2158/7431 [2:08:57<4:47:18,  3.27s/it] 29%|██▉       | 2159/7431 [2:09:00<4:44:32,  3.24s/it] 29%|██▉       | 2160/7431 [2:09:04<4:48:17,  3.28s/it] 29%|██▉       | 2161/7431 [2:09:07<4:50:24,  3.31s/it] 29%|██▉       | 2162/7431 [2:09:10<4:45:49,  3.25s/it] 29%|██▉       | 2163/7431 [2:09:13<4:48:17,  3.28s/it] 29%|██▉       | 2164/7431 [2:09:17<4:46:31,  3.26s/it] 29%|██▉       | 2165/7431 [2:09:20<4:44:43,  3.24s/it] 29%|██▉       | 2166/7431 [2:09:23<4:44:00,  3.24s/it] 29%|██▉       | 2167/7431 [2:09:26<4:48:27,  3.29s/it] 29%|██▉       | 2168/7431 [2:09:30<4:47:36,  3.28s/it] 29%|██▉       | 2169/7431 [2:09:33<4:42:00,  3.22s/it] 29%|██▉       | 2170/7431 [2:09:36<4:41:14,  3.21s/it] 29%|██▉       | 2171/7431 [2:09:39<4:42:34,  3.22s/it] 29%|██▉       | 2172/7431 [2:09:42<4:43:41,  3.24s/it] 29%|██▉       | 2173/7431 [2:09:46<4:50:19,  3.31s/it] 29%|██▉       | 2174/7431 [2:09:49<4:52:34,  3.34s/it] 29%|██▉       | 2175/7431 [2:09:53<4:54:51,  3.37s/it] 29%|██▉       | 2176/7431 [2:09:56<4:48:37,  3.30s/it] 29%|██▉       | 2177/7431 [2:09:59<4:45:20,  3.26s/it] 29%|██▉       | 2178/7431 [2:10:02<4:46:03,  3.27s/it] 29%|██▉       | 2179/7431 [2:10:06<4:48:16,  3.29s/it] 29%|██▉       | 2180/7431 [2:10:09<4:49:10,  3.30s/it] 29%|██▉       | 2181/7431 [2:10:12<4:44:15,  3.25s/it] 29%|██▉       | 2182/7431 [2:10:15<4:44:48,  3.26s/it] 29%|██▉       | 2183/7431 [2:10:19<4:44:14,  3.25s/it] 29%|██▉       | 2184/7431 [2:10:22<4:41:38,  3.22s/it] 29%|██▉       | 2185/7431 [2:10:25<4:46:15,  3.27s/it] 29%|██▉       | 2186/7431 [2:10:28<4:44:13,  3.25s/it] 29%|██▉       | 2187/7431 [2:10:32<4:47:17,  3.29s/it] 29%|██▉       | 2188/7431 [2:10:35<4:45:06,  3.26s/it] 29%|██▉       | 2189/7431 [2:10:38<4:42:13,  3.23s/it] 29%|██▉       | 2190/7431 [2:10:42<4:54:16,  3.37s/it] 29%|██▉       | 2191/7431 [2:10:45<4:50:39,  3.33s/it] 29%|██▉       | 2192/7431 [2:10:48<4:48:00,  3.30s/it] 30%|██▉       | 2193/7431 [2:10:52<4:45:10,  3.27s/it] 30%|██▉       | 2194/7431 [2:10:55<4:44:55,  3.26s/it] 30%|██▉       | 2195/7431 [2:10:58<4:49:49,  3.32s/it] 30%|██▉       | 2196/7431 [2:11:01<4:44:59,  3.27s/it] 30%|██▉       | 2197/7431 [2:11:05<4:42:27,  3.24s/it] 30%|██▉       | 2198/7431 [2:11:08<4:40:18,  3.21s/it] 30%|██▉       | 2199/7431 [2:11:11<4:43:03,  3.25s/it]08/31/2024 20:38:33 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.745950698852539, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03973992168903351, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7379040718078613, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.523594856262207}
 30%|██▉       | 2200/7431 [2:11:14<4:43:48,  3.26s/it] 30%|██▉       | 2201/7431 [2:11:18<4:45:05,  3.27s/it] 30%|██▉       | 2202/7431 [2:11:21<4:51:36,  3.35s/it] 30%|██▉       | 2203/7431 [2:11:24<4:51:05,  3.34s/it] 30%|██▉       | 2204/7431 [2:11:28<4:49:39,  3.32s/it] 30%|██▉       | 2205/7431 [2:11:31<4:47:40,  3.30s/it] 30%|██▉       | 2206/7431 [2:11:34<4:46:28,  3.29s/it] 30%|██▉       | 2207/7431 [2:11:38<4:47:04,  3.30s/it] 30%|██▉       | 2208/7431 [2:11:41<4:45:13,  3.28s/it] 30%|██▉       | 2209/7431 [2:11:44<4:48:13,  3.31s/it] 30%|██▉       | 2210/7431 [2:11:47<4:43:44,  3.26s/it] 30%|██▉       | 2211/7431 [2:11:51<4:44:36,  3.27s/it] 30%|██▉       | 2212/7431 [2:11:54<4:46:01,  3.29s/it] 30%|██▉       | 2213/7431 [2:11:58<4:55:04,  3.39s/it] 30%|██▉       | 2214/7431 [2:12:01<4:54:35,  3.39s/it] 30%|██▉       | 2215/7431 [2:12:04<4:48:18,  3.32s/it] 30%|██▉       | 2216/7431 [2:12:07<4:42:50,  3.25s/it] 30%|██▉       | 2217/7431 [2:12:11<4:49:21,  3.33s/it] 30%|██▉       | 2218/7431 [2:12:14<4:52:37,  3.37s/it] 30%|██▉       | 2219/7431 [2:12:17<4:47:45,  3.31s/it] 30%|██▉       | 2220/7431 [2:12:21<4:46:36,  3.30s/it] 30%|██▉       | 2221/7431 [2:12:24<4:49:46,  3.34s/it] 30%|██▉       | 2222/7431 [2:12:27<4:48:55,  3.33s/it] 30%|██▉       | 2223/7431 [2:12:31<4:49:06,  3.33s/it] 30%|██▉       | 2224/7431 [2:12:34<4:48:05,  3.32s/it] 30%|██▉       | 2225/7431 [2:12:37<4:46:57,  3.31s/it] 30%|██▉       | 2226/7431 [2:12:41<4:54:33,  3.40s/it] 30%|██▉       | 2227/7431 [2:12:44<4:48:19,  3.32s/it] 30%|██▉       | 2228/7431 [2:12:47<4:46:02,  3.30s/it] 30%|██▉       | 2229/7431 [2:12:51<4:43:36,  3.27s/it] 30%|███       | 2230/7431 [2:12:54<4:46:15,  3.30s/it] 30%|███       | 2231/7431 [2:12:57<4:46:40,  3.31s/it] 30%|███       | 2232/7431 [2:13:00<4:46:10,  3.30s/it] 30%|███       | 2233/7431 [2:13:04<4:42:37,  3.26s/it] 30%|███       | 2234/7431 [2:13:07<4:39:38,  3.23s/it] 30%|███       | 2235/7431 [2:13:10<4:43:27,  3.27s/it] 30%|███       | 2236/7431 [2:13:13<4:42:33,  3.26s/it] 30%|███       | 2237/7431 [2:13:17<4:43:52,  3.28s/it] 30%|███       | 2238/7431 [2:13:20<4:42:36,  3.27s/it] 30%|███       | 2239/7431 [2:13:23<4:44:33,  3.29s/it] 30%|███       | 2240/7431 [2:13:27<4:43:28,  3.28s/it] 30%|███       | 2241/7431 [2:13:30<4:42:11,  3.26s/it] 30%|███       | 2242/7431 [2:13:33<4:44:52,  3.29s/it] 30%|███       | 2243/7431 [2:13:36<4:42:34,  3.27s/it] 30%|███       | 2244/7431 [2:13:40<4:39:59,  3.24s/it] 30%|███       | 2245/7431 [2:13:43<4:40:19,  3.24s/it] 30%|███       | 2246/7431 [2:13:46<4:44:04,  3.29s/it] 30%|███       | 2247/7431 [2:13:50<4:50:54,  3.37s/it] 30%|███       | 2248/7431 [2:13:53<4:47:19,  3.33s/it] 30%|███       | 2249/7431 [2:13:56<4:48:26,  3.34s/it]08/31/2024 20:41:18 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.217111110687256, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.047483764588832855, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.696226119995117, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.960821151733398}
 30%|███       | 2250/7431 [2:14:00<4:44:57,  3.30s/it] 30%|███       | 2251/7431 [2:14:03<4:45:05,  3.30s/it] 30%|███       | 2252/7431 [2:14:06<4:42:50,  3.28s/it] 30%|███       | 2253/7431 [2:14:10<4:47:46,  3.33s/it] 30%|███       | 2254/7431 [2:14:13<4:46:47,  3.32s/it] 30%|███       | 2255/7431 [2:14:16<4:46:45,  3.32s/it] 30%|███       | 2256/7431 [2:14:19<4:44:50,  3.30s/it] 30%|███       | 2257/7431 [2:14:23<4:44:20,  3.30s/it] 30%|███       | 2258/7431 [2:14:26<4:46:54,  3.33s/it] 30%|███       | 2259/7431 [2:14:29<4:45:42,  3.31s/it] 30%|███       | 2260/7431 [2:14:33<4:48:09,  3.34s/it] 30%|███       | 2261/7431 [2:14:36<4:41:40,  3.27s/it] 30%|███       | 2262/7431 [2:14:39<4:45:48,  3.32s/it] 30%|███       | 2263/7431 [2:14:43<4:46:53,  3.33s/it] 30%|███       | 2264/7431 [2:14:46<4:43:25,  3.29s/it] 30%|███       | 2265/7431 [2:14:49<4:38:54,  3.24s/it] 30%|███       | 2266/7431 [2:14:52<4:42:13,  3.28s/it] 31%|███       | 2267/7431 [2:14:55<4:38:17,  3.23s/it] 31%|███       | 2268/7431 [2:14:59<4:43:44,  3.30s/it] 31%|███       | 2269/7431 [2:15:02<4:39:12,  3.25s/it] 31%|███       | 2270/7431 [2:15:05<4:38:01,  3.23s/it] 31%|███       | 2271/7431 [2:15:09<4:42:32,  3.29s/it] 31%|███       | 2272/7431 [2:15:12<4:36:53,  3.22s/it] 31%|███       | 2273/7431 [2:15:15<4:40:44,  3.27s/it] 31%|███       | 2274/7431 [2:15:18<4:38:31,  3.24s/it] 31%|███       | 2275/7431 [2:15:21<4:35:28,  3.21s/it] 31%|███       | 2276/7431 [2:15:25<4:41:57,  3.28s/it] 31%|███       | 2277/7431 [2:15:28<4:44:53,  3.32s/it] 31%|███       | 2278/7431 [2:15:32<4:45:56,  3.33s/it] 31%|███       | 2279/7431 [2:15:35<4:41:44,  3.28s/it] 31%|███       | 2280/7431 [2:15:38<4:48:03,  3.36s/it] 31%|███       | 2281/7431 [2:15:41<4:41:05,  3.27s/it] 31%|███       | 2282/7431 [2:15:45<4:42:11,  3.29s/it] 31%|███       | 2283/7431 [2:15:48<4:40:32,  3.27s/it] 31%|███       | 2284/7431 [2:15:51<4:38:42,  3.25s/it] 31%|███       | 2285/7431 [2:15:54<4:35:42,  3.21s/it] 31%|███       | 2286/7431 [2:15:58<4:43:06,  3.30s/it] 31%|███       | 2287/7431 [2:16:01<4:45:15,  3.33s/it] 31%|███       | 2288/7431 [2:16:05<4:50:37,  3.39s/it] 31%|███       | 2289/7431 [2:16:08<4:49:20,  3.38s/it] 31%|███       | 2290/7431 [2:16:11<4:46:09,  3.34s/it] 31%|███       | 2291/7431 [2:16:15<4:55:49,  3.45s/it] 31%|███       | 2292/7431 [2:16:18<4:52:32,  3.42s/it] 31%|███       | 2293/7431 [2:16:21<4:43:25,  3.31s/it] 31%|███       | 2294/7431 [2:16:25<4:43:57,  3.32s/it] 31%|███       | 2295/7431 [2:16:28<4:41:59,  3.29s/it] 31%|███       | 2296/7431 [2:16:31<4:39:45,  3.27s/it] 31%|███       | 2297/7431 [2:16:35<4:40:55,  3.28s/it] 31%|███       | 2298/7431 [2:16:38<4:42:18,  3.30s/it] 31%|███       | 2299/7431 [2:16:41<4:39:25,  3.27s/it]08/31/2024 20:44:03 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.830333948135376, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04928935319185257, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7373056411743164, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.616929054260254}
 31%|███       | 2300/7431 [2:16:44<4:39:47,  3.27s/it] 31%|███       | 2301/7431 [2:16:48<4:45:08,  3.34s/it] 31%|███       | 2302/7431 [2:16:51<4:42:37,  3.31s/it] 31%|███       | 2303/7431 [2:16:54<4:38:37,  3.26s/it] 31%|███       | 2304/7431 [2:16:57<4:37:08,  3.24s/it] 31%|███       | 2305/7431 [2:17:01<4:41:14,  3.29s/it] 31%|███       | 2306/7431 [2:17:04<4:41:16,  3.29s/it] 31%|███       | 2307/7431 [2:17:08<4:46:11,  3.35s/it] 31%|███       | 2308/7431 [2:17:11<4:40:58,  3.29s/it] 31%|███       | 2309/7431 [2:17:14<4:37:28,  3.25s/it] 31%|███       | 2310/7431 [2:17:17<4:38:01,  3.26s/it] 31%|███       | 2311/7431 [2:17:21<4:40:00,  3.28s/it] 31%|███       | 2312/7431 [2:17:24<4:41:06,  3.29s/it] 31%|███       | 2313/7431 [2:17:27<4:43:25,  3.32s/it] 31%|███       | 2314/7431 [2:17:31<4:45:40,  3.35s/it] 31%|███       | 2315/7431 [2:17:34<4:44:26,  3.34s/it] 31%|███       | 2316/7431 [2:17:37<4:39:13,  3.28s/it] 31%|███       | 2317/7431 [2:17:41<4:44:12,  3.33s/it] 31%|███       | 2318/7431 [2:17:44<4:38:34,  3.27s/it] 31%|███       | 2319/7431 [2:17:47<4:37:55,  3.26s/it] 31%|███       | 2320/7431 [2:17:50<4:39:31,  3.28s/it] 31%|███       | 2321/7431 [2:17:54<4:40:40,  3.30s/it] 31%|███       | 2322/7431 [2:17:57<4:41:04,  3.30s/it] 31%|███▏      | 2323/7431 [2:18:00<4:40:51,  3.30s/it] 31%|███▏      | 2324/7431 [2:18:03<4:39:26,  3.28s/it] 31%|███▏      | 2325/7431 [2:18:07<4:33:38,  3.22s/it] 31%|███▏      | 2326/7431 [2:18:10<4:36:33,  3.25s/it] 31%|███▏      | 2327/7431 [2:18:13<4:35:09,  3.23s/it] 31%|███▏      | 2328/7431 [2:18:17<4:43:55,  3.34s/it] 31%|███▏      | 2329/7431 [2:18:20<4:43:11,  3.33s/it] 31%|███▏      | 2330/7431 [2:18:23<4:40:10,  3.30s/it] 31%|███▏      | 2331/7431 [2:18:26<4:41:41,  3.31s/it] 31%|███▏      | 2332/7431 [2:18:30<4:43:30,  3.34s/it] 31%|███▏      | 2333/7431 [2:18:33<4:44:30,  3.35s/it] 31%|███▏      | 2334/7431 [2:18:37<4:44:34,  3.35s/it] 31%|███▏      | 2335/7431 [2:18:40<4:47:05,  3.38s/it] 31%|███▏      | 2336/7431 [2:18:43<4:45:15,  3.36s/it] 31%|███▏      | 2337/7431 [2:18:47<4:40:06,  3.30s/it] 31%|███▏      | 2338/7431 [2:18:50<4:42:15,  3.33s/it] 31%|███▏      | 2339/7431 [2:18:53<4:43:24,  3.34s/it] 31%|███▏      | 2340/7431 [2:18:57<4:44:06,  3.35s/it] 32%|███▏      | 2341/7431 [2:19:00<4:44:59,  3.36s/it] 32%|███▏      | 2342/7431 [2:19:03<4:42:29,  3.33s/it] 32%|███▏      | 2343/7431 [2:19:07<4:40:01,  3.30s/it] 32%|███▏      | 2344/7431 [2:19:10<4:37:57,  3.28s/it] 32%|███▏      | 2345/7431 [2:19:13<4:38:00,  3.28s/it] 32%|███▏      | 2346/7431 [2:19:16<4:35:41,  3.25s/it] 32%|███▏      | 2347/7431 [2:19:19<4:33:57,  3.23s/it] 32%|███▏      | 2348/7431 [2:19:23<4:39:35,  3.30s/it] 32%|███▏      | 2349/7431 [2:19:26<4:35:04,  3.25s/it]08/31/2024 20:46:48 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.9424458742141724, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.048046477138996124, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7472128868103027, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.737705230712891}
 32%|███▏      | 2350/7431 [2:19:30<4:43:08,  3.34s/it] 32%|███▏      | 2351/7431 [2:19:33<4:46:14,  3.38s/it] 32%|███▏      | 2352/7431 [2:19:36<4:44:03,  3.36s/it] 32%|███▏      | 2353/7431 [2:19:40<4:42:20,  3.34s/it] 32%|███▏      | 2354/7431 [2:19:43<4:41:53,  3.33s/it] 32%|███▏      | 2355/7431 [2:19:46<4:38:58,  3.30s/it] 32%|███▏      | 2356/7431 [2:19:50<4:47:45,  3.40s/it] 32%|███▏      | 2357/7431 [2:19:53<4:52:28,  3.46s/it] 32%|███▏      | 2358/7431 [2:19:57<4:45:36,  3.38s/it] 32%|███▏      | 2359/7431 [2:20:00<4:47:21,  3.40s/it] 32%|███▏      | 2360/7431 [2:20:03<4:46:09,  3.39s/it] 32%|███▏      | 2361/7431 [2:20:07<4:40:32,  3.32s/it] 32%|███▏      | 2362/7431 [2:20:10<4:41:09,  3.33s/it] 32%|███▏      | 2363/7431 [2:20:13<4:45:16,  3.38s/it] 32%|███▏      | 2364/7431 [2:20:17<4:39:50,  3.31s/it] 32%|███▏      | 2365/7431 [2:20:20<4:39:03,  3.31s/it] 32%|███▏      | 2366/7431 [2:20:23<4:35:54,  3.27s/it] 32%|███▏      | 2367/7431 [2:20:26<4:36:28,  3.28s/it] 32%|███▏      | 2368/7431 [2:20:30<4:44:47,  3.38s/it] 32%|███▏      | 2369/7431 [2:20:33<4:43:26,  3.36s/it] 32%|███▏      | 2370/7431 [2:20:36<4:36:53,  3.28s/it] 32%|███▏      | 2371/7431 [2:20:40<4:40:37,  3.33s/it] 32%|███▏      | 2372/7431 [2:20:43<4:36:20,  3.28s/it] 32%|███▏      | 2373/7431 [2:20:46<4:34:09,  3.25s/it] 32%|███▏      | 2374/7431 [2:20:49<4:34:56,  3.26s/it] 32%|███▏      | 2375/7431 [2:20:53<4:34:03,  3.25s/it] 32%|███▏      | 2376/7431 [2:20:56<4:34:19,  3.26s/it] 32%|███▏      | 2377/7431 [2:20:59<4:35:30,  3.27s/it] 32%|███▏      | 2378/7431 [2:21:03<4:37:27,  3.29s/it] 32%|███▏      | 2379/7431 [2:21:06<4:36:32,  3.28s/it] 32%|███▏      | 2380/7431 [2:21:09<4:35:09,  3.27s/it] 32%|███▏      | 2381/7431 [2:21:12<4:37:44,  3.30s/it] 32%|███▏      | 2382/7431 [2:21:16<4:36:28,  3.29s/it] 32%|███▏      | 2383/7431 [2:21:19<4:38:09,  3.31s/it] 32%|███▏      | 2384/7431 [2:21:23<4:42:44,  3.36s/it] 32%|███▏      | 2385/7431 [2:21:26<4:38:37,  3.31s/it] 32%|███▏      | 2386/7431 [2:21:29<4:38:56,  3.32s/it] 32%|███▏      | 2387/7431 [2:21:32<4:36:19,  3.29s/it] 32%|███▏      | 2388/7431 [2:21:36<4:37:33,  3.30s/it] 32%|███▏      | 2389/7431 [2:21:39<4:38:41,  3.32s/it] 32%|███▏      | 2390/7431 [2:21:42<4:40:27,  3.34s/it] 32%|███▏      | 2391/7431 [2:21:46<4:36:45,  3.29s/it] 32%|███▏      | 2392/7431 [2:21:49<4:35:38,  3.28s/it] 32%|███▏      | 2393/7431 [2:21:52<4:34:55,  3.27s/it] 32%|███▏      | 2394/7431 [2:21:55<4:33:53,  3.26s/it] 32%|███▏      | 2395/7431 [2:21:59<4:38:12,  3.31s/it] 32%|███▏      | 2396/7431 [2:22:02<4:33:58,  3.26s/it] 32%|███▏      | 2397/7431 [2:22:05<4:31:32,  3.24s/it] 32%|███▏      | 2398/7431 [2:22:08<4:32:46,  3.25s/it] 32%|███▏      | 2399/7431 [2:22:12<4:38:23,  3.32s/it]08/31/2024 20:49:34 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.7392479181289673, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.05035515874624252, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7280468940734863, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.517650127410889}
 32%|███▏      | 2400/7431 [2:22:15<4:35:23,  3.28s/it] 32%|███▏      | 2401/7431 [2:22:18<4:35:29,  3.29s/it] 32%|███▏      | 2402/7431 [2:22:22<4:38:28,  3.32s/it] 32%|███▏      | 2403/7431 [2:22:25<4:32:56,  3.26s/it] 32%|███▏      | 2404/7431 [2:22:28<4:32:55,  3.26s/it] 32%|███▏      | 2405/7431 [2:22:31<4:33:16,  3.26s/it] 32%|███▏      | 2406/7431 [2:22:35<4:35:52,  3.29s/it] 32%|███▏      | 2407/7431 [2:22:38<4:29:59,  3.22s/it] 32%|███▏      | 2408/7431 [2:22:41<4:31:18,  3.24s/it] 32%|███▏      | 2409/7431 [2:22:44<4:31:56,  3.25s/it] 32%|███▏      | 2410/7431 [2:22:48<4:32:26,  3.26s/it] 32%|███▏      | 2411/7431 [2:22:51<4:36:16,  3.30s/it] 32%|███▏      | 2412/7431 [2:22:54<4:36:19,  3.30s/it] 32%|███▏      | 2413/7431 [2:22:58<4:33:07,  3.27s/it] 32%|███▏      | 2414/7431 [2:23:01<4:31:08,  3.24s/it] 32%|███▏      | 2415/7431 [2:23:04<4:33:37,  3.27s/it] 33%|███▎      | 2416/7431 [2:23:07<4:33:38,  3.27s/it] 33%|███▎      | 2417/7431 [2:23:11<4:34:45,  3.29s/it] 33%|███▎      | 2418/7431 [2:23:14<4:31:28,  3.25s/it] 33%|███▎      | 2419/7431 [2:23:17<4:31:18,  3.25s/it] 33%|███▎      | 2420/7431 [2:23:20<4:34:02,  3.28s/it] 33%|███▎      | 2421/7431 [2:23:24<4:38:36,  3.34s/it] 33%|███▎      | 2422/7431 [2:23:27<4:30:54,  3.25s/it] 33%|███▎      | 2423/7431 [2:23:30<4:33:28,  3.28s/it] 33%|███▎      | 2424/7431 [2:23:34<4:37:02,  3.32s/it] 33%|███▎      | 2425/7431 [2:23:37<4:37:15,  3.32s/it] 33%|███▎      | 2426/7431 [2:23:40<4:36:34,  3.32s/it] 33%|███▎      | 2427/7431 [2:23:43<4:32:06,  3.26s/it] 33%|███▎      | 2428/7431 [2:23:47<4:28:52,  3.22s/it] 33%|███▎      | 2429/7431 [2:23:50<4:36:05,  3.31s/it] 33%|███▎      | 2430/7431 [2:23:53<4:35:41,  3.31s/it] 33%|███▎      | 2431/7431 [2:23:57<4:36:29,  3.32s/it] 33%|███▎      | 2432/7431 [2:24:00<4:42:26,  3.39s/it] 33%|███▎      | 2433/7431 [2:24:04<4:39:32,  3.36s/it] 33%|███▎      | 2434/7431 [2:24:07<4:38:57,  3.35s/it] 33%|███▎      | 2435/7431 [2:24:10<4:36:32,  3.32s/it] 33%|███▎      | 2436/7431 [2:24:13<4:34:26,  3.30s/it] 33%|███▎      | 2437/7431 [2:24:17<4:39:58,  3.36s/it] 33%|███▎      | 2438/7431 [2:24:20<4:34:27,  3.30s/it] 33%|███▎      | 2439/7431 [2:24:23<4:30:30,  3.25s/it] 33%|███▎      | 2440/7431 [2:24:26<4:30:24,  3.25s/it] 33%|███▎      | 2441/7431 [2:24:30<4:30:50,  3.26s/it] 33%|███▎      | 2442/7431 [2:24:33<4:35:01,  3.31s/it] 33%|███▎      | 2443/7431 [2:24:36<4:34:12,  3.30s/it] 33%|███▎      | 2444/7431 [2:24:40<4:35:55,  3.32s/it] 33%|███▎      | 2445/7431 [2:24:43<4:35:18,  3.31s/it] 33%|███▎      | 2446/7431 [2:24:46<4:33:21,  3.29s/it] 33%|███▎      | 2447/7431 [2:24:50<4:34:48,  3.31s/it] 33%|███▎      | 2448/7431 [2:24:53<4:36:04,  3.32s/it] 33%|███▎      | 2449/7431 [2:24:56<4:35:10,  3.31s/it]08/31/2024 20:52:18 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.8749706745147705, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.042423099279403687, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.784449338912964, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.70184326171875}
 33%|███▎      | 2450/7431 [2:25:00<4:33:24,  3.29s/it] 33%|███▎      | 2451/7431 [2:25:03<4:31:54,  3.28s/it] 33%|███▎      | 2452/7431 [2:25:06<4:31:00,  3.27s/it] 33%|███▎      | 2453/7431 [2:25:09<4:31:55,  3.28s/it] 33%|███▎      | 2454/7431 [2:25:13<4:33:50,  3.30s/it] 33%|███▎      | 2455/7431 [2:25:16<4:37:09,  3.34s/it] 33%|███▎      | 2456/7431 [2:25:19<4:35:21,  3.32s/it] 33%|███▎      | 2457/7431 [2:25:23<4:32:54,  3.29s/it] 33%|███▎      | 2458/7431 [2:25:26<4:35:33,  3.32s/it] 33%|███▎      | 2459/7431 [2:25:29<4:32:27,  3.29s/it] 33%|███▎      | 2460/7431 [2:25:33<4:34:14,  3.31s/it] 33%|███▎      | 2461/7431 [2:25:36<4:28:32,  3.24s/it] 33%|███▎      | 2462/7431 [2:25:39<4:19:40,  3.14s/it] 33%|███▎      | 2463/7431 [2:25:41<4:13:29,  3.06s/it] 33%|███▎      | 2464/7431 [2:25:44<4:08:55,  3.01s/it] 33%|███▎      | 2465/7431 [2:25:47<4:05:56,  2.97s/it] 33%|███▎      | 2466/7431 [2:25:50<4:03:54,  2.95s/it] 33%|███▎      | 2467/7431 [2:25:53<4:02:19,  2.93s/it] 33%|███▎      | 2468/7431 [2:25:56<4:00:51,  2.91s/it] 33%|███▎      | 2469/7431 [2:25:59<4:00:06,  2.90s/it] 33%|███▎      | 2470/7431 [2:26:02<3:59:44,  2.90s/it] 33%|███▎      | 2471/7431 [2:26:05<3:59:33,  2.90s/it] 33%|███▎      | 2472/7431 [2:26:07<3:58:57,  2.89s/it] 33%|███▎      | 2473/7431 [2:26:10<3:58:46,  2.89s/it] 33%|███▎      | 2474/7431 [2:26:13<3:58:39,  2.89s/it] 33%|███▎      | 2475/7431 [2:26:16<3:58:16,  2.88s/it] 33%|███▎      | 2476/7431 [2:26:19<3:58:19,  2.89s/it]/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
 33%|███▎      | 2477/7431 [2:27:02<20:44:01, 15.07s/it] 33%|███▎      | 2478/7431 [2:27:09<17:18:43, 12.58s/it] 33%|███▎      | 2479/7431 [2:27:14<13:53:09, 10.09s/it] 33%|███▎      | 2480/7431 [2:27:17<11:12:18,  8.15s/it] 33%|███▎      | 2481/7431 [2:27:21<9:35:46,  6.98s/it]  33%|███▎      | 2482/7431 [2:27:25<8:10:23,  5.95s/it] 33%|███▎      | 2483/7431 [2:27:28<7:03:13,  5.13s/it] 33%|███▎      | 2484/7431 [2:27:31<6:15:47,  4.56s/it] 33%|███▎      | 2485/7431 [2:27:35<5:40:55,  4.14s/it] 33%|███▎      | 2486/7431 [2:27:38<5:19:48,  3.88s/it] 33%|███▎      | 2487/7431 [2:27:41<4:59:57,  3.64s/it] 33%|███▎      | 2488/7431 [2:27:44<4:49:47,  3.52s/it] 33%|███▎      | 2489/7431 [2:27:47<4:45:02,  3.46s/it] 34%|███▎      | 2490/7431 [2:27:51<4:38:26,  3.38s/it] 34%|███▎      | 2491/7431 [2:27:54<4:33:44,  3.32s/it] 34%|███▎      | 2492/7431 [2:27:57<4:33:02,  3.32s/it] 34%|███▎      | 2493/7431 [2:28:00<4:32:53,  3.32s/it] 34%|███▎      | 2494/7431 [2:28:04<4:31:11,  3.30s/it] 34%|███▎      | 2495/7431 [2:28:07<4:32:13,  3.31s/it] 34%|███▎      | 2496/7431 [2:28:10<4:35:49,  3.35s/it] 34%|███▎      | 2497/7431 [2:28:14<4:32:48,  3.32s/it] 34%|███▎      | 2498/7431 [2:28:17<4:31:06,  3.30s/it] 34%|███▎      | 2499/7431 [2:28:20<4:31:37,  3.30s/it]08/31/2024 20:55:41 - INFO - __main__ -   evaluate on ret%tv--msrvtt_ret task
08/31/2024 20:55:41 - INFO - __main__ -   start running ret%tv validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  1%|          | 2/221 [00:00<00:55,  3.95it/s][A
  1%|▏         | 3/221 [00:00<00:59,  3.65it/s][A
  2%|▏         | 4/221 [00:00<00:52,  4.17it/s][A
  2%|▏         | 5/221 [00:01<00:45,  4.74it/s][A
  3%|▎         | 6/221 [00:01<00:39,  5.48it/s][A
  3%|▎         | 7/221 [00:01<00:39,  5.40it/s][A
  4%|▎         | 8/221 [00:01<00:38,  5.55it/s][A
  4%|▍         | 9/221 [00:01<00:35,  5.98it/s][A
  5%|▍         | 10/221 [00:02<00:48,  4.36it/s][A
  5%|▍         | 11/221 [00:02<00:46,  4.53it/s][A
  5%|▌         | 12/221 [00:02<00:45,  4.60it/s][A
  6%|▌         | 13/221 [00:02<00:55,  3.76it/s][A
  6%|▋         | 14/221 [00:03<00:49,  4.22it/s][A
  7%|▋         | 15/221 [00:03<00:44,  4.58it/s][A
  7%|▋         | 16/221 [00:03<00:56,  3.61it/s][A
  8%|▊         | 17/221 [00:04<00:59,  3.46it/s][A
  8%|▊         | 18/221 [00:04<00:48,  4.16it/s][A
  9%|▊         | 19/221 [00:04<00:51,  3.93it/s][A
  9%|▉         | 20/221 [00:04<00:42,  4.78it/s][A
 10%|▉         | 21/221 [00:04<00:45,  4.41it/s][A
 10%|▉         | 22/221 [00:05<00:47,  4.22it/s][A
 10%|█         | 23/221 [00:05<00:40,  4.89it/s][A
 11%|█         | 24/221 [00:05<00:38,  5.12it/s][A
 11%|█▏        | 25/221 [00:05<00:45,  4.29it/s][A
 12%|█▏        | 26/221 [00:05<00:46,  4.18it/s][A
 12%|█▏        | 27/221 [00:06<00:49,  3.89it/s][A
 13%|█▎        | 28/221 [00:06<00:49,  3.90it/s][A
 13%|█▎        | 29/221 [00:07<01:05,  2.93it/s][A
 14%|█▎        | 30/221 [00:07<01:09,  2.77it/s][A
 14%|█▍        | 31/221 [00:07<01:02,  3.03it/s][A
 14%|█▍        | 32/221 [00:07<00:50,  3.72it/s][A
 15%|█▍        | 33/221 [00:08<00:46,  4.07it/s][A
 15%|█▌        | 34/221 [00:08<00:43,  4.31it/s][A
 16%|█▌        | 35/221 [00:08<00:55,  3.37it/s][A
 16%|█▋        | 36/221 [00:08<00:57,  3.24it/s][A
 17%|█▋        | 37/221 [00:09<00:55,  3.30it/s][A
 17%|█▋        | 38/221 [00:09<00:54,  3.36it/s][A
 18%|█▊        | 39/221 [00:09<00:50,  3.64it/s][A
 18%|█▊        | 40/221 [00:10<00:54,  3.31it/s][A
 19%|█▊        | 41/221 [00:10<00:59,  3.03it/s][A
 19%|█▉        | 42/221 [00:10<00:47,  3.77it/s][A
 19%|█▉        | 43/221 [00:10<00:44,  4.04it/s][A
 20%|█▉        | 44/221 [00:11<00:43,  4.04it/s][A
 20%|██        | 45/221 [00:11<00:50,  3.48it/s][A
 21%|██        | 46/221 [00:11<00:55,  3.17it/s][A
 21%|██▏       | 47/221 [00:11<00:43,  3.97it/s][A
 22%|██▏       | 48/221 [00:12<00:41,  4.14it/s][A
 22%|██▏       | 49/221 [00:12<00:49,  3.48it/s][A
 23%|██▎       | 50/221 [00:12<00:52,  3.28it/s][A
 23%|██▎       | 51/221 [00:13<00:51,  3.33it/s][A
 24%|██▎       | 52/221 [00:13<00:51,  3.27it/s][A
 24%|██▍       | 53/221 [00:13<00:47,  3.56it/s][A
 24%|██▍       | 54/221 [00:14<01:00,  2.75it/s][A
 25%|██▍       | 55/221 [00:14<00:56,  2.92it/s][A
 25%|██▌       | 56/221 [00:14<00:53,  3.09it/s][A
 26%|██▌       | 57/221 [00:15<00:48,  3.38it/s][A
 26%|██▌       | 58/221 [00:15<00:45,  3.58it/s][A
 27%|██▋       | 59/221 [00:15<00:40,  3.97it/s][A
 27%|██▋       | 60/221 [00:15<00:38,  4.16it/s][A
 28%|██▊       | 61/221 [00:16<00:40,  3.97it/s][A
 28%|██▊       | 62/221 [00:16<00:41,  3.80it/s][A
 29%|██▊       | 63/221 [00:16<00:43,  3.60it/s][A
 29%|██▉       | 64/221 [00:17<00:48,  3.25it/s][A
 29%|██▉       | 65/221 [00:17<00:41,  3.76it/s][A
 30%|██▉       | 66/221 [00:17<00:56,  2.76it/s][A
 30%|███       | 67/221 [00:18<00:55,  2.76it/s][A
 31%|███       | 68/221 [00:18<00:43,  3.48it/s][A
 31%|███       | 69/221 [00:18<00:56,  2.68it/s][A
 32%|███▏      | 70/221 [00:19<00:50,  3.02it/s][A
 32%|███▏      | 71/221 [00:19<00:51,  2.94it/s][A
 33%|███▎      | 72/221 [00:19<00:48,  3.06it/s][A
 33%|███▎      | 73/221 [00:19<00:42,  3.50it/s][A
 33%|███▎      | 74/221 [00:20<00:39,  3.71it/s][A
 34%|███▍      | 75/221 [00:20<00:40,  3.60it/s][A
 34%|███▍      | 76/221 [00:20<00:38,  3.77it/s][A
 35%|███▍      | 77/221 [00:21<00:45,  3.16it/s][A
 35%|███▌      | 78/221 [00:21<00:42,  3.38it/s][A
 36%|███▌      | 79/221 [00:21<00:50,  2.81it/s][A
 36%|███▌      | 80/221 [00:22<00:45,  3.08it/s][A
 37%|███▋      | 81/221 [00:22<00:39,  3.57it/s][A
 37%|███▋      | 82/221 [00:22<00:38,  3.64it/s][A
 38%|███▊      | 83/221 [00:22<00:40,  3.38it/s][A
 38%|███▊      | 84/221 [00:23<00:38,  3.59it/s][A
 38%|███▊      | 85/221 [00:23<00:33,  4.12it/s][A
 39%|███▉      | 86/221 [00:23<00:36,  3.69it/s][A
 39%|███▉      | 87/221 [00:24<00:42,  3.17it/s][A
 40%|███▉      | 88/221 [00:24<00:42,  3.10it/s][A
 40%|████      | 89/221 [00:24<00:41,  3.20it/s][A
 41%|████      | 90/221 [00:24<00:37,  3.47it/s][A
 41%|████      | 91/221 [00:25<00:30,  4.24it/s][A
 42%|████▏     | 92/221 [00:25<00:32,  3.97it/s][A
 42%|████▏     | 93/221 [00:25<00:36,  3.49it/s][A
 43%|████▎     | 94/221 [00:26<00:38,  3.28it/s][A
 43%|████▎     | 95/221 [00:26<00:33,  3.76it/s][A
 43%|████▎     | 96/221 [00:26<00:49,  2.55it/s][A
 44%|████▍     | 97/221 [00:27<00:43,  2.86it/s][A
 44%|████▍     | 98/221 [00:27<00:50,  2.45it/s][A
 45%|████▍     | 99/221 [00:27<00:46,  2.64it/s][A
 45%|████▌     | 100/221 [00:28<00:41,  2.92it/s][A
 46%|████▌     | 101/221 [00:28<00:37,  3.23it/s][A
 46%|████▌     | 102/221 [00:28<00:41,  2.85it/s][A
 47%|████▋     | 103/221 [00:29<00:35,  3.37it/s][A
 47%|████▋     | 104/221 [00:29<00:33,  3.50it/s][A
 48%|████▊     | 105/221 [00:29<00:37,  3.08it/s][A
 48%|████▊     | 106/221 [00:30<00:36,  3.12it/s][A
 48%|████▊     | 107/221 [00:30<00:37,  3.06it/s][A
 49%|████▉     | 108/221 [00:30<00:32,  3.51it/s][A
 49%|████▉     | 109/221 [00:30<00:26,  4.16it/s][A
 50%|████▉     | 110/221 [00:31<00:32,  3.39it/s][A
 50%|█████     | 111/221 [00:31<00:32,  3.39it/s][A
 51%|█████     | 112/221 [00:31<00:31,  3.43it/s][A
 51%|█████     | 113/221 [00:31<00:27,  3.86it/s][A
 52%|█████▏    | 114/221 [00:32<00:23,  4.57it/s][A
 52%|█████▏    | 115/221 [00:32<00:28,  3.73it/s][A
 52%|█████▏    | 116/221 [00:32<00:26,  3.90it/s][A
 53%|█████▎    | 117/221 [00:32<00:27,  3.76it/s][A
 53%|█████▎    | 118/221 [00:33<00:26,  3.89it/s][A
 54%|█████▍    | 119/221 [00:33<00:27,  3.73it/s][A
 54%|█████▍    | 120/221 [00:33<00:28,  3.59it/s][A
 55%|█████▍    | 121/221 [00:33<00:24,  4.10it/s][A
 55%|█████▌    | 122/221 [00:34<00:23,  4.18it/s][A
 56%|█████▌    | 123/221 [00:34<00:22,  4.32it/s][A
 56%|█████▌    | 124/221 [00:34<00:27,  3.58it/s][A
 57%|█████▋    | 125/221 [00:35<00:28,  3.34it/s][A
 57%|█████▋    | 126/221 [00:35<00:24,  3.84it/s][A
 57%|█████▋    | 127/221 [00:35<00:26,  3.52it/s][A
 58%|█████▊    | 128/221 [00:35<00:26,  3.48it/s][A
 58%|█████▊    | 129/221 [00:36<00:23,  3.95it/s][A
 59%|█████▉    | 130/221 [00:36<00:25,  3.58it/s][A
 59%|█████▉    | 131/221 [00:36<00:20,  4.29it/s][A
 60%|█████▉    | 132/221 [00:37<00:38,  2.31it/s][A
 60%|██████    | 133/221 [00:37<00:33,  2.63it/s][A
 61%|██████    | 134/221 [00:38<00:35,  2.47it/s][A
 61%|██████    | 135/221 [00:38<00:35,  2.44it/s][A
 62%|██████▏   | 136/221 [00:38<00:30,  2.77it/s][A
 62%|██████▏   | 137/221 [00:39<00:26,  3.23it/s][A
 62%|██████▏   | 138/221 [00:39<00:24,  3.40it/s][A
 63%|██████▎   | 139/221 [00:39<00:22,  3.69it/s][A
 63%|██████▎   | 140/221 [00:39<00:21,  3.82it/s][A
 64%|██████▍   | 141/221 [00:39<00:19,  4.00it/s][A
 64%|██████▍   | 142/221 [00:40<00:21,  3.74it/s][A
 65%|██████▍   | 143/221 [00:40<00:25,  3.07it/s][A
 65%|██████▌   | 144/221 [00:41<00:27,  2.76it/s][A
 66%|██████▌   | 145/221 [00:41<00:25,  3.00it/s][A
 66%|██████▌   | 146/221 [00:41<00:19,  3.77it/s][A
 67%|██████▋   | 147/221 [00:41<00:18,  3.90it/s][A
 67%|██████▋   | 148/221 [00:42<00:19,  3.73it/s][A
 67%|██████▋   | 149/221 [00:42<00:21,  3.37it/s][A
 68%|██████▊   | 150/221 [00:42<00:18,  3.81it/s][A
 68%|██████▊   | 151/221 [00:42<00:18,  3.71it/s][A
 69%|██████▉   | 152/221 [00:43<00:20,  3.43it/s][A
 69%|██████▉   | 153/221 [00:43<00:17,  3.89it/s][A
 70%|██████▉   | 154/221 [00:43<00:15,  4.31it/s][A
 70%|███████   | 155/221 [00:43<00:17,  3.88it/s][A
 71%|███████   | 156/221 [00:44<00:19,  3.36it/s][A
 71%|███████   | 157/221 [00:44<00:20,  3.15it/s][A
 71%|███████▏  | 158/221 [00:45<00:21,  2.87it/s][A
 72%|███████▏  | 159/221 [00:45<00:19,  3.25it/s][A
 72%|███████▏  | 160/221 [00:45<00:16,  3.70it/s][A
 73%|███████▎  | 161/221 [00:45<00:16,  3.55it/s][A
 73%|███████▎  | 162/221 [00:46<00:14,  4.01it/s][A
 74%|███████▍  | 163/221 [00:46<00:15,  3.79it/s][A
 74%|███████▍  | 164/221 [00:46<00:13,  4.30it/s][A
 75%|███████▍  | 165/221 [00:46<00:12,  4.46it/s][A
 75%|███████▌  | 166/221 [00:46<00:12,  4.43it/s][A
 76%|███████▌  | 167/221 [00:47<00:13,  4.06it/s][A
 76%|███████▌  | 168/221 [00:47<00:13,  4.01it/s][A
 76%|███████▋  | 169/221 [00:47<00:14,  3.57it/s][A
 77%|███████▋  | 170/221 [00:48<00:14,  3.48it/s][A
 77%|███████▋  | 171/221 [00:48<00:14,  3.51it/s][A
 78%|███████▊  | 172/221 [00:48<00:13,  3.59it/s][A
 78%|███████▊  | 173/221 [00:48<00:13,  3.49it/s][A
 79%|███████▊  | 174/221 [00:49<00:13,  3.37it/s][A
 79%|███████▉  | 175/221 [00:49<00:15,  2.95it/s][A
 80%|███████▉  | 176/221 [00:49<00:12,  3.62it/s][A
 80%|████████  | 177/221 [00:50<00:10,  4.08it/s][A
 81%|████████  | 178/221 [00:50<00:11,  3.80it/s][A
 81%|████████  | 179/221 [00:50<00:09,  4.21it/s][A
 81%|████████▏ | 180/221 [00:50<00:08,  4.69it/s][A
 82%|████████▏ | 181/221 [00:50<00:07,  5.57it/s][A
 82%|████████▏ | 182/221 [00:51<00:08,  4.40it/s][A
 83%|████████▎ | 183/221 [00:51<00:08,  4.26it/s][A
 83%|████████▎ | 184/221 [00:51<00:08,  4.25it/s][A
 84%|████████▎ | 185/221 [00:51<00:09,  3.94it/s][A
 84%|████████▍ | 186/221 [00:52<00:10,  3.41it/s][A
 85%|████████▍ | 187/221 [00:52<00:10,  3.12it/s][A
 85%|████████▌ | 188/221 [00:52<00:10,  3.22it/s][A
 86%|████████▌ | 189/221 [00:53<00:08,  3.69it/s][A
 86%|████████▌ | 190/221 [00:53<00:08,  3.50it/s][A
 87%|████████▋ | 192/221 [00:53<00:06,  4.38it/s][A
 87%|████████▋ | 193/221 [00:54<00:06,  4.23it/s][A
 88%|████████▊ | 194/221 [00:54<00:06,  4.26it/s][A
 88%|████████▊ | 195/221 [00:54<00:06,  3.97it/s][A
 89%|████████▊ | 196/221 [00:54<00:07,  3.51it/s][A
 89%|████████▉ | 197/221 [00:55<00:06,  3.62it/s][A
 90%|████████▉ | 198/221 [00:55<00:07,  3.26it/s][A
 90%|█████████ | 199/221 [00:55<00:06,  3.31it/s][A
 90%|█████████ | 200/221 [00:56<00:06,  3.13it/s][A
 91%|█████████ | 201/221 [00:56<00:06,  2.87it/s][A
 91%|█████████▏| 202/221 [00:57<00:07,  2.70it/s][A
 92%|█████████▏| 203/221 [00:57<00:06,  2.75it/s][A
 92%|█████████▏| 204/221 [00:57<00:06,  2.80it/s][A
 93%|█████████▎| 205/221 [00:57<00:04,  3.48it/s][A
 93%|█████████▎| 206/221 [00:58<00:04,  3.58it/s][A
 94%|█████████▎| 207/221 [00:58<00:03,  3.77it/s][A
 94%|█████████▍| 208/221 [00:58<00:03,  3.56it/s][A
 95%|█████████▍| 209/221 [00:58<00:03,  3.80it/s][A
 95%|█████████▌| 210/221 [00:59<00:02,  4.07it/s][A
 95%|█████████▌| 211/221 [00:59<00:02,  3.61it/s][A
 96%|█████████▌| 212/221 [00:59<00:02,  3.53it/s][A
 96%|█████████▋| 213/221 [00:59<00:01,  4.07it/s][A
 97%|█████████▋| 214/221 [01:00<00:01,  3.73it/s][A
 97%|█████████▋| 215/221 [01:00<00:01,  4.43it/s][A
 98%|█████████▊| 216/221 [01:00<00:01,  4.52it/s][A
 98%|█████████▊| 217/221 [01:00<00:01,  3.80it/s][A
 99%|█████████▊| 218/221 [01:01<00:00,  3.69it/s][A
 99%|█████████▉| 219/221 [01:01<00:00,  3.71it/s][A
100%|█████████▉| 220/221 [01:01<00:00,  4.28it/s][A
100%|██████████| 221/221 [01:01<00:00,  4.40it/s][A100%|██████████| 221/221 [01:01<00:00,  3.57it/s]
08/31/2024 20:58:01 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forward=====step 2499--===========

08/31/2024 20:58:01 - INFO - __main__ -   {'area_r1': 11.5, 'area_recall': '11.5/28.2/36.1', 'area_ravg': 25.3}
08/31/2024 20:58:01 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_backard=====step 2499--===========

08/31/2024 20:58:01 - INFO - __main__ -   {'forward_r1': 45.0, 'forward_recall': '45.0/75.2/85.0', 'forward_ravg': 68.4}
08/31/2024 20:58:01 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forw_with_video=====step 2499--===========

08/31/2024 20:58:01 - INFO - __main__ -   {'forward_r1': 62.6, 'forward_recall': '62.6/85.3/89.9', 'forward_ravg': 79.3}
08/31/2024 20:58:01 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itc_tv=====step 2499--===========

08/31/2024 20:58:01 - INFO - __main__ -   {'video_r1': 45.8, 'video_recall': '45.8/75.9/84.4', 'video_ravg': 68.7}
08/31/2024 20:58:01 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itc_tv====history best step: 999=======

08/31/2024 20:58:01 - INFO - __main__ -   {'video_r1': 46.0, 'video_recall': '46.0/74.9/83.0', 'video_ravg': 68.0}
08/31/2024 20:58:01 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itm_tv=====step 2499--===========

08/31/2024 20:58:01 - INFO - __main__ -   {'video_r1': 55.5, 'video_recall': '55.5/79.4/85.4', 'video_ravg': 73.5}
08/31/2024 20:58:01 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itm_tv====history best step: 999=======

08/31/2024 20:58:01 - INFO - __main__ -   {'video_r1': 56.9, 'video_recall': '56.9/78.3/85.3', 'video_ravg': 73.5}
08/31/2024 20:58:26 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.486393928527832, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04045878350734711, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6921725273132324, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.219025135040283}
 34%|███▎      | 2500/7431 [2:31:08<71:53:30, 52.49s/it] 34%|███▎      | 2501/7431 [2:31:11<51:35:57, 37.68s/it] 34%|███▎      | 2502/7431 [2:31:14<37:24:16, 27.32s/it] 34%|███▎      | 2503/7431 [2:31:17<27:30:29, 20.10s/it] 34%|███▎      | 2504/7431 [2:31:20<20:36:55, 15.06s/it] 34%|███▎      | 2505/7431 [2:31:24<15:44:13, 11.50s/it] 34%|███▎      | 2506/7431 [2:31:27<12:18:11,  8.99s/it] 34%|███▎      | 2507/7431 [2:31:30<9:56:52,  7.27s/it]  34%|███▍      | 2508/7431 [2:31:33<8:21:14,  6.11s/it] 34%|███▍      | 2509/7431 [2:31:37<7:13:39,  5.29s/it] 34%|███▍      | 2510/7431 [2:31:40<6:24:35,  4.69s/it] 34%|███▍      | 2511/7431 [2:31:43<5:46:38,  4.23s/it] 34%|███▍      | 2512/7431 [2:31:46<5:22:25,  3.93s/it] 34%|███▍      | 2513/7431 [2:31:50<5:09:38,  3.78s/it] 34%|███▍      | 2514/7431 [2:31:53<4:59:05,  3.65s/it] 34%|███▍      | 2515/7431 [2:31:56<4:49:31,  3.53s/it] 34%|███▍      | 2516/7431 [2:32:00<4:42:58,  3.45s/it] 34%|███▍      | 2517/7431 [2:32:03<4:38:26,  3.40s/it] 34%|███▍      | 2518/7431 [2:32:06<4:31:12,  3.31s/it] 34%|███▍      | 2519/7431 [2:32:09<4:30:30,  3.30s/it] 34%|███▍      | 2520/7431 [2:32:13<4:29:09,  3.29s/it] 34%|███▍      | 2521/7431 [2:32:16<4:31:43,  3.32s/it] 34%|███▍      | 2522/7431 [2:32:19<4:32:05,  3.33s/it] 34%|███▍      | 2523/7431 [2:32:23<4:30:33,  3.31s/it] 34%|███▍      | 2524/7431 [2:32:26<4:31:18,  3.32s/it] 34%|███▍      | 2525/7431 [2:32:29<4:30:25,  3.31s/it] 34%|███▍      | 2526/7431 [2:32:33<4:30:37,  3.31s/it] 34%|███▍      | 2527/7431 [2:32:36<4:29:40,  3.30s/it] 34%|███▍      | 2528/7431 [2:32:39<4:27:40,  3.28s/it] 34%|███▍      | 2529/7431 [2:32:42<4:24:31,  3.24s/it] 34%|███▍      | 2530/7431 [2:32:46<4:32:54,  3.34s/it] 34%|███▍      | 2531/7431 [2:32:49<4:28:32,  3.29s/it] 34%|███▍      | 2532/7431 [2:32:52<4:26:36,  3.27s/it] 34%|███▍      | 2533/7431 [2:32:56<4:34:39,  3.36s/it] 34%|███▍      | 2534/7431 [2:32:59<4:32:02,  3.33s/it] 34%|███▍      | 2535/7431 [2:33:02<4:30:11,  3.31s/it] 34%|███▍      | 2536/7431 [2:33:05<4:27:11,  3.28s/it] 34%|███▍      | 2537/7431 [2:33:09<4:23:29,  3.23s/it] 34%|███▍      | 2538/7431 [2:33:12<4:23:07,  3.23s/it] 34%|███▍      | 2539/7431 [2:33:15<4:29:43,  3.31s/it] 34%|███▍      | 2540/7431 [2:33:18<4:25:35,  3.26s/it] 34%|███▍      | 2541/7431 [2:33:22<4:24:37,  3.25s/it] 34%|███▍      | 2542/7431 [2:33:25<4:21:54,  3.21s/it] 34%|███▍      | 2543/7431 [2:33:29<4:33:17,  3.35s/it] 34%|███▍      | 2544/7431 [2:33:32<4:28:45,  3.30s/it] 34%|███▍      | 2545/7431 [2:33:35<4:23:44,  3.24s/it] 34%|███▍      | 2546/7431 [2:33:38<4:22:09,  3.22s/it] 34%|███▍      | 2547/7431 [2:33:41<4:25:28,  3.26s/it] 34%|███▍      | 2548/7431 [2:33:45<4:25:11,  3.26s/it] 34%|███▍      | 2549/7431 [2:33:48<4:23:33,  3.24s/it]08/31/2024 21:01:09 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.860175609588623, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.05804057419300079, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7905433177948, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.708759307861328}
 34%|███▍      | 2550/7431 [2:33:51<4:26:04,  3.27s/it] 34%|███▍      | 2551/7431 [2:33:54<4:26:51,  3.28s/it] 34%|███▍      | 2552/7431 [2:33:58<4:31:09,  3.33s/it] 34%|███▍      | 2553/7431 [2:34:01<4:28:34,  3.30s/it] 34%|███▍      | 2554/7431 [2:34:04<4:27:18,  3.29s/it] 34%|███▍      | 2555/7431 [2:34:07<4:21:49,  3.22s/it] 34%|███▍      | 2556/7431 [2:34:11<4:25:16,  3.26s/it] 34%|███▍      | 2557/7431 [2:34:14<4:25:33,  3.27s/it] 34%|███▍      | 2558/7431 [2:34:17<4:21:30,  3.22s/it] 34%|███▍      | 2559/7431 [2:34:20<4:20:17,  3.21s/it] 34%|███▍      | 2560/7431 [2:34:24<4:21:20,  3.22s/it] 34%|███▍      | 2561/7431 [2:34:27<4:19:26,  3.20s/it] 34%|███▍      | 2562/7431 [2:34:30<4:21:56,  3.23s/it] 34%|███▍      | 2563/7431 [2:34:33<4:24:14,  3.26s/it] 35%|███▍      | 2564/7431 [2:34:37<4:25:14,  3.27s/it] 35%|███▍      | 2565/7431 [2:34:40<4:24:05,  3.26s/it] 35%|███▍      | 2566/7431 [2:34:43<4:25:06,  3.27s/it] 35%|███▍      | 2567/7431 [2:34:46<4:23:44,  3.25s/it] 35%|███▍      | 2568/7431 [2:34:50<4:28:17,  3.31s/it] 35%|███▍      | 2569/7431 [2:34:53<4:24:44,  3.27s/it] 35%|███▍      | 2570/7431 [2:34:56<4:25:00,  3.27s/it] 35%|███▍      | 2571/7431 [2:35:00<4:29:06,  3.32s/it] 35%|███▍      | 2572/7431 [2:35:03<4:27:12,  3.30s/it] 35%|███▍      | 2573/7431 [2:35:06<4:23:00,  3.25s/it] 35%|███▍      | 2574/7431 [2:35:09<4:22:13,  3.24s/it] 35%|███▍      | 2575/7431 [2:35:12<4:18:31,  3.19s/it] 35%|███▍      | 2576/7431 [2:35:16<4:17:04,  3.18s/it] 35%|███▍      | 2577/7431 [2:35:19<4:24:12,  3.27s/it] 35%|███▍      | 2578/7431 [2:35:22<4:20:56,  3.23s/it] 35%|███▍      | 2579/7431 [2:35:26<4:25:38,  3.28s/it] 35%|███▍      | 2580/7431 [2:35:29<4:25:46,  3.29s/it] 35%|███▍      | 2581/7431 [2:35:32<4:23:50,  3.26s/it] 35%|███▍      | 2582/7431 [2:35:35<4:21:11,  3.23s/it] 35%|███▍      | 2583/7431 [2:35:39<4:28:31,  3.32s/it] 35%|███▍      | 2584/7431 [2:35:42<4:24:07,  3.27s/it] 35%|███▍      | 2585/7431 [2:35:45<4:25:24,  3.29s/it] 35%|███▍      | 2586/7431 [2:35:49<4:30:42,  3.35s/it] 35%|███▍      | 2587/7431 [2:35:52<4:27:26,  3.31s/it] 35%|███▍      | 2588/7431 [2:35:55<4:29:22,  3.34s/it] 35%|███▍      | 2589/7431 [2:35:59<4:26:55,  3.31s/it] 35%|███▍      | 2590/7431 [2:36:02<4:23:31,  3.27s/it] 35%|███▍      | 2591/7431 [2:36:05<4:27:14,  3.31s/it] 35%|███▍      | 2592/7431 [2:36:08<4:24:40,  3.28s/it] 35%|███▍      | 2593/7431 [2:36:12<4:21:51,  3.25s/it] 35%|███▍      | 2594/7431 [2:36:15<4:24:06,  3.28s/it] 35%|███▍      | 2595/7431 [2:36:18<4:28:26,  3.33s/it] 35%|███▍      | 2596/7431 [2:36:22<4:26:56,  3.31s/it] 35%|███▍      | 2597/7431 [2:36:25<4:23:42,  3.27s/it] 35%|███▍      | 2598/7431 [2:36:28<4:27:50,  3.33s/it] 35%|███▍      | 2599/7431 [2:36:31<4:24:54,  3.29s/it]08/31/2024 21:03:53 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.1453702449798584, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.05375713109970093, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.887251615524292, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 5.086379051208496}
 35%|███▍      | 2600/7431 [2:36:35<4:23:22,  3.27s/it] 35%|███▌      | 2601/7431 [2:36:38<4:27:50,  3.33s/it] 35%|███▌      | 2602/7431 [2:36:41<4:21:54,  3.25s/it] 35%|███▌      | 2603/7431 [2:36:44<4:19:56,  3.23s/it] 35%|███▌      | 2604/7431 [2:36:48<4:20:15,  3.23s/it] 35%|███▌      | 2605/7431 [2:36:51<4:19:06,  3.22s/it] 35%|███▌      | 2606/7431 [2:36:54<4:18:16,  3.21s/it] 35%|███▌      | 2607/7431 [2:36:57<4:21:15,  3.25s/it] 35%|███▌      | 2608/7431 [2:37:01<4:19:55,  3.23s/it] 35%|███▌      | 2609/7431 [2:37:04<4:18:05,  3.21s/it] 35%|███▌      | 2610/7431 [2:37:07<4:22:39,  3.27s/it] 35%|███▌      | 2611/7431 [2:37:10<4:21:25,  3.25s/it] 35%|███▌      | 2612/7431 [2:37:14<4:21:27,  3.26s/it] 35%|███▌      | 2613/7431 [2:37:17<4:21:17,  3.25s/it] 35%|███▌      | 2614/7431 [2:37:20<4:23:07,  3.28s/it] 35%|███▌      | 2615/7431 [2:37:23<4:20:59,  3.25s/it] 35%|███▌      | 2616/7431 [2:37:27<4:23:03,  3.28s/it] 35%|███▌      | 2617/7431 [2:37:30<4:24:40,  3.30s/it] 35%|███▌      | 2618/7431 [2:37:33<4:21:53,  3.26s/it] 35%|███▌      | 2619/7431 [2:37:37<4:21:37,  3.26s/it] 35%|███▌      | 2620/7431 [2:37:40<4:19:22,  3.23s/it] 35%|███▌      | 2621/7431 [2:37:43<4:17:29,  3.21s/it] 35%|███▌      | 2622/7431 [2:37:46<4:13:14,  3.16s/it] 35%|███▌      | 2623/7431 [2:37:49<4:18:36,  3.23s/it] 35%|███▌      | 2624/7431 [2:37:53<4:19:39,  3.24s/it] 35%|███▌      | 2625/7431 [2:37:56<4:14:18,  3.17s/it] 35%|███▌      | 2626/7431 [2:37:59<4:14:30,  3.18s/it] 35%|███▌      | 2627/7431 [2:38:02<4:21:21,  3.26s/it] 35%|███▌      | 2628/7431 [2:38:05<4:21:06,  3.26s/it] 35%|███▌      | 2629/7431 [2:38:09<4:19:35,  3.24s/it] 35%|███▌      | 2630/7431 [2:38:12<4:19:21,  3.24s/it] 35%|███▌      | 2631/7431 [2:38:15<4:22:37,  3.28s/it] 35%|███▌      | 2632/7431 [2:38:18<4:19:42,  3.25s/it] 35%|███▌      | 2633/7431 [2:38:22<4:20:25,  3.26s/it] 35%|███▌      | 2634/7431 [2:38:25<4:18:17,  3.23s/it] 35%|███▌      | 2635/7431 [2:38:28<4:16:27,  3.21s/it] 35%|███▌      | 2636/7431 [2:38:31<4:15:54,  3.20s/it] 35%|███▌      | 2637/7431 [2:38:35<4:22:31,  3.29s/it] 35%|███▌      | 2638/7431 [2:38:38<4:22:29,  3.29s/it] 36%|███▌      | 2639/7431 [2:38:41<4:23:10,  3.30s/it] 36%|███▌      | 2640/7431 [2:38:44<4:19:11,  3.25s/it] 36%|███▌      | 2641/7431 [2:38:48<4:22:57,  3.29s/it] 36%|███▌      | 2642/7431 [2:38:51<4:22:52,  3.29s/it] 36%|███▌      | 2643/7431 [2:38:55<4:27:56,  3.36s/it] 36%|███▌      | 2644/7431 [2:38:58<4:22:45,  3.29s/it] 36%|███▌      | 2645/7431 [2:39:01<4:18:56,  3.25s/it] 36%|███▌      | 2646/7431 [2:39:04<4:16:33,  3.22s/it] 36%|███▌      | 2647/7431 [2:39:07<4:19:00,  3.25s/it] 36%|███▌      | 2648/7431 [2:39:11<4:23:11,  3.30s/it] 36%|███▌      | 2649/7431 [2:39:14<4:27:08,  3.35s/it]08/31/2024 21:06:36 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.772099256515503, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.05080617219209671, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.758803606033325, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.581708908081055}
 36%|███▌      | 2650/7431 [2:39:18<4:25:27,  3.33s/it] 36%|███▌      | 2651/7431 [2:39:21<4:26:34,  3.35s/it] 36%|███▌      | 2652/7431 [2:39:24<4:21:46,  3.29s/it] 36%|███▌      | 2653/7431 [2:39:28<4:25:50,  3.34s/it] 36%|███▌      | 2654/7431 [2:39:31<4:24:49,  3.33s/it] 36%|███▌      | 2655/7431 [2:39:34<4:21:02,  3.28s/it] 36%|███▌      | 2656/7431 [2:39:37<4:20:08,  3.27s/it] 36%|███▌      | 2657/7431 [2:39:41<4:21:42,  3.29s/it] 36%|███▌      | 2658/7431 [2:39:44<4:19:01,  3.26s/it] 36%|███▌      | 2659/7431 [2:39:47<4:22:30,  3.30s/it] 36%|███▌      | 2660/7431 [2:39:51<4:24:05,  3.32s/it] 36%|███▌      | 2661/7431 [2:39:54<4:20:50,  3.28s/it] 36%|███▌      | 2662/7431 [2:39:57<4:20:14,  3.27s/it] 36%|███▌      | 2663/7431 [2:40:00<4:16:42,  3.23s/it] 36%|███▌      | 2664/7431 [2:40:03<4:14:57,  3.21s/it] 36%|███▌      | 2665/7431 [2:40:07<4:18:26,  3.25s/it] 36%|███▌      | 2666/7431 [2:40:10<4:18:36,  3.26s/it] 36%|███▌      | 2667/7431 [2:40:13<4:15:20,  3.22s/it] 36%|███▌      | 2668/7431 [2:40:16<4:12:42,  3.18s/it] 36%|███▌      | 2669/7431 [2:40:20<4:17:21,  3.24s/it] 36%|███▌      | 2670/7431 [2:40:23<4:16:16,  3.23s/it] 36%|███▌      | 2671/7431 [2:40:26<4:14:41,  3.21s/it] 36%|███▌      | 2672/7431 [2:40:29<4:14:45,  3.21s/it] 36%|███▌      | 2673/7431 [2:40:32<4:13:01,  3.19s/it] 36%|███▌      | 2674/7431 [2:40:35<4:13:33,  3.20s/it] 36%|███▌      | 2675/7431 [2:40:39<4:20:36,  3.29s/it] 36%|███▌      | 2676/7431 [2:40:42<4:15:16,  3.22s/it] 36%|███▌      | 2677/7431 [2:40:45<4:19:37,  3.28s/it] 36%|███▌      | 2678/7431 [2:40:49<4:15:02,  3.22s/it] 36%|███▌      | 2679/7431 [2:40:52<4:13:18,  3.20s/it] 36%|███▌      | 2680/7431 [2:40:55<4:14:41,  3.22s/it] 36%|███▌      | 2681/7431 [2:40:58<4:16:57,  3.25s/it] 36%|███▌      | 2682/7431 [2:41:01<4:15:28,  3.23s/it] 36%|███▌      | 2683/7431 [2:41:05<4:17:24,  3.25s/it] 36%|███▌      | 2684/7431 [2:41:08<4:17:03,  3.25s/it] 36%|███▌      | 2685/7431 [2:41:11<4:21:03,  3.30s/it] 36%|███▌      | 2686/7431 [2:41:15<4:18:43,  3.27s/it] 36%|███▌      | 2687/7431 [2:41:18<4:17:26,  3.26s/it] 36%|███▌      | 2688/7431 [2:41:21<4:20:24,  3.29s/it] 36%|███▌      | 2689/7431 [2:41:24<4:18:25,  3.27s/it] 36%|███▌      | 2690/7431 [2:41:28<4:17:41,  3.26s/it] 36%|███▌      | 2691/7431 [2:41:31<4:16:11,  3.24s/it] 36%|███▌      | 2692/7431 [2:41:34<4:19:42,  3.29s/it] 36%|███▌      | 2693/7431 [2:41:37<4:17:28,  3.26s/it] 36%|███▋      | 2694/7431 [2:41:41<4:18:22,  3.27s/it] 36%|███▋      | 2695/7431 [2:41:44<4:18:56,  3.28s/it] 36%|███▋      | 2696/7431 [2:41:47<4:14:45,  3.23s/it] 36%|███▋      | 2697/7431 [2:41:50<4:16:26,  3.25s/it] 36%|███▋      | 2698/7431 [2:41:54<4:17:40,  3.27s/it] 36%|███▋      | 2699/7431 [2:41:57<4:17:29,  3.26s/it]08/31/2024 21:09:19 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.5159778594970703, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.05702900141477585, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6919095516204834, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.26491641998291}
 36%|███▋      | 2700/7431 [2:42:00<4:17:41,  3.27s/it] 36%|███▋      | 2701/7431 [2:42:04<4:18:38,  3.28s/it] 36%|███▋      | 2702/7431 [2:42:07<4:14:39,  3.23s/it] 36%|███▋      | 2703/7431 [2:42:10<4:16:08,  3.25s/it] 36%|███▋      | 2704/7431 [2:42:13<4:18:29,  3.28s/it] 36%|███▋      | 2705/7431 [2:42:17<4:16:10,  3.25s/it] 36%|███▋      | 2706/7431 [2:42:20<4:14:18,  3.23s/it] 36%|███▋      | 2707/7431 [2:42:23<4:14:24,  3.23s/it] 36%|███▋      | 2708/7431 [2:42:26<4:11:27,  3.19s/it] 36%|███▋      | 2709/7431 [2:42:29<4:13:28,  3.22s/it] 36%|███▋      | 2710/7431 [2:42:33<4:11:37,  3.20s/it] 36%|███▋      | 2711/7431 [2:42:36<4:16:26,  3.26s/it] 36%|███▋      | 2712/7431 [2:42:39<4:14:07,  3.23s/it] 37%|███▋      | 2713/7431 [2:42:42<4:11:59,  3.20s/it] 37%|███▋      | 2714/7431 [2:42:46<4:16:10,  3.26s/it] 37%|███▋      | 2715/7431 [2:42:49<4:15:01,  3.24s/it] 37%|███▋      | 2716/7431 [2:42:52<4:14:41,  3.24s/it] 37%|███▋      | 2717/7431 [2:42:55<4:09:49,  3.18s/it] 37%|███▋      | 2718/7431 [2:42:58<4:11:47,  3.21s/it] 37%|███▋      | 2719/7431 [2:43:02<4:13:38,  3.23s/it] 37%|███▋      | 2720/7431 [2:43:05<4:14:09,  3.24s/it] 37%|███▋      | 2721/7431 [2:43:08<4:16:24,  3.27s/it] 37%|███▋      | 2722/7431 [2:43:12<4:16:27,  3.27s/it] 37%|███▋      | 2723/7431 [2:43:15<4:14:05,  3.24s/it] 37%|███▋      | 2724/7431 [2:43:18<4:12:38,  3.22s/it] 37%|███▋      | 2725/7431 [2:43:21<4:15:06,  3.25s/it] 37%|███▋      | 2726/7431 [2:43:24<4:12:55,  3.23s/it] 37%|███▋      | 2727/7431 [2:43:28<4:15:13,  3.26s/it] 37%|███▋      | 2728/7431 [2:43:31<4:18:59,  3.30s/it] 37%|███▋      | 2729/7431 [2:43:34<4:17:09,  3.28s/it] 37%|███▋      | 2730/7431 [2:43:38<4:14:54,  3.25s/it] 37%|███▋      | 2731/7431 [2:43:41<4:16:33,  3.28s/it] 37%|███▋      | 2732/7431 [2:43:44<4:15:14,  3.26s/it] 37%|███▋      | 2733/7431 [2:43:47<4:12:23,  3.22s/it] 37%|███▋      | 2734/7431 [2:43:51<4:17:16,  3.29s/it] 37%|███▋      | 2735/7431 [2:43:54<4:19:41,  3.32s/it] 37%|███▋      | 2736/7431 [2:43:57<4:15:10,  3.26s/it] 37%|███▋      | 2737/7431 [2:44:01<4:17:19,  3.29s/it] 37%|███▋      | 2738/7431 [2:44:04<4:12:28,  3.23s/it] 37%|███▋      | 2739/7431 [2:44:07<4:16:28,  3.28s/it] 37%|███▋      | 2740/7431 [2:44:10<4:14:25,  3.25s/it] 37%|███▋      | 2741/7431 [2:44:14<4:17:13,  3.29s/it] 37%|███▋      | 2742/7431 [2:44:17<4:13:55,  3.25s/it] 37%|███▋      | 2743/7431 [2:44:20<4:15:03,  3.26s/it] 37%|███▋      | 2744/7431 [2:44:23<4:15:31,  3.27s/it] 37%|███▋      | 2745/7431 [2:44:27<4:15:45,  3.27s/it] 37%|███▋      | 2746/7431 [2:44:30<4:18:14,  3.31s/it] 37%|███▋      | 2747/7431 [2:44:33<4:21:09,  3.35s/it] 37%|███▋      | 2748/7431 [2:44:37<4:15:21,  3.27s/it] 37%|███▋      | 2749/7431 [2:44:40<4:14:23,  3.26s/it]08/31/2024 21:12:01 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.8523951768875122, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.0457012876868248, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7241737842559814, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.622270107269287}
 37%|███▋      | 2750/7431 [2:44:43<4:12:16,  3.23s/it] 37%|███▋      | 2751/7431 [2:44:46<4:11:33,  3.23s/it] 37%|███▋      | 2752/7431 [2:44:49<4:11:16,  3.22s/it] 37%|███▋      | 2753/7431 [2:44:53<4:17:10,  3.30s/it] 37%|███▋      | 2754/7431 [2:44:56<4:12:34,  3.24s/it] 37%|███▋      | 2755/7431 [2:44:59<4:10:57,  3.22s/it] 37%|███▋      | 2756/7431 [2:45:03<4:16:28,  3.29s/it] 37%|███▋      | 2757/7431 [2:45:06<4:17:38,  3.31s/it] 37%|███▋      | 2758/7431 [2:45:09<4:14:44,  3.27s/it] 37%|███▋      | 2759/7431 [2:45:13<4:18:28,  3.32s/it] 37%|███▋      | 2760/7431 [2:45:16<4:13:50,  3.26s/it] 37%|███▋      | 2761/7431 [2:45:19<4:12:10,  3.24s/it] 37%|███▋      | 2762/7431 [2:45:22<4:11:04,  3.23s/it] 37%|███▋      | 2763/7431 [2:45:25<4:15:03,  3.28s/it] 37%|███▋      | 2764/7431 [2:45:29<4:17:11,  3.31s/it] 37%|███▋      | 2765/7431 [2:45:32<4:14:40,  3.27s/it] 37%|███▋      | 2766/7431 [2:45:35<4:16:12,  3.30s/it] 37%|███▋      | 2767/7431 [2:45:39<4:15:36,  3.29s/it] 37%|███▋      | 2768/7431 [2:45:42<4:12:14,  3.25s/it] 37%|███▋      | 2769/7431 [2:45:45<4:08:36,  3.20s/it] 37%|███▋      | 2770/7431 [2:45:48<4:12:17,  3.25s/it] 37%|███▋      | 2771/7431 [2:45:51<4:12:35,  3.25s/it] 37%|███▋      | 2772/7431 [2:45:55<4:12:32,  3.25s/it] 37%|███▋      | 2773/7431 [2:45:58<4:12:50,  3.26s/it] 37%|███▋      | 2774/7431 [2:46:01<4:13:52,  3.27s/it] 37%|███▋      | 2775/7431 [2:46:05<4:14:12,  3.28s/it] 37%|███▋      | 2776/7431 [2:46:08<4:12:40,  3.26s/it] 37%|███▋      | 2777/7431 [2:46:11<4:13:23,  3.27s/it] 37%|███▋      | 2778/7431 [2:46:15<4:17:42,  3.32s/it] 37%|███▋      | 2779/7431 [2:46:18<4:19:34,  3.35s/it] 37%|███▋      | 2780/7431 [2:46:21<4:15:52,  3.30s/it] 37%|███▋      | 2781/7431 [2:46:24<4:13:49,  3.28s/it] 37%|███▋      | 2782/7431 [2:46:28<4:14:04,  3.28s/it] 37%|███▋      | 2783/7431 [2:46:31<4:10:54,  3.24s/it] 37%|███▋      | 2784/7431 [2:46:34<4:15:20,  3.30s/it] 37%|███▋      | 2785/7431 [2:46:38<4:15:28,  3.30s/it] 37%|███▋      | 2786/7431 [2:46:41<4:12:33,  3.26s/it] 38%|███▊      | 2787/7431 [2:46:44<4:12:00,  3.26s/it] 38%|███▊      | 2788/7431 [2:46:47<4:14:46,  3.29s/it] 38%|███▊      | 2789/7431 [2:46:51<4:16:33,  3.32s/it] 38%|███▊      | 2790/7431 [2:46:54<4:13:11,  3.27s/it] 38%|███▊      | 2791/7431 [2:46:57<4:12:55,  3.27s/it] 38%|███▊      | 2792/7431 [2:47:00<4:11:18,  3.25s/it] 38%|███▊      | 2793/7431 [2:47:03<4:07:01,  3.20s/it] 38%|███▊      | 2794/7431 [2:47:07<4:11:54,  3.26s/it] 38%|███▊      | 2795/7431 [2:47:10<4:12:37,  3.27s/it] 38%|███▊      | 2796/7431 [2:47:14<4:16:57,  3.33s/it] 38%|███▊      | 2797/7431 [2:47:17<4:13:15,  3.28s/it] 38%|███▊      | 2798/7431 [2:47:20<4:11:22,  3.26s/it] 38%|███▊      | 2799/7431 [2:47:23<4:11:44,  3.26s/it]08/31/2024 21:14:45 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.9597100019454956, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04772527515888214, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.677400827407837, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.684836387634277}
 38%|███▊      | 2800/7431 [2:47:26<4:11:12,  3.25s/it] 38%|███▊      | 2801/7431 [2:47:30<4:12:21,  3.27s/it] 38%|███▊      | 2802/7431 [2:47:33<4:10:51,  3.25s/it] 38%|███▊      | 2803/7431 [2:47:36<4:15:58,  3.32s/it] 38%|███▊      | 2804/7431 [2:47:40<4:16:20,  3.32s/it] 38%|███▊      | 2805/7431 [2:47:43<4:13:35,  3.29s/it] 38%|███▊      | 2806/7431 [2:47:46<4:13:55,  3.29s/it] 38%|███▊      | 2807/7431 [2:47:50<4:16:52,  3.33s/it] 38%|███▊      | 2808/7431 [2:47:53<4:15:55,  3.32s/it] 38%|███▊      | 2809/7431 [2:47:56<4:14:20,  3.30s/it] 38%|███▊      | 2810/7431 [2:47:59<4:12:00,  3.27s/it] 38%|███▊      | 2811/7431 [2:48:03<4:14:35,  3.31s/it] 38%|███▊      | 2812/7431 [2:48:06<4:13:18,  3.29s/it] 38%|███▊      | 2813/7431 [2:48:10<4:17:30,  3.35s/it] 38%|███▊      | 2814/7431 [2:48:13<4:15:37,  3.32s/it] 38%|███▊      | 2815/7431 [2:48:16<4:12:15,  3.28s/it] 38%|███▊      | 2816/7431 [2:48:19<4:14:53,  3.31s/it] 38%|███▊      | 2817/7431 [2:48:23<4:12:28,  3.28s/it] 38%|███▊      | 2818/7431 [2:48:26<4:13:30,  3.30s/it] 38%|███▊      | 2819/7431 [2:48:29<4:11:53,  3.28s/it] 38%|███▊      | 2820/7431 [2:48:33<4:15:19,  3.32s/it] 38%|███▊      | 2821/7431 [2:48:36<4:15:09,  3.32s/it] 38%|███▊      | 2822/7431 [2:48:39<4:08:21,  3.23s/it] 38%|███▊      | 2823/7431 [2:48:42<4:10:43,  3.26s/it] 38%|███▊      | 2824/7431 [2:48:46<4:12:40,  3.29s/it] 38%|███▊      | 2825/7431 [2:48:49<4:15:47,  3.33s/it] 38%|███▊      | 2826/7431 [2:48:52<4:14:33,  3.32s/it] 38%|███▊      | 2827/7431 [2:48:56<4:14:25,  3.32s/it] 38%|███▊      | 2828/7431 [2:48:59<4:10:26,  3.26s/it] 38%|███▊      | 2829/7431 [2:49:02<4:12:32,  3.29s/it] 38%|███▊      | 2830/7431 [2:49:05<4:09:12,  3.25s/it] 38%|███▊      | 2831/7431 [2:49:09<4:10:35,  3.27s/it] 38%|███▊      | 2832/7431 [2:49:12<4:10:33,  3.27s/it] 38%|███▊      | 2833/7431 [2:49:15<4:09:29,  3.26s/it] 38%|███▊      | 2834/7431 [2:49:18<4:10:01,  3.26s/it] 38%|███▊      | 2835/7431 [2:49:22<4:13:22,  3.31s/it] 38%|███▊      | 2836/7431 [2:49:25<4:12:18,  3.29s/it] 38%|███▊      | 2837/7431 [2:49:28<4:07:22,  3.23s/it] 38%|███▊      | 2838/7431 [2:49:32<4:10:01,  3.27s/it] 38%|███▊      | 2839/7431 [2:49:35<4:10:02,  3.27s/it] 38%|███▊      | 2840/7431 [2:49:38<4:12:53,  3.30s/it] 38%|███▊      | 2841/7431 [2:49:42<4:14:04,  3.32s/it] 38%|███▊      | 2842/7431 [2:49:45<4:10:03,  3.27s/it] 38%|███▊      | 2843/7431 [2:49:48<4:06:24,  3.22s/it] 38%|███▊      | 2844/7431 [2:49:51<4:12:26,  3.30s/it] 38%|███▊      | 2845/7431 [2:49:55<4:12:25,  3.30s/it] 38%|███▊      | 2846/7431 [2:49:58<4:09:43,  3.27s/it] 38%|███▊      | 2847/7431 [2:50:01<4:13:56,  3.32s/it] 38%|███▊      | 2848/7431 [2:50:04<4:11:28,  3.29s/it] 38%|███▊      | 2849/7431 [2:50:08<4:11:57,  3.30s/it]08/31/2024 21:17:29 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.780052661895752, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04200867936015129, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7618777751922607, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.583939075469971}
 38%|███▊      | 2850/7431 [2:50:11<4:10:19,  3.28s/it] 38%|███▊      | 2851/7431 [2:50:14<4:15:02,  3.34s/it] 38%|███▊      | 2852/7431 [2:50:18<4:12:02,  3.30s/it] 38%|███▊      | 2853/7431 [2:50:21<4:08:23,  3.26s/it] 38%|███▊      | 2854/7431 [2:50:24<4:06:47,  3.24s/it] 38%|███▊      | 2855/7431 [2:50:27<4:11:56,  3.30s/it] 38%|███▊      | 2856/7431 [2:50:31<4:16:26,  3.36s/it] 38%|███▊      | 2857/7431 [2:50:34<4:12:45,  3.32s/it] 38%|███▊      | 2858/7431 [2:50:38<4:12:27,  3.31s/it] 38%|███▊      | 2859/7431 [2:50:41<4:10:31,  3.29s/it] 38%|███▊      | 2860/7431 [2:50:44<4:07:26,  3.25s/it] 39%|███▊      | 2861/7431 [2:50:47<4:06:08,  3.23s/it] 39%|███▊      | 2862/7431 [2:50:50<4:04:19,  3.21s/it] 39%|███▊      | 2863/7431 [2:50:54<4:11:06,  3.30s/it] 39%|███▊      | 2864/7431 [2:50:57<4:07:57,  3.26s/it] 39%|███▊      | 2865/7431 [2:51:00<4:07:54,  3.26s/it] 39%|███▊      | 2866/7431 [2:51:03<4:08:53,  3.27s/it] 39%|███▊      | 2867/7431 [2:51:07<4:07:46,  3.26s/it] 39%|███▊      | 2868/7431 [2:51:10<4:14:47,  3.35s/it] 39%|███▊      | 2869/7431 [2:51:13<4:10:34,  3.30s/it] 39%|███▊      | 2870/7431 [2:51:17<4:08:28,  3.27s/it] 39%|███▊      | 2871/7431 [2:51:20<4:09:57,  3.29s/it] 39%|███▊      | 2872/7431 [2:51:23<4:09:37,  3.29s/it] 39%|███▊      | 2873/7431 [2:51:26<4:06:18,  3.24s/it] 39%|███▊      | 2874/7431 [2:51:30<4:07:29,  3.26s/it] 39%|███▊      | 2875/7431 [2:51:33<4:05:13,  3.23s/it] 39%|███▊      | 2876/7431 [2:51:36<4:04:48,  3.22s/it] 39%|███▊      | 2877/7431 [2:51:39<4:05:56,  3.24s/it] 39%|███▊      | 2878/7431 [2:51:43<4:05:15,  3.23s/it] 39%|███▊      | 2879/7431 [2:51:46<4:09:28,  3.29s/it] 39%|███▉      | 2880/7431 [2:51:49<4:09:31,  3.29s/it] 39%|███▉      | 2881/7431 [2:51:52<4:06:39,  3.25s/it] 39%|███▉      | 2882/7431 [2:51:56<4:10:35,  3.31s/it] 39%|███▉      | 2883/7431 [2:51:59<4:08:31,  3.28s/it] 39%|███▉      | 2884/7431 [2:52:02<4:11:30,  3.32s/it] 39%|███▉      | 2885/7431 [2:52:06<4:07:46,  3.27s/it] 39%|███▉      | 2886/7431 [2:52:09<4:06:56,  3.26s/it] 39%|███▉      | 2887/7431 [2:52:12<4:05:38,  3.24s/it] 39%|███▉      | 2888/7431 [2:52:15<4:08:35,  3.28s/it] 39%|███▉      | 2889/7431 [2:52:19<4:08:50,  3.29s/it] 39%|███▉      | 2890/7431 [2:52:22<4:06:57,  3.26s/it] 39%|███▉      | 2891/7431 [2:52:25<4:04:26,  3.23s/it] 39%|███▉      | 2892/7431 [2:52:28<4:06:06,  3.25s/it] 39%|███▉      | 2893/7431 [2:52:32<4:06:24,  3.26s/it] 39%|███▉      | 2894/7431 [2:52:35<4:05:25,  3.25s/it] 39%|███▉      | 2895/7431 [2:52:38<4:02:05,  3.20s/it] 39%|███▉      | 2896/7431 [2:52:41<4:01:33,  3.20s/it] 39%|███▉      | 2897/7431 [2:52:45<4:05:58,  3.25s/it] 39%|███▉      | 2898/7431 [2:52:48<4:07:15,  3.27s/it] 39%|███▉      | 2899/7431 [2:52:51<4:05:54,  3.26s/it]08/31/2024 21:20:13 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.64738929271698, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04148213565349579, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.678054094314575, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.366925239562988}
 39%|███▉      | 2900/7431 [2:52:54<4:06:19,  3.26s/it] 39%|███▉      | 2901/7431 [2:52:58<4:09:35,  3.31s/it] 39%|███▉      | 2902/7431 [2:53:01<4:05:24,  3.25s/it] 39%|███▉      | 2903/7431 [2:53:04<4:05:23,  3.25s/it] 39%|███▉      | 2904/7431 [2:53:07<4:04:44,  3.24s/it] 39%|███▉      | 2905/7431 [2:53:11<4:05:42,  3.26s/it] 39%|███▉      | 2906/7431 [2:53:14<4:05:03,  3.25s/it] 39%|███▉      | 2907/7431 [2:53:17<4:07:42,  3.29s/it] 39%|███▉      | 2908/7431 [2:53:21<4:06:41,  3.27s/it] 39%|███▉      | 2909/7431 [2:53:24<4:10:00,  3.32s/it] 39%|███▉      | 2910/7431 [2:53:27<4:12:33,  3.35s/it] 39%|███▉      | 2911/7431 [2:53:31<4:08:14,  3.30s/it] 39%|███▉      | 2912/7431 [2:53:34<4:06:00,  3.27s/it] 39%|███▉      | 2913/7431 [2:53:37<4:05:07,  3.26s/it] 39%|███▉      | 2914/7431 [2:53:40<4:07:32,  3.29s/it] 39%|███▉      | 2915/7431 [2:53:44<4:04:37,  3.25s/it] 39%|███▉      | 2916/7431 [2:53:47<4:06:54,  3.28s/it] 39%|███▉      | 2917/7431 [2:53:50<4:06:42,  3.28s/it] 39%|███▉      | 2918/7431 [2:53:53<4:08:06,  3.30s/it] 39%|███▉      | 2919/7431 [2:53:57<4:09:13,  3.31s/it] 39%|███▉      | 2920/7431 [2:54:00<4:06:16,  3.28s/it] 39%|███▉      | 2921/7431 [2:54:03<4:03:39,  3.24s/it] 39%|███▉      | 2922/7431 [2:54:06<4:02:37,  3.23s/it] 39%|███▉      | 2923/7431 [2:54:10<4:02:30,  3.23s/it] 39%|███▉      | 2924/7431 [2:54:13<4:00:52,  3.21s/it] 39%|███▉      | 2925/7431 [2:54:16<4:03:54,  3.25s/it] 39%|███▉      | 2926/7431 [2:54:19<4:03:34,  3.24s/it] 39%|███▉      | 2927/7431 [2:54:23<4:06:26,  3.28s/it] 39%|███▉      | 2928/7431 [2:54:26<4:04:05,  3.25s/it] 39%|███▉      | 2929/7431 [2:54:29<4:01:12,  3.21s/it] 39%|███▉      | 2930/7431 [2:54:32<4:01:57,  3.23s/it] 39%|███▉      | 2931/7431 [2:54:36<4:05:13,  3.27s/it] 39%|███▉      | 2932/7431 [2:54:39<4:04:34,  3.26s/it] 39%|███▉      | 2933/7431 [2:54:42<4:04:15,  3.26s/it] 39%|███▉      | 2934/7431 [2:54:45<4:05:22,  3.27s/it] 39%|███▉      | 2935/7431 [2:54:49<4:06:09,  3.29s/it] 40%|███▉      | 2936/7431 [2:54:52<4:06:29,  3.29s/it] 40%|███▉      | 2937/7431 [2:54:55<4:03:17,  3.25s/it] 40%|███▉      | 2938/7431 [2:54:59<4:05:00,  3.27s/it] 40%|███▉      | 2939/7431 [2:55:02<4:05:52,  3.28s/it] 40%|███▉      | 2940/7431 [2:55:05<4:07:59,  3.31s/it] 40%|███▉      | 2941/7431 [2:55:09<4:07:11,  3.30s/it] 40%|███▉      | 2942/7431 [2:55:12<4:03:19,  3.25s/it] 40%|███▉      | 2943/7431 [2:55:15<4:03:12,  3.25s/it] 40%|███▉      | 2944/7431 [2:55:18<4:02:10,  3.24s/it] 40%|███▉      | 2945/7431 [2:55:21<4:05:01,  3.28s/it] 40%|███▉      | 2946/7431 [2:55:25<4:04:15,  3.27s/it] 40%|███▉      | 2947/7431 [2:55:28<4:04:43,  3.27s/it] 40%|███▉      | 2948/7431 [2:55:31<4:07:19,  3.31s/it] 40%|███▉      | 2949/7431 [2:55:35<4:02:39,  3.25s/it]08/31/2024 21:22:56 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.7214252948760986, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04323577135801315, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.799043893814087, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.563704967498779}
 40%|███▉      | 2950/7431 [2:55:38<4:04:34,  3.27s/it] 40%|███▉      | 2951/7431 [2:55:41<4:06:37,  3.30s/it] 40%|███▉      | 2952/7431 [2:55:44<4:05:51,  3.29s/it] 40%|███▉      | 2953/7431 [2:55:48<4:06:27,  3.30s/it] 40%|███▉      | 2954/7431 [2:55:51<4:02:32,  3.25s/it] 40%|███▉      | 2955/7431 [2:55:54<4:02:10,  3.25s/it] 40%|███▉      | 2956/7431 [2:55:57<4:01:09,  3.23s/it] 40%|███▉      | 2957/7431 [2:56:01<4:05:29,  3.29s/it] 40%|███▉      | 2958/7431 [2:56:04<4:04:45,  3.28s/it] 40%|███▉      | 2959/7431 [2:56:07<4:05:49,  3.30s/it] 40%|███▉      | 2960/7431 [2:56:11<4:03:24,  3.27s/it] 40%|███▉      | 2961/7431 [2:56:14<4:03:24,  3.27s/it] 40%|███▉      | 2962/7431 [2:56:17<4:04:50,  3.29s/it] 40%|███▉      | 2963/7431 [2:56:21<4:05:31,  3.30s/it] 40%|███▉      | 2964/7431 [2:56:24<4:02:04,  3.25s/it] 40%|███▉      | 2965/7431 [2:56:27<3:58:12,  3.20s/it] 40%|███▉      | 2966/7431 [2:56:30<3:56:38,  3.18s/it] 40%|███▉      | 2967/7431 [2:56:33<3:58:08,  3.20s/it] 40%|███▉      | 2968/7431 [2:56:37<4:05:29,  3.30s/it] 40%|███▉      | 2969/7431 [2:56:40<4:05:31,  3.30s/it] 40%|███▉      | 2970/7431 [2:56:43<4:06:56,  3.32s/it] 40%|███▉      | 2971/7431 [2:56:47<4:05:40,  3.31s/it] 40%|███▉      | 2972/7431 [2:56:50<4:06:35,  3.32s/it] 40%|████      | 2973/7431 [2:56:53<4:03:08,  3.27s/it] 40%|████      | 2974/7431 [2:56:56<4:05:02,  3.30s/it] 40%|████      | 2975/7431 [2:57:00<4:02:48,  3.27s/it] 40%|████      | 2976/7431 [2:57:03<4:01:23,  3.25s/it] 40%|████      | 2977/7431 [2:57:06<4:00:49,  3.24s/it] 40%|████      | 2978/7431 [2:57:09<4:01:47,  3.26s/it] 40%|████      | 2979/7431 [2:57:13<4:03:17,  3.28s/it] 40%|████      | 2980/7431 [2:57:16<4:02:56,  3.27s/it] 40%|████      | 2981/7431 [2:57:19<4:03:45,  3.29s/it] 40%|████      | 2982/7431 [2:57:23<4:02:00,  3.26s/it] 40%|████      | 2983/7431 [2:57:26<4:03:29,  3.28s/it] 40%|████      | 2984/7431 [2:57:29<4:03:16,  3.28s/it] 40%|████      | 2985/7431 [2:57:32<4:04:03,  3.29s/it] 40%|████      | 2986/7431 [2:57:36<4:02:19,  3.27s/it] 40%|████      | 2987/7431 [2:57:39<3:59:37,  3.24s/it] 40%|████      | 2988/7431 [2:57:42<3:57:51,  3.21s/it] 40%|████      | 2989/7431 [2:57:45<3:59:39,  3.24s/it] 40%|████      | 2990/7431 [2:57:49<3:59:39,  3.24s/it] 40%|████      | 2991/7431 [2:57:52<3:57:49,  3.21s/it] 40%|████      | 2992/7431 [2:57:55<3:59:36,  3.24s/it] 40%|████      | 2993/7431 [2:57:58<4:02:32,  3.28s/it] 40%|████      | 2994/7431 [2:58:02<3:59:59,  3.25s/it] 40%|████      | 2995/7431 [2:58:05<4:01:21,  3.26s/it] 40%|████      | 2996/7431 [2:58:08<3:59:37,  3.24s/it] 40%|████      | 2997/7431 [2:58:11<3:59:14,  3.24s/it] 40%|████      | 2998/7431 [2:58:15<4:01:57,  3.27s/it] 40%|████      | 2999/7431 [2:58:18<3:59:39,  3.24s/it]08/31/2024 21:25:39 - INFO - __main__ -   evaluate on ret%tv--msrvtt_ret task
08/31/2024 21:25:39 - INFO - __main__ -   start running ret%tv validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  1%|          | 2/221 [00:00<00:51,  4.22it/s][A
  1%|▏         | 3/221 [00:00<00:53,  4.07it/s][A
  2%|▏         | 4/221 [00:00<00:45,  4.75it/s][A
  2%|▏         | 5/221 [00:01<00:38,  5.58it/s][A
  3%|▎         | 6/221 [00:01<00:35,  6.09it/s][A
  3%|▎         | 7/221 [00:01<00:34,  6.13it/s][A
  4%|▎         | 8/221 [00:01<00:35,  5.95it/s][A
  4%|▍         | 9/221 [00:01<00:33,  6.30it/s][A
  5%|▍         | 10/221 [00:02<00:48,  4.31it/s][A
  5%|▍         | 11/221 [00:02<00:44,  4.75it/s][A
  5%|▌         | 12/221 [00:02<00:44,  4.72it/s][A
  6%|▌         | 13/221 [00:02<00:49,  4.21it/s][A
  6%|▋         | 14/221 [00:02<00:44,  4.68it/s][A
  7%|▋         | 15/221 [00:03<00:42,  4.89it/s][A
  7%|▋         | 16/221 [00:03<00:53,  3.82it/s][A
  8%|▊         | 17/221 [00:03<00:56,  3.64it/s][A
  8%|▊         | 18/221 [00:03<00:46,  4.34it/s][A
  9%|▊         | 19/221 [00:04<00:48,  4.16it/s][A
  9%|▉         | 20/221 [00:04<00:42,  4.78it/s][A
 10%|▉         | 21/221 [00:04<00:43,  4.62it/s][A
 10%|▉         | 22/221 [00:04<00:45,  4.36it/s][A
 10%|█         | 23/221 [00:04<00:39,  4.98it/s][A
 11%|█         | 24/221 [00:05<00:41,  4.78it/s][A
 11%|█▏        | 25/221 [00:05<00:45,  4.27it/s][A
 12%|█▏        | 26/221 [00:05<00:45,  4.25it/s][A
 12%|█▏        | 27/221 [00:05<00:48,  3.99it/s][A
 13%|█▎        | 28/221 [00:06<00:52,  3.69it/s][A
 13%|█▎        | 29/221 [00:06<00:57,  3.35it/s][A
 14%|█▎        | 30/221 [00:06<00:57,  3.32it/s][A
 14%|█▍        | 31/221 [00:07<00:52,  3.64it/s][A
 14%|█▍        | 32/221 [00:07<00:47,  3.94it/s][A
 15%|█▍        | 33/221 [00:07<00:44,  4.18it/s][A
 15%|█▌        | 34/221 [00:07<00:42,  4.39it/s][A
 16%|█▌        | 35/221 [00:08<00:53,  3.49it/s][A
 16%|█▋        | 36/221 [00:08<00:54,  3.41it/s][A
 17%|█▋        | 37/221 [00:08<00:49,  3.69it/s][A
 17%|█▋        | 38/221 [00:08<00:48,  3.78it/s][A
 18%|█▊        | 39/221 [00:09<00:45,  3.97it/s][A
 18%|█▊        | 40/221 [00:09<00:51,  3.53it/s][A
 19%|█▊        | 41/221 [00:09<00:56,  3.20it/s][A
 19%|█▉        | 43/221 [00:10<00:39,  4.54it/s][A
 20%|█▉        | 44/221 [00:10<00:39,  4.53it/s][A
 20%|██        | 45/221 [00:10<00:46,  3.79it/s][A
 21%|██        | 46/221 [00:11<00:52,  3.33it/s][A
 22%|██▏       | 48/221 [00:11<00:38,  4.46it/s][A
 22%|██▏       | 49/221 [00:11<00:43,  3.99it/s][A
 23%|██▎       | 50/221 [00:12<00:48,  3.56it/s][A
 23%|██▎       | 51/221 [00:12<00:45,  3.72it/s][A
 24%|██▎       | 52/221 [00:12<00:47,  3.59it/s][A
 24%|██▍       | 53/221 [00:12<00:43,  3.86it/s][A
 24%|██▍       | 54/221 [00:13<00:57,  2.90it/s][A
 25%|██▍       | 55/221 [00:13<00:54,  3.06it/s][A
 25%|██▌       | 56/221 [00:13<00:48,  3.38it/s][A
 26%|██▌       | 57/221 [00:14<00:49,  3.30it/s][A
 26%|██▌       | 58/221 [00:14<00:46,  3.48it/s][A
 27%|██▋       | 59/221 [00:14<00:39,  4.15it/s][A
 27%|██▋       | 60/221 [00:14<00:40,  4.02it/s][A
 28%|██▊       | 61/221 [00:15<00:39,  4.01it/s][A
 28%|██▊       | 62/221 [00:15<00:39,  4.05it/s][A
 29%|██▊       | 63/221 [00:15<00:43,  3.64it/s][A
 29%|██▉       | 64/221 [00:16<00:45,  3.47it/s][A
 29%|██▉       | 65/221 [00:16<00:40,  3.87it/s][A
 30%|██▉       | 66/221 [00:16<00:49,  3.11it/s][A
 30%|███       | 67/221 [00:17<00:50,  3.05it/s][A
 31%|███       | 68/221 [00:17<00:41,  3.69it/s][A
 31%|███       | 69/221 [00:17<00:51,  2.97it/s][A
 32%|███▏      | 70/221 [00:17<00:46,  3.27it/s][A
 32%|███▏      | 71/221 [00:18<00:45,  3.30it/s][A
 33%|███▎      | 72/221 [00:18<00:46,  3.19it/s][A
 33%|███▎      | 73/221 [00:18<00:40,  3.67it/s][A
 33%|███▎      | 74/221 [00:18<00:37,  3.94it/s][A
 34%|███▍      | 75/221 [00:19<00:39,  3.65it/s][A
 34%|███▍      | 76/221 [00:19<00:39,  3.70it/s][A
 35%|███▍      | 77/221 [00:19<00:47,  3.02it/s][A
 35%|███▌      | 78/221 [00:20<00:41,  3.41it/s][A
 36%|███▌      | 79/221 [00:20<00:49,  2.86it/s][A
 36%|███▌      | 80/221 [00:20<00:42,  3.35it/s][A
 37%|███▋      | 81/221 [00:21<00:36,  3.82it/s][A
 37%|███▋      | 82/221 [00:21<00:36,  3.85it/s][A
 38%|███▊      | 83/221 [00:21<00:40,  3.37it/s][A
 38%|███▊      | 84/221 [00:21<00:37,  3.69it/s][A
 38%|███▊      | 85/221 [00:21<00:31,  4.26it/s][A
 39%|███▉      | 86/221 [00:22<00:32,  4.12it/s][A
 39%|███▉      | 87/221 [00:22<00:37,  3.58it/s][A
 40%|███▉      | 88/221 [00:22<00:40,  3.26it/s][A
 40%|████      | 89/221 [00:23<00:38,  3.42it/s][A
 41%|████      | 90/221 [00:23<00:35,  3.66it/s][A
 41%|████      | 91/221 [00:23<00:30,  4.32it/s][A
 42%|████▏     | 92/221 [00:23<00:30,  4.22it/s][A
 42%|████▏     | 93/221 [00:24<00:38,  3.29it/s][A
 43%|████▎     | 94/221 [00:24<00:40,  3.12it/s][A
 43%|████▎     | 95/221 [00:24<00:35,  3.56it/s][A
 43%|████▎     | 96/221 [00:25<00:47,  2.66it/s][A
 44%|████▍     | 97/221 [00:25<00:42,  2.93it/s][A
 44%|████▍     | 98/221 [00:26<00:48,  2.55it/s][A
 45%|████▍     | 99/221 [00:26<00:46,  2.63it/s][A
 45%|████▌     | 100/221 [00:26<00:41,  2.90it/s][A
 46%|████▌     | 101/221 [00:27<00:37,  3.18it/s][A
 46%|████▌     | 102/221 [00:27<00:43,  2.72it/s][A
 47%|████▋     | 103/221 [00:27<00:37,  3.18it/s][A
 47%|████▋     | 104/221 [00:28<00:34,  3.35it/s][A
 48%|████▊     | 105/221 [00:28<00:44,  2.62it/s][A
 48%|████▊     | 106/221 [00:28<00:40,  2.81it/s][A
 48%|████▊     | 107/221 [00:29<00:39,  2.90it/s][A
 49%|████▉     | 108/221 [00:29<00:34,  3.24it/s][A
 49%|████▉     | 109/221 [00:29<00:28,  3.93it/s][A
 50%|████▉     | 110/221 [00:30<00:34,  3.24it/s][A
 50%|█████     | 111/221 [00:30<00:35,  3.14it/s][A
 51%|█████     | 112/221 [00:30<00:32,  3.32it/s][A
 51%|█████     | 113/221 [00:30<00:29,  3.68it/s][A
 52%|█████▏    | 114/221 [00:30<00:25,  4.21it/s][A
 52%|█████▏    | 115/221 [00:31<00:28,  3.68it/s][A
 52%|█████▏    | 116/221 [00:31<00:26,  3.89it/s][A
 53%|█████▎    | 117/221 [00:31<00:28,  3.66it/s][A
 53%|█████▎    | 118/221 [00:32<00:26,  3.93it/s][A
 54%|█████▍    | 119/221 [00:32<00:26,  3.90it/s][A
 54%|█████▍    | 120/221 [00:32<00:27,  3.63it/s][A
 55%|█████▍    | 121/221 [00:32<00:22,  4.36it/s][A
 55%|█████▌    | 122/221 [00:33<00:23,  4.30it/s][A
 56%|█████▌    | 123/221 [00:33<00:20,  4.70it/s][A
 56%|█████▌    | 124/221 [00:33<00:25,  3.76it/s][A
 57%|█████▋    | 125/221 [00:33<00:26,  3.60it/s][A
 57%|█████▋    | 126/221 [00:34<00:23,  4.12it/s][A
 57%|█████▋    | 127/221 [00:34<00:25,  3.68it/s][A
 58%|█████▊    | 128/221 [00:34<00:25,  3.62it/s][A
 58%|█████▊    | 129/221 [00:34<00:21,  4.19it/s][A
 59%|█████▉    | 130/221 [00:35<00:22,  4.08it/s][A
 59%|█████▉    | 131/221 [00:35<00:18,  4.81it/s][A
 60%|█████▉    | 132/221 [00:36<00:34,  2.57it/s][A
 60%|██████    | 133/221 [00:36<00:33,  2.63it/s][A
 61%|██████    | 134/221 [00:36<00:34,  2.51it/s][A
 61%|██████    | 135/221 [00:37<00:34,  2.47it/s][A
 62%|██████▏   | 136/221 [00:37<00:30,  2.79it/s][A
 62%|██████▏   | 137/221 [00:37<00:26,  3.18it/s][A
 62%|██████▏   | 138/221 [00:37<00:24,  3.35it/s][A
 63%|██████▎   | 139/221 [00:38<00:22,  3.64it/s][A
 63%|██████▎   | 140/221 [00:38<00:21,  3.69it/s][A
 64%|██████▍   | 141/221 [00:38<00:23,  3.34it/s][A
 64%|██████▍   | 142/221 [00:39<00:24,  3.23it/s][A
 65%|██████▍   | 143/221 [00:39<00:26,  2.90it/s][A
 65%|██████▌   | 144/221 [00:40<00:29,  2.60it/s][A
 66%|██████▌   | 145/221 [00:40<00:24,  3.07it/s][A
 67%|██████▋   | 147/221 [00:40<00:18,  3.98it/s][A
 67%|██████▋   | 148/221 [00:40<00:18,  3.92it/s][A
 67%|██████▋   | 149/221 [00:41<00:20,  3.44it/s][A
 68%|██████▊   | 150/221 [00:41<00:18,  3.79it/s][A
 68%|██████▊   | 151/221 [00:41<00:19,  3.59it/s][A
 69%|██████▉   | 152/221 [00:42<00:21,  3.15it/s][A
 69%|██████▉   | 153/221 [00:42<00:18,  3.66it/s][A
 70%|██████▉   | 154/221 [00:42<00:17,  3.73it/s][A
 70%|███████   | 155/221 [00:42<00:18,  3.65it/s][A
 71%|███████   | 156/221 [00:43<00:19,  3.41it/s][A
 71%|███████   | 157/221 [00:43<00:19,  3.37it/s][A
 71%|███████▏  | 158/221 [00:43<00:18,  3.36it/s][A
 72%|███████▏  | 159/221 [00:44<00:16,  3.70it/s][A
 72%|███████▏  | 160/221 [00:44<00:14,  4.34it/s][A
 73%|███████▎  | 161/221 [00:44<00:16,  3.70it/s][A
 73%|███████▎  | 162/221 [00:44<00:14,  4.10it/s][A
 74%|███████▍  | 163/221 [00:45<00:15,  3.78it/s][A
 74%|███████▍  | 164/221 [00:45<00:12,  4.41it/s][A
 75%|███████▍  | 165/221 [00:45<00:12,  4.46it/s][A
 75%|███████▌  | 166/221 [00:45<00:12,  4.40it/s][A
 76%|███████▌  | 167/221 [00:45<00:13,  4.12it/s][A
 76%|███████▌  | 168/221 [00:46<00:12,  4.22it/s][A
 76%|███████▋  | 169/221 [00:46<00:12,  4.01it/s][A
 77%|███████▋  | 170/221 [00:46<00:12,  4.05it/s][A
 77%|███████▋  | 171/221 [00:46<00:11,  4.39it/s][A
 78%|███████▊  | 172/221 [00:47<00:11,  4.20it/s][A
 78%|███████▊  | 173/221 [00:47<00:12,  3.89it/s][A
 79%|███████▊  | 174/221 [00:47<00:12,  3.66it/s][A
 79%|███████▉  | 175/221 [00:48<00:14,  3.09it/s][A
 80%|███████▉  | 176/221 [00:48<00:12,  3.61it/s][A
 80%|████████  | 177/221 [00:48<00:10,  4.28it/s][A
 81%|████████  | 178/221 [00:48<00:10,  4.10it/s][A
 81%|████████  | 179/221 [00:48<00:09,  4.49it/s][A
 81%|████████▏ | 180/221 [00:49<00:08,  4.80it/s][A
 82%|████████▏ | 182/221 [00:49<00:07,  5.21it/s][A
 83%|████████▎ | 183/221 [00:49<00:08,  4.42it/s][A
 83%|████████▎ | 184/221 [00:50<00:09,  4.04it/s][A
 84%|████████▎ | 185/221 [00:50<00:09,  3.86it/s][A
 84%|████████▍ | 186/221 [00:50<00:10,  3.23it/s][A
 85%|████████▍ | 187/221 [00:51<00:11,  2.95it/s][A
 85%|████████▌ | 188/221 [00:51<00:10,  3.07it/s][A
 86%|████████▌ | 189/221 [00:51<00:09,  3.54it/s][A
 86%|████████▌ | 190/221 [00:51<00:09,  3.30it/s][A
 87%|████████▋ | 192/221 [00:52<00:06,  4.25it/s][A
 87%|████████▋ | 193/221 [00:52<00:06,  4.11it/s][A
 88%|████████▊ | 194/221 [00:52<00:06,  4.17it/s][A
 88%|████████▊ | 195/221 [00:53<00:06,  3.72it/s][A
 89%|████████▊ | 196/221 [00:53<00:07,  3.22it/s][A
 89%|████████▉ | 197/221 [00:53<00:07,  3.14it/s][A
 90%|████████▉ | 198/221 [00:54<00:06,  3.29it/s][A
 90%|█████████ | 199/221 [00:54<00:07,  3.12it/s][A
 90%|█████████ | 200/221 [00:54<00:06,  3.17it/s][A
 91%|█████████ | 201/221 [00:55<00:06,  3.15it/s][A
 91%|█████████▏| 202/221 [00:55<00:06,  2.97it/s][A
 92%|█████████▏| 203/221 [00:55<00:05,  3.10it/s][A
 92%|█████████▏| 204/221 [00:56<00:05,  2.86it/s][A
 93%|█████████▎| 205/221 [00:56<00:04,  3.41it/s][A
 93%|█████████▎| 206/221 [00:56<00:04,  3.32it/s][A
 94%|█████████▎| 207/221 [00:56<00:03,  3.54it/s][A
 94%|█████████▍| 208/221 [00:57<00:03,  3.28it/s][A
 95%|█████████▍| 209/221 [00:57<00:03,  3.56it/s][A
 95%|█████████▌| 210/221 [00:57<00:02,  4.00it/s][A
 95%|█████████▌| 211/221 [00:58<00:03,  3.26it/s][A
 96%|█████████▌| 212/221 [00:58<00:02,  3.57it/s][A
 96%|█████████▋| 213/221 [00:58<00:01,  4.05it/s][A
 97%|█████████▋| 214/221 [00:58<00:02,  3.22it/s][A
 97%|█████████▋| 215/221 [00:59<00:01,  3.92it/s][A
 98%|█████████▊| 216/221 [00:59<00:01,  3.87it/s][A
 98%|█████████▊| 217/221 [00:59<00:01,  3.52it/s][A
 99%|█████████▊| 218/221 [01:00<00:00,  3.54it/s][A
 99%|█████████▉| 219/221 [01:00<00:00,  3.59it/s][A
100%|█████████▉| 220/221 [01:00<00:00,  4.13it/s][A
100%|██████████| 221/221 [01:00<00:00,  4.25it/s][A100%|██████████| 221/221 [01:00<00:00,  3.64it/s]
08/31/2024 21:28:01 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forward=====step 2999--===========

08/31/2024 21:28:01 - INFO - __main__ -   {'area_r1': 12.2, 'area_recall': '12.2/29.3/36.9', 'area_ravg': 26.1}
08/31/2024 21:28:01 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_backard=====step 2999--===========

08/31/2024 21:28:01 - INFO - __main__ -   {'forward_r1': 45.1, 'forward_recall': '45.1/75.9/84.4', 'forward_ravg': 68.5}
08/31/2024 21:28:01 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forw_with_video=====step 2999--===========

08/31/2024 21:28:01 - INFO - __main__ -   {'forward_r1': 61.5, 'forward_recall': '61.5/86.0/90.3', 'forward_ravg': 79.3}
08/31/2024 21:28:01 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itc_tv=====step 2999--===========

08/31/2024 21:28:01 - INFO - __main__ -   {'video_r1': 46.0, 'video_recall': '46.0/75.3/83.9', 'video_ravg': 68.4}
08/31/2024 21:28:01 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itc_tv====history best step: 2999=======

08/31/2024 21:28:01 - INFO - __main__ -   {'video_r1': 46.0, 'video_recall': '46.0/75.3/83.9', 'video_ravg': 68.4}
08/31/2024 21:28:01 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itm_tv=====step 2999--===========

08/31/2024 21:28:01 - INFO - __main__ -   {'video_r1': 55.2, 'video_recall': '55.2/78.3/84.6', 'video_ravg': 72.7}
08/31/2024 21:28:01 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itm_tv====history best step: 999=======

08/31/2024 21:28:01 - INFO - __main__ -   {'video_r1': 56.9, 'video_recall': '56.9/78.3/85.3', 'video_ravg': 73.5}
08/31/2024 21:28:32 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.5874156951904297, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03511790186166763, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.5891058444976807, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.211639404296875}
 40%|████      | 3000/7431 [3:01:14<67:47:26, 55.08s/it] 40%|████      | 3001/7431 [3:01:17<48:36:41, 39.50s/it] 40%|████      | 3002/7431 [3:01:20<35:11:10, 28.60s/it] 40%|████      | 3003/7431 [3:01:23<25:51:10, 21.02s/it] 40%|████      | 3004/7431 [3:01:27<19:16:23, 15.67s/it] 40%|████      | 3005/7431 [3:01:30<14:39:17, 11.92s/it] 40%|████      | 3006/7431 [3:01:33<11:28:38,  9.34s/it] 40%|████      | 3007/7431 [3:01:36<9:15:59,  7.54s/it]  40%|████      | 3008/7431 [3:01:40<7:38:13,  6.22s/it] 40%|████      | 3009/7431 [3:01:43<6:30:26,  5.30s/it] 41%|████      | 3010/7431 [3:01:46<5:44:24,  4.67s/it] 41%|████      | 3011/7431 [3:01:49<5:11:16,  4.23s/it] 41%|████      | 3012/7431 [3:01:52<4:47:39,  3.91s/it] 41%|████      | 3013/7431 [3:01:56<4:37:19,  3.77s/it] 41%|████      | 3014/7431 [3:01:59<4:25:37,  3.61s/it] 41%|████      | 3015/7431 [3:02:02<4:16:57,  3.49s/it] 41%|████      | 3016/7431 [3:02:05<4:11:59,  3.42s/it] 41%|████      | 3017/7431 [3:02:09<4:08:33,  3.38s/it] 41%|████      | 3018/7431 [3:02:12<4:06:50,  3.36s/it] 41%|████      | 3019/7431 [3:02:15<4:08:16,  3.38s/it] 41%|████      | 3020/7431 [3:02:19<4:03:37,  3.31s/it] 41%|████      | 3021/7431 [3:02:22<4:01:53,  3.29s/it] 41%|████      | 3022/7431 [3:02:25<4:02:57,  3.31s/it] 41%|████      | 3023/7431 [3:02:28<4:00:16,  3.27s/it] 41%|████      | 3024/7431 [3:02:32<4:00:04,  3.27s/it] 41%|████      | 3025/7431 [3:02:35<4:01:13,  3.28s/it] 41%|████      | 3026/7431 [3:02:38<4:01:17,  3.29s/it] 41%|████      | 3027/7431 [3:02:42<4:00:26,  3.28s/it] 41%|████      | 3028/7431 [3:02:45<4:00:01,  3.27s/it] 41%|████      | 3029/7431 [3:02:48<4:00:17,  3.28s/it] 41%|████      | 3030/7431 [3:02:51<3:56:01,  3.22s/it] 41%|████      | 3031/7431 [3:02:55<3:59:29,  3.27s/it] 41%|████      | 3032/7431 [3:02:58<4:06:47,  3.37s/it] 41%|████      | 3033/7431 [3:03:01<4:06:11,  3.36s/it] 41%|████      | 3034/7431 [3:03:05<4:04:39,  3.34s/it] 41%|████      | 3035/7431 [3:03:08<4:01:17,  3.29s/it] 41%|████      | 3036/7431 [3:03:11<3:58:51,  3.26s/it] 41%|████      | 3037/7431 [3:03:14<3:58:55,  3.26s/it] 41%|████      | 3038/7431 [3:03:18<4:01:47,  3.30s/it] 41%|████      | 3039/7431 [3:03:21<4:03:19,  3.32s/it] 41%|████      | 3040/7431 [3:03:24<3:59:41,  3.28s/it] 41%|████      | 3041/7431 [3:03:28<3:58:06,  3.25s/it] 41%|████      | 3042/7431 [3:03:31<3:59:28,  3.27s/it] 41%|████      | 3043/7431 [3:03:34<3:58:37,  3.26s/it] 41%|████      | 3044/7431 [3:03:37<3:56:05,  3.23s/it] 41%|████      | 3045/7431 [3:03:40<3:54:28,  3.21s/it] 41%|████      | 3046/7431 [3:03:44<3:55:57,  3.23s/it] 41%|████      | 3047/7431 [3:03:47<3:57:10,  3.25s/it] 41%|████      | 3048/7431 [3:03:50<3:56:54,  3.24s/it] 41%|████      | 3049/7431 [3:03:53<3:56:11,  3.23s/it]08/31/2024 21:31:15 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.8094282150268555, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04359491169452667, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.8139657974243164, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.666988849639893}
 41%|████      | 3050/7431 [3:03:57<3:56:17,  3.24s/it] 41%|████      | 3051/7431 [3:04:00<4:01:48,  3.31s/it] 41%|████      | 3052/7431 [3:04:03<3:58:48,  3.27s/it] 41%|████      | 3053/7431 [3:04:07<3:57:48,  3.26s/it] 41%|████      | 3054/7431 [3:04:10<3:58:16,  3.27s/it] 41%|████      | 3055/7431 [3:04:13<3:55:40,  3.23s/it] 41%|████      | 3056/7431 [3:04:16<3:55:22,  3.23s/it] 41%|████      | 3057/7431 [3:04:20<3:57:38,  3.26s/it] 41%|████      | 3058/7431 [3:04:23<3:56:57,  3.25s/it] 41%|████      | 3059/7431 [3:04:26<3:56:52,  3.25s/it] 41%|████      | 3060/7431 [3:04:29<3:52:32,  3.19s/it] 41%|████      | 3061/7431 [3:04:32<3:53:25,  3.20s/it] 41%|████      | 3062/7431 [3:04:36<3:57:13,  3.26s/it] 41%|████      | 3063/7431 [3:04:39<3:58:43,  3.28s/it] 41%|████      | 3064/7431 [3:04:42<3:57:31,  3.26s/it] 41%|████      | 3065/7431 [3:04:46<3:57:39,  3.27s/it] 41%|████▏     | 3066/7431 [3:04:49<3:56:32,  3.25s/it] 41%|████▏     | 3067/7431 [3:04:52<3:53:14,  3.21s/it] 41%|████▏     | 3068/7431 [3:04:55<3:53:11,  3.21s/it] 41%|████▏     | 3069/7431 [3:04:58<3:56:53,  3.26s/it] 41%|████▏     | 3070/7431 [3:05:02<3:54:19,  3.22s/it] 41%|████▏     | 3071/7431 [3:05:05<3:57:36,  3.27s/it] 41%|████▏     | 3072/7431 [3:05:08<3:58:13,  3.28s/it] 41%|████▏     | 3073/7431 [3:05:11<3:57:17,  3.27s/it] 41%|████▏     | 3074/7431 [3:05:15<3:56:10,  3.25s/it] 41%|████▏     | 3075/7431 [3:05:18<3:55:42,  3.25s/it] 41%|████▏     | 3076/7431 [3:05:21<3:55:05,  3.24s/it] 41%|████▏     | 3077/7431 [3:05:24<3:54:49,  3.24s/it] 41%|████▏     | 3078/7431 [3:05:28<3:53:25,  3.22s/it] 41%|████▏     | 3079/7431 [3:05:31<3:56:57,  3.27s/it] 41%|████▏     | 3080/7431 [3:05:34<4:00:36,  3.32s/it] 41%|████▏     | 3081/7431 [3:05:38<3:57:14,  3.27s/it] 41%|████▏     | 3082/7431 [3:05:41<4:00:57,  3.32s/it] 41%|████▏     | 3083/7431 [3:05:44<3:57:02,  3.27s/it] 42%|████▏     | 3084/7431 [3:05:47<3:55:17,  3.25s/it] 42%|████▏     | 3085/7431 [3:05:51<3:54:28,  3.24s/it] 42%|████▏     | 3086/7431 [3:05:54<3:56:08,  3.26s/it] 42%|████▏     | 3087/7431 [3:05:57<3:58:42,  3.30s/it] 42%|████▏     | 3088/7431 [3:06:00<3:57:34,  3.28s/it] 42%|████▏     | 3089/7431 [3:06:04<3:57:19,  3.28s/it] 42%|████▏     | 3090/7431 [3:06:07<3:53:52,  3.23s/it] 42%|████▏     | 3091/7431 [3:06:10<3:52:34,  3.22s/it] 42%|████▏     | 3092/7431 [3:06:13<3:53:19,  3.23s/it] 42%|████▏     | 3093/7431 [3:06:17<3:52:20,  3.21s/it] 42%|████▏     | 3094/7431 [3:06:20<3:50:22,  3.19s/it] 42%|████▏     | 3095/7431 [3:06:23<3:51:21,  3.20s/it] 42%|████▏     | 3096/7431 [3:06:26<3:52:03,  3.21s/it] 42%|████▏     | 3097/7431 [3:06:29<3:52:48,  3.22s/it] 42%|████▏     | 3098/7431 [3:06:33<3:52:41,  3.22s/it] 42%|████▏     | 3099/7431 [3:06:36<3:53:16,  3.23s/it]08/31/2024 21:33:57 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.7613985538482666, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.051190588623285294, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7157678604125977, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.528357028961182}
 42%|████▏     | 3100/7431 [3:06:39<3:49:33,  3.18s/it] 42%|████▏     | 3101/7431 [3:06:42<3:49:54,  3.19s/it] 42%|████▏     | 3102/7431 [3:06:45<3:50:00,  3.19s/it] 42%|████▏     | 3103/7431 [3:06:49<3:53:21,  3.24s/it] 42%|████▏     | 3104/7431 [3:06:52<3:54:56,  3.26s/it] 42%|████▏     | 3105/7431 [3:06:55<3:56:59,  3.29s/it] 42%|████▏     | 3106/7431 [3:06:58<3:55:11,  3.26s/it] 42%|████▏     | 3107/7431 [3:07:02<3:53:35,  3.24s/it] 42%|████▏     | 3108/7431 [3:07:05<3:53:36,  3.24s/it] 42%|████▏     | 3109/7431 [3:07:08<3:54:46,  3.26s/it] 42%|████▏     | 3110/7431 [3:07:11<3:53:35,  3.24s/it] 42%|████▏     | 3111/7431 [3:07:15<3:54:18,  3.25s/it] 42%|████▏     | 3112/7431 [3:07:18<4:00:13,  3.34s/it] 42%|████▏     | 3113/7431 [3:07:21<3:55:22,  3.27s/it] 42%|████▏     | 3114/7431 [3:07:25<3:56:00,  3.28s/it] 42%|████▏     | 3115/7431 [3:07:28<3:57:03,  3.30s/it] 42%|████▏     | 3116/7431 [3:07:31<3:58:19,  3.31s/it] 42%|████▏     | 3117/7431 [3:07:35<3:59:25,  3.33s/it] 42%|████▏     | 3118/7431 [3:07:38<3:58:26,  3.32s/it] 42%|████▏     | 3119/7431 [3:07:41<3:55:39,  3.28s/it] 42%|████▏     | 3120/7431 [3:07:45<3:58:23,  3.32s/it] 42%|████▏     | 3121/7431 [3:07:48<4:03:11,  3.39s/it] 42%|████▏     | 3122/7431 [3:07:51<3:57:45,  3.31s/it] 42%|████▏     | 3123/7431 [3:07:55<3:57:03,  3.30s/it] 42%|████▏     | 3124/7431 [3:07:58<3:56:51,  3.30s/it] 42%|████▏     | 3125/7431 [3:08:01<3:55:40,  3.28s/it] 42%|████▏     | 3126/7431 [3:08:04<3:55:10,  3.28s/it] 42%|████▏     | 3127/7431 [3:08:08<3:53:57,  3.26s/it] 42%|████▏     | 3128/7431 [3:08:11<3:53:40,  3.26s/it] 42%|████▏     | 3129/7431 [3:08:14<3:52:43,  3.25s/it] 42%|████▏     | 3130/7431 [3:08:17<3:51:33,  3.23s/it] 42%|████▏     | 3131/7431 [3:08:20<3:50:07,  3.21s/it] 42%|████▏     | 3132/7431 [3:08:24<3:50:43,  3.22s/it] 42%|████▏     | 3133/7431 [3:08:27<3:52:53,  3.25s/it] 42%|████▏     | 3134/7431 [3:08:30<3:52:02,  3.24s/it] 42%|████▏     | 3135/7431 [3:08:33<3:49:37,  3.21s/it] 42%|████▏     | 3136/7431 [3:08:37<3:53:46,  3.27s/it] 42%|████▏     | 3137/7431 [3:08:40<3:51:24,  3.23s/it] 42%|████▏     | 3138/7431 [3:08:43<3:51:23,  3.23s/it] 42%|████▏     | 3139/7431 [3:08:46<3:51:50,  3.24s/it] 42%|████▏     | 3140/7431 [3:08:50<3:51:54,  3.24s/it] 42%|████▏     | 3141/7431 [3:08:53<3:50:52,  3.23s/it] 42%|████▏     | 3142/7431 [3:08:56<3:54:40,  3.28s/it] 42%|████▏     | 3143/7431 [3:08:59<3:52:09,  3.25s/it] 42%|████▏     | 3144/7431 [3:09:03<3:57:38,  3.33s/it] 42%|████▏     | 3145/7431 [3:09:06<3:58:03,  3.33s/it] 42%|████▏     | 3146/7431 [3:09:10<3:56:08,  3.31s/it] 42%|████▏     | 3147/7431 [3:09:13<3:51:33,  3.24s/it] 42%|████▏     | 3148/7431 [3:09:16<3:51:52,  3.25s/it] 42%|████▏     | 3149/7431 [3:09:19<3:49:26,  3.21s/it]08/31/2024 21:36:41 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.6889721155166626, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04675927013158798, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7589480876922607, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.4946794509887695}
 42%|████▏     | 3150/7431 [3:09:22<3:50:01,  3.22s/it] 42%|████▏     | 3151/7431 [3:09:26<3:55:27,  3.30s/it] 42%|████▏     | 3152/7431 [3:09:29<3:53:51,  3.28s/it] 42%|████▏     | 3153/7431 [3:09:32<3:51:28,  3.25s/it] 42%|████▏     | 3154/7431 [3:09:35<3:54:18,  3.29s/it] 42%|████▏     | 3155/7431 [3:09:39<3:50:44,  3.24s/it] 42%|████▏     | 3156/7431 [3:09:42<3:50:21,  3.23s/it] 42%|████▏     | 3157/7431 [3:09:45<3:50:37,  3.24s/it] 42%|████▏     | 3158/7431 [3:09:49<3:54:14,  3.29s/it] 43%|████▎     | 3159/7431 [3:09:52<3:54:37,  3.30s/it] 43%|████▎     | 3160/7431 [3:09:55<3:54:23,  3.29s/it] 43%|████▎     | 3161/7431 [3:09:58<3:55:19,  3.31s/it] 43%|████▎     | 3162/7431 [3:10:02<3:53:24,  3.28s/it] 43%|████▎     | 3163/7431 [3:10:05<3:54:47,  3.30s/it] 43%|████▎     | 3164/7431 [3:10:08<3:52:45,  3.27s/it] 43%|████▎     | 3165/7431 [3:10:11<3:50:49,  3.25s/it] 43%|████▎     | 3166/7431 [3:10:15<3:52:00,  3.26s/it] 43%|████▎     | 3167/7431 [3:10:18<3:52:57,  3.28s/it] 43%|████▎     | 3168/7431 [3:10:21<3:50:34,  3.25s/it] 43%|████▎     | 3169/7431 [3:10:25<3:52:42,  3.28s/it] 43%|████▎     | 3170/7431 [3:10:28<3:50:17,  3.24s/it] 43%|████▎     | 3171/7431 [3:10:31<3:49:36,  3.23s/it] 43%|████▎     | 3172/7431 [3:10:34<3:52:08,  3.27s/it] 43%|████▎     | 3173/7431 [3:10:38<3:53:21,  3.29s/it] 43%|████▎     | 3174/7431 [3:10:41<3:50:24,  3.25s/it] 43%|████▎     | 3175/7431 [3:10:44<3:54:17,  3.30s/it] 43%|████▎     | 3176/7431 [3:10:48<3:56:03,  3.33s/it] 43%|████▎     | 3177/7431 [3:10:51<3:53:29,  3.29s/it] 43%|████▎     | 3178/7431 [3:10:54<3:52:19,  3.28s/it] 43%|████▎     | 3179/7431 [3:10:57<3:51:54,  3.27s/it] 43%|████▎     | 3180/7431 [3:11:00<3:50:07,  3.25s/it] 43%|████▎     | 3181/7431 [3:11:04<3:48:15,  3.22s/it] 43%|████▎     | 3182/7431 [3:11:07<3:49:07,  3.24s/it] 43%|████▎     | 3183/7431 [3:11:10<3:47:47,  3.22s/it] 43%|████▎     | 3184/7431 [3:11:13<3:46:43,  3.20s/it] 43%|████▎     | 3185/7431 [3:11:17<3:47:54,  3.22s/it] 43%|████▎     | 3186/7431 [3:11:20<3:50:54,  3.26s/it] 43%|████▎     | 3187/7431 [3:11:23<3:53:26,  3.30s/it] 43%|████▎     | 3188/7431 [3:11:26<3:50:57,  3.27s/it] 43%|████▎     | 3189/7431 [3:11:30<3:51:38,  3.28s/it] 43%|████▎     | 3190/7431 [3:11:33<3:50:37,  3.26s/it] 43%|████▎     | 3191/7431 [3:11:36<3:54:12,  3.31s/it] 43%|████▎     | 3192/7431 [3:11:40<3:51:15,  3.27s/it] 43%|████▎     | 3193/7431 [3:11:43<3:48:29,  3.23s/it] 43%|████▎     | 3194/7431 [3:11:46<3:52:16,  3.29s/it] 43%|████▎     | 3195/7431 [3:11:49<3:47:47,  3.23s/it] 43%|████▎     | 3196/7431 [3:11:53<3:50:28,  3.27s/it] 43%|████▎     | 3197/7431 [3:11:56<3:49:56,  3.26s/it] 43%|████▎     | 3198/7431 [3:11:59<3:50:02,  3.26s/it] 43%|████▎     | 3199/7431 [3:12:02<3:49:24,  3.25s/it]08/31/2024 21:39:24 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.921569585800171, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.05913792923092842, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.811514139175415, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.792221546173096}
 43%|████▎     | 3200/7431 [3:12:06<3:49:23,  3.25s/it] 43%|████▎     | 3201/7431 [3:12:09<3:46:17,  3.21s/it] 43%|████▎     | 3202/7431 [3:12:12<3:47:20,  3.23s/it] 43%|████▎     | 3203/7431 [3:12:15<3:50:04,  3.26s/it] 43%|████▎     | 3204/7431 [3:12:19<3:50:02,  3.27s/it] 43%|████▎     | 3205/7431 [3:12:22<3:49:41,  3.26s/it] 43%|████▎     | 3206/7431 [3:12:25<3:49:21,  3.26s/it] 43%|████▎     | 3207/7431 [3:12:28<3:49:33,  3.26s/it] 43%|████▎     | 3208/7431 [3:12:32<3:49:09,  3.26s/it] 43%|████▎     | 3209/7431 [3:12:35<3:45:14,  3.20s/it] 43%|████▎     | 3210/7431 [3:12:38<3:47:19,  3.23s/it] 43%|████▎     | 3211/7431 [3:12:41<3:45:14,  3.20s/it] 43%|████▎     | 3212/7431 [3:12:44<3:48:01,  3.24s/it] 43%|████▎     | 3213/7431 [3:12:48<3:49:06,  3.26s/it] 43%|████▎     | 3214/7431 [3:12:51<3:50:58,  3.29s/it] 43%|████▎     | 3215/7431 [3:12:54<3:46:42,  3.23s/it] 43%|████▎     | 3216/7431 [3:12:57<3:47:25,  3.24s/it] 43%|████▎     | 3217/7431 [3:13:01<3:48:03,  3.25s/it] 43%|████▎     | 3218/7431 [3:13:04<3:52:13,  3.31s/it] 43%|████▎     | 3219/7431 [3:13:08<3:54:09,  3.34s/it] 43%|████▎     | 3220/7431 [3:13:11<3:52:04,  3.31s/it] 43%|████▎     | 3221/7431 [3:13:14<3:47:41,  3.24s/it] 43%|████▎     | 3222/7431 [3:13:17<3:46:23,  3.23s/it] 43%|████▎     | 3223/7431 [3:13:20<3:46:14,  3.23s/it] 43%|████▎     | 3224/7431 [3:13:24<3:48:56,  3.27s/it] 43%|████▎     | 3225/7431 [3:13:27<3:47:06,  3.24s/it] 43%|████▎     | 3226/7431 [3:13:30<3:46:19,  3.23s/it] 43%|████▎     | 3227/7431 [3:13:33<3:45:42,  3.22s/it] 43%|████▎     | 3228/7431 [3:13:37<3:49:22,  3.27s/it] 43%|████▎     | 3229/7431 [3:13:40<3:47:07,  3.24s/it] 43%|████▎     | 3230/7431 [3:13:43<3:52:38,  3.32s/it] 43%|████▎     | 3231/7431 [3:13:47<3:52:03,  3.32s/it] 43%|████▎     | 3232/7431 [3:13:50<3:53:36,  3.34s/it] 44%|████▎     | 3233/7431 [3:13:53<3:50:26,  3.29s/it] 44%|████▎     | 3234/7431 [3:13:56<3:48:18,  3.26s/it] 44%|████▎     | 3235/7431 [3:14:00<3:47:35,  3.25s/it] 44%|████▎     | 3236/7431 [3:14:03<3:48:20,  3.27s/it] 44%|████▎     | 3237/7431 [3:14:06<3:47:16,  3.25s/it] 44%|████▎     | 3238/7431 [3:14:09<3:47:25,  3.25s/it] 44%|████▎     | 3239/7431 [3:14:13<3:56:15,  3.38s/it] 44%|████▎     | 3240/7431 [3:14:16<3:53:34,  3.34s/it] 44%|████▎     | 3241/7431 [3:14:20<3:51:45,  3.32s/it] 44%|████▎     | 3242/7431 [3:14:23<3:48:36,  3.27s/it] 44%|████▎     | 3243/7431 [3:14:26<3:48:44,  3.28s/it] 44%|████▎     | 3244/7431 [3:14:29<3:47:49,  3.26s/it] 44%|████▎     | 3245/7431 [3:14:33<3:52:56,  3.34s/it] 44%|████▎     | 3246/7431 [3:14:36<3:53:03,  3.34s/it] 44%|████▎     | 3247/7431 [3:14:39<3:53:18,  3.35s/it] 44%|████▎     | 3248/7431 [3:14:43<3:53:24,  3.35s/it] 44%|████▎     | 3249/7431 [3:14:46<3:50:26,  3.31s/it]08/31/2024 21:42:08 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 2.009450912475586, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.05319347605109215, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.9015793800354004, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.964223861694336}
 44%|████▎     | 3250/7431 [3:14:49<3:48:36,  3.28s/it] 44%|████▎     | 3251/7431 [3:14:53<3:49:45,  3.30s/it] 44%|████▍     | 3252/7431 [3:14:56<3:45:55,  3.24s/it] 44%|████▍     | 3253/7431 [3:14:59<3:51:43,  3.33s/it] 44%|████▍     | 3254/7431 [3:15:02<3:49:01,  3.29s/it] 44%|████▍     | 3255/7431 [3:15:06<3:48:01,  3.28s/it] 44%|████▍     | 3256/7431 [3:15:09<3:48:58,  3.29s/it] 44%|████▍     | 3257/7431 [3:15:12<3:49:18,  3.30s/it] 44%|████▍     | 3258/7431 [3:15:16<3:51:21,  3.33s/it] 44%|████▍     | 3259/7431 [3:15:19<3:49:45,  3.30s/it] 44%|████▍     | 3260/7431 [3:15:22<3:46:27,  3.26s/it] 44%|████▍     | 3261/7431 [3:15:25<3:45:19,  3.24s/it] 44%|████▍     | 3262/7431 [3:15:29<3:45:36,  3.25s/it] 44%|████▍     | 3263/7431 [3:15:32<3:45:43,  3.25s/it] 44%|████▍     | 3264/7431 [3:15:35<3:50:02,  3.31s/it] 44%|████▍     | 3265/7431 [3:15:39<3:47:42,  3.28s/it] 44%|████▍     | 3266/7431 [3:15:42<3:48:24,  3.29s/it] 44%|████▍     | 3267/7431 [3:15:45<3:47:00,  3.27s/it] 44%|████▍     | 3268/7431 [3:15:48<3:46:45,  3.27s/it] 44%|████▍     | 3269/7431 [3:15:51<3:43:32,  3.22s/it] 44%|████▍     | 3270/7431 [3:15:55<3:45:30,  3.25s/it] 44%|████▍     | 3271/7431 [3:15:58<3:43:38,  3.23s/it] 44%|████▍     | 3272/7431 [3:16:01<3:44:58,  3.25s/it] 44%|████▍     | 3273/7431 [3:16:05<3:46:44,  3.27s/it] 44%|████▍     | 3274/7431 [3:16:08<3:47:43,  3.29s/it] 44%|████▍     | 3275/7431 [3:16:11<3:46:17,  3.27s/it] 44%|████▍     | 3276/7431 [3:16:14<3:43:40,  3.23s/it] 44%|████▍     | 3277/7431 [3:16:18<3:45:36,  3.26s/it] 44%|████▍     | 3278/7431 [3:16:21<3:45:02,  3.25s/it] 44%|████▍     | 3279/7431 [3:16:24<3:44:03,  3.24s/it] 44%|████▍     | 3280/7431 [3:16:27<3:43:32,  3.23s/it] 44%|████▍     | 3281/7431 [3:16:30<3:43:10,  3.23s/it] 44%|████▍     | 3282/7431 [3:16:34<3:47:19,  3.29s/it] 44%|████▍     | 3283/7431 [3:16:37<3:44:33,  3.25s/it] 44%|████▍     | 3284/7431 [3:16:40<3:46:03,  3.27s/it] 44%|████▍     | 3285/7431 [3:16:44<3:45:31,  3.26s/it] 44%|████▍     | 3286/7431 [3:16:47<3:45:06,  3.26s/it] 44%|████▍     | 3287/7431 [3:16:50<3:49:02,  3.32s/it] 44%|████▍     | 3288/7431 [3:16:54<3:48:14,  3.31s/it] 44%|████▍     | 3289/7431 [3:16:57<3:48:39,  3.31s/it] 44%|████▍     | 3290/7431 [3:17:00<3:48:57,  3.32s/it] 44%|████▍     | 3291/7431 [3:17:03<3:46:16,  3.28s/it] 44%|████▍     | 3292/7431 [3:17:07<3:43:46,  3.24s/it] 44%|████▍     | 3293/7431 [3:17:10<3:45:01,  3.26s/it] 44%|████▍     | 3294/7431 [3:17:13<3:44:52,  3.26s/it] 44%|████▍     | 3295/7431 [3:17:16<3:45:53,  3.28s/it] 44%|████▍     | 3296/7431 [3:17:20<3:47:24,  3.30s/it] 44%|████▍     | 3297/7431 [3:17:23<3:45:26,  3.27s/it] 44%|████▍     | 3298/7431 [3:17:26<3:44:00,  3.25s/it] 44%|████▍     | 3299/7431 [3:17:30<3:45:54,  3.28s/it]08/31/2024 21:44:51 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.860582709312439, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.042714886367321014, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.822842597961426, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.726140022277832}
 44%|████▍     | 3300/7431 [3:17:33<3:44:26,  3.26s/it] 44%|████▍     | 3301/7431 [3:17:36<3:41:57,  3.22s/it] 44%|████▍     | 3302/7431 [3:17:39<3:49:09,  3.33s/it] 44%|████▍     | 3303/7431 [3:17:43<3:49:13,  3.33s/it] 44%|████▍     | 3304/7431 [3:17:46<3:49:01,  3.33s/it] 44%|████▍     | 3305/7431 [3:17:49<3:46:15,  3.29s/it] 44%|████▍     | 3306/7431 [3:17:53<3:47:09,  3.30s/it] 45%|████▍     | 3307/7431 [3:17:56<3:45:48,  3.29s/it] 45%|████▍     | 3308/7431 [3:17:59<3:48:34,  3.33s/it] 45%|████▍     | 3309/7431 [3:18:03<3:50:58,  3.36s/it] 45%|████▍     | 3310/7431 [3:18:06<3:46:20,  3.30s/it] 45%|████▍     | 3311/7431 [3:18:09<3:46:00,  3.29s/it] 45%|████▍     | 3312/7431 [3:18:12<3:41:36,  3.23s/it] 45%|████▍     | 3313/7431 [3:18:16<3:48:38,  3.33s/it] 45%|████▍     | 3314/7431 [3:18:19<3:51:42,  3.38s/it] 45%|████▍     | 3315/7431 [3:18:23<3:48:28,  3.33s/it] 45%|████▍     | 3316/7431 [3:18:26<3:45:07,  3.28s/it] 45%|████▍     | 3317/7431 [3:18:29<3:49:08,  3.34s/it] 45%|████▍     | 3318/7431 [3:18:32<3:45:05,  3.28s/it] 45%|████▍     | 3319/7431 [3:18:36<3:44:33,  3.28s/it] 45%|████▍     | 3320/7431 [3:18:39<3:43:14,  3.26s/it] 45%|████▍     | 3321/7431 [3:18:42<3:43:36,  3.26s/it] 45%|████▍     | 3322/7431 [3:18:45<3:44:28,  3.28s/it] 45%|████▍     | 3323/7431 [3:18:49<3:43:25,  3.26s/it] 45%|████▍     | 3324/7431 [3:18:52<3:41:45,  3.24s/it] 45%|████▍     | 3325/7431 [3:18:55<3:40:48,  3.23s/it] 45%|████▍     | 3326/7431 [3:18:58<3:43:13,  3.26s/it] 45%|████▍     | 3327/7431 [3:19:02<3:44:04,  3.28s/it] 45%|████▍     | 3328/7431 [3:19:05<3:42:18,  3.25s/it] 45%|████▍     | 3329/7431 [3:19:08<3:39:36,  3.21s/it] 45%|████▍     | 3330/7431 [3:19:11<3:38:21,  3.19s/it] 45%|████▍     | 3331/7431 [3:19:14<3:37:54,  3.19s/it] 45%|████▍     | 3332/7431 [3:19:18<3:39:52,  3.22s/it] 45%|████▍     | 3333/7431 [3:19:21<3:41:35,  3.24s/it] 45%|████▍     | 3334/7431 [3:19:24<3:47:05,  3.33s/it] 45%|████▍     | 3335/7431 [3:19:28<3:44:05,  3.28s/it] 45%|████▍     | 3336/7431 [3:19:31<3:47:36,  3.34s/it] 45%|████▍     | 3337/7431 [3:19:34<3:42:11,  3.26s/it] 45%|████▍     | 3338/7431 [3:19:37<3:42:06,  3.26s/it] 45%|████▍     | 3339/7431 [3:19:41<3:42:00,  3.26s/it] 45%|████▍     | 3340/7431 [3:19:44<3:43:08,  3.27s/it] 45%|████▍     | 3341/7431 [3:19:47<3:43:46,  3.28s/it] 45%|████▍     | 3342/7431 [3:19:51<3:46:07,  3.32s/it] 45%|████▍     | 3343/7431 [3:19:54<3:43:25,  3.28s/it] 45%|████▌     | 3344/7431 [3:19:57<3:43:55,  3.29s/it] 45%|████▌     | 3345/7431 [3:20:00<3:44:03,  3.29s/it] 45%|████▌     | 3346/7431 [3:20:04<3:43:29,  3.28s/it] 45%|████▌     | 3347/7431 [3:20:07<3:40:12,  3.24s/it] 45%|████▌     | 3348/7431 [3:20:10<3:38:55,  3.22s/it] 45%|████▌     | 3349/7431 [3:20:13<3:39:14,  3.22s/it]08/31/2024 21:47:35 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.5703105926513672, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.037378761917352676, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7284598350524902, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.336149215698242}
 45%|████▌     | 3350/7431 [3:20:16<3:37:52,  3.20s/it] 45%|████▌     | 3351/7431 [3:20:20<3:38:39,  3.22s/it] 45%|████▌     | 3352/7431 [3:20:23<3:38:01,  3.21s/it] 45%|████▌     | 3353/7431 [3:20:26<3:37:12,  3.20s/it] 45%|████▌     | 3354/7431 [3:20:29<3:38:11,  3.21s/it] 45%|████▌     | 3355/7431 [3:20:33<3:38:51,  3.22s/it] 45%|████▌     | 3356/7431 [3:20:36<3:38:32,  3.22s/it] 45%|████▌     | 3357/7431 [3:20:39<3:42:02,  3.27s/it] 45%|████▌     | 3358/7431 [3:20:42<3:40:22,  3.25s/it] 45%|████▌     | 3359/7431 [3:20:46<3:43:43,  3.30s/it] 45%|████▌     | 3360/7431 [3:20:49<3:46:37,  3.34s/it] 45%|████▌     | 3361/7431 [3:20:52<3:44:13,  3.31s/it] 45%|████▌     | 3362/7431 [3:20:56<3:42:41,  3.28s/it] 45%|████▌     | 3363/7431 [3:20:59<3:41:21,  3.26s/it] 45%|████▌     | 3364/7431 [3:21:02<3:42:53,  3.29s/it] 45%|████▌     | 3365/7431 [3:21:06<3:44:24,  3.31s/it] 45%|████▌     | 3366/7431 [3:21:09<3:39:46,  3.24s/it] 45%|████▌     | 3367/7431 [3:21:12<3:41:50,  3.28s/it] 45%|████▌     | 3368/7431 [3:21:15<3:42:23,  3.28s/it] 45%|████▌     | 3369/7431 [3:21:19<3:40:50,  3.26s/it] 45%|████▌     | 3370/7431 [3:21:22<3:39:41,  3.25s/it] 45%|████▌     | 3371/7431 [3:21:25<3:44:17,  3.31s/it] 45%|████▌     | 3372/7431 [3:21:29<3:44:08,  3.31s/it] 45%|████▌     | 3373/7431 [3:21:32<3:46:37,  3.35s/it] 45%|████▌     | 3374/7431 [3:21:35<3:46:30,  3.35s/it] 45%|████▌     | 3375/7431 [3:21:39<3:45:06,  3.33s/it] 45%|████▌     | 3376/7431 [3:21:42<3:40:58,  3.27s/it] 45%|████▌     | 3377/7431 [3:21:45<3:43:30,  3.31s/it] 45%|████▌     | 3378/7431 [3:21:48<3:41:03,  3.27s/it] 45%|████▌     | 3379/7431 [3:21:52<3:39:59,  3.26s/it] 45%|████▌     | 3380/7431 [3:21:55<3:41:15,  3.28s/it] 45%|████▌     | 3381/7431 [3:21:58<3:40:56,  3.27s/it] 46%|████▌     | 3382/7431 [3:22:01<3:41:38,  3.28s/it] 46%|████▌     | 3383/7431 [3:22:05<3:42:59,  3.31s/it] 46%|████▌     | 3384/7431 [3:22:08<3:41:47,  3.29s/it] 46%|████▌     | 3385/7431 [3:22:11<3:40:48,  3.27s/it] 46%|████▌     | 3386/7431 [3:22:15<3:42:21,  3.30s/it] 46%|████▌     | 3387/7431 [3:22:18<3:39:15,  3.25s/it] 46%|████▌     | 3388/7431 [3:22:21<3:39:00,  3.25s/it] 46%|████▌     | 3389/7431 [3:22:24<3:42:04,  3.30s/it] 46%|████▌     | 3390/7431 [3:22:28<3:40:00,  3.27s/it] 46%|████▌     | 3391/7431 [3:22:31<3:37:52,  3.24s/it] 46%|████▌     | 3392/7431 [3:22:34<3:40:13,  3.27s/it] 46%|████▌     | 3393/7431 [3:22:38<3:43:17,  3.32s/it] 46%|████▌     | 3394/7431 [3:22:41<3:42:10,  3.30s/it] 46%|████▌     | 3395/7431 [3:22:44<3:44:59,  3.34s/it] 46%|████▌     | 3396/7431 [3:22:47<3:41:37,  3.30s/it] 46%|████▌     | 3397/7431 [3:22:51<3:38:09,  3.24s/it] 46%|████▌     | 3398/7431 [3:22:54<3:37:44,  3.24s/it] 46%|████▌     | 3399/7431 [3:22:57<3:37:25,  3.24s/it]08/31/2024 21:50:19 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.800805687904358, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04898206517100334, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.767366647720337, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.617154121398926}
 46%|████▌     | 3400/7431 [3:23:00<3:38:42,  3.26s/it] 46%|████▌     | 3401/7431 [3:23:04<3:38:36,  3.25s/it] 46%|████▌     | 3402/7431 [3:23:07<3:39:59,  3.28s/it] 46%|████▌     | 3403/7431 [3:23:10<3:38:32,  3.26s/it] 46%|████▌     | 3404/7431 [3:23:13<3:36:09,  3.22s/it] 46%|████▌     | 3405/7431 [3:23:17<3:41:39,  3.30s/it] 46%|████▌     | 3406/7431 [3:23:20<3:38:54,  3.26s/it] 46%|████▌     | 3407/7431 [3:23:23<3:37:12,  3.24s/it] 46%|████▌     | 3408/7431 [3:23:26<3:39:13,  3.27s/it] 46%|████▌     | 3409/7431 [3:23:30<3:40:04,  3.28s/it] 46%|████▌     | 3410/7431 [3:23:33<3:37:51,  3.25s/it] 46%|████▌     | 3411/7431 [3:23:36<3:37:09,  3.24s/it] 46%|████▌     | 3412/7431 [3:23:39<3:37:01,  3.24s/it] 46%|████▌     | 3413/7431 [3:23:43<3:38:43,  3.27s/it] 46%|████▌     | 3414/7431 [3:23:46<3:36:17,  3.23s/it] 46%|████▌     | 3415/7431 [3:23:49<3:38:29,  3.26s/it] 46%|████▌     | 3416/7431 [3:23:53<3:40:08,  3.29s/it] 46%|████▌     | 3417/7431 [3:23:56<3:41:17,  3.31s/it] 46%|████▌     | 3418/7431 [3:23:59<3:42:02,  3.32s/it] 46%|████▌     | 3419/7431 [3:24:03<3:41:59,  3.32s/it] 46%|████▌     | 3420/7431 [3:24:06<3:41:43,  3.32s/it] 46%|████▌     | 3421/7431 [3:24:09<3:42:44,  3.33s/it] 46%|████▌     | 3422/7431 [3:24:13<3:41:05,  3.31s/it] 46%|████▌     | 3423/7431 [3:24:16<3:35:53,  3.23s/it] 46%|████▌     | 3424/7431 [3:24:19<3:39:29,  3.29s/it] 46%|████▌     | 3425/7431 [3:24:22<3:38:27,  3.27s/it] 46%|████▌     | 3426/7431 [3:24:26<3:39:04,  3.28s/it] 46%|████▌     | 3427/7431 [3:24:29<3:38:47,  3.28s/it] 46%|████▌     | 3428/7431 [3:24:32<3:36:03,  3.24s/it] 46%|████▌     | 3429/7431 [3:24:35<3:36:26,  3.25s/it] 46%|████▌     | 3430/7431 [3:24:38<3:34:53,  3.22s/it] 46%|████▌     | 3431/7431 [3:24:42<3:34:27,  3.22s/it] 46%|████▌     | 3432/7431 [3:24:45<3:34:24,  3.22s/it] 46%|████▌     | 3433/7431 [3:24:48<3:38:56,  3.29s/it] 46%|████▌     | 3434/7431 [3:24:51<3:35:41,  3.24s/it] 46%|████▌     | 3435/7431 [3:24:55<3:37:58,  3.27s/it] 46%|████▌     | 3436/7431 [3:24:58<3:39:43,  3.30s/it] 46%|████▋     | 3437/7431 [3:25:01<3:40:37,  3.31s/it] 46%|████▋     | 3438/7431 [3:25:05<3:37:14,  3.26s/it] 46%|████▋     | 3439/7431 [3:25:08<3:38:18,  3.28s/it] 46%|████▋     | 3440/7431 [3:25:11<3:39:11,  3.30s/it] 46%|████▋     | 3441/7431 [3:25:14<3:35:44,  3.24s/it] 46%|████▋     | 3442/7431 [3:25:18<3:37:31,  3.27s/it] 46%|████▋     | 3443/7431 [3:25:21<3:38:26,  3.29s/it] 46%|████▋     | 3444/7431 [3:25:24<3:37:19,  3.27s/it] 46%|████▋     | 3445/7431 [3:25:28<3:37:22,  3.27s/it] 46%|████▋     | 3446/7431 [3:25:31<3:39:44,  3.31s/it] 46%|████▋     | 3447/7431 [3:25:34<3:37:01,  3.27s/it] 46%|████▋     | 3448/7431 [3:25:37<3:37:38,  3.28s/it] 46%|████▋     | 3449/7431 [3:25:41<3:39:44,  3.31s/it]08/31/2024 21:53:03 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.644350290298462, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.045457515865564346, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7320609092712402, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.421868801116943}
 46%|████▋     | 3450/7431 [3:25:44<3:40:36,  3.32s/it] 46%|████▋     | 3451/7431 [3:25:47<3:36:38,  3.27s/it] 46%|████▋     | 3452/7431 [3:25:50<3:35:37,  3.25s/it] 46%|████▋     | 3453/7431 [3:25:54<3:35:28,  3.25s/it] 46%|████▋     | 3454/7431 [3:25:57<3:33:11,  3.22s/it] 46%|████▋     | 3455/7431 [3:26:00<3:38:30,  3.30s/it] 47%|████▋     | 3456/7431 [3:26:04<3:35:49,  3.26s/it] 47%|████▋     | 3457/7431 [3:26:07<3:34:54,  3.24s/it] 47%|████▋     | 3458/7431 [3:26:10<3:36:10,  3.26s/it] 47%|████▋     | 3459/7431 [3:26:13<3:36:04,  3.26s/it] 47%|████▋     | 3460/7431 [3:26:17<3:36:38,  3.27s/it] 47%|████▋     | 3461/7431 [3:26:20<3:33:20,  3.22s/it] 47%|████▋     | 3462/7431 [3:26:23<3:37:56,  3.29s/it] 47%|████▋     | 3463/7431 [3:26:26<3:38:34,  3.30s/it] 47%|████▋     | 3464/7431 [3:26:30<3:35:11,  3.25s/it] 47%|████▋     | 3465/7431 [3:26:33<3:33:58,  3.24s/it] 47%|████▋     | 3466/7431 [3:26:36<3:41:20,  3.35s/it] 47%|████▋     | 3467/7431 [3:26:40<3:41:29,  3.35s/it] 47%|████▋     | 3468/7431 [3:26:43<3:36:18,  3.28s/it] 47%|████▋     | 3469/7431 [3:26:46<3:35:27,  3.26s/it] 47%|████▋     | 3470/7431 [3:26:49<3:36:41,  3.28s/it] 47%|████▋     | 3471/7431 [3:26:53<3:34:49,  3.25s/it] 47%|████▋     | 3472/7431 [3:26:56<3:36:40,  3.28s/it] 47%|████▋     | 3473/7431 [3:26:59<3:36:15,  3.28s/it] 47%|████▋     | 3474/7431 [3:27:03<3:36:26,  3.28s/it] 47%|████▋     | 3475/7431 [3:27:06<3:38:01,  3.31s/it] 47%|████▋     | 3476/7431 [3:27:09<3:38:28,  3.31s/it] 47%|████▋     | 3477/7431 [3:27:12<3:35:24,  3.27s/it] 47%|████▋     | 3478/7431 [3:27:16<3:33:04,  3.23s/it] 47%|████▋     | 3479/7431 [3:27:19<3:35:33,  3.27s/it] 47%|████▋     | 3480/7431 [3:27:22<3:37:42,  3.31s/it] 47%|████▋     | 3481/7431 [3:27:26<3:36:34,  3.29s/it] 47%|████▋     | 3482/7431 [3:27:29<3:35:25,  3.27s/it] 47%|████▋     | 3483/7431 [3:27:32<3:38:17,  3.32s/it] 47%|████▋     | 3484/7431 [3:27:35<3:37:01,  3.30s/it] 47%|████▋     | 3485/7431 [3:27:39<3:36:40,  3.29s/it] 47%|████▋     | 3486/7431 [3:27:42<3:37:18,  3.31s/it] 47%|████▋     | 3487/7431 [3:27:45<3:37:38,  3.31s/it] 47%|████▋     | 3488/7431 [3:27:49<3:35:36,  3.28s/it] 47%|████▋     | 3489/7431 [3:27:52<3:37:09,  3.31s/it] 47%|████▋     | 3490/7431 [3:27:55<3:37:21,  3.31s/it] 47%|████▋     | 3491/7431 [3:27:59<3:38:45,  3.33s/it] 47%|████▋     | 3492/7431 [3:28:02<3:34:35,  3.27s/it] 47%|████▋     | 3493/7431 [3:28:05<3:32:45,  3.24s/it] 47%|████▋     | 3494/7431 [3:28:08<3:33:19,  3.25s/it] 47%|████▋     | 3495/7431 [3:28:12<3:33:35,  3.26s/it] 47%|████▋     | 3496/7431 [3:28:15<3:34:18,  3.27s/it] 47%|████▋     | 3497/7431 [3:28:18<3:32:07,  3.24s/it] 47%|████▋     | 3498/7431 [3:28:21<3:33:36,  3.26s/it] 47%|████▋     | 3499/7431 [3:28:25<3:33:01,  3.25s/it]08/31/2024 21:55:45 - INFO - __main__ -   evaluate on ret%tv--msrvtt_ret task
08/31/2024 21:55:45 - INFO - __main__ -   start running ret%tv validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  1%|          | 2/221 [00:00<00:50,  4.31it/s][A
  1%|▏         | 3/221 [00:00<01:02,  3.49it/s][A
  2%|▏         | 4/221 [00:00<00:49,  4.36it/s][A
  2%|▏         | 5/221 [00:01<00:42,  5.10it/s][A
  3%|▎         | 6/221 [00:01<00:37,  5.76it/s][A
  3%|▎         | 7/221 [00:01<00:37,  5.72it/s][A
  4%|▎         | 8/221 [00:01<00:34,  6.13it/s][A
  4%|▍         | 9/221 [00:01<00:32,  6.61it/s][A
  5%|▍         | 10/221 [00:01<00:41,  5.04it/s][A
  5%|▍         | 11/221 [00:02<00:41,  5.11it/s][A
  5%|▌         | 12/221 [00:02<00:41,  5.06it/s][A
  6%|▌         | 13/221 [00:02<00:49,  4.16it/s][A
  6%|▋         | 14/221 [00:02<00:45,  4.53it/s][A
  7%|▋         | 15/221 [00:03<00:41,  4.91it/s][A
  7%|▋         | 16/221 [00:03<00:55,  3.69it/s][A
  8%|▊         | 17/221 [00:03<00:58,  3.49it/s][A
  8%|▊         | 18/221 [00:03<00:47,  4.30it/s][A
  9%|▊         | 19/221 [00:04<00:46,  4.36it/s][A
  9%|▉         | 20/221 [00:04<00:42,  4.73it/s][A
 10%|▉         | 21/221 [00:04<00:47,  4.23it/s][A
 10%|▉         | 22/221 [00:04<00:48,  4.14it/s][A
 10%|█         | 23/221 [00:04<00:43,  4.60it/s][A
 11%|█         | 24/221 [00:05<00:42,  4.63it/s][A
 11%|█▏        | 25/221 [00:05<00:49,  3.96it/s][A
 12%|█▏        | 26/221 [00:05<00:48,  4.01it/s][A
 12%|█▏        | 27/221 [00:05<00:45,  4.23it/s][A
 13%|█▎        | 28/221 [00:06<00:49,  3.90it/s][A
 13%|█▎        | 29/221 [00:06<00:55,  3.47it/s][A
 14%|█▎        | 30/221 [00:07<01:02,  3.07it/s][A
 14%|█▍        | 31/221 [00:07<00:58,  3.26it/s][A
 14%|█▍        | 32/221 [00:07<00:51,  3.70it/s][A
 15%|█▍        | 33/221 [00:07<00:47,  3.99it/s][A
 15%|█▌        | 34/221 [00:07<00:41,  4.49it/s][A
 16%|█▌        | 35/221 [00:08<00:55,  3.37it/s][A
 16%|█▋        | 36/221 [00:08<00:54,  3.38it/s][A
 17%|█▋        | 37/221 [00:08<00:50,  3.65it/s][A
 17%|█▋        | 38/221 [00:09<00:49,  3.70it/s][A
 18%|█▊        | 39/221 [00:09<00:44,  4.06it/s][A
 18%|█▊        | 40/221 [00:09<00:46,  3.86it/s][A
 19%|█▊        | 41/221 [00:10<00:56,  3.19it/s][A
 19%|█▉        | 42/221 [00:10<00:45,  3.89it/s][A
 19%|█▉        | 43/221 [00:10<00:41,  4.29it/s][A
 20%|█▉        | 44/221 [00:10<00:42,  4.16it/s][A
 20%|██        | 45/221 [00:11<00:52,  3.33it/s][A
 21%|██        | 46/221 [00:11<00:53,  3.27it/s][A
 21%|██▏       | 47/221 [00:11<00:43,  4.04it/s][A
 22%|██▏       | 48/221 [00:11<00:39,  4.39it/s][A
 22%|██▏       | 49/221 [00:11<00:44,  3.86it/s][A
 23%|██▎       | 50/221 [00:12<00:52,  3.23it/s][A
 23%|██▎       | 51/221 [00:12<00:50,  3.37it/s][A
 24%|██▎       | 52/221 [00:12<00:49,  3.41it/s][A
 24%|██▍       | 53/221 [00:13<00:45,  3.72it/s][A
 24%|██▍       | 54/221 [00:13<00:52,  3.17it/s][A
 25%|██▍       | 55/221 [00:13<00:53,  3.10it/s][A
 25%|██▌       | 56/221 [00:14<00:49,  3.36it/s][A
 26%|██▌       | 57/221 [00:14<00:49,  3.33it/s][A
 26%|██▌       | 58/221 [00:14<00:45,  3.61it/s][A
 27%|██▋       | 59/221 [00:14<00:39,  4.13it/s][A
 27%|██▋       | 60/221 [00:15<00:39,  4.10it/s][A
 28%|██▊       | 61/221 [00:15<00:41,  3.84it/s][A
 28%|██▊       | 62/221 [00:15<00:40,  3.89it/s][A
 29%|██▊       | 63/221 [00:16<00:45,  3.51it/s][A
 29%|██▉       | 64/221 [00:16<00:48,  3.23it/s][A
 29%|██▉       | 65/221 [00:16<00:43,  3.56it/s][A
 30%|██▉       | 66/221 [00:17<00:53,  2.91it/s][A
 30%|███       | 67/221 [00:17<00:50,  3.06it/s][A
 31%|███       | 68/221 [00:17<00:42,  3.62it/s][A
 31%|███       | 69/221 [00:18<00:52,  2.91it/s][A
 32%|███▏      | 70/221 [00:18<00:44,  3.36it/s][A
 32%|███▏      | 71/221 [00:18<00:42,  3.56it/s][A
 33%|███▎      | 72/221 [00:18<00:42,  3.47it/s][A
 33%|███▎      | 73/221 [00:18<00:37,  3.93it/s][A
 33%|███▎      | 74/221 [00:19<00:35,  4.17it/s][A
 34%|███▍      | 75/221 [00:19<00:39,  3.74it/s][A
 34%|███▍      | 76/221 [00:19<00:35,  4.04it/s][A
 35%|███▍      | 77/221 [00:20<00:42,  3.38it/s][A
 35%|███▌      | 78/221 [00:20<00:39,  3.58it/s][A
 36%|███▌      | 79/221 [00:20<00:45,  3.09it/s][A
 36%|███▌      | 80/221 [00:21<00:45,  3.13it/s][A
 37%|███▋      | 81/221 [00:21<00:39,  3.59it/s][A
 37%|███▋      | 82/221 [00:21<00:40,  3.46it/s][A
 38%|███▊      | 83/221 [00:21<00:44,  3.13it/s][A
 38%|███▊      | 84/221 [00:22<00:39,  3.46it/s][A
 38%|███▊      | 85/221 [00:22<00:33,  4.10it/s][A
 39%|███▉      | 86/221 [00:22<00:34,  3.92it/s][A
 39%|███▉      | 87/221 [00:22<00:37,  3.59it/s][A
 40%|███▉      | 88/221 [00:23<00:38,  3.44it/s][A
 40%|████      | 89/221 [00:23<00:36,  3.66it/s][A
 41%|████      | 90/221 [00:23<00:35,  3.69it/s][A
 41%|████      | 91/221 [00:23<00:32,  4.00it/s][A
 42%|████▏     | 92/221 [00:24<00:34,  3.78it/s][A
 42%|████▏     | 93/221 [00:24<00:39,  3.22it/s][A
 43%|████▎     | 94/221 [00:24<00:38,  3.29it/s][A
 43%|████▎     | 95/221 [00:25<00:33,  3.81it/s][A
 43%|████▎     | 96/221 [00:25<00:42,  2.94it/s][A
 44%|████▍     | 97/221 [00:25<00:37,  3.30it/s][A
 44%|████▍     | 98/221 [00:26<00:42,  2.92it/s][A
 45%|████▍     | 99/221 [00:26<00:42,  2.86it/s][A
 45%|████▌     | 100/221 [00:26<00:38,  3.15it/s][A
 46%|████▌     | 101/221 [00:27<00:35,  3.42it/s][A
 46%|████▌     | 102/221 [00:27<00:40,  2.92it/s][A
 47%|████▋     | 103/221 [00:27<00:35,  3.29it/s][A
 47%|████▋     | 104/221 [00:28<00:35,  3.29it/s][A
 48%|████▊     | 105/221 [00:28<00:38,  3.02it/s][A
 48%|████▊     | 106/221 [00:28<00:36,  3.13it/s][A
 48%|████▊     | 107/221 [00:29<00:37,  3.07it/s][A
 49%|████▉     | 108/221 [00:29<00:32,  3.45it/s][A
 49%|████▉     | 109/221 [00:29<00:28,  3.95it/s][A
 50%|████▉     | 110/221 [00:29<00:34,  3.17it/s][A
 50%|█████     | 111/221 [00:30<00:34,  3.18it/s][A
 51%|█████     | 112/221 [00:30<00:33,  3.27it/s][A
 51%|█████     | 113/221 [00:30<00:27,  3.86it/s][A
 52%|█████▏    | 114/221 [00:30<00:22,  4.72it/s][A
 52%|█████▏    | 115/221 [00:31<00:27,  3.89it/s][A
 52%|█████▏    | 116/221 [00:31<00:26,  4.02it/s][A
 53%|█████▎    | 117/221 [00:31<00:28,  3.70it/s][A
 53%|█████▎    | 118/221 [00:31<00:26,  3.93it/s][A
 54%|█████▍    | 119/221 [00:32<00:28,  3.57it/s][A
 54%|█████▍    | 120/221 [00:32<00:30,  3.36it/s][A
 55%|█████▍    | 121/221 [00:32<00:24,  4.05it/s][A
 55%|█████▌    | 122/221 [00:32<00:23,  4.17it/s][A
 56%|█████▌    | 123/221 [00:33<00:20,  4.68it/s][A
 56%|█████▌    | 124/221 [00:33<00:28,  3.44it/s][A
 57%|█████▋    | 125/221 [00:33<00:30,  3.13it/s][A
 57%|█████▋    | 126/221 [00:34<00:24,  3.85it/s][A
 57%|█████▋    | 127/221 [00:34<00:27,  3.45it/s][A
 58%|█████▊    | 128/221 [00:34<00:25,  3.59it/s][A
 58%|█████▊    | 129/221 [00:34<00:22,  4.16it/s][A
 59%|█████▉    | 130/221 [00:35<00:21,  4.15it/s][A
 59%|█████▉    | 131/221 [00:35<00:18,  4.85it/s][A
 60%|█████▉    | 132/221 [00:35<00:32,  2.70it/s][A
 60%|██████    | 133/221 [00:36<00:32,  2.73it/s][A
 61%|██████    | 134/221 [00:36<00:34,  2.51it/s][A
 61%|██████    | 135/221 [00:37<00:34,  2.46it/s][A
 62%|██████▏   | 136/221 [00:37<00:29,  2.88it/s][A
 62%|██████▏   | 137/221 [00:37<00:25,  3.26it/s][A
 62%|██████▏   | 138/221 [00:37<00:23,  3.48it/s][A
 63%|██████▎   | 139/221 [00:38<00:22,  3.66it/s][A
 63%|██████▎   | 140/221 [00:38<00:21,  3.72it/s][A
 64%|██████▍   | 141/221 [00:38<00:22,  3.61it/s][A
 64%|██████▍   | 142/221 [00:39<00:22,  3.51it/s][A
 65%|██████▍   | 143/221 [00:39<00:25,  3.04it/s][A
 65%|██████▌   | 144/221 [00:39<00:25,  3.04it/s][A
 66%|██████▌   | 145/221 [00:40<00:22,  3.32it/s][A
 67%|██████▋   | 147/221 [00:40<00:17,  4.35it/s][A
 67%|██████▋   | 148/221 [00:40<00:17,  4.06it/s][A
 67%|██████▋   | 149/221 [00:40<00:19,  3.62it/s][A
 68%|██████▊   | 150/221 [00:41<00:18,  3.89it/s][A
 68%|██████▊   | 151/221 [00:41<00:20,  3.49it/s][A
 69%|██████▉   | 152/221 [00:41<00:21,  3.19it/s][A
 69%|██████▉   | 153/221 [00:42<00:17,  3.83it/s][A
 70%|██████▉   | 154/221 [00:42<00:16,  4.00it/s][A
 70%|███████   | 155/221 [00:42<00:19,  3.37it/s][A
 71%|███████   | 156/221 [00:43<00:20,  3.10it/s][A
 71%|███████   | 157/221 [00:43<00:21,  2.97it/s][A
 71%|███████▏  | 158/221 [00:43<00:23,  2.72it/s][A
 72%|███████▏  | 159/221 [00:44<00:19,  3.13it/s][A
 72%|███████▏  | 160/221 [00:44<00:16,  3.78it/s][A
 73%|███████▎  | 161/221 [00:44<00:16,  3.71it/s][A
 73%|███████▎  | 162/221 [00:44<00:13,  4.50it/s][A
 74%|███████▍  | 163/221 [00:44<00:14,  4.09it/s][A
 74%|███████▍  | 164/221 [00:45<00:12,  4.58it/s][A
 75%|███████▍  | 165/221 [00:45<00:12,  4.45it/s][A
 75%|███████▌  | 166/221 [00:45<00:11,  4.60it/s][A
 76%|███████▌  | 167/221 [00:45<00:12,  4.31it/s][A
 76%|███████▌  | 168/221 [00:45<00:12,  4.36it/s][A
 76%|███████▋  | 169/221 [00:46<00:12,  4.32it/s][A
 77%|███████▋  | 170/221 [00:46<00:12,  4.18it/s][A
 77%|███████▋  | 171/221 [00:46<00:11,  4.24it/s][A
 78%|███████▊  | 172/221 [00:46<00:11,  4.17it/s][A
 78%|███████▊  | 173/221 [00:47<00:11,  4.12it/s][A
 79%|███████▊  | 174/221 [00:47<00:11,  4.00it/s][A
 79%|███████▉  | 175/221 [00:47<00:13,  3.53it/s][A
 80%|███████▉  | 176/221 [00:47<00:10,  4.23it/s][A
 80%|████████  | 177/221 [00:48<00:09,  4.62it/s][A
 81%|████████  | 178/221 [00:48<00:10,  4.20it/s][A
 81%|████████  | 179/221 [00:48<00:09,  4.59it/s][A
 81%|████████▏ | 180/221 [00:48<00:08,  4.89it/s][A
 82%|████████▏ | 182/221 [00:49<00:07,  4.92it/s][A
 83%|████████▎ | 183/221 [00:49<00:09,  3.91it/s][A
 83%|████████▎ | 184/221 [00:49<00:09,  3.76it/s][A
 84%|████████▎ | 185/221 [00:50<00:09,  3.80it/s][A
 84%|████████▍ | 186/221 [00:50<00:10,  3.41it/s][A
 85%|████████▍ | 187/221 [00:51<00:12,  2.72it/s][A
 85%|████████▌ | 188/221 [00:51<00:11,  2.98it/s][A
 86%|████████▌ | 189/221 [00:51<00:09,  3.47it/s][A
 86%|████████▌ | 190/221 [00:51<00:08,  3.55it/s][A
 87%|████████▋ | 192/221 [00:52<00:06,  4.44it/s][A
 87%|████████▋ | 193/221 [00:52<00:06,  4.02it/s][A
 88%|████████▊ | 194/221 [00:52<00:06,  4.31it/s][A
 88%|████████▊ | 195/221 [00:52<00:06,  3.79it/s][A
 89%|████████▊ | 196/221 [00:53<00:07,  3.47it/s][A
 89%|████████▉ | 197/221 [00:53<00:06,  3.55it/s][A
 90%|████████▉ | 198/221 [00:53<00:06,  3.50it/s][A
 90%|█████████ | 199/221 [00:54<00:06,  3.49it/s][A
 90%|█████████ | 200/221 [00:54<00:06,  3.48it/s][A
 91%|█████████ | 201/221 [00:54<00:06,  3.09it/s][A
 91%|█████████▏| 202/221 [00:55<00:06,  2.80it/s][A
 92%|█████████▏| 203/221 [00:55<00:06,  2.87it/s][A
 92%|█████████▏| 204/221 [00:56<00:06,  2.73it/s][A
 93%|█████████▎| 205/221 [00:56<00:05,  3.02it/s][A
 93%|█████████▎| 206/221 [00:56<00:04,  3.05it/s][A
 94%|█████████▎| 207/221 [00:56<00:03,  3.51it/s][A
 94%|█████████▍| 208/221 [00:57<00:04,  3.04it/s][A
 95%|█████████▍| 209/221 [00:57<00:03,  3.24it/s][A
 95%|█████████▌| 210/221 [00:57<00:03,  3.42it/s][A
 95%|█████████▌| 211/221 [00:58<00:03,  3.18it/s][A
 96%|█████████▌| 212/221 [00:58<00:02,  3.39it/s][A
 96%|█████████▋| 213/221 [00:58<00:01,  4.23it/s][A
 97%|█████████▋| 214/221 [00:58<00:01,  3.82it/s][A
 97%|█████████▋| 215/221 [00:58<00:01,  4.66it/s][A
 98%|█████████▊| 216/221 [00:59<00:01,  4.53it/s][A
 98%|█████████▊| 217/221 [00:59<00:01,  3.71it/s][A
 99%|█████████▊| 218/221 [00:59<00:00,  3.78it/s][A
 99%|█████████▉| 219/221 [01:00<00:00,  3.56it/s][A
100%|█████████▉| 220/221 [01:00<00:00,  3.95it/s][A
100%|██████████| 221/221 [01:00<00:00,  3.89it/s][A100%|██████████| 221/221 [01:00<00:00,  3.65it/s]
08/31/2024 21:58:09 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forward=====step 3499--===========

08/31/2024 21:58:09 - INFO - __main__ -   {'area_r1': 12.7, 'area_recall': '12.7/27.4/35.4', 'area_ravg': 25.2}
08/31/2024 21:58:09 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_backard=====step 3499--===========

08/31/2024 21:58:09 - INFO - __main__ -   {'forward_r1': 44.2, 'forward_recall': '44.2/76.4/84.7', 'forward_ravg': 68.4}
08/31/2024 21:58:09 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forw_with_video=====step 3499--===========

08/31/2024 21:58:09 - INFO - __main__ -   {'forward_r1': 61.8, 'forward_recall': '61.8/84.7/90.5', 'forward_ravg': 79.0}
08/31/2024 21:58:09 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itc_tv=====step 3499--===========

08/31/2024 21:58:09 - INFO - __main__ -   {'video_r1': 45.0, 'video_recall': '45.0/75.9/83.5', 'video_ravg': 68.1}
08/31/2024 21:58:09 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itc_tv====history best step: 2999=======

08/31/2024 21:58:09 - INFO - __main__ -   {'video_r1': 46.0, 'video_recall': '46.0/75.3/83.9', 'video_ravg': 68.4}
08/31/2024 21:58:09 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itm_tv=====step 3499--===========

08/31/2024 21:58:09 - INFO - __main__ -   {'video_r1': 56.0, 'video_recall': '56.0/78.4/85.9', 'video_ravg': 73.4}
08/31/2024 21:58:09 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itm_tv====history best step: 999=======

08/31/2024 21:58:09 - INFO - __main__ -   {'video_r1': 56.9, 'video_recall': '56.9/78.3/85.3', 'video_ravg': 73.5}
08/31/2024 21:58:33 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.4485220909118652, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.029931887984275818, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6218414306640625, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.100295543670654}
 47%|████▋     | 3500/7431 [3:31:15<58:12:25, 53.31s/it] 47%|████▋     | 3501/7431 [3:31:18<41:44:36, 38.24s/it] 47%|████▋     | 3502/7431 [3:31:21<30:15:14, 27.72s/it] 47%|████▋     | 3503/7431 [3:31:24<22:15:40, 20.40s/it] 47%|████▋     | 3504/7431 [3:31:28<16:41:30, 15.30s/it] 47%|████▋     | 3505/7431 [3:31:31<12:47:14, 11.73s/it] 47%|████▋     | 3506/7431 [3:31:34<10:01:28,  9.19s/it] 47%|████▋     | 3507/7431 [3:31:38<8:08:18,  7.47s/it]  47%|████▋     | 3508/7431 [3:31:41<6:49:02,  6.26s/it] 47%|████▋     | 3509/7431 [3:31:44<5:50:38,  5.36s/it] 47%|████▋     | 3510/7431 [3:31:48<5:12:08,  4.78s/it] 47%|████▋     | 3511/7431 [3:31:51<4:40:42,  4.30s/it] 47%|████▋     | 3512/7431 [3:31:54<4:19:26,  3.97s/it] 47%|████▋     | 3513/7431 [3:31:58<4:06:21,  3.77s/it] 47%|████▋     | 3514/7431 [3:32:01<3:55:02,  3.60s/it] 47%|████▋     | 3515/7431 [3:32:04<3:51:52,  3.55s/it] 47%|████▋     | 3516/7431 [3:32:07<3:47:01,  3.48s/it] 47%|████▋     | 3517/7431 [3:32:11<3:40:38,  3.38s/it] 47%|████▋     | 3518/7431 [3:32:14<3:37:06,  3.33s/it] 47%|████▋     | 3519/7431 [3:32:17<3:37:51,  3.34s/it] 47%|████▋     | 3520/7431 [3:32:20<3:35:15,  3.30s/it] 47%|████▋     | 3521/7431 [3:32:24<3:35:14,  3.30s/it] 47%|████▋     | 3522/7431 [3:32:27<3:33:25,  3.28s/it] 47%|████▋     | 3523/7431 [3:32:30<3:31:42,  3.25s/it] 47%|████▋     | 3524/7431 [3:32:33<3:31:57,  3.25s/it] 47%|████▋     | 3525/7431 [3:32:37<3:33:40,  3.28s/it] 47%|████▋     | 3526/7431 [3:32:40<3:33:14,  3.28s/it] 47%|████▋     | 3527/7431 [3:32:43<3:35:29,  3.31s/it] 47%|████▋     | 3528/7431 [3:32:47<3:32:08,  3.26s/it] 47%|████▋     | 3529/7431 [3:32:50<3:30:38,  3.24s/it] 48%|████▊     | 3530/7431 [3:32:53<3:28:15,  3.20s/it] 48%|████▊     | 3531/7431 [3:32:56<3:28:53,  3.21s/it] 48%|████▊     | 3532/7431 [3:32:59<3:27:46,  3.20s/it] 48%|████▊     | 3533/7431 [3:33:03<3:29:36,  3.23s/it] 48%|████▊     | 3534/7431 [3:33:06<3:32:15,  3.27s/it] 48%|████▊     | 3535/7431 [3:33:09<3:32:32,  3.27s/it] 48%|████▊     | 3536/7431 [3:33:12<3:30:32,  3.24s/it] 48%|████▊     | 3537/7431 [3:33:15<3:27:56,  3.20s/it] 48%|████▊     | 3538/7431 [3:33:19<3:33:23,  3.29s/it] 48%|████▊     | 3539/7431 [3:33:22<3:31:04,  3.25s/it] 48%|████▊     | 3540/7431 [3:33:25<3:29:30,  3.23s/it] 48%|████▊     | 3541/7431 [3:33:29<3:30:55,  3.25s/it] 48%|████▊     | 3542/7431 [3:33:32<3:28:58,  3.22s/it] 48%|████▊     | 3543/7431 [3:33:35<3:30:35,  3.25s/it] 48%|████▊     | 3544/7431 [3:33:38<3:30:01,  3.24s/it] 48%|████▊     | 3545/7431 [3:33:41<3:27:37,  3.21s/it] 48%|████▊     | 3546/7431 [3:33:45<3:29:51,  3.24s/it] 48%|████▊     | 3547/7431 [3:33:48<3:29:18,  3.23s/it] 48%|████▊     | 3548/7431 [3:33:51<3:27:40,  3.21s/it] 48%|████▊     | 3549/7431 [3:33:55<3:32:24,  3.28s/it]08/31/2024 22:01:16 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.6609570980072021, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.045836832374334335, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7089099884033203, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.415703773498535}
 48%|████▊     | 3550/7431 [3:33:58<3:31:38,  3.27s/it] 48%|████▊     | 3551/7431 [3:34:01<3:34:15,  3.31s/it] 48%|████▊     | 3552/7431 [3:34:05<3:38:10,  3.37s/it] 48%|████▊     | 3553/7431 [3:34:08<3:35:00,  3.33s/it] 48%|████▊     | 3554/7431 [3:34:11<3:32:25,  3.29s/it] 48%|████▊     | 3555/7431 [3:34:14<3:32:35,  3.29s/it] 48%|████▊     | 3556/7431 [3:34:18<3:31:52,  3.28s/it] 48%|████▊     | 3557/7431 [3:34:21<3:35:09,  3.33s/it] 48%|████▊     | 3558/7431 [3:34:25<3:36:30,  3.35s/it] 48%|████▊     | 3559/7431 [3:34:28<3:33:25,  3.31s/it] 48%|████▊     | 3560/7431 [3:34:31<3:31:14,  3.27s/it] 48%|████▊     | 3561/7431 [3:34:34<3:26:23,  3.20s/it] 48%|████▊     | 3562/7431 [3:34:37<3:27:28,  3.22s/it] 48%|████▊     | 3563/7431 [3:34:40<3:25:02,  3.18s/it] 48%|████▊     | 3564/7431 [3:34:44<3:25:40,  3.19s/it] 48%|████▊     | 3565/7431 [3:34:47<3:30:43,  3.27s/it] 48%|████▊     | 3566/7431 [3:34:50<3:30:46,  3.27s/it] 48%|████▊     | 3567/7431 [3:34:54<3:29:49,  3.26s/it] 48%|████▊     | 3568/7431 [3:34:57<3:34:50,  3.34s/it] 48%|████▊     | 3569/7431 [3:35:00<3:34:22,  3.33s/it] 48%|████▊     | 3570/7431 [3:35:04<3:32:49,  3.31s/it] 48%|████▊     | 3571/7431 [3:35:07<3:30:36,  3.27s/it] 48%|████▊     | 3572/7431 [3:35:10<3:29:34,  3.26s/it] 48%|████▊     | 3573/7431 [3:35:14<3:33:32,  3.32s/it] 48%|████▊     | 3574/7431 [3:35:17<3:34:35,  3.34s/it] 48%|████▊     | 3575/7431 [3:35:20<3:32:44,  3.31s/it] 48%|████▊     | 3576/7431 [3:35:23<3:30:42,  3.28s/it] 48%|████▊     | 3577/7431 [3:35:26<3:28:19,  3.24s/it] 48%|████▊     | 3578/7431 [3:35:30<3:30:20,  3.28s/it] 48%|████▊     | 3579/7431 [3:35:33<3:29:40,  3.27s/it] 48%|████▊     | 3580/7431 [3:35:36<3:25:38,  3.20s/it] 48%|████▊     | 3581/7431 [3:35:39<3:25:25,  3.20s/it] 48%|████▊     | 3582/7431 [3:35:43<3:26:32,  3.22s/it] 48%|████▊     | 3583/7431 [3:35:46<3:28:55,  3.26s/it] 48%|████▊     | 3584/7431 [3:35:49<3:26:57,  3.23s/it] 48%|████▊     | 3585/7431 [3:35:52<3:26:14,  3.22s/it] 48%|████▊     | 3586/7431 [3:35:56<3:30:21,  3.28s/it] 48%|████▊     | 3587/7431 [3:35:59<3:30:24,  3.28s/it] 48%|████▊     | 3588/7431 [3:36:02<3:28:29,  3.26s/it] 48%|████▊     | 3589/7431 [3:36:05<3:28:20,  3.25s/it] 48%|████▊     | 3590/7431 [3:36:09<3:28:32,  3.26s/it] 48%|████▊     | 3591/7431 [3:36:12<3:29:09,  3.27s/it] 48%|████▊     | 3592/7431 [3:36:15<3:30:55,  3.30s/it] 48%|████▊     | 3593/7431 [3:36:19<3:30:31,  3.29s/it] 48%|████▊     | 3594/7431 [3:36:22<3:30:11,  3.29s/it] 48%|████▊     | 3595/7431 [3:36:25<3:26:27,  3.23s/it] 48%|████▊     | 3596/7431 [3:36:28<3:28:11,  3.26s/it] 48%|████▊     | 3597/7431 [3:36:32<3:28:47,  3.27s/it] 48%|████▊     | 3598/7431 [3:36:35<3:31:46,  3.32s/it] 48%|████▊     | 3599/7431 [3:36:39<3:33:57,  3.35s/it]08/31/2024 22:04:00 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.570535659790039, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03589210659265518, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.74045467376709, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.346882343292236}
 48%|████▊     | 3600/7431 [3:36:42<3:34:01,  3.35s/it] 48%|████▊     | 3601/7431 [3:36:45<3:31:44,  3.32s/it] 48%|████▊     | 3602/7431 [3:36:48<3:33:05,  3.34s/it] 48%|████▊     | 3603/7431 [3:36:52<3:27:54,  3.26s/it] 48%|████▊     | 3604/7431 [3:36:55<3:26:47,  3.24s/it] 49%|████▊     | 3605/7431 [3:36:58<3:25:32,  3.22s/it] 49%|████▊     | 3606/7431 [3:37:01<3:25:33,  3.22s/it] 49%|████▊     | 3607/7431 [3:37:04<3:26:08,  3.23s/it] 49%|████▊     | 3608/7431 [3:37:08<3:29:35,  3.29s/it] 49%|████▊     | 3609/7431 [3:37:11<3:28:24,  3.27s/it] 49%|████▊     | 3610/7431 [3:37:14<3:27:06,  3.25s/it] 49%|████▊     | 3611/7431 [3:37:18<3:28:16,  3.27s/it] 49%|████▊     | 3612/7431 [3:37:21<3:29:19,  3.29s/it] 49%|████▊     | 3613/7431 [3:37:24<3:30:17,  3.30s/it] 49%|████▊     | 3614/7431 [3:37:27<3:26:09,  3.24s/it] 49%|████▊     | 3615/7431 [3:37:31<3:24:54,  3.22s/it] 49%|████▊     | 3616/7431 [3:37:34<3:25:48,  3.24s/it] 49%|████▊     | 3617/7431 [3:37:37<3:27:27,  3.26s/it] 49%|████▊     | 3618/7431 [3:37:40<3:27:26,  3.26s/it] 49%|████▊     | 3619/7431 [3:37:44<3:29:19,  3.29s/it] 49%|████▊     | 3620/7431 [3:37:47<3:29:40,  3.30s/it] 49%|████▊     | 3621/7431 [3:37:50<3:29:43,  3.30s/it] 49%|████▊     | 3622/7431 [3:37:54<3:29:51,  3.31s/it] 49%|████▉     | 3623/7431 [3:37:57<3:28:39,  3.29s/it] 49%|████▉     | 3624/7431 [3:38:00<3:27:33,  3.27s/it] 49%|████▉     | 3625/7431 [3:38:04<3:29:47,  3.31s/it] 49%|████▉     | 3626/7431 [3:38:07<3:33:00,  3.36s/it] 49%|████▉     | 3627/7431 [3:38:10<3:30:43,  3.32s/it] 49%|████▉     | 3628/7431 [3:38:13<3:28:23,  3.29s/it] 49%|████▉     | 3629/7431 [3:38:17<3:27:56,  3.28s/it] 49%|████▉     | 3630/7431 [3:38:20<3:30:02,  3.32s/it] 49%|████▉     | 3631/7431 [3:38:23<3:26:53,  3.27s/it] 49%|████▉     | 3632/7431 [3:38:27<3:26:09,  3.26s/it] 49%|████▉     | 3633/7431 [3:38:30<3:25:26,  3.25s/it] 49%|████▉     | 3634/7431 [3:38:33<3:24:17,  3.23s/it] 49%|████▉     | 3635/7431 [3:38:36<3:25:25,  3.25s/it] 49%|████▉     | 3636/7431 [3:38:40<3:27:25,  3.28s/it] 49%|████▉     | 3637/7431 [3:38:43<3:26:22,  3.26s/it] 49%|████▉     | 3638/7431 [3:38:46<3:28:34,  3.30s/it] 49%|████▉     | 3639/7431 [3:38:49<3:26:24,  3.27s/it] 49%|████▉     | 3640/7431 [3:38:52<3:23:17,  3.22s/it] 49%|████▉     | 3641/7431 [3:38:56<3:23:30,  3.22s/it] 49%|████▉     | 3642/7431 [3:38:59<3:21:28,  3.19s/it] 49%|████▉     | 3643/7431 [3:39:02<3:24:35,  3.24s/it] 49%|████▉     | 3644/7431 [3:39:06<3:26:52,  3.28s/it] 49%|████▉     | 3645/7431 [3:39:09<3:26:37,  3.27s/it] 49%|████▉     | 3646/7431 [3:39:12<3:27:46,  3.29s/it] 49%|████▉     | 3647/7431 [3:39:15<3:24:33,  3.24s/it] 49%|████▉     | 3648/7431 [3:39:19<3:26:37,  3.28s/it] 49%|████▉     | 3649/7431 [3:39:22<3:25:52,  3.27s/it]08/31/2024 22:06:44 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.842694640159607, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04270032048225403, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.8254764080047607, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.71087121963501}
 49%|████▉     | 3650/7431 [3:39:25<3:30:39,  3.34s/it] 49%|████▉     | 3651/7431 [3:39:29<3:29:08,  3.32s/it] 49%|████▉     | 3652/7431 [3:39:32<3:29:29,  3.33s/it] 49%|████▉     | 3653/7431 [3:39:35<3:25:28,  3.26s/it] 49%|████▉     | 3654/7431 [3:39:38<3:25:54,  3.27s/it] 49%|████▉     | 3655/7431 [3:39:42<3:24:57,  3.26s/it] 49%|████▉     | 3656/7431 [3:39:45<3:23:41,  3.24s/it] 49%|████▉     | 3657/7431 [3:39:48<3:26:40,  3.29s/it] 49%|████▉     | 3658/7431 [3:39:52<3:26:16,  3.28s/it] 49%|████▉     | 3659/7431 [3:39:55<3:25:10,  3.26s/it] 49%|████▉     | 3660/7431 [3:39:58<3:22:11,  3.22s/it] 49%|████▉     | 3661/7431 [3:40:01<3:21:23,  3.21s/it] 49%|████▉     | 3662/7431 [3:40:04<3:21:31,  3.21s/it] 49%|████▉     | 3663/7431 [3:40:08<3:24:43,  3.26s/it] 49%|████▉     | 3664/7431 [3:40:11<3:24:35,  3.26s/it] 49%|████▉     | 3665/7431 [3:40:14<3:25:25,  3.27s/it] 49%|████▉     | 3666/7431 [3:40:17<3:24:16,  3.26s/it] 49%|████▉     | 3667/7431 [3:40:21<3:23:14,  3.24s/it] 49%|████▉     | 3668/7431 [3:40:24<3:23:43,  3.25s/it] 49%|████▉     | 3669/7431 [3:40:27<3:24:03,  3.25s/it] 49%|████▉     | 3670/7431 [3:40:31<3:27:59,  3.32s/it] 49%|████▉     | 3671/7431 [3:40:34<3:30:53,  3.37s/it] 49%|████▉     | 3672/7431 [3:40:37<3:28:09,  3.32s/it] 49%|████▉     | 3673/7431 [3:40:41<3:27:44,  3.32s/it] 49%|████▉     | 3674/7431 [3:40:44<3:23:11,  3.24s/it] 49%|████▉     | 3675/7431 [3:40:47<3:26:04,  3.29s/it] 49%|████▉     | 3676/7431 [3:40:50<3:23:58,  3.26s/it] 49%|████▉     | 3677/7431 [3:40:53<3:23:14,  3.25s/it] 49%|████▉     | 3678/7431 [3:40:57<3:22:57,  3.24s/it] 50%|████▉     | 3679/7431 [3:41:00<3:27:49,  3.32s/it] 50%|████▉     | 3680/7431 [3:41:03<3:24:37,  3.27s/it] 50%|████▉     | 3681/7431 [3:41:07<3:22:17,  3.24s/it] 50%|████▉     | 3682/7431 [3:41:10<3:24:39,  3.28s/it] 50%|████▉     | 3683/7431 [3:41:13<3:23:54,  3.26s/it] 50%|████▉     | 3684/7431 [3:41:16<3:20:56,  3.22s/it] 50%|████▉     | 3685/7431 [3:41:19<3:20:24,  3.21s/it] 50%|████▉     | 3686/7431 [3:41:23<3:23:41,  3.26s/it] 50%|████▉     | 3687/7431 [3:41:26<3:24:46,  3.28s/it] 50%|████▉     | 3688/7431 [3:41:29<3:23:21,  3.26s/it] 50%|████▉     | 3689/7431 [3:41:33<3:22:57,  3.25s/it] 50%|████▉     | 3690/7431 [3:41:36<3:21:16,  3.23s/it] 50%|████▉     | 3691/7431 [3:41:39<3:20:52,  3.22s/it] 50%|████▉     | 3692/7431 [3:41:42<3:20:19,  3.21s/it] 50%|████▉     | 3693/7431 [3:41:45<3:18:07,  3.18s/it] 50%|████▉     | 3694/7431 [3:41:49<3:21:22,  3.23s/it] 50%|████▉     | 3695/7431 [3:41:52<3:20:46,  3.22s/it] 50%|████▉     | 3696/7431 [3:41:55<3:24:26,  3.28s/it] 50%|████▉     | 3697/7431 [3:41:58<3:21:55,  3.24s/it] 50%|████▉     | 3698/7431 [3:42:02<3:23:34,  3.27s/it] 50%|████▉     | 3699/7431 [3:42:05<3:23:27,  3.27s/it]08/31/2024 22:09:27 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.6291378736495972, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04410388320684433, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6888914108276367, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.362133026123047}
 50%|████▉     | 3700/7431 [3:42:08<3:20:47,  3.23s/it] 50%|████▉     | 3701/7431 [3:42:11<3:19:13,  3.20s/it] 50%|████▉     | 3702/7431 [3:42:15<3:26:02,  3.32s/it] 50%|████▉     | 3703/7431 [3:42:18<3:26:47,  3.33s/it] 50%|████▉     | 3704/7431 [3:42:22<3:25:48,  3.31s/it] 50%|████▉     | 3705/7431 [3:42:25<3:27:03,  3.33s/it] 50%|████▉     | 3706/7431 [3:42:28<3:26:53,  3.33s/it] 50%|████▉     | 3707/7431 [3:42:31<3:23:06,  3.27s/it] 50%|████▉     | 3708/7431 [3:42:35<3:22:07,  3.26s/it] 50%|████▉     | 3709/7431 [3:42:38<3:21:12,  3.24s/it] 50%|████▉     | 3710/7431 [3:42:41<3:19:55,  3.22s/it] 50%|████▉     | 3711/7431 [3:42:44<3:21:47,  3.25s/it] 50%|████▉     | 3712/7431 [3:42:48<3:27:30,  3.35s/it] 50%|████▉     | 3713/7431 [3:42:51<3:24:46,  3.30s/it] 50%|████▉     | 3714/7431 [3:42:54<3:19:59,  3.23s/it] 50%|████▉     | 3715/7431 [3:42:57<3:22:02,  3.26s/it] 50%|█████     | 3716/7431 [3:43:01<3:22:41,  3.27s/it] 50%|█████     | 3717/7431 [3:43:04<3:21:11,  3.25s/it] 50%|█████     | 3718/7431 [3:43:07<3:22:24,  3.27s/it] 50%|█████     | 3719/7431 [3:43:11<3:22:31,  3.27s/it] 50%|█████     | 3720/7431 [3:43:14<3:20:58,  3.25s/it] 50%|█████     | 3721/7431 [3:43:17<3:22:57,  3.28s/it] 50%|█████     | 3722/7431 [3:43:21<3:26:12,  3.34s/it] 50%|█████     | 3723/7431 [3:43:24<3:22:51,  3.28s/it] 50%|█████     | 3724/7431 [3:43:27<3:22:11,  3.27s/it] 50%|█████     | 3725/7431 [3:43:30<3:20:38,  3.25s/it] 50%|█████     | 3726/7431 [3:43:34<3:24:48,  3.32s/it] 50%|█████     | 3727/7431 [3:43:37<3:23:33,  3.30s/it] 50%|█████     | 3728/7431 [3:43:40<3:20:13,  3.24s/it] 50%|█████     | 3729/7431 [3:43:43<3:20:19,  3.25s/it] 50%|█████     | 3730/7431 [3:43:47<3:21:16,  3.26s/it] 50%|█████     | 3731/7431 [3:43:50<3:20:36,  3.25s/it] 50%|█████     | 3732/7431 [3:43:53<3:21:13,  3.26s/it] 50%|█████     | 3733/7431 [3:43:56<3:18:13,  3.22s/it] 50%|█████     | 3734/7431 [3:43:59<3:18:41,  3.22s/it] 50%|█████     | 3735/7431 [3:44:03<3:19:31,  3.24s/it] 50%|█████     | 3736/7431 [3:44:06<3:17:39,  3.21s/it] 50%|█████     | 3737/7431 [3:44:09<3:17:49,  3.21s/it] 50%|█████     | 3738/7431 [3:44:12<3:21:30,  3.27s/it] 50%|█████     | 3739/7431 [3:44:16<3:22:35,  3.29s/it] 50%|█████     | 3740/7431 [3:44:19<3:23:06,  3.30s/it] 50%|█████     | 3741/7431 [3:44:22<3:22:21,  3.29s/it] 50%|█████     | 3742/7431 [3:44:25<3:18:21,  3.23s/it] 50%|█████     | 3743/7431 [3:44:29<3:17:08,  3.21s/it] 50%|█████     | 3744/7431 [3:44:32<3:18:53,  3.24s/it] 50%|█████     | 3745/7431 [3:44:35<3:19:35,  3.25s/it] 50%|█████     | 3746/7431 [3:44:38<3:17:47,  3.22s/it] 50%|█████     | 3747/7431 [3:44:42<3:23:01,  3.31s/it] 50%|█████     | 3748/7431 [3:44:45<3:19:51,  3.26s/it] 50%|█████     | 3749/7431 [3:44:48<3:21:21,  3.28s/it]08/31/2024 22:12:10 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.9187982082366943, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04597652330994606, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.8450238704681396, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.809798717498779}
 50%|█████     | 3750/7431 [3:44:52<3:18:54,  3.24s/it] 50%|█████     | 3751/7431 [3:44:55<3:20:26,  3.27s/it] 50%|█████     | 3752/7431 [3:44:58<3:18:01,  3.23s/it] 51%|█████     | 3753/7431 [3:45:01<3:19:23,  3.25s/it] 51%|█████     | 3754/7431 [3:45:05<3:23:19,  3.32s/it] 51%|█████     | 3755/7431 [3:45:08<3:23:08,  3.32s/it] 51%|█████     | 3756/7431 [3:45:11<3:21:38,  3.29s/it] 51%|█████     | 3757/7431 [3:45:15<3:20:03,  3.27s/it] 51%|█████     | 3758/7431 [3:45:18<3:22:54,  3.31s/it] 51%|█████     | 3759/7431 [3:45:21<3:23:56,  3.33s/it] 51%|█████     | 3760/7431 [3:45:24<3:20:01,  3.27s/it] 51%|█████     | 3761/7431 [3:45:28<3:19:51,  3.27s/it] 51%|█████     | 3762/7431 [3:45:31<3:18:05,  3.24s/it] 51%|█████     | 3763/7431 [3:45:34<3:20:34,  3.28s/it] 51%|█████     | 3764/7431 [3:45:38<3:24:29,  3.35s/it] 51%|█████     | 3765/7431 [3:45:41<3:23:18,  3.33s/it] 51%|█████     | 3766/7431 [3:45:44<3:21:23,  3.30s/it] 51%|█████     | 3767/7431 [3:45:48<3:22:15,  3.31s/it] 51%|█████     | 3768/7431 [3:45:51<3:19:51,  3.27s/it] 51%|█████     | 3769/7431 [3:45:54<3:19:14,  3.26s/it] 51%|█████     | 3770/7431 [3:45:57<3:18:02,  3.25s/it] 51%|█████     | 3771/7431 [3:46:01<3:20:03,  3.28s/it] 51%|█████     | 3772/7431 [3:46:04<3:17:38,  3.24s/it] 51%|█████     | 3773/7431 [3:46:07<3:14:52,  3.20s/it] 51%|█████     | 3774/7431 [3:46:10<3:21:32,  3.31s/it] 51%|█████     | 3775/7431 [3:46:14<3:21:24,  3.31s/it] 51%|█████     | 3776/7431 [3:46:17<3:19:34,  3.28s/it] 51%|█████     | 3777/7431 [3:46:20<3:18:00,  3.25s/it] 51%|█████     | 3778/7431 [3:46:23<3:17:39,  3.25s/it] 51%|█████     | 3779/7431 [3:46:27<3:17:50,  3.25s/it] 51%|█████     | 3780/7431 [3:46:30<3:15:51,  3.22s/it] 51%|█████     | 3781/7431 [3:46:33<3:15:52,  3.22s/it] 51%|█████     | 3782/7431 [3:46:36<3:15:59,  3.22s/it] 51%|█████     | 3783/7431 [3:46:40<3:22:27,  3.33s/it] 51%|█████     | 3784/7431 [3:46:43<3:22:20,  3.33s/it] 51%|█████     | 3785/7431 [3:46:46<3:20:45,  3.30s/it] 51%|█████     | 3786/7431 [3:46:50<3:20:02,  3.29s/it] 51%|█████     | 3787/7431 [3:46:53<3:18:21,  3.27s/it] 51%|█████     | 3788/7431 [3:46:56<3:17:39,  3.26s/it] 51%|█████     | 3789/7431 [3:46:59<3:17:30,  3.25s/it] 51%|█████     | 3790/7431 [3:47:03<3:20:43,  3.31s/it] 51%|█████     | 3791/7431 [3:47:06<3:16:23,  3.24s/it] 51%|█████     | 3792/7431 [3:47:09<3:17:26,  3.26s/it] 51%|█████     | 3793/7431 [3:47:12<3:16:52,  3.25s/it] 51%|█████     | 3794/7431 [3:47:15<3:15:00,  3.22s/it] 51%|█████     | 3795/7431 [3:47:19<3:16:23,  3.24s/it] 51%|█████     | 3796/7431 [3:47:22<3:17:39,  3.26s/it] 51%|█████     | 3797/7431 [3:47:25<3:19:51,  3.30s/it] 51%|█████     | 3798/7431 [3:47:29<3:19:59,  3.30s/it] 51%|█████     | 3799/7431 [3:47:32<3:19:47,  3.30s/it]08/31/2024 22:14:54 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.5634429454803467, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04220804572105408, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6722841262817383, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.277935028076172}
 51%|█████     | 3800/7431 [3:47:35<3:18:36,  3.28s/it] 51%|█████     | 3801/7431 [3:47:39<3:17:08,  3.26s/it] 51%|█████     | 3802/7431 [3:47:42<3:16:39,  3.25s/it] 51%|█████     | 3803/7431 [3:47:45<3:22:05,  3.34s/it] 51%|█████     | 3804/7431 [3:47:49<3:21:30,  3.33s/it] 51%|█████     | 3805/7431 [3:47:52<3:18:25,  3.28s/it] 51%|█████     | 3806/7431 [3:47:55<3:20:13,  3.31s/it] 51%|█████     | 3807/7431 [3:47:58<3:16:28,  3.25s/it] 51%|█████     | 3808/7431 [3:48:02<3:16:13,  3.25s/it] 51%|█████▏    | 3809/7431 [3:48:05<3:15:24,  3.24s/it] 51%|█████▏    | 3810/7431 [3:48:08<3:13:08,  3.20s/it] 51%|█████▏    | 3811/7431 [3:48:11<3:18:08,  3.28s/it] 51%|█████▏    | 3812/7431 [3:48:15<3:22:41,  3.36s/it] 51%|█████▏    | 3813/7431 [3:48:18<3:17:10,  3.27s/it] 51%|█████▏    | 3814/7431 [3:48:21<3:18:16,  3.29s/it] 51%|█████▏    | 3815/7431 [3:48:24<3:14:51,  3.23s/it] 51%|█████▏    | 3816/7431 [3:48:28<3:17:47,  3.28s/it] 51%|█████▏    | 3817/7431 [3:48:31<3:17:36,  3.28s/it] 51%|█████▏    | 3818/7431 [3:48:34<3:17:18,  3.28s/it] 51%|█████▏    | 3819/7431 [3:48:38<3:19:31,  3.31s/it] 51%|█████▏    | 3820/7431 [3:48:41<3:19:47,  3.32s/it] 51%|█████▏    | 3821/7431 [3:48:44<3:19:53,  3.32s/it] 51%|█████▏    | 3822/7431 [3:48:48<3:16:38,  3.27s/it] 51%|█████▏    | 3823/7431 [3:48:51<3:14:52,  3.24s/it] 51%|█████▏    | 3824/7431 [3:48:54<3:16:34,  3.27s/it] 51%|█████▏    | 3825/7431 [3:48:57<3:15:50,  3.26s/it] 51%|█████▏    | 3826/7431 [3:49:00<3:14:15,  3.23s/it] 52%|█████▏    | 3827/7431 [3:49:04<3:16:21,  3.27s/it] 52%|█████▏    | 3828/7431 [3:49:07<3:14:42,  3.24s/it] 52%|█████▏    | 3829/7431 [3:49:10<3:18:30,  3.31s/it] 52%|█████▏    | 3830/7431 [3:49:14<3:18:09,  3.30s/it] 52%|█████▏    | 3831/7431 [3:49:17<3:16:44,  3.28s/it] 52%|█████▏    | 3832/7431 [3:49:20<3:19:17,  3.32s/it] 52%|█████▏    | 3833/7431 [3:49:24<3:20:42,  3.35s/it] 52%|█████▏    | 3834/7431 [3:49:27<3:16:06,  3.27s/it] 52%|█████▏    | 3835/7431 [3:49:30<3:15:47,  3.27s/it] 52%|█████▏    | 3836/7431 [3:49:33<3:17:14,  3.29s/it] 52%|█████▏    | 3837/7431 [3:49:37<3:21:30,  3.36s/it] 52%|█████▏    | 3838/7431 [3:49:40<3:22:52,  3.39s/it] 52%|█████▏    | 3839/7431 [3:49:44<3:17:41,  3.30s/it] 52%|█████▏    | 3840/7431 [3:49:47<3:17:48,  3.31s/it] 52%|█████▏    | 3841/7431 [3:49:50<3:21:47,  3.37s/it] 52%|█████▏    | 3842/7431 [3:49:54<3:20:35,  3.35s/it] 52%|█████▏    | 3843/7431 [3:49:57<3:16:48,  3.29s/it] 52%|█████▏    | 3844/7431 [3:50:00<3:16:20,  3.28s/it] 52%|█████▏    | 3845/7431 [3:50:03<3:13:36,  3.24s/it] 52%|█████▏    | 3846/7431 [3:50:07<3:14:10,  3.25s/it] 52%|█████▏    | 3847/7431 [3:50:10<3:12:43,  3.23s/it] 52%|█████▏    | 3848/7431 [3:50:13<3:15:34,  3.28s/it] 52%|█████▏    | 3849/7431 [3:50:16<3:14:15,  3.25s/it]08/31/2024 22:17:38 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.8848260641098022, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.05095504969358444, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7667086124420166, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.702489852905273}
 52%|█████▏    | 3850/7431 [3:50:19<3:13:05,  3.24s/it] 52%|█████▏    | 3851/7431 [3:50:23<3:16:28,  3.29s/it] 52%|█████▏    | 3852/7431 [3:50:26<3:13:59,  3.25s/it] 52%|█████▏    | 3853/7431 [3:50:29<3:15:57,  3.29s/it] 52%|█████▏    | 3854/7431 [3:50:33<3:15:33,  3.28s/it] 52%|█████▏    | 3855/7431 [3:50:36<3:15:39,  3.28s/it] 52%|█████▏    | 3856/7431 [3:50:39<3:15:06,  3.27s/it] 52%|█████▏    | 3857/7431 [3:50:42<3:14:02,  3.26s/it] 52%|█████▏    | 3858/7431 [3:50:46<3:12:47,  3.24s/it] 52%|█████▏    | 3859/7431 [3:50:49<3:11:45,  3.22s/it] 52%|█████▏    | 3860/7431 [3:50:52<3:12:03,  3.23s/it] 52%|█████▏    | 3861/7431 [3:50:55<3:15:32,  3.29s/it] 52%|█████▏    | 3862/7431 [3:50:59<3:14:09,  3.26s/it] 52%|█████▏    | 3863/7431 [3:51:02<3:12:44,  3.24s/it] 52%|█████▏    | 3864/7431 [3:51:05<3:13:08,  3.25s/it] 52%|█████▏    | 3865/7431 [3:51:08<3:13:00,  3.25s/it] 52%|█████▏    | 3866/7431 [3:51:12<3:15:57,  3.30s/it] 52%|█████▏    | 3867/7431 [3:51:15<3:14:42,  3.28s/it] 52%|█████▏    | 3868/7431 [3:51:18<3:14:04,  3.27s/it] 52%|█████▏    | 3869/7431 [3:51:22<3:14:47,  3.28s/it] 52%|█████▏    | 3870/7431 [3:51:25<3:13:59,  3.27s/it] 52%|█████▏    | 3871/7431 [3:51:28<3:15:47,  3.30s/it] 52%|█████▏    | 3872/7431 [3:51:32<3:20:29,  3.38s/it] 52%|█████▏    | 3873/7431 [3:51:35<3:18:05,  3.34s/it] 52%|█████▏    | 3874/7431 [3:51:38<3:16:05,  3.31s/it] 52%|█████▏    | 3875/7431 [3:51:42<3:14:49,  3.29s/it] 52%|█████▏    | 3876/7431 [3:51:45<3:13:00,  3.26s/it] 52%|█████▏    | 3877/7431 [3:51:48<3:12:58,  3.26s/it] 52%|█████▏    | 3878/7431 [3:51:51<3:10:43,  3.22s/it] 52%|█████▏    | 3879/7431 [3:51:55<3:14:40,  3.29s/it] 52%|█████▏    | 3880/7431 [3:51:58<3:12:18,  3.25s/it] 52%|█████▏    | 3881/7431 [3:52:01<3:13:09,  3.26s/it] 52%|█████▏    | 3882/7431 [3:52:04<3:14:25,  3.29s/it] 52%|█████▏    | 3883/7431 [3:52:08<3:14:17,  3.29s/it] 52%|█████▏    | 3884/7431 [3:52:11<3:15:33,  3.31s/it] 52%|█████▏    | 3885/7431 [3:52:14<3:12:17,  3.25s/it] 52%|█████▏    | 3886/7431 [3:52:17<3:13:01,  3.27s/it] 52%|█████▏    | 3887/7431 [3:52:21<3:11:03,  3.23s/it] 52%|█████▏    | 3888/7431 [3:52:24<3:09:55,  3.22s/it] 52%|█████▏    | 3889/7431 [3:52:27<3:09:54,  3.22s/it] 52%|█████▏    | 3890/7431 [3:52:30<3:15:02,  3.30s/it] 52%|█████▏    | 3891/7431 [3:52:34<3:16:08,  3.32s/it] 52%|█████▏    | 3892/7431 [3:52:37<3:14:33,  3.30s/it] 52%|█████▏    | 3893/7431 [3:52:40<3:15:48,  3.32s/it] 52%|█████▏    | 3894/7431 [3:52:44<3:16:05,  3.33s/it] 52%|█████▏    | 3895/7431 [3:52:47<3:15:41,  3.32s/it] 52%|█████▏    | 3896/7431 [3:52:50<3:15:53,  3.32s/it] 52%|█████▏    | 3897/7431 [3:52:54<3:13:49,  3.29s/it] 52%|█████▏    | 3898/7431 [3:52:57<3:13:48,  3.29s/it] 52%|█████▏    | 3899/7431 [3:53:00<3:13:10,  3.28s/it]08/31/2024 22:20:22 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.3077359199523926, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.034034427255392075, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.5959410667419434, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 3.937711238861084}
 52%|█████▏    | 3900/7431 [3:53:04<3:14:02,  3.30s/it] 52%|█████▏    | 3901/7431 [3:53:07<3:11:21,  3.25s/it] 53%|█████▎    | 3902/7431 [3:53:10<3:09:17,  3.22s/it] 53%|█████▎    | 3903/7431 [3:53:13<3:07:47,  3.19s/it] 53%|█████▎    | 3904/7431 [3:53:16<3:08:50,  3.21s/it] 53%|█████▎    | 3905/7431 [3:53:19<3:09:37,  3.23s/it] 53%|█████▎    | 3906/7431 [3:53:23<3:13:36,  3.30s/it] 53%|█████▎    | 3907/7431 [3:53:26<3:15:33,  3.33s/it] 53%|█████▎    | 3908/7431 [3:53:30<3:19:26,  3.40s/it] 53%|█████▎    | 3909/7431 [3:53:33<3:18:03,  3.37s/it] 53%|█████▎    | 3910/7431 [3:53:36<3:14:16,  3.31s/it] 53%|█████▎    | 3911/7431 [3:53:40<3:15:09,  3.33s/it] 53%|█████▎    | 3912/7431 [3:53:43<3:16:59,  3.36s/it] 53%|█████▎    | 3913/7431 [3:53:46<3:13:31,  3.30s/it] 53%|█████▎    | 3914/7431 [3:53:50<3:11:50,  3.27s/it] 53%|█████▎    | 3915/7431 [3:53:53<3:12:59,  3.29s/it] 53%|█████▎    | 3916/7431 [3:53:56<3:15:33,  3.34s/it] 53%|█████▎    | 3917/7431 [3:54:00<3:15:45,  3.34s/it] 53%|█████▎    | 3918/7431 [3:54:03<3:16:34,  3.36s/it] 53%|█████▎    | 3919/7431 [3:54:06<3:14:06,  3.32s/it] 53%|█████▎    | 3920/7431 [3:54:10<3:17:02,  3.37s/it] 53%|█████▎    | 3921/7431 [3:54:13<3:12:51,  3.30s/it] 53%|█████▎    | 3922/7431 [3:54:16<3:09:46,  3.24s/it] 53%|█████▎    | 3923/7431 [3:54:19<3:09:28,  3.24s/it] 53%|█████▎    | 3924/7431 [3:54:23<3:09:36,  3.24s/it] 53%|█████▎    | 3925/7431 [3:54:26<3:08:48,  3.23s/it] 53%|█████▎    | 3926/7431 [3:54:29<3:06:56,  3.20s/it] 53%|█████▎    | 3927/7431 [3:54:32<3:14:26,  3.33s/it] 53%|█████▎    | 3928/7431 [3:54:36<3:15:00,  3.34s/it] 53%|█████▎    | 3929/7431 [3:54:39<3:12:45,  3.30s/it] 53%|█████▎    | 3930/7431 [3:54:42<3:14:02,  3.33s/it] 53%|█████▎    | 3931/7431 [3:54:46<3:15:22,  3.35s/it] 53%|█████▎    | 3932/7431 [3:54:49<3:15:47,  3.36s/it] 53%|█████▎    | 3933/7431 [3:54:52<3:12:41,  3.31s/it] 53%|█████▎    | 3934/7431 [3:54:56<3:11:27,  3.28s/it] 53%|█████▎    | 3935/7431 [3:54:59<3:10:17,  3.27s/it] 53%|█████▎    | 3936/7431 [3:55:02<3:11:36,  3.29s/it] 53%|█████▎    | 3937/7431 [3:55:05<3:11:29,  3.29s/it] 53%|█████▎    | 3938/7431 [3:55:09<3:11:40,  3.29s/it] 53%|█████▎    | 3939/7431 [3:55:12<3:09:50,  3.26s/it] 53%|█████▎    | 3940/7431 [3:55:15<3:10:58,  3.28s/it] 53%|█████▎    | 3941/7431 [3:55:19<3:13:28,  3.33s/it] 53%|█████▎    | 3942/7431 [3:55:22<3:13:21,  3.33s/it] 53%|█████▎    | 3943/7431 [3:55:25<3:11:51,  3.30s/it] 53%|█████▎    | 3944/7431 [3:55:29<3:10:41,  3.28s/it] 53%|█████▎    | 3945/7431 [3:55:32<3:16:38,  3.38s/it] 53%|█████▎    | 3946/7431 [3:55:35<3:13:26,  3.33s/it] 53%|█████▎    | 3947/7431 [3:55:39<3:12:38,  3.32s/it] 53%|█████▎    | 3948/7431 [3:55:42<3:11:30,  3.30s/it] 53%|█████▎    | 3949/7431 [3:55:45<3:11:35,  3.30s/it]08/31/2024 22:23:07 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.4646615982055664, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03697653487324715, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.565662384033203, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.067300796508789}
 53%|█████▎    | 3950/7431 [3:55:48<3:10:17,  3.28s/it] 53%|█████▎    | 3951/7431 [3:55:52<3:11:04,  3.29s/it] 53%|█████▎    | 3952/7431 [3:55:55<3:11:51,  3.31s/it] 53%|█████▎    | 3953/7431 [3:55:58<3:10:19,  3.28s/it] 53%|█████▎    | 3954/7431 [3:56:02<3:09:55,  3.28s/it] 53%|█████▎    | 3955/7431 [3:56:05<3:08:09,  3.25s/it] 53%|█████▎    | 3956/7431 [3:56:08<3:09:08,  3.27s/it] 53%|█████▎    | 3957/7431 [3:56:11<3:11:05,  3.30s/it] 53%|█████▎    | 3958/7431 [3:56:15<3:09:37,  3.28s/it] 53%|█████▎    | 3959/7431 [3:56:18<3:09:32,  3.28s/it] 53%|█████▎    | 3960/7431 [3:56:21<3:08:17,  3.25s/it] 53%|█████▎    | 3961/7431 [3:56:24<3:07:57,  3.25s/it] 53%|█████▎    | 3962/7431 [3:56:28<3:05:59,  3.22s/it] 53%|█████▎    | 3963/7431 [3:56:31<3:09:07,  3.27s/it] 53%|█████▎    | 3964/7431 [3:56:34<3:07:11,  3.24s/it] 53%|█████▎    | 3965/7431 [3:56:37<3:05:32,  3.21s/it] 53%|█████▎    | 3966/7431 [3:56:40<3:05:09,  3.21s/it] 53%|█████▎    | 3967/7431 [3:56:44<3:07:11,  3.24s/it] 53%|█████▎    | 3968/7431 [3:56:47<3:06:09,  3.23s/it] 53%|█████▎    | 3969/7431 [3:56:50<3:04:34,  3.20s/it] 53%|█████▎    | 3970/7431 [3:56:54<3:08:14,  3.26s/it] 53%|█████▎    | 3971/7431 [3:56:57<3:08:47,  3.27s/it] 53%|█████▎    | 3972/7431 [3:57:00<3:08:25,  3.27s/it] 53%|█████▎    | 3973/7431 [3:57:03<3:10:56,  3.31s/it] 53%|█████▎    | 3974/7431 [3:57:07<3:10:06,  3.30s/it] 53%|█████▎    | 3975/7431 [3:57:10<3:11:11,  3.32s/it] 54%|█████▎    | 3976/7431 [3:57:13<3:07:49,  3.26s/it] 54%|█████▎    | 3977/7431 [3:57:17<3:08:59,  3.28s/it] 54%|█████▎    | 3978/7431 [3:57:20<3:07:17,  3.25s/it] 54%|█████▎    | 3979/7431 [3:57:23<3:06:56,  3.25s/it] 54%|█████▎    | 3980/7431 [3:57:26<3:05:51,  3.23s/it] 54%|█████▎    | 3981/7431 [3:57:30<3:07:07,  3.25s/it] 54%|█████▎    | 3982/7431 [3:57:33<3:04:00,  3.20s/it] 54%|█████▎    | 3983/7431 [3:57:36<3:05:39,  3.23s/it] 54%|█████▎    | 3984/7431 [3:57:39<3:06:36,  3.25s/it] 54%|█████▎    | 3985/7431 [3:57:42<3:05:56,  3.24s/it] 54%|█████▎    | 3986/7431 [3:57:46<3:08:25,  3.28s/it] 54%|█████▎    | 3987/7431 [3:57:49<3:11:09,  3.33s/it] 54%|█████▎    | 3988/7431 [3:57:52<3:10:20,  3.32s/it] 54%|█████▎    | 3989/7431 [3:57:56<3:10:59,  3.33s/it] 54%|█████▎    | 3990/7431 [3:57:59<3:07:38,  3.27s/it] 54%|█████▎    | 3991/7431 [3:58:02<3:07:33,  3.27s/it] 54%|█████▎    | 3992/7431 [3:58:06<3:08:02,  3.28s/it] 54%|█████▎    | 3993/7431 [3:58:09<3:07:05,  3.27s/it] 54%|█████▎    | 3994/7431 [3:58:12<3:06:51,  3.26s/it] 54%|█████▍    | 3995/7431 [3:58:15<3:05:36,  3.24s/it] 54%|█████▍    | 3996/7431 [3:58:19<3:08:24,  3.29s/it] 54%|█████▍    | 3997/7431 [3:58:22<3:05:50,  3.25s/it] 54%|█████▍    | 3998/7431 [3:58:25<3:08:07,  3.29s/it] 54%|█████▍    | 3999/7431 [3:58:28<3:07:50,  3.28s/it]08/31/2024 22:25:49 - INFO - __main__ -   evaluate on ret%tv--msrvtt_ret task
08/31/2024 22:25:49 - INFO - __main__ -   start running ret%tv validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  1%|          | 2/221 [00:00<00:50,  4.34it/s][A
  1%|▏         | 3/221 [00:00<00:51,  4.20it/s][A
  2%|▏         | 4/221 [00:00<00:42,  5.15it/s][A
  2%|▏         | 5/221 [00:00<00:39,  5.52it/s][A
  3%|▎         | 6/221 [00:01<00:35,  6.01it/s][A
  3%|▎         | 7/221 [00:01<00:37,  5.73it/s][A
  4%|▎         | 8/221 [00:01<00:38,  5.59it/s][A
  4%|▍         | 9/221 [00:01<00:36,  5.81it/s][A
  5%|▍         | 10/221 [00:02<00:50,  4.22it/s][A
  5%|▍         | 11/221 [00:02<00:48,  4.37it/s][A
  5%|▌         | 12/221 [00:02<00:45,  4.60it/s][A
  6%|▌         | 13/221 [00:02<00:52,  3.98it/s][A
  6%|▋         | 14/221 [00:02<00:46,  4.47it/s][A
  7%|▋         | 15/221 [00:03<00:42,  4.85it/s][A
  7%|▋         | 16/221 [00:03<00:56,  3.60it/s][A
  8%|▊         | 17/221 [00:03<01:00,  3.38it/s][A
  8%|▊         | 18/221 [00:03<00:48,  4.20it/s][A
  9%|▊         | 19/221 [00:04<00:47,  4.24it/s][A
  9%|▉         | 20/221 [00:04<00:43,  4.63it/s][A
 10%|▉         | 21/221 [00:04<00:47,  4.25it/s][A
 10%|▉         | 22/221 [00:04<00:46,  4.28it/s][A
 10%|█         | 23/221 [00:05<00:44,  4.41it/s][A
 11%|█         | 24/221 [00:05<00:42,  4.69it/s][A
 11%|█▏        | 25/221 [00:05<00:44,  4.38it/s][A
 12%|█▏        | 26/221 [00:05<00:48,  4.05it/s][A
 12%|█▏        | 27/221 [00:06<00:46,  4.14it/s][A
 13%|█▎        | 28/221 [00:06<00:49,  3.90it/s][A
 13%|█▎        | 29/221 [00:06<00:53,  3.59it/s][A
 14%|█▎        | 30/221 [00:07<01:00,  3.18it/s][A
 14%|█▍        | 31/221 [00:07<00:57,  3.33it/s][A
 14%|█▍        | 32/221 [00:07<00:52,  3.59it/s][A
 15%|█▍        | 33/221 [00:07<00:48,  3.91it/s][A
 15%|█▌        | 34/221 [00:07<00:45,  4.13it/s][A
 16%|█▌        | 35/221 [00:08<00:56,  3.32it/s][A
 16%|█▋        | 36/221 [00:08<01:03,  2.90it/s][A
 17%|█▋        | 37/221 [00:09<00:54,  3.40it/s][A
 17%|█▋        | 38/221 [00:09<00:51,  3.56it/s][A
 18%|█▊        | 39/221 [00:09<00:47,  3.85it/s][A
 18%|█▊        | 40/221 [00:09<00:50,  3.60it/s][A
 19%|█▊        | 41/221 [00:10<00:56,  3.19it/s][A
 19%|█▉        | 42/221 [00:10<00:45,  3.89it/s][A
 19%|█▉        | 43/221 [00:10<00:41,  4.34it/s][A
 20%|█▉        | 44/221 [00:10<00:41,  4.30it/s][A
 20%|██        | 45/221 [00:11<00:49,  3.56it/s][A
 21%|██        | 46/221 [00:11<00:51,  3.43it/s][A
 21%|██▏       | 47/221 [00:11<00:42,  4.07it/s][A
 22%|██▏       | 48/221 [00:11<00:39,  4.41it/s][A
 22%|██▏       | 49/221 [00:12<00:44,  3.83it/s][A
 23%|██▎       | 50/221 [00:12<00:53,  3.19it/s][A
 23%|██▎       | 51/221 [00:12<00:48,  3.47it/s][A
 24%|██▎       | 52/221 [00:13<00:50,  3.33it/s][A
 24%|██▍       | 53/221 [00:13<00:45,  3.69it/s][A
 24%|██▍       | 54/221 [00:13<00:55,  3.03it/s][A
 25%|██▍       | 55/221 [00:14<00:52,  3.13it/s][A
 25%|██▌       | 56/221 [00:14<00:48,  3.43it/s][A
 26%|██▌       | 57/221 [00:14<00:47,  3.43it/s][A
 26%|██▌       | 58/221 [00:14<00:44,  3.64it/s][A
 27%|██▋       | 59/221 [00:15<00:42,  3.84it/s][A
 27%|██▋       | 60/221 [00:15<00:40,  3.93it/s][A
 28%|██▊       | 61/221 [00:15<00:41,  3.90it/s][A
 28%|██▊       | 62/221 [00:15<00:41,  3.87it/s][A
 29%|██▊       | 63/221 [00:16<00:43,  3.66it/s][A
 29%|██▉       | 64/221 [00:16<00:48,  3.24it/s][A
 29%|██▉       | 65/221 [00:16<00:47,  3.29it/s][A
 30%|██▉       | 66/221 [00:17<00:55,  2.81it/s][A
 30%|███       | 67/221 [00:17<00:53,  2.90it/s][A
 31%|███       | 68/221 [00:17<00:43,  3.49it/s][A
 31%|███       | 69/221 [00:18<00:53,  2.83it/s][A
 32%|███▏      | 70/221 [00:18<00:47,  3.17it/s][A
 32%|███▏      | 71/221 [00:18<00:44,  3.38it/s][A
 33%|███▎      | 72/221 [00:19<00:43,  3.44it/s][A
 33%|███▎      | 73/221 [00:19<00:39,  3.74it/s][A
 33%|███▎      | 74/221 [00:19<00:35,  4.18it/s][A
 34%|███▍      | 75/221 [00:19<00:40,  3.63it/s][A
 34%|███▍      | 76/221 [00:20<00:39,  3.66it/s][A
 35%|███▍      | 77/221 [00:20<00:45,  3.17it/s][A
 35%|███▌      | 78/221 [00:20<00:42,  3.36it/s][A
 36%|███▌      | 79/221 [00:21<00:49,  2.89it/s][A
 36%|███▌      | 80/221 [00:21<00:43,  3.24it/s][A
 37%|███▋      | 81/221 [00:21<00:38,  3.66it/s][A
 37%|███▋      | 82/221 [00:21<00:38,  3.63it/s][A
 38%|███▊      | 83/221 [00:22<00:43,  3.17it/s][A
 38%|███▊      | 84/221 [00:22<00:39,  3.44it/s][A
 38%|███▊      | 85/221 [00:22<00:33,  4.02it/s][A
 39%|███▉      | 86/221 [00:22<00:36,  3.70it/s][A
 39%|███▉      | 87/221 [00:23<00:39,  3.39it/s][A
 40%|███▉      | 88/221 [00:23<00:41,  3.22it/s][A
 40%|████      | 89/221 [00:23<00:38,  3.41it/s][A
 41%|████      | 90/221 [00:24<00:36,  3.55it/s][A
 41%|████      | 91/221 [00:24<00:32,  4.00it/s][A
 42%|████▏     | 92/221 [00:24<00:34,  3.73it/s][A
 42%|████▏     | 93/221 [00:25<00:36,  3.48it/s][A
 43%|████▎     | 94/221 [00:25<00:37,  3.42it/s][A
 43%|████▎     | 95/221 [00:25<00:31,  3.97it/s][A
 43%|████▎     | 96/221 [00:26<00:41,  2.99it/s][A
 44%|████▍     | 97/221 [00:26<00:38,  3.20it/s][A
 44%|████▍     | 98/221 [00:26<00:47,  2.59it/s][A
 45%|████▍     | 99/221 [00:27<00:46,  2.63it/s][A
 45%|████▌     | 100/221 [00:27<00:41,  2.92it/s][A
 46%|████▌     | 101/221 [00:27<00:37,  3.21it/s][A
 46%|████▌     | 102/221 [00:28<00:45,  2.61it/s][A
 47%|████▋     | 103/221 [00:28<00:37,  3.13it/s][A
 47%|████▋     | 104/221 [00:28<00:37,  3.13it/s][A
 48%|████▊     | 105/221 [00:29<00:39,  2.94it/s][A
 48%|████▊     | 106/221 [00:29<00:36,  3.18it/s][A
 48%|████▊     | 107/221 [00:29<00:34,  3.26it/s][A
 49%|████▉     | 108/221 [00:29<00:31,  3.55it/s][A
 49%|████▉     | 109/221 [00:30<00:28,  3.93it/s][A
 50%|████▉     | 110/221 [00:30<00:33,  3.32it/s][A
 50%|█████     | 111/221 [00:30<00:33,  3.30it/s][A
 51%|█████     | 112/221 [00:31<00:31,  3.46it/s][A
 51%|█████     | 113/221 [00:31<00:25,  4.16it/s][A
 52%|█████▏    | 114/221 [00:31<00:22,  4.85it/s][A
 52%|█████▏    | 115/221 [00:31<00:26,  4.03it/s][A
 52%|█████▏    | 116/221 [00:31<00:27,  3.85it/s][A
 53%|█████▎    | 117/221 [00:32<00:27,  3.76it/s][A
 53%|█████▎    | 118/221 [00:32<00:25,  4.06it/s][A
 54%|█████▍    | 119/221 [00:32<00:28,  3.63it/s][A
 54%|█████▍    | 120/221 [00:33<00:28,  3.53it/s][A
 55%|█████▍    | 121/221 [00:33<00:24,  4.16it/s][A
 55%|█████▌    | 122/221 [00:33<00:23,  4.26it/s][A
 56%|█████▌    | 123/221 [00:33<00:22,  4.45it/s][A
 56%|█████▌    | 124/221 [00:34<00:27,  3.53it/s][A
 57%|█████▋    | 125/221 [00:34<00:29,  3.25it/s][A
 57%|█████▋    | 126/221 [00:34<00:24,  3.84it/s][A
 57%|█████▋    | 127/221 [00:34<00:26,  3.59it/s][A
 58%|█████▊    | 128/221 [00:35<00:26,  3.55it/s][A
 58%|█████▊    | 129/221 [00:35<00:20,  4.40it/s][A
 59%|█████▉    | 130/221 [00:35<00:22,  3.98it/s][A
 59%|█████▉    | 131/221 [00:35<00:20,  4.48it/s][A
 60%|█████▉    | 132/221 [00:36<00:35,  2.53it/s][A
 60%|██████    | 133/221 [00:36<00:33,  2.64it/s][A
 61%|██████    | 134/221 [00:37<00:35,  2.47it/s][A
 61%|██████    | 135/221 [00:37<00:33,  2.55it/s][A
 62%|██████▏   | 136/221 [00:37<00:29,  2.90it/s][A
 62%|██████▏   | 137/221 [00:38<00:25,  3.35it/s][A
 62%|██████▏   | 138/221 [00:38<00:23,  3.57it/s][A
 63%|██████▎   | 139/221 [00:38<00:21,  3.83it/s][A
 63%|██████▎   | 140/221 [00:38<00:20,  3.92it/s][A
 64%|██████▍   | 141/221 [00:39<00:20,  3.91it/s][A
 64%|██████▍   | 142/221 [00:39<00:22,  3.54it/s][A
 65%|██████▍   | 143/221 [00:39<00:23,  3.32it/s][A
 65%|██████▌   | 144/221 [00:40<00:23,  3.21it/s][A
 66%|██████▌   | 145/221 [00:40<00:22,  3.42it/s][A
 67%|██████▋   | 147/221 [00:40<00:16,  4.39it/s][A
 67%|██████▋   | 148/221 [00:40<00:18,  4.05it/s][A
 67%|██████▋   | 149/221 [00:41<00:20,  3.59it/s][A
 68%|██████▊   | 150/221 [00:41<00:19,  3.72it/s][A
 68%|██████▊   | 151/221 [00:41<00:19,  3.61it/s][A
 69%|██████▉   | 152/221 [00:42<00:20,  3.39it/s][A
 69%|██████▉   | 153/221 [00:42<00:16,  4.09it/s][A
 70%|██████▉   | 154/221 [00:42<00:15,  4.42it/s][A
 70%|███████   | 155/221 [00:42<00:16,  4.06it/s][A
 71%|███████   | 156/221 [00:43<00:18,  3.46it/s][A
 71%|███████   | 157/221 [00:43<00:19,  3.23it/s][A
 71%|███████▏  | 158/221 [00:43<00:20,  3.07it/s][A
 72%|███████▏  | 159/221 [00:44<00:17,  3.47it/s][A
 72%|███████▏  | 160/221 [00:44<00:14,  4.18it/s][A
 73%|███████▎  | 161/221 [00:44<00:15,  3.78it/s][A
 73%|███████▎  | 162/221 [00:44<00:14,  4.21it/s][A
 74%|███████▍  | 163/221 [00:45<00:14,  4.07it/s][A
 74%|███████▍  | 164/221 [00:45<00:12,  4.75it/s][A
 75%|███████▍  | 165/221 [00:45<00:12,  4.58it/s][A
 75%|███████▌  | 166/221 [00:45<00:11,  4.77it/s][A
 76%|███████▌  | 167/221 [00:45<00:13,  4.12it/s][A
 76%|███████▌  | 168/221 [00:46<00:12,  4.29it/s][A
 76%|███████▋  | 169/221 [00:46<00:12,  4.24it/s][A
 77%|███████▋  | 170/221 [00:46<00:12,  4.21it/s][A
 77%|███████▋  | 171/221 [00:46<00:11,  4.21it/s][A
 78%|███████▊  | 172/221 [00:47<00:12,  4.06it/s][A
 78%|███████▊  | 173/221 [00:47<00:12,  3.96it/s][A
 79%|███████▊  | 174/221 [00:47<00:12,  3.79it/s][A
 79%|███████▉  | 175/221 [00:48<00:13,  3.34it/s][A
 80%|███████▉  | 176/221 [00:48<00:11,  4.01it/s][A
 80%|████████  | 177/221 [00:48<00:10,  4.24it/s][A
 81%|████████  | 178/221 [00:48<00:10,  4.17it/s][A
 81%|████████  | 179/221 [00:48<00:09,  4.52it/s][A
 81%|████████▏ | 180/221 [00:48<00:08,  4.93it/s][A
 82%|████████▏ | 181/221 [00:49<00:06,  5.77it/s][A
 82%|████████▏ | 182/221 [00:49<00:08,  4.75it/s][A
 83%|████████▎ | 183/221 [00:49<00:09,  3.81it/s][A
 83%|████████▎ | 184/221 [00:50<00:09,  3.71it/s][A
 84%|████████▎ | 185/221 [00:50<00:10,  3.46it/s][A
 84%|████████▍ | 186/221 [00:50<00:11,  3.06it/s][A
 85%|████████▍ | 187/221 [00:51<00:12,  2.66it/s][A
 85%|████████▌ | 188/221 [00:51<00:11,  2.94it/s][A
 86%|████████▌ | 189/221 [00:51<00:09,  3.50it/s][A
 86%|████████▌ | 190/221 [00:52<00:09,  3.18it/s][A
 87%|████████▋ | 192/221 [00:52<00:07,  4.12it/s][A
 87%|████████▋ | 193/221 [00:52<00:07,  3.88it/s][A
 88%|████████▊ | 194/221 [00:52<00:06,  4.11it/s][A
 88%|████████▊ | 195/221 [00:53<00:07,  3.71it/s][A
 89%|████████▊ | 196/221 [00:53<00:07,  3.40it/s][A
 89%|████████▉ | 197/221 [00:53<00:06,  3.53it/s][A
 90%|████████▉ | 198/221 [00:54<00:06,  3.41it/s][A
 90%|█████████ | 199/221 [00:54<00:06,  3.50it/s][A
 90%|█████████ | 200/221 [00:54<00:05,  3.50it/s][A
 91%|█████████ | 201/221 [00:55<00:06,  3.32it/s][A
 91%|█████████▏| 202/221 [00:55<00:06,  3.06it/s][A
 92%|█████████▏| 203/221 [00:55<00:06,  2.81it/s][A
 92%|█████████▏| 204/221 [00:56<00:06,  2.74it/s][A
 93%|█████████▎| 205/221 [00:56<00:05,  3.15it/s][A
 93%|█████████▎| 206/221 [00:56<00:04,  3.07it/s][A
 94%|█████████▎| 207/221 [00:56<00:03,  3.53it/s][A
 94%|█████████▍| 208/221 [00:57<00:04,  3.24it/s][A
 95%|█████████▍| 209/221 [00:57<00:03,  3.49it/s][A
 95%|█████████▌| 210/221 [00:57<00:03,  3.46it/s][A
 95%|█████████▌| 211/221 [00:58<00:02,  3.36it/s][A
 96%|█████████▌| 212/221 [00:58<00:02,  3.63it/s][A
 96%|█████████▋| 213/221 [00:58<00:01,  4.13it/s][A
 97%|█████████▋| 214/221 [00:58<00:01,  3.54it/s][A
 97%|█████████▋| 215/221 [00:59<00:01,  4.18it/s][A
 98%|█████████▊| 216/221 [00:59<00:01,  4.13it/s][A
 98%|█████████▊| 217/221 [00:59<00:01,  3.76it/s][A
 99%|█████████▊| 218/221 [00:59<00:00,  3.98it/s][A
 99%|█████████▉| 219/221 [01:00<00:00,  4.12it/s][A
100%|█████████▉| 220/221 [01:00<00:00,  4.50it/s][A
100%|██████████| 221/221 [01:00<00:00,  4.24it/s][A100%|██████████| 221/221 [01:00<00:00,  3.65it/s]
08/31/2024 22:28:13 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forward=====step 3999--===========

08/31/2024 22:28:13 - INFO - __main__ -   {'area_r1': 11.5, 'area_recall': '11.5/26.9/35.4', 'area_ravg': 24.6}
08/31/2024 22:28:13 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_backard=====step 3999--===========

08/31/2024 22:28:13 - INFO - __main__ -   {'forward_r1': 44.7, 'forward_recall': '44.7/75.9/84.4', 'forward_ravg': 68.3}
08/31/2024 22:28:13 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forw_with_video=====step 3999--===========

08/31/2024 22:28:13 - INFO - __main__ -   {'forward_r1': 61.3, 'forward_recall': '61.3/86.0/90.4', 'forward_ravg': 79.2}
08/31/2024 22:28:13 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itc_tv=====step 3999--===========

08/31/2024 22:28:13 - INFO - __main__ -   {'video_r1': 44.7, 'video_recall': '44.7/76.8/83.9', 'video_ravg': 68.5}
08/31/2024 22:28:13 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itc_tv====history best step: 2999=======

08/31/2024 22:28:13 - INFO - __main__ -   {'video_r1': 46.0, 'video_recall': '46.0/75.3/83.9', 'video_ravg': 68.4}
08/31/2024 22:28:13 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itm_tv=====step 3999--===========

08/31/2024 22:28:13 - INFO - __main__ -   {'video_r1': 57.8, 'video_recall': '57.8/78.1/84.8', 'video_ravg': 73.6}
08/31/2024 22:28:13 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itm_tv====history best step: 3999=======

08/31/2024 22:28:13 - INFO - __main__ -   {'video_r1': 57.8, 'video_recall': '57.8/78.1/84.8', 'video_ravg': 73.6}
08/31/2024 22:28:44 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.3752362728118896, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03504978492856026, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.5854244232177734, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 3.9957103729248047}
 54%|█████▍    | 4000/7431 [4:01:25<52:41:53, 55.29s/it] 54%|█████▍    | 4001/7431 [4:01:28<37:47:01, 39.66s/it] 54%|█████▍    | 4002/7431 [4:01:32<27:22:59, 28.75s/it] 54%|█████▍    | 4003/7431 [4:01:35<20:04:30, 21.08s/it] 54%|█████▍    | 4004/7431 [4:01:38<14:58:02, 15.72s/it] 54%|█████▍    | 4005/7431 [4:01:41<11:25:13, 12.00s/it] 54%|█████▍    | 4006/7431 [4:01:45<8:54:25,  9.36s/it]  54%|█████▍    | 4007/7431 [4:01:48<7:13:19,  7.59s/it] 54%|█████▍    | 4008/7431 [4:01:51<5:58:04,  6.28s/it] 54%|█████▍    | 4009/7431 [4:01:54<5:07:03,  5.38s/it] 54%|█████▍    | 4010/7431 [4:01:58<4:27:35,  4.69s/it] 54%|█████▍    | 4011/7431 [4:02:01<4:03:10,  4.27s/it] 54%|█████▍    | 4012/7431 [4:02:04<3:46:38,  3.98s/it] 54%|█████▍    | 4013/7431 [4:02:07<3:31:39,  3.72s/it] 54%|█████▍    | 4014/7431 [4:02:10<3:23:49,  3.58s/it] 54%|█████▍    | 4015/7431 [4:02:14<3:18:49,  3.49s/it] 54%|█████▍    | 4016/7431 [4:02:17<3:14:09,  3.41s/it] 54%|█████▍    | 4017/7431 [4:02:20<3:09:56,  3.34s/it] 54%|█████▍    | 4018/7431 [4:02:24<3:10:20,  3.35s/it] 54%|█████▍    | 4019/7431 [4:02:27<3:09:36,  3.33s/it] 54%|█████▍    | 4020/7431 [4:02:30<3:08:31,  3.32s/it] 54%|█████▍    | 4021/7431 [4:02:33<3:07:05,  3.29s/it] 54%|█████▍    | 4022/7431 [4:02:37<3:07:43,  3.30s/it] 54%|█████▍    | 4023/7431 [4:02:40<3:04:58,  3.26s/it] 54%|█████▍    | 4024/7431 [4:02:43<3:03:18,  3.23s/it] 54%|█████▍    | 4025/7431 [4:02:46<3:07:14,  3.30s/it] 54%|█████▍    | 4026/7431 [4:02:50<3:06:00,  3.28s/it] 54%|█████▍    | 4027/7431 [4:02:53<3:09:46,  3.34s/it] 54%|█████▍    | 4028/7431 [4:02:56<3:06:12,  3.28s/it] 54%|█████▍    | 4029/7431 [4:03:00<3:07:51,  3.31s/it] 54%|█████▍    | 4030/7431 [4:03:03<3:04:45,  3.26s/it] 54%|█████▍    | 4031/7431 [4:03:06<3:07:26,  3.31s/it] 54%|█████▍    | 4032/7431 [4:03:10<3:08:42,  3.33s/it] 54%|█████▍    | 4033/7431 [4:03:13<3:05:59,  3.28s/it] 54%|█████▍    | 4034/7431 [4:03:16<3:03:46,  3.25s/it] 54%|█████▍    | 4035/7431 [4:03:19<3:02:10,  3.22s/it] 54%|█████▍    | 4036/7431 [4:03:22<3:01:45,  3.21s/it] 54%|█████▍    | 4037/7431 [4:03:26<3:05:00,  3.27s/it] 54%|█████▍    | 4038/7431 [4:03:29<3:04:47,  3.27s/it] 54%|█████▍    | 4039/7431 [4:03:32<3:06:21,  3.30s/it] 54%|█████▍    | 4040/7431 [4:03:36<3:08:41,  3.34s/it] 54%|█████▍    | 4041/7431 [4:03:39<3:07:41,  3.32s/it] 54%|█████▍    | 4042/7431 [4:03:42<3:05:25,  3.28s/it] 54%|█████▍    | 4043/7431 [4:03:45<3:03:17,  3.25s/it] 54%|█████▍    | 4044/7431 [4:03:49<3:04:35,  3.27s/it] 54%|█████▍    | 4045/7431 [4:03:52<3:04:50,  3.28s/it] 54%|█████▍    | 4046/7431 [4:03:55<3:02:01,  3.23s/it] 54%|█████▍    | 4047/7431 [4:03:59<3:08:46,  3.35s/it] 54%|█████▍    | 4048/7431 [4:04:02<3:07:48,  3.33s/it] 54%|█████▍    | 4049/7431 [4:04:05<3:08:51,  3.35s/it]08/31/2024 22:31:27 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.8426676988601685, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.055651478469371796, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.699805736541748, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.598124980926514}
 55%|█████▍    | 4050/7431 [4:04:09<3:09:29,  3.36s/it] 55%|█████▍    | 4051/7431 [4:04:12<3:08:33,  3.35s/it] 55%|█████▍    | 4052/7431 [4:04:15<3:06:23,  3.31s/it] 55%|█████▍    | 4053/7431 [4:04:19<3:08:57,  3.36s/it] 55%|█████▍    | 4054/7431 [4:04:22<3:05:37,  3.30s/it] 55%|█████▍    | 4055/7431 [4:04:25<3:05:05,  3.29s/it] 55%|█████▍    | 4056/7431 [4:04:28<3:02:18,  3.24s/it] 55%|█████▍    | 4057/7431 [4:04:32<3:02:58,  3.25s/it] 55%|█████▍    | 4058/7431 [4:04:35<3:02:59,  3.26s/it] 55%|█████▍    | 4059/7431 [4:04:38<3:04:18,  3.28s/it] 55%|█████▍    | 4060/7431 [4:04:42<3:05:27,  3.30s/it] 55%|█████▍    | 4061/7431 [4:04:45<3:07:29,  3.34s/it] 55%|█████▍    | 4062/7431 [4:04:48<3:07:10,  3.33s/it] 55%|█████▍    | 4063/7431 [4:04:52<3:04:03,  3.28s/it] 55%|█████▍    | 4064/7431 [4:04:55<3:05:44,  3.31s/it] 55%|█████▍    | 4065/7431 [4:04:58<3:04:11,  3.28s/it] 55%|█████▍    | 4066/7431 [4:05:01<3:04:43,  3.29s/it] 55%|█████▍    | 4067/7431 [4:05:05<3:06:25,  3.32s/it] 55%|█████▍    | 4068/7431 [4:05:08<3:03:36,  3.28s/it] 55%|█████▍    | 4069/7431 [4:05:12<3:07:06,  3.34s/it] 55%|█████▍    | 4070/7431 [4:05:15<3:04:54,  3.30s/it] 55%|█████▍    | 4071/7431 [4:05:18<3:08:36,  3.37s/it] 55%|█████▍    | 4072/7431 [4:05:22<3:08:23,  3.37s/it] 55%|█████▍    | 4073/7431 [4:05:25<3:10:09,  3.40s/it] 55%|█████▍    | 4074/7431 [4:05:28<3:08:44,  3.37s/it] 55%|█████▍    | 4075/7431 [4:05:32<3:06:16,  3.33s/it] 55%|█████▍    | 4076/7431 [4:05:35<3:03:18,  3.28s/it] 55%|█████▍    | 4077/7431 [4:05:38<3:05:42,  3.32s/it] 55%|█████▍    | 4078/7431 [4:05:42<3:04:56,  3.31s/it] 55%|█████▍    | 4079/7431 [4:05:45<3:03:17,  3.28s/it] 55%|█████▍    | 4080/7431 [4:05:48<3:04:18,  3.30s/it] 55%|█████▍    | 4081/7431 [4:05:51<3:05:38,  3.32s/it] 55%|█████▍    | 4082/7431 [4:05:55<3:03:05,  3.28s/it] 55%|█████▍    | 4083/7431 [4:05:58<3:03:36,  3.29s/it] 55%|█████▍    | 4084/7431 [4:06:01<3:02:45,  3.28s/it] 55%|█████▍    | 4085/7431 [4:06:04<3:00:42,  3.24s/it] 55%|█████▍    | 4086/7431 [4:06:08<3:01:18,  3.25s/it] 55%|█████▍    | 4087/7431 [4:06:11<3:03:43,  3.30s/it] 55%|█████▌    | 4088/7431 [4:06:14<3:02:49,  3.28s/it] 55%|█████▌    | 4089/7431 [4:06:18<3:04:15,  3.31s/it] 55%|█████▌    | 4090/7431 [4:06:21<3:05:20,  3.33s/it] 55%|█████▌    | 4091/7431 [4:06:24<3:02:43,  3.28s/it] 55%|█████▌    | 4092/7431 [4:06:27<2:59:39,  3.23s/it] 55%|█████▌    | 4093/7431 [4:06:31<2:59:46,  3.23s/it] 55%|█████▌    | 4094/7431 [4:06:34<3:01:10,  3.26s/it] 55%|█████▌    | 4095/7431 [4:06:37<3:00:37,  3.25s/it] 55%|█████▌    | 4096/7431 [4:06:40<2:59:31,  3.23s/it] 55%|█████▌    | 4097/7431 [4:06:43<2:57:47,  3.20s/it] 55%|█████▌    | 4098/7431 [4:06:47<3:00:43,  3.25s/it] 55%|█████▌    | 4099/7431 [4:06:50<2:59:09,  3.23s/it]08/31/2024 22:34:12 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.5582047700881958, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.049384359270334244, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7017650604248047, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.309354305267334}
 55%|█████▌    | 4100/7431 [4:06:53<2:58:54,  3.22s/it] 55%|█████▌    | 4101/7431 [4:06:56<3:00:25,  3.25s/it] 55%|█████▌    | 4102/7431 [4:07:00<2:59:01,  3.23s/it] 55%|█████▌    | 4103/7431 [4:07:03<2:57:24,  3.20s/it] 55%|█████▌    | 4104/7431 [4:07:06<3:01:37,  3.28s/it] 55%|█████▌    | 4105/7431 [4:07:10<3:05:55,  3.35s/it] 55%|█████▌    | 4106/7431 [4:07:13<3:04:29,  3.33s/it] 55%|█████▌    | 4107/7431 [4:07:16<3:02:23,  3.29s/it] 55%|█████▌    | 4108/7431 [4:07:20<3:02:30,  3.30s/it] 55%|█████▌    | 4109/7431 [4:07:23<3:00:18,  3.26s/it] 55%|█████▌    | 4110/7431 [4:07:26<2:59:32,  3.24s/it] 55%|█████▌    | 4111/7431 [4:07:29<3:00:40,  3.27s/it] 55%|█████▌    | 4112/7431 [4:07:33<3:01:43,  3.29s/it] 55%|█████▌    | 4113/7431 [4:07:36<3:00:58,  3.27s/it] 55%|█████▌    | 4114/7431 [4:07:39<3:02:27,  3.30s/it] 55%|█████▌    | 4115/7431 [4:07:42<3:02:42,  3.31s/it] 55%|█████▌    | 4116/7431 [4:07:46<3:01:54,  3.29s/it] 55%|█████▌    | 4117/7431 [4:07:49<3:01:49,  3.29s/it] 55%|█████▌    | 4118/7431 [4:07:52<2:59:20,  3.25s/it] 55%|█████▌    | 4119/7431 [4:07:55<2:58:02,  3.23s/it] 55%|█████▌    | 4120/7431 [4:07:59<3:00:23,  3.27s/it] 55%|█████▌    | 4121/7431 [4:08:02<3:00:31,  3.27s/it] 55%|█████▌    | 4122/7431 [4:08:05<3:01:22,  3.29s/it] 55%|█████▌    | 4123/7431 [4:08:09<3:02:35,  3.31s/it] 55%|█████▌    | 4124/7431 [4:08:12<3:01:35,  3.29s/it] 56%|█████▌    | 4125/7431 [4:08:15<2:59:19,  3.25s/it] 56%|█████▌    | 4126/7431 [4:08:18<2:59:56,  3.27s/it] 56%|█████▌    | 4127/7431 [4:08:22<3:02:07,  3.31s/it] 56%|█████▌    | 4128/7431 [4:08:25<3:01:24,  3.30s/it] 56%|█████▌    | 4129/7431 [4:08:28<3:00:02,  3.27s/it] 56%|█████▌    | 4130/7431 [4:08:31<2:57:37,  3.23s/it] 56%|█████▌    | 4131/7431 [4:08:35<2:58:21,  3.24s/it] 56%|█████▌    | 4132/7431 [4:08:38<2:58:42,  3.25s/it] 56%|█████▌    | 4133/7431 [4:08:41<3:02:16,  3.32s/it] 56%|█████▌    | 4134/7431 [4:08:45<3:02:50,  3.33s/it] 56%|█████▌    | 4135/7431 [4:08:48<3:03:55,  3.35s/it] 56%|█████▌    | 4136/7431 [4:08:51<3:02:59,  3.33s/it] 56%|█████▌    | 4137/7431 [4:08:55<3:00:52,  3.29s/it] 56%|█████▌    | 4138/7431 [4:08:58<3:00:01,  3.28s/it] 56%|█████▌    | 4139/7431 [4:09:01<3:00:53,  3.30s/it] 56%|█████▌    | 4140/7431 [4:09:05<3:01:55,  3.32s/it] 56%|█████▌    | 4141/7431 [4:09:08<2:59:53,  3.28s/it] 56%|█████▌    | 4142/7431 [4:09:11<2:58:46,  3.26s/it] 56%|█████▌    | 4143/7431 [4:09:14<2:58:31,  3.26s/it] 56%|█████▌    | 4144/7431 [4:09:18<3:00:17,  3.29s/it] 56%|█████▌    | 4145/7431 [4:09:21<3:01:27,  3.31s/it] 56%|█████▌    | 4146/7431 [4:09:24<2:58:43,  3.26s/it] 56%|█████▌    | 4147/7431 [4:09:27<2:57:20,  3.24s/it] 56%|█████▌    | 4148/7431 [4:09:31<2:56:15,  3.22s/it] 56%|█████▌    | 4149/7431 [4:09:34<3:01:11,  3.31s/it]08/31/2024 22:36:56 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.623202919960022, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04162173718214035, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.668593168258667, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.333417892456055}
 56%|█████▌    | 4150/7431 [4:09:37<3:00:21,  3.30s/it] 56%|█████▌    | 4151/7431 [4:09:40<2:57:59,  3.26s/it] 56%|█████▌    | 4152/7431 [4:09:44<3:01:28,  3.32s/it] 56%|█████▌    | 4153/7431 [4:09:47<3:00:46,  3.31s/it] 56%|█████▌    | 4154/7431 [4:09:50<2:57:17,  3.25s/it] 56%|█████▌    | 4155/7431 [4:09:54<3:03:03,  3.35s/it] 56%|█████▌    | 4156/7431 [4:09:57<2:59:26,  3.29s/it] 56%|█████▌    | 4157/7431 [4:10:00<2:58:46,  3.28s/it] 56%|█████▌    | 4158/7431 [4:10:03<2:56:38,  3.24s/it] 56%|█████▌    | 4159/7431 [4:10:07<2:58:28,  3.27s/it] 56%|█████▌    | 4160/7431 [4:10:10<3:00:08,  3.30s/it] 56%|█████▌    | 4161/7431 [4:10:13<2:59:25,  3.29s/it] 56%|█████▌    | 4162/7431 [4:10:17<3:00:25,  3.31s/it] 56%|█████▌    | 4163/7431 [4:10:20<2:57:33,  3.26s/it] 56%|█████▌    | 4164/7431 [4:10:23<2:56:55,  3.25s/it] 56%|█████▌    | 4165/7431 [4:10:26<2:57:20,  3.26s/it] 56%|█████▌    | 4166/7431 [4:10:30<2:57:21,  3.26s/it] 56%|█████▌    | 4167/7431 [4:10:33<2:57:36,  3.26s/it] 56%|█████▌    | 4168/7431 [4:10:36<2:59:57,  3.31s/it] 56%|█████▌    | 4169/7431 [4:10:40<2:56:28,  3.25s/it] 56%|█████▌    | 4170/7431 [4:10:43<2:55:55,  3.24s/it] 56%|█████▌    | 4171/7431 [4:10:46<2:55:16,  3.23s/it] 56%|█████▌    | 4172/7431 [4:10:49<2:56:49,  3.26s/it] 56%|█████▌    | 4173/7431 [4:10:53<2:59:32,  3.31s/it] 56%|█████▌    | 4174/7431 [4:10:56<2:59:57,  3.32s/it] 56%|█████▌    | 4175/7431 [4:10:59<3:00:14,  3.32s/it] 56%|█████▌    | 4176/7431 [4:11:03<2:58:14,  3.29s/it] 56%|█████▌    | 4177/7431 [4:11:06<2:57:05,  3.27s/it] 56%|█████▌    | 4178/7431 [4:11:09<2:55:48,  3.24s/it] 56%|█████▌    | 4179/7431 [4:11:12<2:56:24,  3.25s/it] 56%|█████▋    | 4180/7431 [4:11:16<2:58:18,  3.29s/it] 56%|█████▋    | 4181/7431 [4:11:19<2:58:43,  3.30s/it] 56%|█████▋    | 4182/7431 [4:11:22<2:58:24,  3.29s/it] 56%|█████▋    | 4183/7431 [4:11:25<2:57:43,  3.28s/it] 56%|█████▋    | 4184/7431 [4:11:29<2:57:27,  3.28s/it] 56%|█████▋    | 4185/7431 [4:11:32<2:55:49,  3.25s/it] 56%|█████▋    | 4186/7431 [4:11:35<2:58:06,  3.29s/it] 56%|█████▋    | 4187/7431 [4:11:39<3:00:10,  3.33s/it] 56%|█████▋    | 4188/7431 [4:11:42<2:58:30,  3.30s/it] 56%|█████▋    | 4189/7431 [4:11:45<2:56:49,  3.27s/it] 56%|█████▋    | 4190/7431 [4:11:48<2:56:47,  3.27s/it] 56%|█████▋    | 4191/7431 [4:11:52<2:54:23,  3.23s/it] 56%|█████▋    | 4192/7431 [4:11:55<2:53:22,  3.21s/it] 56%|█████▋    | 4193/7431 [4:11:58<2:53:44,  3.22s/it] 56%|█████▋    | 4194/7431 [4:12:01<2:55:41,  3.26s/it] 56%|█████▋    | 4195/7431 [4:12:05<2:56:58,  3.28s/it] 56%|█████▋    | 4196/7431 [4:12:08<2:53:54,  3.23s/it] 56%|█████▋    | 4197/7431 [4:12:11<2:55:20,  3.25s/it] 56%|█████▋    | 4198/7431 [4:12:14<2:56:45,  3.28s/it] 57%|█████▋    | 4199/7431 [4:12:18<3:02:15,  3.38s/it]08/31/2024 22:39:40 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.376264214515686, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.041920602321624756, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6393685340881348, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.057553291320801}
 57%|█████▋    | 4200/7431 [4:12:21<2:58:31,  3.32s/it] 57%|█████▋    | 4201/7431 [4:12:24<2:57:16,  3.29s/it] 57%|█████▋    | 4202/7431 [4:12:28<2:57:16,  3.29s/it] 57%|█████▋    | 4203/7431 [4:12:31<2:56:00,  3.27s/it] 57%|█████▋    | 4204/7431 [4:12:34<2:54:54,  3.25s/it] 57%|█████▋    | 4205/7431 [4:12:38<2:58:00,  3.31s/it] 57%|█████▋    | 4206/7431 [4:12:41<2:56:50,  3.29s/it] 57%|█████▋    | 4207/7431 [4:12:44<2:56:39,  3.29s/it] 57%|█████▋    | 4208/7431 [4:12:48<2:59:42,  3.35s/it] 57%|█████▋    | 4209/7431 [4:12:51<2:58:36,  3.33s/it] 57%|█████▋    | 4210/7431 [4:12:54<2:57:09,  3.30s/it] 57%|█████▋    | 4211/7431 [4:12:57<2:55:34,  3.27s/it] 57%|█████▋    | 4212/7431 [4:13:01<2:55:30,  3.27s/it] 57%|█████▋    | 4213/7431 [4:13:04<2:55:53,  3.28s/it] 57%|█████▋    | 4214/7431 [4:13:07<2:52:44,  3.22s/it] 57%|█████▋    | 4215/7431 [4:13:10<2:55:16,  3.27s/it] 57%|█████▋    | 4216/7431 [4:13:14<2:55:22,  3.27s/it] 57%|█████▋    | 4217/7431 [4:13:17<2:53:43,  3.24s/it] 57%|█████▋    | 4218/7431 [4:13:20<2:54:41,  3.26s/it] 57%|█████▋    | 4219/7431 [4:13:24<2:57:22,  3.31s/it] 57%|█████▋    | 4220/7431 [4:13:27<2:55:27,  3.28s/it] 57%|█████▋    | 4221/7431 [4:13:30<2:54:03,  3.25s/it] 57%|█████▋    | 4222/7431 [4:13:33<2:54:36,  3.26s/it] 57%|█████▋    | 4223/7431 [4:13:37<2:58:23,  3.34s/it] 57%|█████▋    | 4224/7431 [4:13:40<2:56:10,  3.30s/it] 57%|█████▋    | 4225/7431 [4:13:43<2:53:46,  3.25s/it] 57%|█████▋    | 4226/7431 [4:13:47<2:55:30,  3.29s/it] 57%|█████▋    | 4227/7431 [4:13:50<2:53:08,  3.24s/it] 57%|█████▋    | 4228/7431 [4:13:53<2:51:03,  3.20s/it] 57%|█████▋    | 4229/7431 [4:13:56<2:52:02,  3.22s/it] 57%|█████▋    | 4230/7431 [4:14:00<2:59:41,  3.37s/it] 57%|█████▋    | 4231/7431 [4:14:03<2:59:34,  3.37s/it] 57%|█████▋    | 4232/7431 [4:14:06<2:57:06,  3.32s/it] 57%|█████▋    | 4233/7431 [4:14:10<2:56:37,  3.31s/it] 57%|█████▋    | 4234/7431 [4:14:13<2:55:32,  3.29s/it] 57%|█████▋    | 4235/7431 [4:14:16<2:55:12,  3.29s/it] 57%|█████▋    | 4236/7431 [4:14:19<2:54:23,  3.27s/it] 57%|█████▋    | 4237/7431 [4:14:23<2:52:26,  3.24s/it] 57%|█████▋    | 4238/7431 [4:14:26<2:50:50,  3.21s/it] 57%|█████▋    | 4239/7431 [4:14:29<2:52:25,  3.24s/it] 57%|█████▋    | 4240/7431 [4:14:32<2:52:58,  3.25s/it] 57%|█████▋    | 4241/7431 [4:14:36<2:54:35,  3.28s/it] 57%|█████▋    | 4242/7431 [4:14:39<2:55:39,  3.30s/it] 57%|█████▋    | 4243/7431 [4:14:42<2:56:07,  3.31s/it] 57%|█████▋    | 4244/7431 [4:14:45<2:53:46,  3.27s/it] 57%|█████▋    | 4245/7431 [4:14:49<2:52:18,  3.24s/it] 57%|█████▋    | 4246/7431 [4:14:52<2:53:36,  3.27s/it] 57%|█████▋    | 4247/7431 [4:14:55<2:53:33,  3.27s/it] 57%|█████▋    | 4248/7431 [4:14:58<2:51:31,  3.23s/it] 57%|█████▋    | 4249/7431 [4:15:02<2:52:18,  3.25s/it]08/31/2024 22:42:24 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.6894270181655884, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04103780537843704, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.710801124572754, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.441266059875488}
 57%|█████▋    | 4250/7431 [4:15:05<2:54:35,  3.29s/it] 57%|█████▋    | 4251/7431 [4:15:08<2:54:00,  3.28s/it] 57%|█████▋    | 4252/7431 [4:15:12<2:53:43,  3.28s/it] 57%|█████▋    | 4253/7431 [4:15:15<2:52:17,  3.25s/it] 57%|█████▋    | 4254/7431 [4:15:18<2:53:33,  3.28s/it] 57%|█████▋    | 4255/7431 [4:15:21<2:52:53,  3.27s/it] 57%|█████▋    | 4256/7431 [4:15:25<2:55:28,  3.32s/it] 57%|█████▋    | 4257/7431 [4:15:28<2:53:22,  3.28s/it] 57%|█████▋    | 4258/7431 [4:15:31<2:50:00,  3.21s/it] 57%|█████▋    | 4259/7431 [4:15:34<2:49:49,  3.21s/it] 57%|█████▋    | 4260/7431 [4:15:38<2:50:43,  3.23s/it] 57%|█████▋    | 4261/7431 [4:15:41<2:48:27,  3.19s/it] 57%|█████▋    | 4262/7431 [4:15:44<2:49:15,  3.20s/it] 57%|█████▋    | 4263/7431 [4:15:47<2:54:57,  3.31s/it] 57%|█████▋    | 4264/7431 [4:15:51<2:52:31,  3.27s/it] 57%|█████▋    | 4265/7431 [4:15:54<2:49:59,  3.22s/it] 57%|█████▋    | 4266/7431 [4:15:57<2:51:40,  3.25s/it] 57%|█████▋    | 4267/7431 [4:16:00<2:53:20,  3.29s/it] 57%|█████▋    | 4268/7431 [4:16:04<2:53:32,  3.29s/it] 57%|█████▋    | 4269/7431 [4:16:07<2:55:03,  3.32s/it] 57%|█████▋    | 4270/7431 [4:16:10<2:54:00,  3.30s/it] 57%|█████▋    | 4271/7431 [4:16:14<2:54:48,  3.32s/it] 57%|█████▋    | 4272/7431 [4:16:17<2:54:42,  3.32s/it] 58%|█████▊    | 4273/7431 [4:16:20<2:54:35,  3.32s/it] 58%|█████▊    | 4274/7431 [4:16:24<2:52:47,  3.28s/it] 58%|█████▊    | 4275/7431 [4:16:27<2:53:37,  3.30s/it] 58%|█████▊    | 4276/7431 [4:16:30<2:52:59,  3.29s/it] 58%|█████▊    | 4277/7431 [4:16:33<2:51:48,  3.27s/it] 58%|█████▊    | 4278/7431 [4:16:37<2:52:14,  3.28s/it] 58%|█████▊    | 4279/7431 [4:16:40<2:50:42,  3.25s/it] 58%|█████▊    | 4280/7431 [4:16:43<2:50:14,  3.24s/it] 58%|█████▊    | 4281/7431 [4:16:46<2:50:15,  3.24s/it] 58%|█████▊    | 4282/7431 [4:16:50<2:50:44,  3.25s/it] 58%|█████▊    | 4283/7431 [4:16:53<2:54:24,  3.32s/it] 58%|█████▊    | 4284/7431 [4:16:56<2:50:20,  3.25s/it] 58%|█████▊    | 4285/7431 [4:16:59<2:51:06,  3.26s/it] 58%|█████▊    | 4286/7431 [4:17:03<2:53:07,  3.30s/it] 58%|█████▊    | 4287/7431 [4:17:06<2:55:08,  3.34s/it] 58%|█████▊    | 4288/7431 [4:17:10<2:53:21,  3.31s/it] 58%|█████▊    | 4289/7431 [4:17:13<2:53:44,  3.32s/it] 58%|█████▊    | 4290/7431 [4:17:16<2:54:32,  3.33s/it] 58%|█████▊    | 4291/7431 [4:17:20<2:53:09,  3.31s/it] 58%|█████▊    | 4292/7431 [4:17:23<2:51:15,  3.27s/it] 58%|█████▊    | 4293/7431 [4:17:26<2:49:49,  3.25s/it] 58%|█████▊    | 4294/7431 [4:17:29<2:51:17,  3.28s/it] 58%|█████▊    | 4295/7431 [4:17:32<2:49:01,  3.23s/it] 58%|█████▊    | 4296/7431 [4:17:35<2:47:02,  3.20s/it] 58%|█████▊    | 4297/7431 [4:17:39<2:49:58,  3.25s/it] 58%|█████▊    | 4298/7431 [4:17:42<2:48:13,  3.22s/it] 58%|█████▊    | 4299/7431 [4:17:45<2:47:42,  3.21s/it]08/31/2024 22:45:07 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.7028584480285645, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.049559127539396286, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7126705646514893, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.465087890625}
 58%|█████▊    | 4300/7431 [4:17:49<2:50:13,  3.26s/it] 58%|█████▊    | 4301/7431 [4:17:52<2:47:58,  3.22s/it] 58%|█████▊    | 4302/7431 [4:17:55<2:48:14,  3.23s/it] 58%|█████▊    | 4303/7431 [4:17:58<2:48:00,  3.22s/it] 58%|█████▊    | 4304/7431 [4:18:01<2:48:40,  3.24s/it] 58%|█████▊    | 4305/7431 [4:18:05<2:50:59,  3.28s/it] 58%|█████▊    | 4306/7431 [4:18:08<2:49:55,  3.26s/it] 58%|█████▊    | 4307/7431 [4:18:11<2:50:37,  3.28s/it] 58%|█████▊    | 4308/7431 [4:18:15<2:50:37,  3.28s/it] 58%|█████▊    | 4309/7431 [4:18:18<2:51:18,  3.29s/it] 58%|█████▊    | 4310/7431 [4:18:21<2:49:35,  3.26s/it] 58%|█████▊    | 4311/7431 [4:18:24<2:47:55,  3.23s/it] 58%|█████▊    | 4312/7431 [4:18:28<2:49:53,  3.27s/it] 58%|█████▊    | 4313/7431 [4:18:31<2:50:54,  3.29s/it] 58%|█████▊    | 4314/7431 [4:18:34<2:49:31,  3.26s/it] 58%|█████▊    | 4315/7431 [4:18:38<2:51:06,  3.29s/it] 58%|█████▊    | 4316/7431 [4:18:41<2:51:51,  3.31s/it] 58%|█████▊    | 4317/7431 [4:18:44<2:50:08,  3.28s/it] 58%|█████▊    | 4318/7431 [4:18:47<2:47:21,  3.23s/it] 58%|█████▊    | 4319/7431 [4:18:50<2:47:27,  3.23s/it] 58%|█████▊    | 4320/7431 [4:18:54<2:46:30,  3.21s/it] 58%|█████▊    | 4321/7431 [4:18:57<2:45:25,  3.19s/it] 58%|█████▊    | 4322/7431 [4:19:00<2:49:21,  3.27s/it] 58%|█████▊    | 4323/7431 [4:19:04<2:52:22,  3.33s/it] 58%|█████▊    | 4324/7431 [4:19:07<2:50:20,  3.29s/it] 58%|█████▊    | 4325/7431 [4:19:10<2:48:12,  3.25s/it] 58%|█████▊    | 4326/7431 [4:19:13<2:47:26,  3.24s/it] 58%|█████▊    | 4327/7431 [4:19:16<2:45:33,  3.20s/it] 58%|█████▊    | 4328/7431 [4:19:20<2:45:00,  3.19s/it] 58%|█████▊    | 4329/7431 [4:19:23<2:48:12,  3.25s/it] 58%|█████▊    | 4330/7431 [4:19:26<2:45:19,  3.20s/it] 58%|█████▊    | 4331/7431 [4:19:29<2:44:13,  3.18s/it] 58%|█████▊    | 4332/7431 [4:19:32<2:46:29,  3.22s/it] 58%|█████▊    | 4333/7431 [4:19:36<2:46:45,  3.23s/it] 58%|█████▊    | 4334/7431 [4:19:39<2:47:37,  3.25s/it] 58%|█████▊    | 4335/7431 [4:19:42<2:47:32,  3.25s/it] 58%|█████▊    | 4336/7431 [4:19:45<2:46:32,  3.23s/it] 58%|█████▊    | 4337/7431 [4:19:49<2:46:27,  3.23s/it] 58%|█████▊    | 4338/7431 [4:19:52<2:44:47,  3.20s/it] 58%|█████▊    | 4339/7431 [4:19:55<2:45:00,  3.20s/it] 58%|█████▊    | 4340/7431 [4:19:58<2:47:17,  3.25s/it] 58%|█████▊    | 4341/7431 [4:20:02<2:47:25,  3.25s/it] 58%|█████▊    | 4342/7431 [4:20:05<2:47:29,  3.25s/it] 58%|█████▊    | 4343/7431 [4:20:08<2:46:42,  3.24s/it] 58%|█████▊    | 4344/7431 [4:20:11<2:48:07,  3.27s/it] 58%|█████▊    | 4345/7431 [4:20:15<2:47:24,  3.25s/it] 58%|█████▊    | 4346/7431 [4:20:18<2:46:13,  3.23s/it] 58%|█████▊    | 4347/7431 [4:20:21<2:47:38,  3.26s/it] 59%|█████▊    | 4348/7431 [4:20:24<2:46:26,  3.24s/it] 59%|█████▊    | 4349/7431 [4:20:28<2:47:43,  3.27s/it]08/31/2024 22:47:49 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.6805860996246338, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04695460572838783, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7417869567871094, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.469327926635742}
 59%|█████▊    | 4350/7431 [4:20:31<2:47:43,  3.27s/it] 59%|█████▊    | 4351/7431 [4:20:34<2:46:40,  3.25s/it] 59%|█████▊    | 4352/7431 [4:20:37<2:48:28,  3.28s/it] 59%|█████▊    | 4353/7431 [4:20:41<2:47:57,  3.27s/it] 59%|█████▊    | 4354/7431 [4:20:44<2:46:51,  3.25s/it] 59%|█████▊    | 4355/7431 [4:20:47<2:46:30,  3.25s/it] 59%|█████▊    | 4356/7431 [4:20:50<2:45:59,  3.24s/it] 59%|█████▊    | 4357/7431 [4:20:54<2:47:11,  3.26s/it] 59%|█████▊    | 4358/7431 [4:20:57<2:47:09,  3.26s/it] 59%|█████▊    | 4359/7431 [4:21:00<2:47:28,  3.27s/it] 59%|█████▊    | 4360/7431 [4:21:04<2:48:09,  3.29s/it] 59%|█████▊    | 4361/7431 [4:21:07<2:47:29,  3.27s/it] 59%|█████▊    | 4362/7431 [4:21:10<2:48:58,  3.30s/it] 59%|█████▊    | 4363/7431 [4:21:13<2:48:01,  3.29s/it] 59%|█████▊    | 4364/7431 [4:21:17<2:50:56,  3.34s/it] 59%|█████▊    | 4365/7431 [4:21:20<2:48:41,  3.30s/it] 59%|█████▉    | 4366/7431 [4:21:23<2:48:58,  3.31s/it] 59%|█████▉    | 4367/7431 [4:21:27<2:49:35,  3.32s/it] 59%|█████▉    | 4368/7431 [4:21:30<2:49:13,  3.31s/it] 59%|█████▉    | 4369/7431 [4:21:33<2:46:15,  3.26s/it] 59%|█████▉    | 4370/7431 [4:21:37<2:47:44,  3.29s/it] 59%|█████▉    | 4371/7431 [4:21:40<2:50:26,  3.34s/it] 59%|█████▉    | 4372/7431 [4:21:43<2:49:15,  3.32s/it] 59%|█████▉    | 4373/7431 [4:21:46<2:46:31,  3.27s/it] 59%|█████▉    | 4374/7431 [4:21:50<2:45:07,  3.24s/it] 59%|█████▉    | 4375/7431 [4:21:53<2:46:47,  3.27s/it] 59%|█████▉    | 4376/7431 [4:21:56<2:45:44,  3.26s/it] 59%|█████▉    | 4377/7431 [4:21:59<2:44:06,  3.22s/it] 59%|█████▉    | 4378/7431 [4:22:03<2:44:20,  3.23s/it] 59%|█████▉    | 4379/7431 [4:22:06<2:46:03,  3.26s/it] 59%|█████▉    | 4380/7431 [4:22:09<2:43:51,  3.22s/it] 59%|█████▉    | 4381/7431 [4:22:12<2:45:56,  3.26s/it] 59%|█████▉    | 4382/7431 [4:22:16<2:47:07,  3.29s/it] 59%|█████▉    | 4383/7431 [4:22:19<2:44:32,  3.24s/it] 59%|█████▉    | 4384/7431 [4:22:22<2:43:02,  3.21s/it] 59%|█████▉    | 4385/7431 [4:22:25<2:44:33,  3.24s/it] 59%|█████▉    | 4386/7431 [4:22:29<2:50:46,  3.36s/it] 59%|█████▉    | 4387/7431 [4:22:32<2:48:31,  3.32s/it] 59%|█████▉    | 4388/7431 [4:22:35<2:45:21,  3.26s/it] 59%|█████▉    | 4389/7431 [4:22:39<2:47:23,  3.30s/it] 59%|█████▉    | 4390/7431 [4:22:42<2:49:43,  3.35s/it] 59%|█████▉    | 4391/7431 [4:22:45<2:48:25,  3.32s/it] 59%|█████▉    | 4392/7431 [4:22:49<2:44:49,  3.25s/it] 59%|█████▉    | 4393/7431 [4:22:52<2:45:02,  3.26s/it] 59%|█████▉    | 4394/7431 [4:22:55<2:44:59,  3.26s/it] 59%|█████▉    | 4395/7431 [4:22:59<2:47:53,  3.32s/it] 59%|█████▉    | 4396/7431 [4:23:02<2:47:33,  3.31s/it] 59%|█████▉    | 4397/7431 [4:23:05<2:46:24,  3.29s/it] 59%|█████▉    | 4398/7431 [4:23:08<2:43:59,  3.24s/it] 59%|█████▉    | 4399/7431 [4:23:11<2:42:49,  3.22s/it]08/31/2024 22:50:33 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.5410306453704834, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04634842276573181, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.642765760421753, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.23014497756958}
 59%|█████▉    | 4400/7431 [4:23:15<2:43:06,  3.23s/it] 59%|█████▉    | 4401/7431 [4:23:18<2:44:49,  3.26s/it] 59%|█████▉    | 4402/7431 [4:23:21<2:44:44,  3.26s/it] 59%|█████▉    | 4403/7431 [4:23:25<2:46:53,  3.31s/it] 59%|█████▉    | 4404/7431 [4:23:28<2:44:22,  3.26s/it] 59%|█████▉    | 4405/7431 [4:23:31<2:45:25,  3.28s/it] 59%|█████▉    | 4406/7431 [4:23:34<2:45:14,  3.28s/it] 59%|█████▉    | 4407/7431 [4:23:38<2:45:23,  3.28s/it] 59%|█████▉    | 4408/7431 [4:23:41<2:44:50,  3.27s/it] 59%|█████▉    | 4409/7431 [4:23:44<2:44:01,  3.26s/it] 59%|█████▉    | 4410/7431 [4:23:48<2:46:19,  3.30s/it] 59%|█████▉    | 4411/7431 [4:23:51<2:42:03,  3.22s/it] 59%|█████▉    | 4412/7431 [4:23:54<2:41:01,  3.20s/it] 59%|█████▉    | 4413/7431 [4:23:57<2:40:37,  3.19s/it] 59%|█████▉    | 4414/7431 [4:24:00<2:44:04,  3.26s/it] 59%|█████▉    | 4415/7431 [4:24:04<2:45:34,  3.29s/it] 59%|█████▉    | 4416/7431 [4:24:07<2:44:56,  3.28s/it] 59%|█████▉    | 4417/7431 [4:24:10<2:47:46,  3.34s/it] 59%|█████▉    | 4418/7431 [4:24:14<2:44:56,  3.28s/it] 59%|█████▉    | 4419/7431 [4:24:17<2:45:15,  3.29s/it] 59%|█████▉    | 4420/7431 [4:24:20<2:43:42,  3.26s/it] 59%|█████▉    | 4421/7431 [4:24:23<2:42:09,  3.23s/it] 60%|█████▉    | 4422/7431 [4:24:27<2:42:55,  3.25s/it] 60%|█████▉    | 4423/7431 [4:24:30<2:42:21,  3.24s/it] 60%|█████▉    | 4424/7431 [4:24:33<2:42:59,  3.25s/it] 60%|█████▉    | 4425/7431 [4:24:36<2:44:03,  3.27s/it] 60%|█████▉    | 4426/7431 [4:24:40<2:43:03,  3.26s/it] 60%|█████▉    | 4427/7431 [4:24:43<2:40:39,  3.21s/it] 60%|█████▉    | 4428/7431 [4:24:46<2:39:20,  3.18s/it] 60%|█████▉    | 4429/7431 [4:24:49<2:39:20,  3.18s/it] 60%|█████▉    | 4430/7431 [4:24:52<2:38:50,  3.18s/it] 60%|█████▉    | 4431/7431 [4:24:56<2:41:36,  3.23s/it] 60%|█████▉    | 4432/7431 [4:24:59<2:42:48,  3.26s/it] 60%|█████▉    | 4433/7431 [4:25:02<2:43:31,  3.27s/it] 60%|█████▉    | 4434/7431 [4:25:05<2:44:03,  3.28s/it] 60%|█████▉    | 4435/7431 [4:25:09<2:43:23,  3.27s/it] 60%|█████▉    | 4436/7431 [4:25:12<2:45:24,  3.31s/it] 60%|█████▉    | 4437/7431 [4:25:15<2:43:01,  3.27s/it] 60%|█████▉    | 4438/7431 [4:25:19<2:42:56,  3.27s/it] 60%|█████▉    | 4439/7431 [4:25:22<2:42:38,  3.26s/it] 60%|█████▉    | 4440/7431 [4:25:25<2:44:12,  3.29s/it] 60%|█████▉    | 4441/7431 [4:25:29<2:46:00,  3.33s/it] 60%|█████▉    | 4442/7431 [4:25:32<2:43:21,  3.28s/it] 60%|█████▉    | 4443/7431 [4:25:35<2:43:01,  3.27s/it] 60%|█████▉    | 4444/7431 [4:25:38<2:45:04,  3.32s/it] 60%|█████▉    | 4445/7431 [4:25:42<2:42:37,  3.27s/it] 60%|█████▉    | 4446/7431 [4:25:45<2:42:21,  3.26s/it] 60%|█████▉    | 4447/7431 [4:25:48<2:42:59,  3.28s/it] 60%|█████▉    | 4448/7431 [4:25:51<2:42:33,  3.27s/it] 60%|█████▉    | 4449/7431 [4:25:55<2:40:50,  3.24s/it]08/31/2024 22:53:16 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.835860013961792, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04719437286257744, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7453548908233643, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.628409385681152}
 60%|█████▉    | 4450/7431 [4:25:58<2:42:49,  3.28s/it] 60%|█████▉    | 4451/7431 [4:26:01<2:42:38,  3.27s/it] 60%|█████▉    | 4452/7431 [4:26:04<2:41:51,  3.26s/it] 60%|█████▉    | 4453/7431 [4:26:08<2:42:55,  3.28s/it] 60%|█████▉    | 4454/7431 [4:26:11<2:42:16,  3.27s/it] 60%|█████▉    | 4455/7431 [4:26:14<2:43:26,  3.30s/it] 60%|█████▉    | 4456/7431 [4:26:18<2:43:13,  3.29s/it] 60%|█████▉    | 4457/7431 [4:26:21<2:41:41,  3.26s/it] 60%|█████▉    | 4458/7431 [4:26:24<2:43:20,  3.30s/it] 60%|██████    | 4459/7431 [4:26:27<2:42:35,  3.28s/it] 60%|██████    | 4460/7431 [4:26:31<2:40:59,  3.25s/it] 60%|██████    | 4461/7431 [4:26:34<2:41:40,  3.27s/it] 60%|██████    | 4462/7431 [4:26:37<2:40:50,  3.25s/it] 60%|██████    | 4463/7431 [4:26:40<2:41:50,  3.27s/it] 60%|██████    | 4464/7431 [4:26:44<2:43:09,  3.30s/it] 60%|██████    | 4465/7431 [4:26:47<2:42:44,  3.29s/it] 60%|██████    | 4466/7431 [4:26:50<2:41:48,  3.27s/it] 60%|██████    | 4467/7431 [4:26:53<2:38:41,  3.21s/it] 60%|██████    | 4468/7431 [4:26:57<2:44:13,  3.33s/it] 60%|██████    | 4469/7431 [4:27:00<2:43:44,  3.32s/it] 60%|██████    | 4470/7431 [4:27:03<2:39:44,  3.24s/it] 60%|██████    | 4471/7431 [4:27:07<2:42:53,  3.30s/it] 60%|██████    | 4472/7431 [4:27:10<2:41:45,  3.28s/it] 60%|██████    | 4473/7431 [4:27:13<2:41:30,  3.28s/it] 60%|██████    | 4474/7431 [4:27:16<2:40:10,  3.25s/it] 60%|██████    | 4475/7431 [4:27:20<2:42:37,  3.30s/it] 60%|██████    | 4476/7431 [4:27:23<2:41:21,  3.28s/it] 60%|██████    | 4477/7431 [4:27:26<2:42:37,  3.30s/it] 60%|██████    | 4478/7431 [4:27:30<2:40:41,  3.26s/it] 60%|██████    | 4479/7431 [4:27:33<2:37:08,  3.19s/it] 60%|██████    | 4480/7431 [4:27:36<2:37:19,  3.20s/it] 60%|██████    | 4481/7431 [4:27:39<2:37:17,  3.20s/it] 60%|██████    | 4482/7431 [4:27:42<2:38:11,  3.22s/it] 60%|██████    | 4483/7431 [4:27:46<2:39:35,  3.25s/it] 60%|██████    | 4484/7431 [4:27:49<2:39:14,  3.24s/it] 60%|██████    | 4485/7431 [4:27:52<2:36:48,  3.19s/it] 60%|██████    | 4486/7431 [4:27:55<2:35:43,  3.17s/it] 60%|██████    | 4487/7431 [4:27:58<2:37:42,  3.21s/it] 60%|██████    | 4488/7431 [4:28:02<2:37:50,  3.22s/it] 60%|██████    | 4489/7431 [4:28:05<2:39:35,  3.25s/it] 60%|██████    | 4490/7431 [4:28:08<2:38:30,  3.23s/it] 60%|██████    | 4491/7431 [4:28:12<2:41:03,  3.29s/it] 60%|██████    | 4492/7431 [4:28:15<2:38:50,  3.24s/it] 60%|██████    | 4493/7431 [4:28:18<2:39:16,  3.25s/it] 60%|██████    | 4494/7431 [4:28:21<2:39:20,  3.26s/it] 60%|██████    | 4495/7431 [4:28:25<2:39:08,  3.25s/it] 61%|██████    | 4496/7431 [4:28:28<2:38:21,  3.24s/it] 61%|██████    | 4497/7431 [4:28:31<2:37:06,  3.21s/it] 61%|██████    | 4498/7431 [4:28:34<2:36:46,  3.21s/it] 61%|██████    | 4499/7431 [4:28:37<2:36:40,  3.21s/it]08/31/2024 22:55:58 - INFO - __main__ -   evaluate on ret%tv--msrvtt_ret task
08/31/2024 22:55:58 - INFO - __main__ -   start running ret%tv validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  1%|          | 2/221 [00:00<00:55,  3.96it/s][A
  1%|▏         | 3/221 [00:00<00:53,  4.09it/s][A
  2%|▏         | 4/221 [00:00<00:43,  4.96it/s][A
  2%|▏         | 5/221 [00:00<00:37,  5.69it/s][A
  3%|▎         | 6/221 [00:01<00:32,  6.57it/s][A
  3%|▎         | 7/221 [00:01<00:34,  6.22it/s][A
  4%|▎         | 8/221 [00:01<00:34,  6.17it/s][A
  4%|▍         | 9/221 [00:01<00:32,  6.46it/s][A
  5%|▍         | 10/221 [00:02<00:53,  3.93it/s][A
  5%|▍         | 11/221 [00:02<00:47,  4.43it/s][A
  5%|▌         | 12/221 [00:02<00:46,  4.52it/s][A
  6%|▌         | 13/221 [00:02<00:49,  4.19it/s][A
  6%|▋         | 14/221 [00:02<00:42,  4.87it/s][A
  7%|▋         | 15/221 [00:03<00:42,  4.86it/s][A
  7%|▋         | 16/221 [00:03<00:55,  3.69it/s][A
  8%|▊         | 17/221 [00:03<00:58,  3.46it/s][A
  8%|▊         | 18/221 [00:03<00:48,  4.16it/s][A
  9%|▊         | 19/221 [00:04<00:48,  4.16it/s][A
  9%|▉         | 20/221 [00:04<00:42,  4.69it/s][A
 10%|▉         | 21/221 [00:04<00:47,  4.21it/s][A
 10%|▉         | 22/221 [00:04<00:47,  4.23it/s][A
 10%|█         | 23/221 [00:05<00:45,  4.33it/s][A
 11%|█         | 24/221 [00:05<00:44,  4.47it/s][A
 11%|█▏        | 25/221 [00:05<00:47,  4.09it/s][A
 12%|█▏        | 26/221 [00:05<00:50,  3.89it/s][A
 12%|█▏        | 27/221 [00:06<00:51,  3.79it/s][A
 13%|█▎        | 28/221 [00:06<00:55,  3.48it/s][A
 13%|█▎        | 29/221 [00:06<00:58,  3.26it/s][A
 14%|█▎        | 30/221 [00:07<01:01,  3.10it/s][A
 14%|█▍        | 31/221 [00:07<00:56,  3.37it/s][A
 14%|█▍        | 32/221 [00:07<00:50,  3.77it/s][A
 15%|█▍        | 33/221 [00:07<00:46,  4.01it/s][A
 15%|█▌        | 34/221 [00:08<00:45,  4.14it/s][A
 16%|█▌        | 35/221 [00:08<00:57,  3.22it/s][A
 16%|█▋        | 36/221 [00:08<01:03,  2.94it/s][A
 17%|█▋        | 37/221 [00:09<00:57,  3.18it/s][A
 17%|█▋        | 38/221 [00:09<00:54,  3.39it/s][A
 18%|█▊        | 39/221 [00:09<00:47,  3.85it/s][A
 18%|█▊        | 40/221 [00:09<00:49,  3.65it/s][A
 19%|█▊        | 41/221 [00:10<00:55,  3.24it/s][A
 19%|█▉        | 42/221 [00:10<00:44,  4.04it/s][A
 19%|█▉        | 43/221 [00:10<00:39,  4.54it/s][A
 20%|█▉        | 44/221 [00:10<00:37,  4.66it/s][A
 20%|██        | 45/221 [00:11<00:46,  3.80it/s][A
 21%|██        | 46/221 [00:11<00:47,  3.65it/s][A
 21%|██▏       | 47/221 [00:11<00:42,  4.10it/s][A
 22%|██▏       | 48/221 [00:11<00:36,  4.72it/s][A
 22%|██▏       | 49/221 [00:12<00:44,  3.85it/s][A
 23%|██▎       | 50/221 [00:12<00:52,  3.28it/s][A
 23%|██▎       | 51/221 [00:12<00:49,  3.47it/s][A
 24%|██▎       | 52/221 [00:13<00:49,  3.43it/s][A
 24%|██▍       | 53/221 [00:13<00:45,  3.71it/s][A
 24%|██▍       | 54/221 [00:13<00:57,  2.89it/s][A
 25%|██▍       | 55/221 [00:14<00:52,  3.14it/s][A
 25%|██▌       | 56/221 [00:14<00:47,  3.45it/s][A
 26%|██▌       | 57/221 [00:14<00:48,  3.38it/s][A
 26%|██▌       | 58/221 [00:14<00:44,  3.65it/s][A
 27%|██▋       | 59/221 [00:15<00:39,  4.10it/s][A
 27%|██▋       | 60/221 [00:15<00:36,  4.38it/s][A
 28%|██▊       | 61/221 [00:15<00:38,  4.17it/s][A
 28%|██▊       | 62/221 [00:15<00:37,  4.21it/s][A
 29%|██▊       | 63/221 [00:16<00:41,  3.85it/s][A
 29%|██▉       | 64/221 [00:16<00:46,  3.39it/s][A
 29%|██▉       | 65/221 [00:16<00:41,  3.80it/s][A
 30%|██▉       | 66/221 [00:17<00:48,  3.20it/s][A
 30%|███       | 67/221 [00:17<00:48,  3.19it/s][A
 31%|███       | 68/221 [00:17<00:39,  3.83it/s][A
 31%|███       | 69/221 [00:18<00:52,  2.89it/s][A
 32%|███▏      | 70/221 [00:18<00:47,  3.20it/s][A
 32%|███▏      | 71/221 [00:18<00:46,  3.24it/s][A
 33%|███▎      | 72/221 [00:18<00:44,  3.37it/s][A
 33%|███▎      | 73/221 [00:19<00:41,  3.59it/s][A
 33%|███▎      | 74/221 [00:19<00:36,  4.02it/s][A
 34%|███▍      | 75/221 [00:19<00:38,  3.82it/s][A
 34%|███▍      | 76/221 [00:19<00:39,  3.68it/s][A
 35%|███▍      | 77/221 [00:20<00:44,  3.27it/s][A
 35%|███▌      | 78/221 [00:20<00:41,  3.45it/s][A
 36%|███▌      | 79/221 [00:20<00:48,  2.93it/s][A
 36%|███▌      | 80/221 [00:21<00:46,  3.06it/s][A
 37%|███▋      | 81/221 [00:21<00:40,  3.44it/s][A
 37%|███▋      | 82/221 [00:21<00:39,  3.54it/s][A
 38%|███▊      | 83/221 [00:22<00:44,  3.08it/s][A
 38%|███▊      | 84/221 [00:22<00:39,  3.43it/s][A
 38%|███▊      | 85/221 [00:22<00:32,  4.20it/s][A
 39%|███▉      | 86/221 [00:22<00:35,  3.80it/s][A
 39%|███▉      | 87/221 [00:23<00:39,  3.39it/s][A
 40%|███▉      | 88/221 [00:23<00:41,  3.19it/s][A
 40%|████      | 89/221 [00:23<00:40,  3.28it/s][A
 41%|████      | 90/221 [00:24<00:39,  3.36it/s][A
 41%|████      | 91/221 [00:24<00:32,  4.01it/s][A
 42%|████▏     | 92/221 [00:24<00:32,  3.93it/s][A
 42%|████▏     | 93/221 [00:24<00:37,  3.45it/s][A
 43%|████▎     | 94/221 [00:25<00:36,  3.44it/s][A
 43%|████▎     | 95/221 [00:25<00:32,  3.84it/s][A
 43%|████▎     | 96/221 [00:25<00:41,  2.99it/s][A
 44%|████▍     | 97/221 [00:26<00:38,  3.26it/s][A
 44%|████▍     | 98/221 [00:26<00:45,  2.70it/s][A
 45%|████▍     | 99/221 [00:26<00:44,  2.77it/s][A
 45%|████▌     | 100/221 [00:27<00:39,  3.03it/s][A
 46%|████▌     | 101/221 [00:27<00:36,  3.31it/s][A
 46%|████▌     | 102/221 [00:27<00:45,  2.60it/s][A
 47%|████▋     | 103/221 [00:28<00:37,  3.14it/s][A
 47%|████▋     | 104/221 [00:28<00:38,  3.02it/s][A
 48%|████▊     | 105/221 [00:28<00:39,  2.94it/s][A
 48%|████▊     | 106/221 [00:29<00:36,  3.14it/s][A
 48%|████▊     | 107/221 [00:29<00:35,  3.24it/s][A
 49%|████▉     | 108/221 [00:29<00:33,  3.41it/s][A
 49%|████▉     | 109/221 [00:29<00:28,  3.96it/s][A
 50%|████▉     | 110/221 [00:30<00:33,  3.31it/s][A
 50%|█████     | 111/221 [00:30<00:34,  3.22it/s][A
 51%|█████     | 112/221 [00:30<00:34,  3.19it/s][A
 51%|█████     | 113/221 [00:31<00:27,  3.88it/s][A
 52%|█████▏    | 114/221 [00:31<00:23,  4.62it/s][A
 52%|█████▏    | 115/221 [00:31<00:26,  3.95it/s][A
 52%|█████▏    | 116/221 [00:31<00:28,  3.75it/s][A
 53%|█████▎    | 117/221 [00:32<00:29,  3.54it/s][A
 53%|█████▎    | 118/221 [00:32<00:27,  3.78it/s][A
 54%|█████▍    | 119/221 [00:32<00:29,  3.51it/s][A
 54%|█████▍    | 120/221 [00:32<00:28,  3.58it/s][A
 55%|█████▍    | 121/221 [00:33<00:23,  4.22it/s][A
 55%|█████▌    | 122/221 [00:33<00:23,  4.26it/s][A
 56%|█████▌    | 123/221 [00:33<00:21,  4.46it/s][A
 56%|█████▌    | 124/221 [00:33<00:28,  3.39it/s][A
 57%|█████▋    | 125/221 [00:34<00:30,  3.16it/s][A
 57%|█████▋    | 126/221 [00:34<00:25,  3.72it/s][A
 57%|█████▋    | 127/221 [00:34<00:26,  3.55it/s][A
 58%|█████▊    | 128/221 [00:35<00:26,  3.46it/s][A
 58%|█████▊    | 129/221 [00:35<00:22,  4.17it/s][A
 59%|█████▉    | 130/221 [00:35<00:22,  4.10it/s][A
 59%|█████▉    | 131/221 [00:35<00:19,  4.57it/s][A
 60%|█████▉    | 132/221 [00:36<00:35,  2.51it/s][A
 60%|██████    | 133/221 [00:36<00:34,  2.53it/s][A
 61%|██████    | 134/221 [00:37<00:34,  2.49it/s][A
 61%|██████    | 135/221 [00:37<00:34,  2.51it/s][A
 62%|██████▏   | 136/221 [00:37<00:30,  2.81it/s][A
 62%|██████▏   | 137/221 [00:38<00:25,  3.31it/s][A
 62%|██████▏   | 138/221 [00:38<00:24,  3.34it/s][A
 63%|██████▎   | 139/221 [00:38<00:22,  3.64it/s][A
 63%|██████▎   | 140/221 [00:38<00:21,  3.78it/s][A
 64%|██████▍   | 141/221 [00:39<00:23,  3.41it/s][A
 64%|██████▍   | 142/221 [00:39<00:24,  3.27it/s][A
 65%|██████▍   | 143/221 [00:39<00:25,  3.08it/s][A
 65%|██████▌   | 144/221 [00:40<00:25,  2.99it/s][A
 66%|██████▌   | 145/221 [00:40<00:22,  3.34it/s][A
 67%|██████▋   | 147/221 [00:40<00:17,  4.28it/s][A
 67%|██████▋   | 148/221 [00:41<00:17,  4.15it/s][A
 67%|██████▋   | 149/221 [00:41<00:19,  3.74it/s][A
 68%|██████▊   | 150/221 [00:41<00:18,  3.81it/s][A
 68%|██████▊   | 151/221 [00:41<00:19,  3.63it/s][A
 69%|██████▉   | 152/221 [00:42<00:20,  3.33it/s][A
 69%|██████▉   | 153/221 [00:42<00:16,  4.02it/s][A
 70%|██████▉   | 154/221 [00:42<00:15,  4.26it/s][A
 70%|███████   | 155/221 [00:42<00:15,  4.18it/s][A
 71%|███████   | 156/221 [00:43<00:17,  3.74it/s][A
 71%|███████   | 157/221 [00:43<00:18,  3.44it/s][A
 71%|███████▏  | 158/221 [00:43<00:18,  3.34it/s][A
 72%|███████▏  | 159/221 [00:44<00:16,  3.65it/s][A
 72%|███████▏  | 160/221 [00:44<00:13,  4.36it/s][A
 73%|███████▎  | 161/221 [00:44<00:15,  3.80it/s][A
 73%|███████▎  | 162/221 [00:44<00:14,  4.21it/s][A
 74%|███████▍  | 163/221 [00:45<00:14,  3.87it/s][A
 74%|███████▍  | 164/221 [00:45<00:12,  4.42it/s][A
 75%|███████▍  | 165/221 [00:45<00:13,  4.27it/s][A
 75%|███████▌  | 166/221 [00:45<00:11,  4.71it/s][A
 76%|███████▌  | 167/221 [00:45<00:12,  4.20it/s][A
 76%|███████▌  | 168/221 [00:46<00:12,  4.28it/s][A
 76%|███████▋  | 169/221 [00:46<00:13,  3.93it/s][A
 77%|███████▋  | 170/221 [00:46<00:13,  3.78it/s][A
 77%|███████▋  | 171/221 [00:46<00:12,  4.13it/s][A
 78%|███████▊  | 172/221 [00:47<00:11,  4.18it/s][A
 78%|███████▊  | 173/221 [00:47<00:11,  4.23it/s][A
 79%|███████▊  | 174/221 [00:47<00:12,  3.89it/s][A
 79%|███████▉  | 175/221 [00:48<00:13,  3.38it/s][A
 80%|███████▉  | 176/221 [00:48<00:10,  4.18it/s][A
 80%|████████  | 177/221 [00:48<00:09,  4.53it/s][A
 81%|████████  | 178/221 [00:48<00:09,  4.72it/s][A
 81%|████████  | 179/221 [00:48<00:09,  4.60it/s][A
 81%|████████▏ | 180/221 [00:48<00:08,  4.83it/s][A
 82%|████████▏ | 182/221 [00:49<00:07,  4.89it/s][A
 83%|████████▎ | 183/221 [00:49<00:09,  4.09it/s][A
 83%|████████▎ | 184/221 [00:49<00:08,  4.22it/s][A
 84%|████████▎ | 185/221 [00:50<00:10,  3.58it/s][A
 84%|████████▍ | 186/221 [00:50<00:11,  3.15it/s][A
 85%|████████▍ | 187/221 [00:51<00:12,  2.75it/s][A
 85%|████████▌ | 188/221 [00:51<00:11,  2.99it/s][A
 86%|████████▌ | 189/221 [00:51<00:09,  3.43it/s][A
 86%|████████▌ | 190/221 [00:52<00:09,  3.30it/s][A
 87%|████████▋ | 192/221 [00:52<00:06,  4.32it/s][A
 87%|████████▋ | 193/221 [00:52<00:06,  4.19it/s][A
 88%|████████▊ | 194/221 [00:52<00:06,  4.35it/s][A
 88%|████████▊ | 195/221 [00:53<00:06,  4.11it/s][A
 89%|████████▊ | 196/221 [00:53<00:06,  3.60it/s][A
 89%|████████▉ | 197/221 [00:53<00:06,  3.68it/s][A
 90%|████████▉ | 198/221 [00:53<00:06,  3.58it/s][A
 90%|█████████ | 199/221 [00:54<00:06,  3.48it/s][A
 90%|█████████ | 200/221 [00:54<00:05,  3.50it/s][A
 91%|█████████ | 201/221 [00:54<00:06,  3.25it/s][A
 91%|█████████▏| 202/221 [00:55<00:06,  3.15it/s][A
 92%|█████████▏| 203/221 [00:55<00:05,  3.03it/s][A
 92%|█████████▏| 204/221 [00:56<00:06,  2.81it/s][A
 93%|█████████▎| 205/221 [00:56<00:04,  3.32it/s][A
 93%|█████████▎| 206/221 [00:56<00:04,  3.30it/s][A
 94%|█████████▎| 207/221 [00:56<00:03,  3.72it/s][A
 94%|█████████▍| 208/221 [00:57<00:03,  3.53it/s][A
 95%|█████████▍| 209/221 [00:57<00:03,  3.72it/s][A
 95%|█████████▌| 210/221 [00:57<00:02,  3.73it/s][A
 95%|█████████▌| 211/221 [00:57<00:02,  3.35it/s][A
 96%|█████████▌| 212/221 [00:58<00:02,  3.52it/s][A
 96%|█████████▋| 213/221 [00:58<00:01,  4.10it/s][A
 97%|█████████▋| 214/221 [00:58<00:01,  3.52it/s][A
 97%|█████████▋| 215/221 [00:58<00:01,  4.25it/s][A
 98%|█████████▊| 216/221 [00:59<00:01,  3.90it/s][A
 98%|█████████▊| 217/221 [00:59<00:01,  3.48it/s][A
 99%|█████████▊| 218/221 [00:59<00:00,  3.59it/s][A
 99%|█████████▉| 219/221 [00:59<00:00,  3.74it/s][A
100%|█████████▉| 220/221 [01:00<00:00,  3.98it/s][A
100%|██████████| 221/221 [01:00<00:00,  4.05it/s][A100%|██████████| 221/221 [01:00<00:00,  3.66it/s]
08/31/2024 22:58:18 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forward=====step 4499--===========

08/31/2024 22:58:18 - INFO - __main__ -   {'area_r1': 10.7, 'area_recall': '10.7/27.5/35.1', 'area_ravg': 24.4}
08/31/2024 22:58:18 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_backard=====step 4499--===========

08/31/2024 22:58:18 - INFO - __main__ -   {'forward_r1': 43.4, 'forward_recall': '43.4/76.6/85.9', 'forward_ravg': 68.6}
08/31/2024 22:58:18 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forw_with_video=====step 4499--===========

08/31/2024 22:58:18 - INFO - __main__ -   {'forward_r1': 60.4, 'forward_recall': '60.4/85.5/90.5', 'forward_ravg': 78.8}
08/31/2024 22:58:18 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itc_tv=====step 4499--===========

08/31/2024 22:58:18 - INFO - __main__ -   {'video_r1': 44.3, 'video_recall': '44.3/76.1/84.4', 'video_ravg': 68.3}
08/31/2024 22:58:18 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itc_tv====history best step: 2999=======

08/31/2024 22:58:18 - INFO - __main__ -   {'video_r1': 46.0, 'video_recall': '46.0/75.3/83.9', 'video_ravg': 68.4}
08/31/2024 22:58:18 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itm_tv=====step 4499--===========

08/31/2024 22:58:18 - INFO - __main__ -   {'video_r1': 56.8, 'video_recall': '56.8/78.2/85.4', 'video_ravg': 73.5}
08/31/2024 22:58:18 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itm_tv====history best step: 3999=======

08/31/2024 22:58:18 - INFO - __main__ -   {'video_r1': 57.8, 'video_recall': '57.8/78.1/84.8', 'video_ravg': 73.6}
08/31/2024 22:58:44 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.7357038259506226, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.039347536861896515, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7064507007598877, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.481502056121826}
 61%|██████    | 4500/7431 [4:31:26<42:57:26, 52.76s/it] 61%|██████    | 4501/7431 [4:31:29<30:49:48, 37.88s/it] 61%|██████    | 4502/7431 [4:31:32<22:22:42, 27.51s/it] 61%|██████    | 4503/7431 [4:31:35<16:27:17, 20.23s/it] 61%|██████    | 4504/7431 [4:31:39<12:18:33, 15.14s/it] 61%|██████    | 4505/7431 [4:31:42<9:24:41, 11.58s/it]  61%|██████    | 4506/7431 [4:31:45<7:24:36,  9.12s/it] 61%|██████    | 4507/7431 [4:31:48<5:57:41,  7.34s/it] 61%|██████    | 4508/7431 [4:31:52<4:58:16,  6.12s/it] 61%|██████    | 4509/7431 [4:31:55<4:16:52,  5.27s/it] 61%|██████    | 4510/7431 [4:31:58<3:46:19,  4.65s/it] 61%|██████    | 4511/7431 [4:32:02<3:26:29,  4.24s/it] 61%|██████    | 4512/7431 [4:32:05<3:12:23,  3.95s/it] 61%|██████    | 4513/7431 [4:32:08<3:01:34,  3.73s/it] 61%|██████    | 4514/7431 [4:32:11<2:54:07,  3.58s/it] 61%|██████    | 4515/7431 [4:32:15<2:51:13,  3.52s/it] 61%|██████    | 4516/7431 [4:32:18<2:47:03,  3.44s/it] 61%|██████    | 4517/7431 [4:32:21<2:43:37,  3.37s/it] 61%|██████    | 4518/7431 [4:32:24<2:42:37,  3.35s/it] 61%|██████    | 4519/7431 [4:32:28<2:43:27,  3.37s/it] 61%|██████    | 4520/7431 [4:32:31<2:42:09,  3.34s/it] 61%|██████    | 4521/7431 [4:32:34<2:42:33,  3.35s/it] 61%|██████    | 4522/7431 [4:32:38<2:40:29,  3.31s/it] 61%|██████    | 4523/7431 [4:32:41<2:42:01,  3.34s/it] 61%|██████    | 4524/7431 [4:32:44<2:40:21,  3.31s/it] 61%|██████    | 4525/7431 [4:32:48<2:38:55,  3.28s/it] 61%|██████    | 4526/7431 [4:32:51<2:36:20,  3.23s/it] 61%|██████    | 4527/7431 [4:32:54<2:38:49,  3.28s/it] 61%|██████    | 4528/7431 [4:32:57<2:38:39,  3.28s/it] 61%|██████    | 4529/7431 [4:33:01<2:38:58,  3.29s/it] 61%|██████    | 4530/7431 [4:33:04<2:38:37,  3.28s/it] 61%|██████    | 4531/7431 [4:33:07<2:37:08,  3.25s/it] 61%|██████    | 4532/7431 [4:33:10<2:37:48,  3.27s/it] 61%|██████    | 4533/7431 [4:33:14<2:38:45,  3.29s/it] 61%|██████    | 4534/7431 [4:33:17<2:39:25,  3.30s/it] 61%|██████    | 4535/7431 [4:33:20<2:38:19,  3.28s/it] 61%|██████    | 4536/7431 [4:33:24<2:42:06,  3.36s/it] 61%|██████    | 4537/7431 [4:33:27<2:40:14,  3.32s/it] 61%|██████    | 4538/7431 [4:33:30<2:40:55,  3.34s/it] 61%|██████    | 4539/7431 [4:33:34<2:38:00,  3.28s/it] 61%|██████    | 4540/7431 [4:33:37<2:37:39,  3.27s/it] 61%|██████    | 4541/7431 [4:33:40<2:39:04,  3.30s/it] 61%|██████    | 4542/7431 [4:33:43<2:36:53,  3.26s/it] 61%|██████    | 4543/7431 [4:33:47<2:36:40,  3.26s/it] 61%|██████    | 4544/7431 [4:33:50<2:36:57,  3.26s/it] 61%|██████    | 4545/7431 [4:33:54<2:41:57,  3.37s/it] 61%|██████    | 4546/7431 [4:33:57<2:38:17,  3.29s/it] 61%|██████    | 4547/7431 [4:34:00<2:37:44,  3.28s/it] 61%|██████    | 4548/7431 [4:34:03<2:36:11,  3.25s/it] 61%|██████    | 4549/7431 [4:34:06<2:37:45,  3.28s/it]08/31/2024 23:01:28 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.4209808111190796, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.041816595941782, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6081409454345703, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.0709381103515625}
 61%|██████    | 4550/7431 [4:34:10<2:37:30,  3.28s/it] 61%|██████    | 4551/7431 [4:34:13<2:37:03,  3.27s/it] 61%|██████▏   | 4552/7431 [4:34:16<2:35:19,  3.24s/it] 61%|██████▏   | 4553/7431 [4:34:19<2:36:56,  3.27s/it] 61%|██████▏   | 4554/7431 [4:34:23<2:37:24,  3.28s/it] 61%|██████▏   | 4555/7431 [4:34:26<2:35:53,  3.25s/it] 61%|██████▏   | 4556/7431 [4:34:29<2:34:57,  3.23s/it] 61%|██████▏   | 4557/7431 [4:34:32<2:36:38,  3.27s/it] 61%|██████▏   | 4558/7431 [4:34:36<2:36:34,  3.27s/it] 61%|██████▏   | 4559/7431 [4:34:39<2:37:02,  3.28s/it] 61%|██████▏   | 4560/7431 [4:34:42<2:38:29,  3.31s/it] 61%|██████▏   | 4561/7431 [4:34:46<2:36:14,  3.27s/it] 61%|██████▏   | 4562/7431 [4:34:49<2:33:25,  3.21s/it] 61%|██████▏   | 4563/7431 [4:34:52<2:33:21,  3.21s/it] 61%|██████▏   | 4564/7431 [4:34:55<2:32:18,  3.19s/it] 61%|██████▏   | 4565/7431 [4:34:58<2:34:29,  3.23s/it] 61%|██████▏   | 4566/7431 [4:35:02<2:37:57,  3.31s/it] 61%|██████▏   | 4567/7431 [4:35:05<2:36:43,  3.28s/it] 61%|██████▏   | 4568/7431 [4:35:08<2:35:15,  3.25s/it] 61%|██████▏   | 4569/7431 [4:35:12<2:35:34,  3.26s/it] 61%|██████▏   | 4570/7431 [4:35:15<2:38:22,  3.32s/it] 62%|██████▏   | 4571/7431 [4:35:18<2:36:02,  3.27s/it] 62%|██████▏   | 4572/7431 [4:35:22<2:37:52,  3.31s/it] 62%|██████▏   | 4573/7431 [4:35:25<2:35:49,  3.27s/it] 62%|██████▏   | 4574/7431 [4:35:28<2:34:36,  3.25s/it] 62%|██████▏   | 4575/7431 [4:35:31<2:37:00,  3.30s/it] 62%|██████▏   | 4576/7431 [4:35:35<2:37:03,  3.30s/it] 62%|██████▏   | 4577/7431 [4:35:38<2:38:05,  3.32s/it] 62%|██████▏   | 4578/7431 [4:35:41<2:37:37,  3.32s/it] 62%|██████▏   | 4579/7431 [4:35:45<2:38:23,  3.33s/it] 62%|██████▏   | 4580/7431 [4:35:48<2:36:54,  3.30s/it] 62%|██████▏   | 4581/7431 [4:35:51<2:35:10,  3.27s/it] 62%|██████▏   | 4582/7431 [4:35:55<2:36:48,  3.30s/it] 62%|██████▏   | 4583/7431 [4:35:58<2:37:11,  3.31s/it] 62%|██████▏   | 4584/7431 [4:36:01<2:36:57,  3.31s/it] 62%|██████▏   | 4585/7431 [4:36:04<2:36:05,  3.29s/it] 62%|██████▏   | 4586/7431 [4:36:08<2:36:55,  3.31s/it] 62%|██████▏   | 4587/7431 [4:36:11<2:32:59,  3.23s/it] 62%|██████▏   | 4588/7431 [4:36:14<2:31:55,  3.21s/it] 62%|██████▏   | 4589/7431 [4:36:17<2:33:44,  3.25s/it] 62%|██████▏   | 4590/7431 [4:36:21<2:35:56,  3.29s/it] 62%|██████▏   | 4591/7431 [4:36:24<2:38:04,  3.34s/it] 62%|██████▏   | 4592/7431 [4:36:27<2:36:29,  3.31s/it] 62%|██████▏   | 4593/7431 [4:36:31<2:37:31,  3.33s/it] 62%|██████▏   | 4594/7431 [4:36:34<2:35:05,  3.28s/it] 62%|██████▏   | 4595/7431 [4:36:37<2:35:14,  3.28s/it] 62%|██████▏   | 4596/7431 [4:36:40<2:33:35,  3.25s/it] 62%|██████▏   | 4597/7431 [4:36:44<2:34:08,  3.26s/it] 62%|██████▏   | 4598/7431 [4:36:47<2:37:13,  3.33s/it] 62%|██████▏   | 4599/7431 [4:36:51<2:38:01,  3.35s/it]08/31/2024 23:04:12 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.248974323272705, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03413967043161392, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.609987735748291, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 3.893101692199707}
 62%|██████▏   | 4600/7431 [4:36:54<2:36:25,  3.32s/it] 62%|██████▏   | 4601/7431 [4:36:57<2:33:49,  3.26s/it] 62%|██████▏   | 4602/7431 [4:37:00<2:33:33,  3.26s/it] 62%|██████▏   | 4603/7431 [4:37:03<2:33:31,  3.26s/it] 62%|██████▏   | 4604/7431 [4:37:07<2:31:13,  3.21s/it] 62%|██████▏   | 4605/7431 [4:37:10<2:30:33,  3.20s/it] 62%|██████▏   | 4606/7431 [4:37:13<2:32:09,  3.23s/it] 62%|██████▏   | 4607/7431 [4:37:16<2:33:42,  3.27s/it] 62%|██████▏   | 4608/7431 [4:37:20<2:34:13,  3.28s/it] 62%|██████▏   | 4609/7431 [4:37:23<2:33:19,  3.26s/it] 62%|██████▏   | 4610/7431 [4:37:26<2:34:16,  3.28s/it] 62%|██████▏   | 4611/7431 [4:37:29<2:31:35,  3.23s/it] 62%|██████▏   | 4612/7431 [4:37:32<2:29:35,  3.18s/it] 62%|██████▏   | 4613/7431 [4:37:36<2:32:58,  3.26s/it] 62%|██████▏   | 4614/7431 [4:37:39<2:33:51,  3.28s/it] 62%|██████▏   | 4615/7431 [4:37:43<2:36:30,  3.33s/it] 62%|██████▏   | 4616/7431 [4:37:46<2:34:35,  3.30s/it] 62%|██████▏   | 4617/7431 [4:37:49<2:31:02,  3.22s/it] 62%|██████▏   | 4618/7431 [4:37:52<2:33:38,  3.28s/it] 62%|██████▏   | 4619/7431 [4:37:56<2:37:55,  3.37s/it] 62%|██████▏   | 4620/7431 [4:37:59<2:35:07,  3.31s/it] 62%|██████▏   | 4621/7431 [4:38:02<2:32:50,  3.26s/it] 62%|██████▏   | 4622/7431 [4:38:05<2:33:43,  3.28s/it] 62%|██████▏   | 4623/7431 [4:38:09<2:32:21,  3.26s/it] 62%|██████▏   | 4624/7431 [4:38:12<2:30:54,  3.23s/it] 62%|██████▏   | 4625/7431 [4:38:15<2:31:38,  3.24s/it] 62%|██████▏   | 4626/7431 [4:38:18<2:33:20,  3.28s/it] 62%|██████▏   | 4627/7431 [4:38:22<2:33:41,  3.29s/it] 62%|██████▏   | 4628/7431 [4:38:25<2:34:45,  3.31s/it] 62%|██████▏   | 4629/7431 [4:38:28<2:34:39,  3.31s/it] 62%|██████▏   | 4630/7431 [4:38:32<2:34:05,  3.30s/it] 62%|██████▏   | 4631/7431 [4:38:35<2:34:30,  3.31s/it] 62%|██████▏   | 4632/7431 [4:38:38<2:32:26,  3.27s/it] 62%|██████▏   | 4633/7431 [4:38:42<2:34:37,  3.32s/it] 62%|██████▏   | 4634/7431 [4:38:45<2:33:31,  3.29s/it] 62%|██████▏   | 4635/7431 [4:38:48<2:31:54,  3.26s/it] 62%|██████▏   | 4636/7431 [4:38:51<2:30:33,  3.23s/it] 62%|██████▏   | 4637/7431 [4:38:55<2:30:48,  3.24s/it] 62%|██████▏   | 4638/7431 [4:38:58<2:32:19,  3.27s/it] 62%|██████▏   | 4639/7431 [4:39:01<2:33:56,  3.31s/it] 62%|██████▏   | 4640/7431 [4:39:05<2:32:54,  3.29s/it] 62%|██████▏   | 4641/7431 [4:39:08<2:31:59,  3.27s/it] 62%|██████▏   | 4642/7431 [4:39:11<2:33:27,  3.30s/it] 62%|██████▏   | 4643/7431 [4:39:14<2:32:14,  3.28s/it] 62%|██████▏   | 4644/7431 [4:39:17<2:30:10,  3.23s/it] 63%|██████▎   | 4645/7431 [4:39:21<2:29:51,  3.23s/it] 63%|██████▎   | 4646/7431 [4:39:24<2:29:44,  3.23s/it] 63%|██████▎   | 4647/7431 [4:39:27<2:29:15,  3.22s/it] 63%|██████▎   | 4648/7431 [4:39:30<2:29:23,  3.22s/it] 63%|██████▎   | 4649/7431 [4:39:34<2:31:22,  3.26s/it]08/31/2024 23:06:55 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.1838299036026, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04156109318137169, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.5819759368896484, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 3.8073668479919434}
 63%|██████▎   | 4650/7431 [4:39:37<2:29:39,  3.23s/it] 63%|██████▎   | 4651/7431 [4:39:40<2:29:51,  3.23s/it] 63%|██████▎   | 4652/7431 [4:39:43<2:29:19,  3.22s/it] 63%|██████▎   | 4653/7431 [4:39:47<2:29:10,  3.22s/it] 63%|██████▎   | 4654/7431 [4:39:50<2:29:16,  3.23s/it] 63%|██████▎   | 4655/7431 [4:39:53<2:31:06,  3.27s/it] 63%|██████▎   | 4656/7431 [4:39:57<2:32:57,  3.31s/it] 63%|██████▎   | 4657/7431 [4:40:00<2:30:56,  3.26s/it] 63%|██████▎   | 4658/7431 [4:40:03<2:27:40,  3.20s/it] 63%|██████▎   | 4659/7431 [4:40:06<2:28:02,  3.20s/it] 63%|██████▎   | 4660/7431 [4:40:09<2:32:12,  3.30s/it] 63%|██████▎   | 4661/7431 [4:40:13<2:31:50,  3.29s/it] 63%|██████▎   | 4662/7431 [4:40:16<2:31:17,  3.28s/it] 63%|██████▎   | 4663/7431 [4:40:19<2:31:21,  3.28s/it] 63%|██████▎   | 4664/7431 [4:40:23<2:35:22,  3.37s/it] 63%|██████▎   | 4665/7431 [4:40:26<2:33:44,  3.33s/it] 63%|██████▎   | 4666/7431 [4:40:29<2:31:17,  3.28s/it] 63%|██████▎   | 4667/7431 [4:40:33<2:31:31,  3.29s/it] 63%|██████▎   | 4668/7431 [4:40:36<2:35:15,  3.37s/it] 63%|██████▎   | 4669/7431 [4:40:39<2:33:30,  3.33s/it] 63%|██████▎   | 4670/7431 [4:40:43<2:31:50,  3.30s/it] 63%|██████▎   | 4671/7431 [4:40:46<2:29:54,  3.26s/it] 63%|██████▎   | 4672/7431 [4:40:49<2:34:11,  3.35s/it] 63%|██████▎   | 4673/7431 [4:40:52<2:31:34,  3.30s/it] 63%|██████▎   | 4674/7431 [4:40:56<2:32:05,  3.31s/it] 63%|██████▎   | 4675/7431 [4:40:59<2:29:20,  3.25s/it] 63%|██████▎   | 4676/7431 [4:41:02<2:29:47,  3.26s/it] 63%|██████▎   | 4677/7431 [4:41:05<2:29:37,  3.26s/it] 63%|██████▎   | 4678/7431 [4:41:09<2:28:47,  3.24s/it] 63%|██████▎   | 4679/7431 [4:41:12<2:30:45,  3.29s/it] 63%|██████▎   | 4680/7431 [4:41:15<2:29:22,  3.26s/it] 63%|██████▎   | 4681/7431 [4:41:19<2:29:38,  3.26s/it] 63%|██████▎   | 4682/7431 [4:41:22<2:29:22,  3.26s/it] 63%|██████▎   | 4683/7431 [4:41:25<2:29:18,  3.26s/it] 63%|██████▎   | 4684/7431 [4:41:28<2:27:23,  3.22s/it] 63%|██████▎   | 4685/7431 [4:41:31<2:28:46,  3.25s/it] 63%|██████▎   | 4686/7431 [4:41:35<2:30:01,  3.28s/it] 63%|██████▎   | 4687/7431 [4:41:38<2:29:40,  3.27s/it] 63%|██████▎   | 4688/7431 [4:41:41<2:27:56,  3.24s/it] 63%|██████▎   | 4689/7431 [4:41:45<2:29:44,  3.28s/it] 63%|██████▎   | 4690/7431 [4:41:48<2:29:11,  3.27s/it] 63%|██████▎   | 4691/7431 [4:41:51<2:28:38,  3.26s/it] 63%|██████▎   | 4692/7431 [4:41:54<2:28:17,  3.25s/it] 63%|██████▎   | 4693/7431 [4:41:58<2:27:36,  3.23s/it] 63%|██████▎   | 4694/7431 [4:42:01<2:30:33,  3.30s/it] 63%|██████▎   | 4695/7431 [4:42:04<2:30:26,  3.30s/it] 63%|██████▎   | 4696/7431 [4:42:07<2:29:17,  3.27s/it] 63%|██████▎   | 4697/7431 [4:42:11<2:31:08,  3.32s/it] 63%|██████▎   | 4698/7431 [4:42:14<2:29:52,  3.29s/it] 63%|██████▎   | 4699/7431 [4:42:17<2:30:03,  3.30s/it]08/31/2024 23:09:39 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.3345664739608765, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04146821051836014, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6033661365509033, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 3.979400873184204}
 63%|██████▎   | 4700/7431 [4:42:21<2:27:36,  3.24s/it] 63%|██████▎   | 4701/7431 [4:42:24<2:27:56,  3.25s/it] 63%|██████▎   | 4702/7431 [4:42:27<2:30:00,  3.30s/it] 63%|██████▎   | 4703/7431 [4:42:30<2:27:55,  3.25s/it] 63%|██████▎   | 4704/7431 [4:42:34<2:28:27,  3.27s/it] 63%|██████▎   | 4705/7431 [4:42:37<2:28:31,  3.27s/it] 63%|██████▎   | 4706/7431 [4:42:41<2:32:38,  3.36s/it] 63%|██████▎   | 4707/7431 [4:42:44<2:30:30,  3.32s/it] 63%|██████▎   | 4708/7431 [4:42:47<2:30:14,  3.31s/it] 63%|██████▎   | 4709/7431 [4:42:50<2:28:21,  3.27s/it] 63%|██████▎   | 4710/7431 [4:42:53<2:28:03,  3.26s/it] 63%|██████▎   | 4711/7431 [4:42:57<2:26:43,  3.24s/it] 63%|██████▎   | 4712/7431 [4:43:00<2:27:53,  3.26s/it] 63%|██████▎   | 4713/7431 [4:43:03<2:26:54,  3.24s/it] 63%|██████▎   | 4714/7431 [4:43:06<2:27:59,  3.27s/it] 63%|██████▎   | 4715/7431 [4:43:10<2:29:44,  3.31s/it] 63%|██████▎   | 4716/7431 [4:43:13<2:31:12,  3.34s/it] 63%|██████▎   | 4717/7431 [4:43:17<2:30:42,  3.33s/it] 63%|██████▎   | 4718/7431 [4:43:20<2:30:19,  3.32s/it] 64%|██████▎   | 4719/7431 [4:43:23<2:30:15,  3.32s/it] 64%|██████▎   | 4720/7431 [4:43:26<2:28:22,  3.28s/it] 64%|██████▎   | 4721/7431 [4:43:30<2:28:05,  3.28s/it] 64%|██████▎   | 4722/7431 [4:43:33<2:26:57,  3.25s/it] 64%|██████▎   | 4723/7431 [4:43:36<2:30:48,  3.34s/it] 64%|██████▎   | 4724/7431 [4:43:40<2:30:33,  3.34s/it] 64%|██████▎   | 4725/7431 [4:43:43<2:30:13,  3.33s/it] 64%|██████▎   | 4726/7431 [4:43:46<2:29:23,  3.31s/it] 64%|██████▎   | 4727/7431 [4:43:50<2:27:37,  3.28s/it] 64%|██████▎   | 4728/7431 [4:43:53<2:28:57,  3.31s/it] 64%|██████▎   | 4729/7431 [4:43:56<2:27:36,  3.28s/it] 64%|██████▎   | 4730/7431 [4:43:59<2:27:11,  3.27s/it] 64%|██████▎   | 4731/7431 [4:44:03<2:26:57,  3.27s/it] 64%|██████▎   | 4732/7431 [4:44:06<2:25:25,  3.23s/it] 64%|██████▎   | 4733/7431 [4:44:09<2:24:42,  3.22s/it] 64%|██████▎   | 4734/7431 [4:44:12<2:24:15,  3.21s/it] 64%|██████▎   | 4735/7431 [4:44:15<2:23:54,  3.20s/it] 64%|██████▎   | 4736/7431 [4:44:19<2:25:09,  3.23s/it] 64%|██████▎   | 4737/7431 [4:44:22<2:22:48,  3.18s/it] 64%|██████▍   | 4738/7431 [4:44:25<2:24:40,  3.22s/it] 64%|██████▍   | 4739/7431 [4:44:28<2:25:22,  3.24s/it] 64%|██████▍   | 4740/7431 [4:44:32<2:25:54,  3.25s/it] 64%|██████▍   | 4741/7431 [4:44:35<2:23:44,  3.21s/it] 64%|██████▍   | 4742/7431 [4:44:38<2:25:47,  3.25s/it] 64%|██████▍   | 4743/7431 [4:44:41<2:25:24,  3.25s/it] 64%|██████▍   | 4744/7431 [4:44:45<2:25:27,  3.25s/it] 64%|██████▍   | 4745/7431 [4:44:48<2:24:14,  3.22s/it] 64%|██████▍   | 4746/7431 [4:44:51<2:24:24,  3.23s/it] 64%|██████▍   | 4747/7431 [4:44:54<2:26:16,  3.27s/it] 64%|██████▍   | 4748/7431 [4:44:58<2:27:40,  3.30s/it] 64%|██████▍   | 4749/7431 [4:45:01<2:27:56,  3.31s/it]08/31/2024 23:12:23 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.1593821048736572, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03375261276960373, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.5477657318115234, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 3.7409005165100098}
 64%|██████▍   | 4750/7431 [4:45:04<2:25:43,  3.26s/it] 64%|██████▍   | 4751/7431 [4:45:07<2:24:48,  3.24s/it] 64%|██████▍   | 4752/7431 [4:45:11<2:26:07,  3.27s/it] 64%|██████▍   | 4753/7431 [4:45:14<2:26:01,  3.27s/it] 64%|██████▍   | 4754/7431 [4:45:17<2:25:29,  3.26s/it] 64%|██████▍   | 4755/7431 [4:45:20<2:25:00,  3.25s/it] 64%|██████▍   | 4756/7431 [4:45:24<2:26:09,  3.28s/it] 64%|██████▍   | 4757/7431 [4:45:27<2:24:08,  3.23s/it] 64%|██████▍   | 4758/7431 [4:45:30<2:24:23,  3.24s/it] 64%|██████▍   | 4759/7431 [4:45:33<2:25:15,  3.26s/it] 64%|██████▍   | 4760/7431 [4:45:37<2:23:54,  3.23s/it] 64%|██████▍   | 4761/7431 [4:45:40<2:22:44,  3.21s/it] 64%|██████▍   | 4762/7431 [4:45:43<2:21:33,  3.18s/it] 64%|██████▍   | 4763/7431 [4:45:46<2:24:17,  3.24s/it] 64%|██████▍   | 4764/7431 [4:45:50<2:24:59,  3.26s/it] 64%|██████▍   | 4765/7431 [4:45:53<2:25:05,  3.27s/it] 64%|██████▍   | 4766/7431 [4:45:56<2:25:47,  3.28s/it] 64%|██████▍   | 4767/7431 [4:46:00<2:26:25,  3.30s/it] 64%|██████▍   | 4768/7431 [4:46:03<2:24:07,  3.25s/it] 64%|██████▍   | 4769/7431 [4:46:06<2:22:58,  3.22s/it] 64%|██████▍   | 4770/7431 [4:46:09<2:24:59,  3.27s/it] 64%|██████▍   | 4771/7431 [4:46:12<2:24:52,  3.27s/it] 64%|██████▍   | 4772/7431 [4:46:16<2:25:33,  3.28s/it] 64%|██████▍   | 4773/7431 [4:46:19<2:23:46,  3.25s/it] 64%|██████▍   | 4774/7431 [4:46:22<2:25:12,  3.28s/it] 64%|██████▍   | 4775/7431 [4:46:26<2:24:06,  3.26s/it] 64%|██████▍   | 4776/7431 [4:46:29<2:26:09,  3.30s/it] 64%|██████▍   | 4777/7431 [4:46:32<2:27:16,  3.33s/it] 64%|██████▍   | 4778/7431 [4:46:36<2:26:38,  3.32s/it] 64%|██████▍   | 4779/7431 [4:46:39<2:26:30,  3.31s/it] 64%|██████▍   | 4780/7431 [4:46:42<2:25:09,  3.29s/it] 64%|██████▍   | 4781/7431 [4:46:45<2:23:59,  3.26s/it] 64%|██████▍   | 4782/7431 [4:46:49<2:25:34,  3.30s/it] 64%|██████▍   | 4783/7431 [4:46:52<2:23:43,  3.26s/it] 64%|██████▍   | 4784/7431 [4:46:55<2:25:29,  3.30s/it] 64%|██████▍   | 4785/7431 [4:46:59<2:27:03,  3.33s/it] 64%|██████▍   | 4786/7431 [4:47:02<2:28:02,  3.36s/it] 64%|██████▍   | 4787/7431 [4:47:05<2:25:04,  3.29s/it] 64%|██████▍   | 4788/7431 [4:47:09<2:25:28,  3.30s/it] 64%|██████▍   | 4789/7431 [4:47:12<2:24:19,  3.28s/it] 64%|██████▍   | 4790/7431 [4:47:15<2:22:15,  3.23s/it] 64%|██████▍   | 4791/7431 [4:47:18<2:24:13,  3.28s/it] 64%|██████▍   | 4792/7431 [4:47:22<2:24:45,  3.29s/it] 65%|██████▍   | 4793/7431 [4:47:25<2:23:31,  3.26s/it] 65%|██████▍   | 4794/7431 [4:47:28<2:24:30,  3.29s/it] 65%|██████▍   | 4795/7431 [4:47:32<2:27:25,  3.36s/it] 65%|██████▍   | 4796/7431 [4:47:35<2:27:02,  3.35s/it] 65%|██████▍   | 4797/7431 [4:47:38<2:25:07,  3.31s/it] 65%|██████▍   | 4798/7431 [4:47:41<2:23:40,  3.27s/it] 65%|██████▍   | 4799/7431 [4:47:45<2:24:11,  3.29s/it]08/31/2024 23:15:06 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.7808258533477783, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.050844550132751465, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7531070709228516, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.584777355194092}
 65%|██████▍   | 4800/7431 [4:47:48<2:21:37,  3.23s/it] 65%|██████▍   | 4801/7431 [4:47:51<2:22:15,  3.25s/it] 65%|██████▍   | 4802/7431 [4:47:55<2:23:57,  3.29s/it] 65%|██████▍   | 4803/7431 [4:47:58<2:22:58,  3.26s/it] 65%|██████▍   | 4804/7431 [4:48:01<2:23:45,  3.28s/it] 65%|██████▍   | 4805/7431 [4:48:05<2:27:03,  3.36s/it] 65%|██████▍   | 4806/7431 [4:48:08<2:27:10,  3.36s/it] 65%|██████▍   | 4807/7431 [4:48:11<2:26:12,  3.34s/it] 65%|██████▍   | 4808/7431 [4:48:15<2:27:44,  3.38s/it] 65%|██████▍   | 4809/7431 [4:48:18<2:24:07,  3.30s/it] 65%|██████▍   | 4810/7431 [4:48:21<2:23:53,  3.29s/it] 65%|██████▍   | 4811/7431 [4:48:24<2:22:31,  3.26s/it] 65%|██████▍   | 4812/7431 [4:48:28<2:24:50,  3.32s/it] 65%|██████▍   | 4813/7431 [4:48:31<2:23:44,  3.29s/it] 65%|██████▍   | 4814/7431 [4:48:34<2:22:42,  3.27s/it] 65%|██████▍   | 4815/7431 [4:48:37<2:22:48,  3.28s/it] 65%|██████▍   | 4816/7431 [4:48:41<2:25:38,  3.34s/it] 65%|██████▍   | 4817/7431 [4:48:44<2:24:45,  3.32s/it] 65%|██████▍   | 4818/7431 [4:48:48<2:23:37,  3.30s/it] 65%|██████▍   | 4819/7431 [4:48:51<2:25:57,  3.35s/it] 65%|██████▍   | 4820/7431 [4:48:54<2:25:10,  3.34s/it] 65%|██████▍   | 4821/7431 [4:48:57<2:23:05,  3.29s/it] 65%|██████▍   | 4822/7431 [4:49:01<2:22:03,  3.27s/it] 65%|██████▍   | 4823/7431 [4:49:04<2:21:58,  3.27s/it] 65%|██████▍   | 4824/7431 [4:49:07<2:21:11,  3.25s/it] 65%|██████▍   | 4825/7431 [4:49:10<2:22:00,  3.27s/it] 65%|██████▍   | 4826/7431 [4:49:14<2:23:10,  3.30s/it] 65%|██████▍   | 4827/7431 [4:49:17<2:21:40,  3.26s/it] 65%|██████▍   | 4828/7431 [4:49:20<2:23:51,  3.32s/it] 65%|██████▍   | 4829/7431 [4:49:24<2:21:51,  3.27s/it] 65%|██████▍   | 4830/7431 [4:49:27<2:21:19,  3.26s/it] 65%|██████▌   | 4831/7431 [4:49:30<2:22:57,  3.30s/it] 65%|██████▌   | 4832/7431 [4:49:34<2:24:12,  3.33s/it] 65%|██████▌   | 4833/7431 [4:49:37<2:21:36,  3.27s/it] 65%|██████▌   | 4834/7431 [4:49:40<2:24:23,  3.34s/it] 65%|██████▌   | 4835/7431 [4:49:43<2:21:55,  3.28s/it] 65%|██████▌   | 4836/7431 [4:49:47<2:19:47,  3.23s/it] 65%|██████▌   | 4837/7431 [4:49:50<2:18:24,  3.20s/it] 65%|██████▌   | 4838/7431 [4:49:53<2:19:19,  3.22s/it] 65%|██████▌   | 4839/7431 [4:49:56<2:19:34,  3.23s/it] 65%|██████▌   | 4840/7431 [4:49:59<2:20:09,  3.25s/it] 65%|██████▌   | 4841/7431 [4:50:03<2:18:55,  3.22s/it] 65%|██████▌   | 4842/7431 [4:50:06<2:20:12,  3.25s/it] 65%|██████▌   | 4843/7431 [4:50:09<2:21:04,  3.27s/it] 65%|██████▌   | 4844/7431 [4:50:13<2:21:24,  3.28s/it] 65%|██████▌   | 4845/7431 [4:50:16<2:20:09,  3.25s/it] 65%|██████▌   | 4846/7431 [4:50:19<2:21:57,  3.30s/it] 65%|██████▌   | 4847/7431 [4:50:22<2:20:48,  3.27s/it] 65%|██████▌   | 4848/7431 [4:50:26<2:23:48,  3.34s/it] 65%|██████▌   | 4849/7431 [4:50:29<2:21:45,  3.29s/it]08/31/2024 23:17:51 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.2294740676879883, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.033335473388433456, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.5668575763702393, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 3.829667091369629}
 65%|██████▌   | 4850/7431 [4:50:32<2:21:20,  3.29s/it] 65%|██████▌   | 4851/7431 [4:50:36<2:20:41,  3.27s/it] 65%|██████▌   | 4852/7431 [4:50:39<2:20:42,  3.27s/it] 65%|██████▌   | 4853/7431 [4:50:42<2:20:46,  3.28s/it] 65%|██████▌   | 4854/7431 [4:50:46<2:22:02,  3.31s/it] 65%|██████▌   | 4855/7431 [4:50:49<2:22:13,  3.31s/it] 65%|██████▌   | 4856/7431 [4:50:52<2:20:33,  3.27s/it] 65%|██████▌   | 4857/7431 [4:50:55<2:18:40,  3.23s/it] 65%|██████▌   | 4858/7431 [4:50:59<2:20:16,  3.27s/it] 65%|██████▌   | 4859/7431 [4:51:02<2:19:49,  3.26s/it] 65%|██████▌   | 4860/7431 [4:51:05<2:20:31,  3.28s/it] 65%|██████▌   | 4861/7431 [4:51:08<2:18:58,  3.24s/it] 65%|██████▌   | 4862/7431 [4:51:12<2:19:17,  3.25s/it] 65%|██████▌   | 4863/7431 [4:51:15<2:17:48,  3.22s/it] 65%|██████▌   | 4864/7431 [4:51:18<2:17:28,  3.21s/it] 65%|██████▌   | 4865/7431 [4:51:21<2:19:26,  3.26s/it] 65%|██████▌   | 4866/7431 [4:51:24<2:18:02,  3.23s/it] 65%|██████▌   | 4867/7431 [4:51:28<2:18:21,  3.24s/it] 66%|██████▌   | 4868/7431 [4:51:31<2:19:28,  3.27s/it] 66%|██████▌   | 4869/7431 [4:51:34<2:18:46,  3.25s/it] 66%|██████▌   | 4870/7431 [4:51:38<2:20:42,  3.30s/it] 66%|██████▌   | 4871/7431 [4:51:41<2:19:50,  3.28s/it] 66%|██████▌   | 4872/7431 [4:51:44<2:19:22,  3.27s/it] 66%|██████▌   | 4873/7431 [4:51:47<2:18:51,  3.26s/it] 66%|██████▌   | 4874/7431 [4:51:51<2:18:57,  3.26s/it] 66%|██████▌   | 4875/7431 [4:51:54<2:18:21,  3.25s/it] 66%|██████▌   | 4876/7431 [4:51:57<2:17:29,  3.23s/it] 66%|██████▌   | 4877/7431 [4:52:00<2:18:52,  3.26s/it] 66%|██████▌   | 4878/7431 [4:52:04<2:19:17,  3.27s/it] 66%|██████▌   | 4879/7431 [4:52:07<2:20:38,  3.31s/it] 66%|██████▌   | 4880/7431 [4:52:10<2:18:17,  3.25s/it] 66%|██████▌   | 4881/7431 [4:52:13<2:17:30,  3.24s/it] 66%|██████▌   | 4882/7431 [4:52:17<2:19:24,  3.28s/it] 66%|██████▌   | 4883/7431 [4:52:20<2:19:48,  3.29s/it] 66%|██████▌   | 4884/7431 [4:52:23<2:18:42,  3.27s/it] 66%|██████▌   | 4885/7431 [4:52:27<2:19:34,  3.29s/it] 66%|██████▌   | 4886/7431 [4:52:30<2:18:16,  3.26s/it] 66%|██████▌   | 4887/7431 [4:52:33<2:16:25,  3.22s/it] 66%|██████▌   | 4888/7431 [4:52:36<2:16:32,  3.22s/it] 66%|██████▌   | 4889/7431 [4:52:39<2:17:29,  3.25s/it] 66%|██████▌   | 4890/7431 [4:52:43<2:16:49,  3.23s/it] 66%|██████▌   | 4891/7431 [4:52:46<2:21:38,  3.35s/it] 66%|██████▌   | 4892/7431 [4:52:49<2:19:54,  3.31s/it] 66%|██████▌   | 4893/7431 [4:52:53<2:18:08,  3.27s/it] 66%|██████▌   | 4894/7431 [4:52:56<2:16:46,  3.23s/it] 66%|██████▌   | 4895/7431 [4:52:59<2:17:20,  3.25s/it] 66%|██████▌   | 4896/7431 [4:53:02<2:17:20,  3.25s/it] 66%|██████▌   | 4897/7431 [4:53:06<2:21:44,  3.36s/it] 66%|██████▌   | 4898/7431 [4:53:09<2:20:41,  3.33s/it] 66%|██████▌   | 4899/7431 [4:53:12<2:20:10,  3.32s/it]08/31/2024 23:20:34 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.735879898071289, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04421829432249069, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.8649494647979736, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.645047664642334}
 66%|██████▌   | 4900/7431 [4:53:16<2:18:52,  3.29s/it] 66%|██████▌   | 4901/7431 [4:53:19<2:19:20,  3.30s/it] 66%|██████▌   | 4902/7431 [4:53:22<2:19:04,  3.30s/it] 66%|██████▌   | 4903/7431 [4:53:26<2:19:13,  3.30s/it] 66%|██████▌   | 4904/7431 [4:53:29<2:17:59,  3.28s/it] 66%|██████▌   | 4905/7431 [4:53:32<2:15:50,  3.23s/it] 66%|██████▌   | 4906/7431 [4:53:35<2:19:11,  3.31s/it] 66%|██████▌   | 4907/7431 [4:53:39<2:18:44,  3.30s/it] 66%|██████▌   | 4908/7431 [4:53:42<2:18:23,  3.29s/it] 66%|██████▌   | 4909/7431 [4:53:45<2:19:13,  3.31s/it] 66%|██████▌   | 4910/7431 [4:53:49<2:18:41,  3.30s/it] 66%|██████▌   | 4911/7431 [4:53:52<2:18:56,  3.31s/it] 66%|██████▌   | 4912/7431 [4:53:55<2:18:27,  3.30s/it] 66%|██████▌   | 4913/7431 [4:53:58<2:17:05,  3.27s/it] 66%|██████▌   | 4914/7431 [4:54:02<2:17:16,  3.27s/it] 66%|██████▌   | 4915/7431 [4:54:05<2:18:31,  3.30s/it] 66%|██████▌   | 4916/7431 [4:54:08<2:18:59,  3.32s/it] 66%|██████▌   | 4917/7431 [4:54:12<2:19:32,  3.33s/it] 66%|██████▌   | 4918/7431 [4:54:15<2:17:56,  3.29s/it] 66%|██████▌   | 4919/7431 [4:54:18<2:17:44,  3.29s/it] 66%|██████▌   | 4920/7431 [4:54:22<2:17:03,  3.27s/it] 66%|██████▌   | 4921/7431 [4:54:25<2:17:42,  3.29s/it] 66%|██████▌   | 4922/7431 [4:54:28<2:15:36,  3.24s/it] 66%|██████▌   | 4923/7431 [4:54:31<2:16:21,  3.26s/it] 66%|██████▋   | 4924/7431 [4:54:34<2:14:50,  3.23s/it] 66%|██████▋   | 4925/7431 [4:54:38<2:14:34,  3.22s/it] 66%|██████▋   | 4926/7431 [4:54:41<2:16:42,  3.27s/it] 66%|██████▋   | 4927/7431 [4:54:44<2:16:44,  3.28s/it] 66%|██████▋   | 4928/7431 [4:54:48<2:15:11,  3.24s/it] 66%|██████▋   | 4929/7431 [4:54:51<2:16:55,  3.28s/it] 66%|██████▋   | 4930/7431 [4:54:54<2:16:21,  3.27s/it] 66%|██████▋   | 4931/7431 [4:54:57<2:15:18,  3.25s/it] 66%|██████▋   | 4932/7431 [4:55:01<2:18:03,  3.31s/it] 66%|██████▋   | 4933/7431 [4:55:04<2:16:14,  3.27s/it] 66%|██████▋   | 4934/7431 [4:55:07<2:14:46,  3.24s/it] 66%|██████▋   | 4935/7431 [4:55:10<2:15:32,  3.26s/it] 66%|██████▋   | 4936/7431 [4:55:14<2:16:44,  3.29s/it] 66%|██████▋   | 4937/7431 [4:55:17<2:16:00,  3.27s/it] 66%|██████▋   | 4938/7431 [4:55:20<2:12:27,  3.19s/it] 66%|██████▋   | 4939/7431 [4:55:23<2:08:27,  3.09s/it] 66%|██████▋   | 4940/7431 [4:55:26<2:05:25,  3.02s/it] 66%|██████▋   | 4941/7431 [4:55:29<2:03:44,  2.98s/it] 67%|██████▋   | 4942/7431 [4:55:32<2:02:33,  2.95s/it] 67%|██████▋   | 4943/7431 [4:55:34<2:01:42,  2.93s/it] 67%|██████▋   | 4944/7431 [4:55:37<2:01:02,  2.92s/it] 67%|██████▋   | 4945/7431 [4:55:40<2:00:37,  2.91s/it] 67%|██████▋   | 4946/7431 [4:55:43<2:00:16,  2.90s/it] 67%|██████▋   | 4947/7431 [4:55:46<1:59:59,  2.90s/it] 67%|██████▋   | 4948/7431 [4:55:49<2:00:55,  2.92s/it] 67%|██████▋   | 4949/7431 [4:55:52<2:00:26,  2.91s/it]08/31/2024 23:23:13 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.7284982204437256, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.041281282901763916, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.80458402633667, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.574363708496094}
 67%|██████▋   | 4950/7431 [4:55:55<2:00:05,  2.90s/it] 67%|██████▋   | 4951/7431 [4:55:58<1:59:47,  2.90s/it] 67%|██████▋   | 4952/7431 [4:56:00<1:59:38,  2.90s/it] 67%|██████▋   | 4953/7431 [4:56:03<1:59:24,  2.89s/it]/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
 67%|██████▋   | 4954/7431 [4:56:45<10:02:09, 14.59s/it] 67%|██████▋   | 4955/7431 [4:56:53<8:34:20, 12.46s/it]  67%|██████▋   | 4956/7431 [4:56:57<6:57:15, 10.12s/it] 67%|██████▋   | 4957/7431 [4:57:01<5:38:48,  8.22s/it] 67%|██████▋   | 4958/7431 [4:57:05<4:50:25,  7.05s/it] 67%|██████▋   | 4959/7431 [4:57:09<4:05:32,  5.96s/it] 67%|██████▋   | 4960/7431 [4:57:12<3:32:18,  5.16s/it] 67%|██████▋   | 4961/7431 [4:57:16<3:09:37,  4.61s/it] 67%|██████▋   | 4962/7431 [4:57:19<2:51:21,  4.16s/it] 67%|██████▋   | 4963/7431 [4:57:22<2:38:49,  3.86s/it] 67%|██████▋   | 4964/7431 [4:57:25<2:31:52,  3.69s/it] 67%|██████▋   | 4965/7431 [4:57:28<2:26:13,  3.56s/it] 67%|██████▋   | 4966/7431 [4:57:32<2:22:21,  3.47s/it] 67%|██████▋   | 4967/7431 [4:57:35<2:22:11,  3.46s/it] 67%|██████▋   | 4968/7431 [4:57:38<2:20:28,  3.42s/it] 67%|██████▋   | 4969/7431 [4:57:42<2:18:10,  3.37s/it] 67%|██████▋   | 4970/7431 [4:57:45<2:16:09,  3.32s/it] 67%|██████▋   | 4971/7431 [4:57:48<2:13:52,  3.27s/it] 67%|██████▋   | 4972/7431 [4:57:51<2:13:52,  3.27s/it] 67%|██████▋   | 4973/7431 [4:57:55<2:13:55,  3.27s/it] 67%|██████▋   | 4974/7431 [4:57:58<2:14:46,  3.29s/it] 67%|██████▋   | 4975/7431 [4:58:01<2:15:08,  3.30s/it] 67%|██████▋   | 4976/7431 [4:58:04<2:14:58,  3.30s/it] 67%|██████▋   | 4977/7431 [4:58:08<2:12:27,  3.24s/it] 67%|██████▋   | 4978/7431 [4:58:11<2:12:03,  3.23s/it] 67%|██████▋   | 4979/7431 [4:58:14<2:11:27,  3.22s/it] 67%|██████▋   | 4980/7431 [4:58:17<2:12:56,  3.25s/it] 67%|██████▋   | 4981/7431 [4:58:21<2:15:17,  3.31s/it] 67%|██████▋   | 4982/7431 [4:58:24<2:15:04,  3.31s/it] 67%|██████▋   | 4983/7431 [4:58:27<2:13:39,  3.28s/it] 67%|██████▋   | 4984/7431 [4:58:31<2:15:14,  3.32s/it] 67%|██████▋   | 4985/7431 [4:58:34<2:12:59,  3.26s/it] 67%|██████▋   | 4986/7431 [4:58:37<2:12:16,  3.25s/it] 67%|██████▋   | 4987/7431 [4:58:40<2:10:58,  3.22s/it] 67%|██████▋   | 4988/7431 [4:58:43<2:11:10,  3.22s/it] 67%|██████▋   | 4989/7431 [4:58:47<2:11:43,  3.24s/it] 67%|██████▋   | 4990/7431 [4:58:50<2:13:34,  3.28s/it] 67%|██████▋   | 4991/7431 [4:58:53<2:12:20,  3.25s/it] 67%|██████▋   | 4992/7431 [4:58:57<2:12:56,  3.27s/it] 67%|██████▋   | 4993/7431 [4:59:00<2:11:50,  3.24s/it] 67%|██████▋   | 4994/7431 [4:59:03<2:10:40,  3.22s/it] 67%|██████▋   | 4995/7431 [4:59:06<2:12:06,  3.25s/it] 67%|██████▋   | 4996/7431 [4:59:09<2:11:05,  3.23s/it] 67%|██████▋   | 4997/7431 [4:59:13<2:12:19,  3.26s/it] 67%|██████▋   | 4998/7431 [4:59:16<2:11:50,  3.25s/it] 67%|██████▋   | 4999/7431 [4:59:19<2:12:29,  3.27s/it]08/31/2024 23:26:40 - INFO - __main__ -   evaluate on ret%tv--msrvtt_ret task
08/31/2024 23:26:40 - INFO - __main__ -   start running ret%tv validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  1%|          | 2/221 [00:00<00:58,  3.75it/s][A
  1%|▏         | 3/221 [00:00<00:52,  4.18it/s][A
  2%|▏         | 4/221 [00:00<00:43,  5.01it/s][A
  2%|▏         | 5/221 [00:01<00:40,  5.38it/s][A
  3%|▎         | 6/221 [00:01<00:37,  5.66it/s][A
  3%|▎         | 7/221 [00:01<00:39,  5.42it/s][A
  4%|▎         | 8/221 [00:01<00:37,  5.69it/s][A
  4%|▍         | 9/221 [00:01<00:34,  6.15it/s][A
  5%|▍         | 10/221 [00:02<00:48,  4.33it/s][A
  5%|▍         | 11/221 [00:02<00:43,  4.80it/s][A
  5%|▌         | 12/221 [00:02<00:43,  4.79it/s][A
  6%|▌         | 13/221 [00:02<00:46,  4.45it/s][A
  6%|▋         | 14/221 [00:02<00:42,  4.87it/s][A
  7%|▋         | 15/221 [00:03<00:42,  4.84it/s][A
  7%|▋         | 16/221 [00:03<00:53,  3.84it/s][A
  8%|▊         | 17/221 [00:03<00:57,  3.53it/s][A
  8%|▊         | 18/221 [00:03<00:47,  4.25it/s][A
  9%|▊         | 19/221 [00:04<00:47,  4.21it/s][A
  9%|▉         | 20/221 [00:04<00:43,  4.63it/s][A
 10%|▉         | 21/221 [00:04<00:47,  4.25it/s][A
 10%|▉         | 22/221 [00:04<00:47,  4.18it/s][A
 10%|█         | 23/221 [00:05<00:47,  4.13it/s][A
 11%|█         | 24/221 [00:05<00:47,  4.16it/s][A
 11%|█▏        | 25/221 [00:05<00:48,  4.05it/s][A
 12%|█▏        | 26/221 [00:05<00:50,  3.85it/s][A
 12%|█▏        | 27/221 [00:06<00:52,  3.69it/s][A
 13%|█▎        | 28/221 [00:06<00:56,  3.43it/s][A
 13%|█▎        | 29/221 [00:06<01:00,  3.20it/s][A
 14%|█▎        | 30/221 [00:07<01:02,  3.07it/s][A
 14%|█▍        | 31/221 [00:07<00:56,  3.39it/s][A
 14%|█▍        | 32/221 [00:07<00:49,  3.83it/s][A
 15%|█▍        | 33/221 [00:07<00:48,  3.91it/s][A
 15%|█▌        | 34/221 [00:08<00:48,  3.86it/s][A
 16%|█▌        | 35/221 [00:08<00:56,  3.28it/s][A
 16%|█▋        | 36/221 [00:08<00:57,  3.20it/s][A
 17%|█▋        | 37/221 [00:09<00:54,  3.40it/s][A
 17%|█▋        | 38/221 [00:09<00:51,  3.53it/s][A
 18%|█▊        | 39/221 [00:09<00:46,  3.93it/s][A
 18%|█▊        | 40/221 [00:09<00:48,  3.71it/s][A
 19%|█▊        | 41/221 [00:10<00:53,  3.33it/s][A
 19%|█▉        | 42/221 [00:10<00:43,  4.13it/s][A
 19%|█▉        | 43/221 [00:10<00:38,  4.60it/s][A
 20%|█▉        | 44/221 [00:10<00:38,  4.60it/s][A
 20%|██        | 45/221 [00:11<00:49,  3.57it/s][A
 21%|██        | 46/221 [00:11<00:51,  3.41it/s][A
 21%|██▏       | 47/221 [00:11<00:45,  3.85it/s][A
 22%|██▏       | 48/221 [00:11<00:40,  4.32it/s][A
 22%|██▏       | 49/221 [00:12<00:43,  3.99it/s][A
 23%|██▎       | 50/221 [00:12<00:47,  3.63it/s][A
 23%|██▎       | 51/221 [00:12<00:46,  3.67it/s][A
 24%|██▎       | 52/221 [00:13<00:49,  3.43it/s][A
 24%|██▍       | 53/221 [00:13<00:44,  3.75it/s][A
 24%|██▍       | 54/221 [00:13<00:57,  2.92it/s][A
 25%|██▍       | 55/221 [00:14<00:54,  3.07it/s][A
 25%|██▌       | 56/221 [00:14<00:48,  3.43it/s][A
 26%|██▌       | 57/221 [00:14<00:47,  3.42it/s][A
 26%|██▌       | 58/221 [00:14<00:45,  3.61it/s][A
 27%|██▋       | 59/221 [00:15<00:41,  3.90it/s][A
 27%|██▋       | 60/221 [00:15<00:40,  3.97it/s][A
 28%|██▊       | 61/221 [00:15<00:40,  3.96it/s][A
 28%|██▊       | 62/221 [00:15<00:39,  3.98it/s][A
 29%|██▊       | 63/221 [00:16<00:42,  3.73it/s][A
 29%|██▉       | 64/221 [00:16<00:47,  3.28it/s][A
 29%|██▉       | 65/221 [00:16<00:43,  3.59it/s][A
 30%|██▉       | 66/221 [00:17<00:50,  3.04it/s][A
 30%|███       | 67/221 [00:17<00:49,  3.11it/s][A
 31%|███       | 68/221 [00:17<00:40,  3.81it/s][A
 31%|███       | 69/221 [00:18<00:47,  3.17it/s][A
 32%|███▏      | 70/221 [00:18<00:42,  3.55it/s][A
 32%|███▏      | 71/221 [00:18<00:44,  3.34it/s][A
 33%|███▎      | 72/221 [00:18<00:42,  3.50it/s][A
 33%|███▎      | 73/221 [00:19<00:40,  3.67it/s][A
 33%|███▎      | 74/221 [00:19<00:36,  4.03it/s][A
 34%|███▍      | 75/221 [00:19<00:40,  3.63it/s][A
 34%|███▍      | 76/221 [00:19<00:39,  3.71it/s][A
 35%|███▍      | 77/221 [00:20<00:43,  3.34it/s][A
 35%|███▌      | 78/221 [00:20<00:39,  3.59it/s][A
 36%|███▌      | 79/221 [00:20<00:48,  2.91it/s][A
 36%|███▌      | 80/221 [00:21<00:44,  3.16it/s][A
 37%|███▋      | 81/221 [00:21<00:39,  3.53it/s][A
 37%|███▋      | 82/221 [00:21<00:39,  3.51it/s][A
 38%|███▊      | 83/221 [00:22<00:45,  3.05it/s][A
 38%|███▊      | 84/221 [00:22<00:40,  3.42it/s][A
 38%|███▊      | 85/221 [00:22<00:32,  4.15it/s][A
 39%|███▉      | 86/221 [00:22<00:34,  3.92it/s][A
 39%|███▉      | 87/221 [00:23<00:38,  3.47it/s][A
 40%|███▉      | 88/221 [00:23<00:39,  3.36it/s][A
 40%|████      | 89/221 [00:23<00:38,  3.40it/s][A
 41%|████      | 90/221 [00:23<00:35,  3.67it/s][A
 41%|████      | 91/221 [00:24<00:31,  4.19it/s][A
 42%|████▏     | 92/221 [00:24<00:31,  4.10it/s][A
 42%|████▏     | 93/221 [00:24<00:33,  3.82it/s][A
 43%|████▎     | 94/221 [00:25<00:37,  3.40it/s][A
 43%|████▎     | 95/221 [00:25<00:33,  3.75it/s][A
 43%|████▎     | 96/221 [00:25<00:44,  2.79it/s][A
 44%|████▍     | 97/221 [00:26<00:39,  3.17it/s][A
 44%|████▍     | 98/221 [00:26<00:48,  2.56it/s][A
 45%|████▍     | 99/221 [00:26<00:45,  2.71it/s][A
 45%|████▌     | 100/221 [00:27<00:40,  2.97it/s][A
 46%|████▌     | 101/221 [00:27<00:35,  3.36it/s][A
 46%|████▌     | 102/221 [00:27<00:42,  2.79it/s][A
 47%|████▋     | 103/221 [00:28<00:35,  3.32it/s][A
 47%|████▋     | 104/221 [00:28<00:35,  3.31it/s][A
 48%|████▊     | 105/221 [00:28<00:37,  3.06it/s][A
 48%|████▊     | 106/221 [00:28<00:35,  3.27it/s][A
 48%|████▊     | 107/221 [00:29<00:34,  3.35it/s][A
 49%|████▉     | 108/221 [00:29<00:32,  3.48it/s][A
 49%|████▉     | 109/221 [00:29<00:28,  3.94it/s][A
 50%|████▉     | 110/221 [00:30<00:32,  3.42it/s][A
 50%|█████     | 111/221 [00:30<00:30,  3.57it/s][A
 51%|█████     | 112/221 [00:30<00:32,  3.37it/s][A
 51%|█████     | 113/221 [00:30<00:28,  3.73it/s][A
 52%|█████▏    | 114/221 [00:30<00:24,  4.44it/s][A
 52%|█████▏    | 115/221 [00:31<00:27,  3.84it/s][A
 52%|█████▏    | 116/221 [00:31<00:28,  3.68it/s][A
 53%|█████▎    | 117/221 [00:31<00:30,  3.45it/s][A
 53%|█████▎    | 118/221 [00:32<00:28,  3.65it/s][A
 54%|█████▍    | 119/221 [00:32<00:29,  3.43it/s][A
 54%|█████▍    | 120/221 [00:32<00:28,  3.52it/s][A
 55%|█████▍    | 121/221 [00:32<00:24,  4.09it/s][A
 55%|█████▌    | 122/221 [00:33<00:23,  4.15it/s][A
 56%|█████▌    | 123/221 [00:33<00:21,  4.58it/s][A
 56%|█████▌    | 124/221 [00:33<00:28,  3.43it/s][A
 57%|█████▋    | 125/221 [00:34<00:29,  3.26it/s][A
 57%|█████▋    | 126/221 [00:34<00:24,  3.80it/s][A
 57%|█████▋    | 127/221 [00:34<00:26,  3.60it/s][A
 58%|█████▊    | 128/221 [00:34<00:26,  3.48it/s][A
 58%|█████▊    | 129/221 [00:35<00:22,  4.02it/s][A
 59%|█████▉    | 130/221 [00:35<00:22,  3.98it/s][A
 59%|█████▉    | 131/221 [00:35<00:20,  4.47it/s][A
 60%|█████▉    | 132/221 [00:36<00:36,  2.43it/s][A
 60%|██████    | 133/221 [00:36<00:33,  2.61it/s][A
 61%|██████    | 134/221 [00:37<00:34,  2.54it/s][A
 61%|██████    | 135/221 [00:37<00:31,  2.69it/s][A
 62%|██████▏   | 136/221 [00:37<00:28,  2.98it/s][A
 62%|██████▏   | 137/221 [00:37<00:25,  3.33it/s][A
 62%|██████▏   | 138/221 [00:38<00:24,  3.40it/s][A
 63%|██████▎   | 139/221 [00:38<00:23,  3.53it/s][A
 63%|██████▎   | 140/221 [00:38<00:22,  3.66it/s][A
 64%|██████▍   | 141/221 [00:39<00:23,  3.39it/s][A
 64%|██████▍   | 142/221 [00:39<00:24,  3.23it/s][A
 65%|██████▍   | 143/221 [00:39<00:23,  3.25it/s][A
 65%|██████▌   | 144/221 [00:40<00:24,  3.13it/s][A
 66%|██████▌   | 145/221 [00:40<00:21,  3.49it/s][A
 67%|██████▋   | 147/221 [00:40<00:16,  4.42it/s][A
 67%|██████▋   | 148/221 [00:40<00:17,  4.13it/s][A
 67%|██████▋   | 149/221 [00:41<00:18,  3.97it/s][A
 68%|██████▊   | 150/221 [00:41<00:17,  4.10it/s][A
 68%|██████▊   | 151/221 [00:41<00:17,  3.94it/s][A
 69%|██████▉   | 152/221 [00:41<00:19,  3.50it/s][A
 69%|██████▉   | 153/221 [00:42<00:17,  3.89it/s][A
 70%|██████▉   | 154/221 [00:42<00:16,  4.08it/s][A
 70%|███████   | 155/221 [00:42<00:16,  3.89it/s][A
 71%|███████   | 156/221 [00:43<00:19,  3.39it/s][A
 71%|███████   | 157/221 [00:43<00:19,  3.26it/s][A
 71%|███████▏  | 158/221 [00:43<00:19,  3.16it/s][A
 72%|███████▏  | 159/221 [00:43<00:18,  3.35it/s][A
 72%|███████▏  | 160/221 [00:44<00:15,  4.06it/s][A
 73%|███████▎  | 161/221 [00:44<00:16,  3.60it/s][A
 73%|███████▎  | 162/221 [00:44<00:15,  3.83it/s][A
 74%|███████▍  | 163/221 [00:44<00:15,  3.64it/s][A
 74%|███████▍  | 164/221 [00:45<00:13,  4.18it/s][A
 75%|███████▍  | 165/221 [00:45<00:13,  4.24it/s][A
 75%|███████▌  | 166/221 [00:45<00:12,  4.52it/s][A
 76%|███████▌  | 167/221 [00:45<00:13,  4.03it/s][A
 76%|███████▌  | 168/221 [00:46<00:12,  4.09it/s][A
 76%|███████▋  | 169/221 [00:46<00:14,  3.70it/s][A
 77%|███████▋  | 170/221 [00:46<00:13,  3.76it/s][A
 77%|███████▋  | 171/221 [00:46<00:12,  3.91it/s][A
 78%|███████▊  | 172/221 [00:47<00:11,  4.15it/s][A
 78%|███████▊  | 173/221 [00:47<00:11,  4.18it/s][A
 79%|███████▊  | 174/221 [00:47<00:11,  4.04it/s][A
 79%|███████▉  | 175/221 [00:48<00:14,  3.28it/s][A
 80%|███████▉  | 176/221 [00:48<00:11,  3.94it/s][A
 80%|████████  | 177/221 [00:48<00:10,  4.28it/s][A
 81%|████████  | 178/221 [00:48<00:09,  4.34it/s][A
 81%|████████  | 179/221 [00:48<00:09,  4.35it/s][A
 81%|████████▏ | 180/221 [00:49<00:08,  4.60it/s][A
 82%|████████▏ | 181/221 [00:49<00:07,  5.28it/s][A
 82%|████████▏ | 182/221 [00:49<00:08,  4.74it/s][A
 83%|████████▎ | 183/221 [00:49<00:09,  3.89it/s][A
 83%|████████▎ | 184/221 [00:50<00:09,  3.75it/s][A
 84%|████████▎ | 185/221 [00:50<00:10,  3.54it/s][A
 84%|████████▍ | 186/221 [00:50<00:10,  3.20it/s][A
 85%|████████▍ | 187/221 [00:51<00:12,  2.77it/s][A
 85%|████████▌ | 188/221 [00:51<00:10,  3.03it/s][A
 86%|████████▌ | 189/221 [00:51<00:09,  3.41it/s][A
 86%|████████▌ | 190/221 [00:52<00:09,  3.37it/s][A
 87%|████████▋ | 192/221 [00:52<00:06,  4.35it/s][A
 87%|████████▋ | 193/221 [00:52<00:06,  4.07it/s][A
 88%|████████▊ | 194/221 [00:52<00:06,  4.33it/s][A
 88%|████████▊ | 195/221 [00:53<00:06,  3.92it/s][A
 89%|████████▊ | 196/221 [00:53<00:06,  3.79it/s][A
 89%|████████▉ | 197/221 [00:53<00:06,  3.73it/s][A
 90%|████████▉ | 198/221 [00:54<00:06,  3.54it/s][A
 90%|█████████ | 199/221 [00:54<00:07,  2.94it/s][A
 90%|█████████ | 200/221 [00:54<00:06,  3.18it/s][A
 91%|█████████ | 201/221 [00:55<00:06,  2.98it/s][A
 91%|█████████▏| 202/221 [00:55<00:06,  2.90it/s][A
 92%|█████████▏| 203/221 [00:55<00:06,  2.75it/s][A
 92%|█████████▏| 204/221 [00:56<00:06,  2.73it/s][A
 93%|█████████▎| 205/221 [00:56<00:05,  3.10it/s][A
 93%|█████████▎| 206/221 [00:56<00:05,  2.93it/s][A
 94%|█████████▎| 207/221 [00:57<00:04,  3.46it/s][A
 94%|█████████▍| 208/221 [00:57<00:03,  3.39it/s][A
 95%|█████████▍| 209/221 [00:57<00:03,  3.72it/s][A
 95%|█████████▌| 210/221 [00:57<00:02,  3.89it/s][A
 95%|█████████▌| 211/221 [00:58<00:02,  3.38it/s][A
 96%|█████████▌| 212/221 [00:58<00:02,  3.65it/s][A
 97%|█████████▋| 214/221 [00:58<00:01,  4.01it/s][A
 97%|█████████▋| 215/221 [00:58<00:01,  4.53it/s][A
 98%|█████████▊| 216/221 [00:59<00:01,  3.98it/s][A
 98%|█████████▊| 217/221 [00:59<00:01,  3.65it/s][A
 99%|█████████▊| 218/221 [00:59<00:00,  3.69it/s][A
 99%|█████████▉| 219/221 [01:00<00:00,  3.83it/s][A
100%|█████████▉| 220/221 [01:00<00:00,  4.06it/s][A
100%|██████████| 221/221 [01:00<00:00,  3.88it/s][A100%|██████████| 221/221 [01:00<00:00,  3.64it/s]
08/31/2024 23:29:00 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forward=====step 4999--===========

08/31/2024 23:29:00 - INFO - __main__ -   {'area_r1': 12.3, 'area_recall': '12.3/27.9/35.0', 'area_ravg': 25.1}
08/31/2024 23:29:00 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_backard=====step 4999--===========

08/31/2024 23:29:00 - INFO - __main__ -   {'forward_r1': 44.9, 'forward_recall': '44.9/74.4/85.0', 'forward_ravg': 68.1}
08/31/2024 23:29:00 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forw_with_video=====step 4999--===========

08/31/2024 23:29:00 - INFO - __main__ -   {'forward_r1': 61.4, 'forward_recall': '61.4/85.5/90.7', 'forward_ravg': 79.2}
08/31/2024 23:29:00 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itc_tv=====step 4999--===========

08/31/2024 23:29:00 - INFO - __main__ -   {'video_r1': 45.4, 'video_recall': '45.4/75.9/83.6', 'video_ravg': 68.3}
08/31/2024 23:29:00 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itc_tv====history best step: 2999=======

08/31/2024 23:29:00 - INFO - __main__ -   {'video_r1': 46.0, 'video_recall': '46.0/75.3/83.9', 'video_ravg': 68.4}
08/31/2024 23:29:00 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itm_tv=====step 4999--===========

08/31/2024 23:29:00 - INFO - __main__ -   {'video_r1': 56.1, 'video_recall': '56.1/78.2/84.5', 'video_ravg': 72.9}
08/31/2024 23:29:00 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itm_tv====history best step: 3999=======

08/31/2024 23:29:00 - INFO - __main__ -   {'video_r1': 57.8, 'video_recall': '57.8/78.1/84.8', 'video_ravg': 73.6}
08/31/2024 23:29:26 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.6583889722824097, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03695880249142647, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6195783615112305, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.3149261474609375}
 67%|██████▋   | 5000/7431 [5:02:07<35:36:04, 52.72s/it] 67%|██████▋   | 5001/7431 [5:02:11<25:33:06, 37.85s/it] 67%|██████▋   | 5002/7431 [5:02:14<18:32:00, 27.47s/it] 67%|██████▋   | 5003/7431 [5:02:17<13:38:42, 20.23s/it] 67%|██████▋   | 5004/7431 [5:02:20<10:13:42, 15.17s/it] 67%|██████▋   | 5005/7431 [5:02:24<7:48:13, 11.58s/it]  67%|██████▋   | 5006/7431 [5:02:27<6:07:43,  9.10s/it] 67%|██████▋   | 5007/7431 [5:02:30<4:55:55,  7.32s/it] 67%|██████▋   | 5008/7431 [5:02:33<4:05:22,  6.08s/it] 67%|██████▋   | 5009/7431 [5:02:37<3:34:47,  5.32s/it] 67%|██████▋   | 5010/7431 [5:02:41<3:16:16,  4.86s/it] 67%|██████▋   | 5011/7431 [5:02:44<2:56:17,  4.37s/it] 67%|██████▋   | 5012/7431 [5:02:47<2:42:16,  4.03s/it] 67%|██████▋   | 5013/7431 [5:02:50<2:32:15,  3.78s/it] 67%|██████▋   | 5014/7431 [5:02:54<2:25:26,  3.61s/it] 67%|██████▋   | 5015/7431 [5:02:57<2:20:25,  3.49s/it] 68%|██████▊   | 5016/7431 [5:03:00<2:15:17,  3.36s/it] 68%|██████▊   | 5017/7431 [5:03:03<2:16:07,  3.38s/it] 68%|██████▊   | 5018/7431 [5:03:06<2:13:36,  3.32s/it] 68%|██████▊   | 5019/7431 [5:03:10<2:14:03,  3.33s/it] 68%|██████▊   | 5020/7431 [5:03:13<2:14:28,  3.35s/it] 68%|██████▊   | 5021/7431 [5:03:16<2:12:19,  3.29s/it] 68%|██████▊   | 5022/7431 [5:03:20<2:13:31,  3.33s/it] 68%|██████▊   | 5023/7431 [5:03:23<2:11:17,  3.27s/it] 68%|██████▊   | 5024/7431 [5:03:26<2:10:56,  3.26s/it] 68%|██████▊   | 5025/7431 [5:03:29<2:11:35,  3.28s/it] 68%|██████▊   | 5026/7431 [5:03:33<2:10:48,  3.26s/it] 68%|██████▊   | 5027/7431 [5:03:36<2:11:57,  3.29s/it] 68%|██████▊   | 5028/7431 [5:03:39<2:10:09,  3.25s/it] 68%|██████▊   | 5029/7431 [5:03:42<2:07:31,  3.19s/it] 68%|██████▊   | 5030/7431 [5:03:46<2:08:52,  3.22s/it] 68%|██████▊   | 5031/7431 [5:03:49<2:07:56,  3.20s/it] 68%|██████▊   | 5032/7431 [5:03:52<2:09:07,  3.23s/it] 68%|██████▊   | 5033/7431 [5:03:55<2:09:25,  3.24s/it] 68%|██████▊   | 5034/7431 [5:03:58<2:07:30,  3.19s/it] 68%|██████▊   | 5035/7431 [5:04:02<2:09:26,  3.24s/it] 68%|██████▊   | 5036/7431 [5:04:05<2:08:55,  3.23s/it] 68%|██████▊   | 5037/7431 [5:04:08<2:09:35,  3.25s/it] 68%|██████▊   | 5038/7431 [5:04:12<2:11:20,  3.29s/it] 68%|██████▊   | 5039/7431 [5:04:15<2:11:07,  3.29s/it] 68%|██████▊   | 5040/7431 [5:04:18<2:09:47,  3.26s/it] 68%|██████▊   | 5041/7431 [5:04:21<2:08:07,  3.22s/it] 68%|██████▊   | 5042/7431 [5:04:24<2:09:23,  3.25s/it] 68%|██████▊   | 5043/7431 [5:04:28<2:10:46,  3.29s/it] 68%|██████▊   | 5044/7431 [5:04:31<2:11:39,  3.31s/it] 68%|██████▊   | 5045/7431 [5:04:35<2:12:05,  3.32s/it] 68%|██████▊   | 5046/7431 [5:04:38<2:10:44,  3.29s/it] 68%|██████▊   | 5047/7431 [5:04:41<2:12:22,  3.33s/it] 68%|██████▊   | 5048/7431 [5:04:44<2:10:45,  3.29s/it] 68%|██████▊   | 5049/7431 [5:04:48<2:13:41,  3.37s/it]08/31/2024 23:32:10 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.2147080898284912, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.0344768725335598, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.588137149810791, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 3.837322235107422}
 68%|██████▊   | 5050/7431 [5:04:51<2:13:10,  3.36s/it] 68%|██████▊   | 5051/7431 [5:04:55<2:11:51,  3.32s/it] 68%|██████▊   | 5052/7431 [5:04:58<2:10:32,  3.29s/it] 68%|██████▊   | 5053/7431 [5:05:01<2:09:22,  3.26s/it] 68%|██████▊   | 5054/7431 [5:05:04<2:10:28,  3.29s/it] 68%|██████▊   | 5055/7431 [5:05:08<2:09:13,  3.26s/it] 68%|██████▊   | 5056/7431 [5:05:11<2:11:04,  3.31s/it] 68%|██████▊   | 5057/7431 [5:05:14<2:09:57,  3.28s/it] 68%|██████▊   | 5058/7431 [5:05:18<2:10:33,  3.30s/it] 68%|██████▊   | 5059/7431 [5:05:21<2:09:32,  3.28s/it] 68%|██████▊   | 5060/7431 [5:05:24<2:12:13,  3.35s/it] 68%|██████▊   | 5061/7431 [5:05:27<2:11:13,  3.32s/it] 68%|██████▊   | 5062/7431 [5:05:31<2:11:26,  3.33s/it] 68%|██████▊   | 5063/7431 [5:05:34<2:10:26,  3.30s/it] 68%|██████▊   | 5064/7431 [5:05:37<2:09:31,  3.28s/it] 68%|██████▊   | 5065/7431 [5:05:41<2:11:18,  3.33s/it] 68%|██████▊   | 5066/7431 [5:05:44<2:09:50,  3.29s/it] 68%|██████▊   | 5067/7431 [5:05:47<2:08:22,  3.26s/it] 68%|██████▊   | 5068/7431 [5:05:50<2:07:29,  3.24s/it] 68%|██████▊   | 5069/7431 [5:05:54<2:08:10,  3.26s/it] 68%|██████▊   | 5070/7431 [5:05:57<2:08:12,  3.26s/it] 68%|██████▊   | 5071/7431 [5:06:00<2:08:22,  3.26s/it] 68%|██████▊   | 5072/7431 [5:06:03<2:07:10,  3.23s/it] 68%|██████▊   | 5073/7431 [5:06:07<2:06:44,  3.22s/it] 68%|██████▊   | 5074/7431 [5:06:10<2:07:14,  3.24s/it] 68%|██████▊   | 5075/7431 [5:06:13<2:08:07,  3.26s/it] 68%|██████▊   | 5076/7431 [5:06:16<2:06:55,  3.23s/it] 68%|██████▊   | 5077/7431 [5:06:19<2:05:20,  3.19s/it] 68%|██████▊   | 5078/7431 [5:06:23<2:06:52,  3.24s/it] 68%|██████▊   | 5079/7431 [5:06:26<2:08:30,  3.28s/it] 68%|██████▊   | 5080/7431 [5:06:29<2:09:37,  3.31s/it] 68%|██████▊   | 5081/7431 [5:06:33<2:10:35,  3.33s/it] 68%|██████▊   | 5082/7431 [5:06:36<2:09:03,  3.30s/it] 68%|██████▊   | 5083/7431 [5:06:39<2:07:28,  3.26s/it] 68%|██████▊   | 5084/7431 [5:06:43<2:07:55,  3.27s/it] 68%|██████▊   | 5085/7431 [5:06:46<2:06:31,  3.24s/it] 68%|██████▊   | 5086/7431 [5:06:49<2:06:50,  3.25s/it] 68%|██████▊   | 5087/7431 [5:06:52<2:06:23,  3.24s/it] 68%|██████▊   | 5088/7431 [5:06:56<2:07:54,  3.28s/it] 68%|██████▊   | 5089/7431 [5:06:59<2:09:16,  3.31s/it] 68%|██████▊   | 5090/7431 [5:07:02<2:06:19,  3.24s/it] 69%|██████▊   | 5091/7431 [5:07:05<2:06:02,  3.23s/it] 69%|██████▊   | 5092/7431 [5:07:09<2:07:02,  3.26s/it] 69%|██████▊   | 5093/7431 [5:07:12<2:08:28,  3.30s/it] 69%|██████▊   | 5094/7431 [5:07:15<2:07:30,  3.27s/it] 69%|██████▊   | 5095/7431 [5:07:18<2:06:04,  3.24s/it] 69%|██████▊   | 5096/7431 [5:07:22<2:06:58,  3.26s/it] 69%|██████▊   | 5097/7431 [5:07:25<2:06:23,  3.25s/it] 69%|██████▊   | 5098/7431 [5:07:28<2:07:25,  3.28s/it] 69%|██████▊   | 5099/7431 [5:07:31<2:06:52,  3.26s/it]08/31/2024 23:34:53 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.6951463222503662, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.038177601993083954, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6408326625823975, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.374156475067139}
 69%|██████▊   | 5100/7431 [5:07:35<2:07:17,  3.28s/it] 69%|██████▊   | 5101/7431 [5:07:38<2:06:11,  3.25s/it] 69%|██████▊   | 5102/7431 [5:07:41<2:07:02,  3.27s/it] 69%|██████▊   | 5103/7431 [5:07:45<2:08:51,  3.32s/it] 69%|██████▊   | 5104/7431 [5:07:48<2:07:06,  3.28s/it] 69%|██████▊   | 5105/7431 [5:07:51<2:08:10,  3.31s/it] 69%|██████▊   | 5106/7431 [5:07:55<2:09:42,  3.35s/it] 69%|██████▊   | 5107/7431 [5:07:58<2:07:00,  3.28s/it] 69%|██████▊   | 5108/7431 [5:08:01<2:07:26,  3.29s/it] 69%|██████▉   | 5109/7431 [5:08:04<2:06:10,  3.26s/it] 69%|██████▉   | 5110/7431 [5:08:08<2:05:52,  3.25s/it] 69%|██████▉   | 5111/7431 [5:08:11<2:04:30,  3.22s/it] 69%|██████▉   | 5112/7431 [5:08:14<2:06:08,  3.26s/it] 69%|██████▉   | 5113/7431 [5:08:17<2:08:00,  3.31s/it] 69%|██████▉   | 5114/7431 [5:08:21<2:09:10,  3.35s/it] 69%|██████▉   | 5115/7431 [5:08:24<2:07:49,  3.31s/it] 69%|██████▉   | 5116/7431 [5:08:27<2:08:12,  3.32s/it] 69%|██████▉   | 5117/7431 [5:08:31<2:05:24,  3.25s/it] 69%|██████▉   | 5118/7431 [5:08:34<2:05:37,  3.26s/it] 69%|██████▉   | 5119/7431 [5:08:37<2:06:04,  3.27s/it] 69%|██████▉   | 5120/7431 [5:08:40<2:06:05,  3.27s/it] 69%|██████▉   | 5121/7431 [5:08:44<2:06:19,  3.28s/it] 69%|██████▉   | 5122/7431 [5:08:47<2:06:24,  3.28s/it] 69%|██████▉   | 5123/7431 [5:08:50<2:05:21,  3.26s/it] 69%|██████▉   | 5124/7431 [5:08:53<2:05:22,  3.26s/it] 69%|██████▉   | 5125/7431 [5:08:57<2:05:10,  3.26s/it] 69%|██████▉   | 5126/7431 [5:09:00<2:04:35,  3.24s/it] 69%|██████▉   | 5127/7431 [5:09:03<2:05:14,  3.26s/it] 69%|██████▉   | 5128/7431 [5:09:06<2:04:45,  3.25s/it] 69%|██████▉   | 5129/7431 [5:09:10<2:04:26,  3.24s/it] 69%|██████▉   | 5130/7431 [5:09:13<2:04:41,  3.25s/it] 69%|██████▉   | 5131/7431 [5:09:16<2:04:37,  3.25s/it] 69%|██████▉   | 5132/7431 [5:09:19<2:03:09,  3.21s/it] 69%|██████▉   | 5133/7431 [5:09:23<2:03:23,  3.22s/it] 69%|██████▉   | 5134/7431 [5:09:26<2:04:21,  3.25s/it] 69%|██████▉   | 5135/7431 [5:09:29<2:04:04,  3.24s/it] 69%|██████▉   | 5136/7431 [5:09:32<2:05:06,  3.27s/it] 69%|██████▉   | 5137/7431 [5:09:36<2:04:16,  3.25s/it] 69%|██████▉   | 5138/7431 [5:09:39<2:03:26,  3.23s/it] 69%|██████▉   | 5139/7431 [5:09:42<2:04:33,  3.26s/it] 69%|██████▉   | 5140/7431 [5:09:46<2:06:42,  3.32s/it] 69%|██████▉   | 5141/7431 [5:09:49<2:07:35,  3.34s/it] 69%|██████▉   | 5142/7431 [5:09:52<2:06:42,  3.32s/it] 69%|██████▉   | 5143/7431 [5:09:56<2:06:07,  3.31s/it] 69%|██████▉   | 5144/7431 [5:09:59<2:04:51,  3.28s/it] 69%|██████▉   | 5145/7431 [5:10:02<2:05:15,  3.29s/it] 69%|██████▉   | 5146/7431 [5:10:05<2:06:14,  3.31s/it] 69%|██████▉   | 5147/7431 [5:10:09<2:05:46,  3.30s/it] 69%|██████▉   | 5148/7431 [5:10:12<2:05:50,  3.31s/it] 69%|██████▉   | 5149/7431 [5:10:15<2:03:00,  3.23s/it]08/31/2024 23:37:37 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.349295735359192, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03567581623792648, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6243443489074707, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.0093159675598145}
 69%|██████▉   | 5150/7431 [5:10:18<2:03:00,  3.24s/it] 69%|██████▉   | 5151/7431 [5:10:22<2:07:11,  3.35s/it] 69%|██████▉   | 5152/7431 [5:10:25<2:06:09,  3.32s/it] 69%|██████▉   | 5153/7431 [5:10:28<2:04:12,  3.27s/it] 69%|██████▉   | 5154/7431 [5:10:32<2:06:52,  3.34s/it] 69%|██████▉   | 5155/7431 [5:10:35<2:05:58,  3.32s/it] 69%|██████▉   | 5156/7431 [5:10:38<2:05:18,  3.30s/it] 69%|██████▉   | 5157/7431 [5:10:42<2:04:31,  3.29s/it] 69%|██████▉   | 5158/7431 [5:10:45<2:03:45,  3.27s/it] 69%|██████▉   | 5159/7431 [5:10:48<2:03:44,  3.27s/it] 69%|██████▉   | 5160/7431 [5:10:51<2:03:03,  3.25s/it] 69%|██████▉   | 5161/7431 [5:10:55<2:03:19,  3.26s/it] 69%|██████▉   | 5162/7431 [5:10:58<2:04:07,  3.28s/it] 69%|██████▉   | 5163/7431 [5:11:01<2:05:33,  3.32s/it] 69%|██████▉   | 5164/7431 [5:11:05<2:04:15,  3.29s/it] 70%|██████▉   | 5165/7431 [5:11:08<2:03:25,  3.27s/it] 70%|██████▉   | 5166/7431 [5:11:11<2:04:09,  3.29s/it] 70%|██████▉   | 5167/7431 [5:11:15<2:04:29,  3.30s/it] 70%|██████▉   | 5168/7431 [5:11:18<2:03:51,  3.28s/it] 70%|██████▉   | 5169/7431 [5:11:21<2:04:06,  3.29s/it] 70%|██████▉   | 5170/7431 [5:11:24<2:03:32,  3.28s/it] 70%|██████▉   | 5171/7431 [5:11:28<2:03:32,  3.28s/it] 70%|██████▉   | 5172/7431 [5:11:31<2:04:09,  3.30s/it] 70%|██████▉   | 5173/7431 [5:11:34<2:02:22,  3.25s/it] 70%|██████▉   | 5174/7431 [5:11:38<2:04:39,  3.31s/it] 70%|██████▉   | 5175/7431 [5:11:41<2:02:31,  3.26s/it] 70%|██████▉   | 5176/7431 [5:11:44<2:02:48,  3.27s/it] 70%|██████▉   | 5177/7431 [5:11:47<2:02:02,  3.25s/it] 70%|██████▉   | 5178/7431 [5:11:50<2:01:50,  3.24s/it] 70%|██████▉   | 5179/7431 [5:11:54<2:02:15,  3.26s/it] 70%|██████▉   | 5180/7431 [5:11:57<2:02:30,  3.27s/it] 70%|██████▉   | 5181/7431 [5:12:00<2:01:58,  3.25s/it] 70%|██████▉   | 5182/7431 [5:12:04<2:05:06,  3.34s/it] 70%|██████▉   | 5183/7431 [5:12:07<2:03:40,  3.30s/it] 70%|██████▉   | 5184/7431 [5:12:10<2:02:43,  3.28s/it] 70%|██████▉   | 5185/7431 [5:12:13<2:02:56,  3.28s/it] 70%|██████▉   | 5186/7431 [5:12:17<2:03:27,  3.30s/it] 70%|██████▉   | 5187/7431 [5:12:20<2:02:33,  3.28s/it] 70%|██████▉   | 5188/7431 [5:12:23<2:03:02,  3.29s/it] 70%|██████▉   | 5189/7431 [5:12:26<2:01:08,  3.24s/it] 70%|██████▉   | 5190/7431 [5:12:30<2:01:55,  3.26s/it] 70%|██████▉   | 5191/7431 [5:12:33<2:02:31,  3.28s/it] 70%|██████▉   | 5192/7431 [5:12:36<2:01:40,  3.26s/it] 70%|██████▉   | 5193/7431 [5:12:40<2:02:05,  3.27s/it] 70%|██████▉   | 5194/7431 [5:12:43<2:02:27,  3.28s/it] 70%|██████▉   | 5195/7431 [5:12:46<2:02:40,  3.29s/it] 70%|██████▉   | 5196/7431 [5:12:49<2:01:58,  3.27s/it] 70%|██████▉   | 5197/7431 [5:12:53<1:59:45,  3.22s/it] 70%|██████▉   | 5198/7431 [5:12:56<2:01:29,  3.26s/it] 70%|██████▉   | 5199/7431 [5:12:59<1:59:58,  3.22s/it]08/31/2024 23:40:21 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.5548622608184814, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04479430243372917, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.644951820373535, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.244608402252197}
 70%|██████▉   | 5200/7431 [5:13:02<2:01:03,  3.26s/it] 70%|██████▉   | 5201/7431 [5:13:06<2:01:08,  3.26s/it] 70%|███████   | 5202/7431 [5:13:09<2:01:14,  3.26s/it] 70%|███████   | 5203/7431 [5:13:12<2:01:49,  3.28s/it] 70%|███████   | 5204/7431 [5:13:16<2:01:50,  3.28s/it] 70%|███████   | 5205/7431 [5:13:19<2:00:39,  3.25s/it] 70%|███████   | 5206/7431 [5:13:22<2:00:23,  3.25s/it] 70%|███████   | 5207/7431 [5:13:25<2:00:00,  3.24s/it] 70%|███████   | 5208/7431 [5:13:28<1:59:10,  3.22s/it] 70%|███████   | 5209/7431 [5:13:32<1:58:22,  3.20s/it] 70%|███████   | 5210/7431 [5:13:35<1:58:53,  3.21s/it] 70%|███████   | 5211/7431 [5:13:38<2:00:33,  3.26s/it] 70%|███████   | 5212/7431 [5:13:41<2:01:14,  3.28s/it] 70%|███████   | 5213/7431 [5:13:45<2:00:47,  3.27s/it] 70%|███████   | 5214/7431 [5:13:48<2:01:19,  3.28s/it] 70%|███████   | 5215/7431 [5:13:51<2:01:30,  3.29s/it] 70%|███████   | 5216/7431 [5:13:54<1:59:33,  3.24s/it] 70%|███████   | 5217/7431 [5:13:58<2:00:03,  3.25s/it] 70%|███████   | 5218/7431 [5:14:01<2:00:34,  3.27s/it] 70%|███████   | 5219/7431 [5:14:04<1:59:41,  3.25s/it] 70%|███████   | 5220/7431 [5:14:07<1:57:21,  3.18s/it] 70%|███████   | 5221/7431 [5:14:11<1:58:08,  3.21s/it] 70%|███████   | 5222/7431 [5:14:14<2:00:27,  3.27s/it] 70%|███████   | 5223/7431 [5:14:17<2:00:03,  3.26s/it] 70%|███████   | 5224/7431 [5:14:20<2:00:36,  3.28s/it] 70%|███████   | 5225/7431 [5:14:24<1:58:19,  3.22s/it] 70%|███████   | 5226/7431 [5:14:27<1:57:37,  3.20s/it] 70%|███████   | 5227/7431 [5:14:30<1:59:11,  3.24s/it] 70%|███████   | 5228/7431 [5:14:33<1:57:36,  3.20s/it] 70%|███████   | 5229/7431 [5:14:36<1:56:03,  3.16s/it] 70%|███████   | 5230/7431 [5:14:40<1:58:05,  3.22s/it] 70%|███████   | 5231/7431 [5:14:43<1:58:10,  3.22s/it] 70%|███████   | 5232/7431 [5:14:46<1:57:56,  3.22s/it] 70%|███████   | 5233/7431 [5:14:49<1:59:51,  3.27s/it] 70%|███████   | 5234/7431 [5:14:53<2:02:05,  3.33s/it] 70%|███████   | 5235/7431 [5:14:56<2:03:16,  3.37s/it] 70%|███████   | 5236/7431 [5:15:00<2:01:01,  3.31s/it] 70%|███████   | 5237/7431 [5:15:03<2:00:16,  3.29s/it] 70%|███████   | 5238/7431 [5:15:06<1:59:45,  3.28s/it] 71%|███████   | 5239/7431 [5:15:09<2:00:28,  3.30s/it] 71%|███████   | 5240/7431 [5:15:12<1:57:35,  3.22s/it] 71%|███████   | 5241/7431 [5:15:16<1:57:33,  3.22s/it] 71%|███████   | 5242/7431 [5:15:19<1:57:16,  3.21s/it] 71%|███████   | 5243/7431 [5:15:22<1:55:49,  3.18s/it] 71%|███████   | 5244/7431 [5:15:25<1:57:44,  3.23s/it] 71%|███████   | 5245/7431 [5:15:29<1:58:44,  3.26s/it] 71%|███████   | 5246/7431 [5:15:32<1:59:18,  3.28s/it] 71%|███████   | 5247/7431 [5:15:35<1:57:10,  3.22s/it] 71%|███████   | 5248/7431 [5:15:38<1:57:28,  3.23s/it] 71%|███████   | 5249/7431 [5:15:41<1:56:46,  3.21s/it]08/31/2024 23:43:03 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.6071820259094238, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.044096607714891434, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7058401107788086, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.357118606567383}
 71%|███████   | 5250/7431 [5:15:45<1:59:52,  3.30s/it] 71%|███████   | 5251/7431 [5:15:48<1:59:34,  3.29s/it] 71%|███████   | 5252/7431 [5:15:51<1:59:05,  3.28s/it] 71%|███████   | 5253/7431 [5:15:55<1:58:21,  3.26s/it] 71%|███████   | 5254/7431 [5:15:58<1:58:33,  3.27s/it] 71%|███████   | 5255/7431 [5:16:01<1:57:46,  3.25s/it] 71%|███████   | 5256/7431 [5:16:05<1:59:04,  3.29s/it] 71%|███████   | 5257/7431 [5:16:08<1:57:45,  3.25s/it] 71%|███████   | 5258/7431 [5:16:11<1:55:56,  3.20s/it] 71%|███████   | 5259/7431 [5:16:14<1:56:34,  3.22s/it] 71%|███████   | 5260/7431 [5:16:17<1:56:30,  3.22s/it] 71%|███████   | 5261/7431 [5:16:20<1:56:28,  3.22s/it] 71%|███████   | 5262/7431 [5:16:24<1:56:21,  3.22s/it] 71%|███████   | 5263/7431 [5:16:27<1:56:20,  3.22s/it] 71%|███████   | 5264/7431 [5:16:30<1:59:02,  3.30s/it] 71%|███████   | 5265/7431 [5:16:34<2:01:45,  3.37s/it] 71%|███████   | 5266/7431 [5:16:37<2:01:58,  3.38s/it] 71%|███████   | 5267/7431 [5:16:41<2:00:34,  3.34s/it] 71%|███████   | 5268/7431 [5:16:44<1:57:50,  3.27s/it] 71%|███████   | 5269/7431 [5:16:47<1:57:27,  3.26s/it] 71%|███████   | 5270/7431 [5:16:50<1:58:29,  3.29s/it] 71%|███████   | 5271/7431 [5:16:53<1:56:25,  3.23s/it] 71%|███████   | 5272/7431 [5:16:57<1:55:48,  3.22s/it] 71%|███████   | 5273/7431 [5:17:00<1:57:24,  3.26s/it] 71%|███████   | 5274/7431 [5:17:03<1:56:48,  3.25s/it] 71%|███████   | 5275/7431 [5:17:06<1:55:38,  3.22s/it] 71%|███████   | 5276/7431 [5:17:10<1:55:21,  3.21s/it] 71%|███████   | 5277/7431 [5:17:13<1:55:41,  3.22s/it] 71%|███████   | 5278/7431 [5:17:16<1:57:08,  3.26s/it] 71%|███████   | 5279/7431 [5:17:19<1:55:35,  3.22s/it] 71%|███████   | 5280/7431 [5:17:23<1:56:00,  3.24s/it] 71%|███████   | 5281/7431 [5:17:26<1:55:39,  3.23s/it] 71%|███████   | 5282/7431 [5:17:29<1:53:25,  3.17s/it] 71%|███████   | 5283/7431 [5:17:32<1:55:22,  3.22s/it] 71%|███████   | 5284/7431 [5:17:36<1:59:09,  3.33s/it] 71%|███████   | 5285/7431 [5:17:39<1:57:44,  3.29s/it] 71%|███████   | 5286/7431 [5:17:42<1:56:52,  3.27s/it] 71%|███████   | 5287/7431 [5:17:45<1:56:21,  3.26s/it] 71%|███████   | 5288/7431 [5:17:49<1:56:34,  3.26s/it] 71%|███████   | 5289/7431 [5:17:52<1:56:39,  3.27s/it] 71%|███████   | 5290/7431 [5:17:55<1:55:34,  3.24s/it] 71%|███████   | 5291/7431 [5:17:58<1:55:23,  3.24s/it] 71%|███████   | 5292/7431 [5:18:02<1:56:22,  3.26s/it] 71%|███████   | 5293/7431 [5:18:05<1:56:35,  3.27s/it] 71%|███████   | 5294/7431 [5:18:08<1:55:41,  3.25s/it] 71%|███████▏  | 5295/7431 [5:18:11<1:55:01,  3.23s/it] 71%|███████▏  | 5296/7431 [5:18:14<1:54:37,  3.22s/it] 71%|███████▏  | 5297/7431 [5:18:18<1:54:46,  3.23s/it] 71%|███████▏  | 5298/7431 [5:18:21<1:55:53,  3.26s/it] 71%|███████▏  | 5299/7431 [5:18:24<1:56:21,  3.27s/it]08/31/2024 23:45:46 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.4855214357376099, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03953617066144943, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6490638256073, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.174121379852295}
 71%|███████▏  | 5300/7431 [5:18:28<1:55:49,  3.26s/it] 71%|███████▏  | 5301/7431 [5:18:31<1:54:33,  3.23s/it] 71%|███████▏  | 5302/7431 [5:18:34<1:55:20,  3.25s/it] 71%|███████▏  | 5303/7431 [5:18:37<1:54:50,  3.24s/it] 71%|███████▏  | 5304/7431 [5:18:41<1:54:43,  3.24s/it] 71%|███████▏  | 5305/7431 [5:18:44<1:56:18,  3.28s/it] 71%|███████▏  | 5306/7431 [5:18:47<1:55:28,  3.26s/it] 71%|███████▏  | 5307/7431 [5:18:50<1:54:09,  3.22s/it] 71%|███████▏  | 5308/7431 [5:18:54<1:55:03,  3.25s/it] 71%|███████▏  | 5309/7431 [5:18:57<1:54:17,  3.23s/it] 71%|███████▏  | 5310/7431 [5:19:00<1:55:02,  3.25s/it] 71%|███████▏  | 5311/7431 [5:19:03<1:56:37,  3.30s/it] 71%|███████▏  | 5312/7431 [5:19:07<1:58:29,  3.36s/it] 71%|███████▏  | 5313/7431 [5:19:10<1:56:30,  3.30s/it] 72%|███████▏  | 5314/7431 [5:19:13<1:55:10,  3.26s/it] 72%|███████▏  | 5315/7431 [5:19:17<1:55:10,  3.27s/it] 72%|███████▏  | 5316/7431 [5:19:20<1:57:09,  3.32s/it] 72%|███████▏  | 5317/7431 [5:19:23<1:55:14,  3.27s/it] 72%|███████▏  | 5318/7431 [5:19:26<1:54:30,  3.25s/it] 72%|███████▏  | 5319/7431 [5:19:30<1:53:25,  3.22s/it] 72%|███████▏  | 5320/7431 [5:19:33<1:53:20,  3.22s/it] 72%|███████▏  | 5321/7431 [5:19:36<1:52:55,  3.21s/it] 72%|███████▏  | 5322/7431 [5:19:39<1:52:41,  3.21s/it] 72%|███████▏  | 5323/7431 [5:19:42<1:53:02,  3.22s/it] 72%|███████▏  | 5324/7431 [5:19:46<1:54:14,  3.25s/it] 72%|███████▏  | 5325/7431 [5:19:49<1:54:13,  3.25s/it] 72%|███████▏  | 5326/7431 [5:19:52<1:53:18,  3.23s/it] 72%|███████▏  | 5327/7431 [5:19:55<1:52:35,  3.21s/it] 72%|███████▏  | 5328/7431 [5:19:59<1:52:41,  3.22s/it] 72%|███████▏  | 5329/7431 [5:20:02<1:52:37,  3.21s/it] 72%|███████▏  | 5330/7431 [5:20:05<1:52:31,  3.21s/it] 72%|███████▏  | 5331/7431 [5:20:08<1:53:33,  3.24s/it] 72%|███████▏  | 5332/7431 [5:20:11<1:52:46,  3.22s/it] 72%|███████▏  | 5333/7431 [5:20:15<1:52:14,  3.21s/it] 72%|███████▏  | 5334/7431 [5:20:18<1:54:08,  3.27s/it] 72%|███████▏  | 5335/7431 [5:20:21<1:53:12,  3.24s/it] 72%|███████▏  | 5336/7431 [5:20:24<1:53:35,  3.25s/it] 72%|███████▏  | 5337/7431 [5:20:28<1:52:59,  3.24s/it] 72%|███████▏  | 5338/7431 [5:20:31<1:53:22,  3.25s/it] 72%|███████▏  | 5339/7431 [5:20:34<1:52:07,  3.22s/it] 72%|███████▏  | 5340/7431 [5:20:37<1:51:00,  3.19s/it] 72%|███████▏  | 5341/7431 [5:20:40<1:51:06,  3.19s/it] 72%|███████▏  | 5342/7431 [5:20:44<1:53:06,  3.25s/it] 72%|███████▏  | 5343/7431 [5:20:47<1:53:02,  3.25s/it] 72%|███████▏  | 5344/7431 [5:20:50<1:52:24,  3.23s/it] 72%|███████▏  | 5345/7431 [5:20:54<1:54:06,  3.28s/it] 72%|███████▏  | 5346/7431 [5:20:57<1:55:01,  3.31s/it] 72%|███████▏  | 5347/7431 [5:21:00<1:55:45,  3.33s/it] 72%|███████▏  | 5348/7431 [5:21:03<1:52:32,  3.24s/it] 72%|███████▏  | 5349/7431 [5:21:07<1:51:41,  3.22s/it]08/31/2024 23:48:29 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.6946041584014893, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.043762948364019394, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7486114501953125, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.486978530883789}
 72%|███████▏  | 5350/7431 [5:21:10<1:54:20,  3.30s/it] 72%|███████▏  | 5351/7431 [5:21:13<1:54:47,  3.31s/it] 72%|███████▏  | 5352/7431 [5:21:17<1:57:14,  3.38s/it] 72%|███████▏  | 5353/7431 [5:21:20<1:56:15,  3.36s/it] 72%|███████▏  | 5354/7431 [5:21:23<1:54:26,  3.31s/it] 72%|███████▏  | 5355/7431 [5:21:27<1:52:57,  3.26s/it] 72%|███████▏  | 5356/7431 [5:21:30<1:53:08,  3.27s/it] 72%|███████▏  | 5357/7431 [5:21:33<1:54:55,  3.32s/it] 72%|███████▏  | 5358/7431 [5:21:37<1:55:23,  3.34s/it] 72%|███████▏  | 5359/7431 [5:21:40<1:54:25,  3.31s/it] 72%|███████▏  | 5360/7431 [5:21:43<1:55:04,  3.33s/it] 72%|███████▏  | 5361/7431 [5:21:47<1:53:32,  3.29s/it] 72%|███████▏  | 5362/7431 [5:21:50<1:55:01,  3.34s/it] 72%|███████▏  | 5363/7431 [5:21:53<1:54:13,  3.31s/it] 72%|███████▏  | 5364/7431 [5:21:57<1:54:12,  3.32s/it] 72%|███████▏  | 5365/7431 [5:22:00<1:53:10,  3.29s/it] 72%|███████▏  | 5366/7431 [5:22:03<1:56:02,  3.37s/it] 72%|███████▏  | 5367/7431 [5:22:07<1:53:35,  3.30s/it] 72%|███████▏  | 5368/7431 [5:22:10<1:53:25,  3.30s/it] 72%|███████▏  | 5369/7431 [5:22:13<1:51:25,  3.24s/it] 72%|███████▏  | 5370/7431 [5:22:16<1:51:26,  3.24s/it] 72%|███████▏  | 5371/7431 [5:22:19<1:50:28,  3.22s/it] 72%|███████▏  | 5372/7431 [5:22:23<1:51:36,  3.25s/it] 72%|███████▏  | 5373/7431 [5:22:26<1:52:07,  3.27s/it] 72%|███████▏  | 5374/7431 [5:22:29<1:52:05,  3.27s/it] 72%|███████▏  | 5375/7431 [5:22:32<1:50:38,  3.23s/it] 72%|███████▏  | 5376/7431 [5:22:35<1:49:35,  3.20s/it] 72%|███████▏  | 5377/7431 [5:22:39<1:50:42,  3.23s/it] 72%|███████▏  | 5378/7431 [5:22:42<1:50:46,  3.24s/it] 72%|███████▏  | 5379/7431 [5:22:45<1:50:02,  3.22s/it] 72%|███████▏  | 5380/7431 [5:22:48<1:50:19,  3.23s/it] 72%|███████▏  | 5381/7431 [5:22:52<1:50:28,  3.23s/it] 72%|███████▏  | 5382/7431 [5:22:55<1:51:23,  3.26s/it] 72%|███████▏  | 5383/7431 [5:22:58<1:52:13,  3.29s/it] 72%|███████▏  | 5384/7431 [5:23:01<1:49:40,  3.21s/it] 72%|███████▏  | 5385/7431 [5:23:05<1:52:32,  3.30s/it] 72%|███████▏  | 5386/7431 [5:23:08<1:52:46,  3.31s/it] 72%|███████▏  | 5387/7431 [5:23:11<1:51:48,  3.28s/it] 73%|███████▎  | 5388/7431 [5:23:15<1:50:54,  3.26s/it] 73%|███████▎  | 5389/7431 [5:23:18<1:51:37,  3.28s/it] 73%|███████▎  | 5390/7431 [5:23:21<1:50:58,  3.26s/it] 73%|███████▎  | 5391/7431 [5:23:25<1:51:46,  3.29s/it] 73%|███████▎  | 5392/7431 [5:23:28<1:50:27,  3.25s/it] 73%|███████▎  | 5393/7431 [5:23:31<1:50:01,  3.24s/it] 73%|███████▎  | 5394/7431 [5:23:34<1:49:09,  3.22s/it] 73%|███████▎  | 5395/7431 [5:23:37<1:49:25,  3.22s/it] 73%|███████▎  | 5396/7431 [5:23:41<1:49:13,  3.22s/it] 73%|███████▎  | 5397/7431 [5:23:44<1:50:10,  3.25s/it] 73%|███████▎  | 5398/7431 [5:23:47<1:50:16,  3.25s/it] 73%|███████▎  | 5399/7431 [5:23:50<1:49:23,  3.23s/it]08/31/2024 23:51:12 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.8585951328277588, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.044173065572977066, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6892857551574707, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.5920538902282715}
 73%|███████▎  | 5400/7431 [5:23:54<1:50:17,  3.26s/it] 73%|███████▎  | 5401/7431 [5:23:57<1:49:24,  3.23s/it] 73%|███████▎  | 5402/7431 [5:24:00<1:49:59,  3.25s/it] 73%|███████▎  | 5403/7431 [5:24:03<1:48:16,  3.20s/it] 73%|███████▎  | 5404/7431 [5:24:07<1:49:05,  3.23s/it] 73%|███████▎  | 5405/7431 [5:24:10<1:49:11,  3.23s/it] 73%|███████▎  | 5406/7431 [5:24:13<1:48:50,  3.22s/it] 73%|███████▎  | 5407/7431 [5:24:16<1:48:02,  3.20s/it] 73%|███████▎  | 5408/7431 [5:24:20<1:50:34,  3.28s/it] 73%|███████▎  | 5409/7431 [5:24:23<1:50:14,  3.27s/it] 73%|███████▎  | 5410/7431 [5:24:26<1:48:35,  3.22s/it] 73%|███████▎  | 5411/7431 [5:24:29<1:48:57,  3.24s/it] 73%|███████▎  | 5412/7431 [5:24:33<1:50:20,  3.28s/it] 73%|███████▎  | 5413/7431 [5:24:36<1:49:59,  3.27s/it] 73%|███████▎  | 5414/7431 [5:24:39<1:50:04,  3.27s/it] 73%|███████▎  | 5415/7431 [5:24:42<1:49:14,  3.25s/it] 73%|███████▎  | 5416/7431 [5:24:45<1:48:08,  3.22s/it] 73%|███████▎  | 5417/7431 [5:24:49<1:49:02,  3.25s/it] 73%|███████▎  | 5418/7431 [5:24:52<1:48:51,  3.24s/it] 73%|███████▎  | 5419/7431 [5:24:55<1:48:33,  3.24s/it] 73%|███████▎  | 5420/7431 [5:24:58<1:47:44,  3.21s/it] 73%|███████▎  | 5421/7431 [5:25:02<1:47:12,  3.20s/it] 73%|███████▎  | 5422/7431 [5:25:05<1:47:16,  3.20s/it] 73%|███████▎  | 5423/7431 [5:25:08<1:47:16,  3.21s/it] 73%|███████▎  | 5424/7431 [5:25:11<1:47:21,  3.21s/it] 73%|███████▎  | 5425/7431 [5:25:15<1:49:42,  3.28s/it] 73%|███████▎  | 5426/7431 [5:25:18<1:49:18,  3.27s/it] 73%|███████▎  | 5427/7431 [5:25:21<1:47:19,  3.21s/it] 73%|███████▎  | 5428/7431 [5:25:25<1:50:26,  3.31s/it] 73%|███████▎  | 5429/7431 [5:25:28<1:50:34,  3.31s/it] 73%|███████▎  | 5430/7431 [5:25:31<1:49:35,  3.29s/it] 73%|███████▎  | 5431/7431 [5:25:34<1:47:41,  3.23s/it] 73%|███████▎  | 5432/7431 [5:25:37<1:46:47,  3.21s/it] 73%|███████▎  | 5433/7431 [5:25:41<1:49:57,  3.30s/it] 73%|███████▎  | 5434/7431 [5:25:44<1:49:28,  3.29s/it] 73%|███████▎  | 5435/7431 [5:25:47<1:49:01,  3.28s/it] 73%|███████▎  | 5436/7431 [5:25:51<1:48:58,  3.28s/it] 73%|███████▎  | 5437/7431 [5:25:54<1:49:02,  3.28s/it] 73%|███████▎  | 5438/7431 [5:25:57<1:47:22,  3.23s/it] 73%|███████▎  | 5439/7431 [5:26:00<1:49:13,  3.29s/it] 73%|███████▎  | 5440/7431 [5:26:04<1:50:16,  3.32s/it] 73%|███████▎  | 5441/7431 [5:26:07<1:49:19,  3.30s/it] 73%|███████▎  | 5442/7431 [5:26:10<1:47:36,  3.25s/it] 73%|███████▎  | 5443/7431 [5:26:14<1:48:18,  3.27s/it] 73%|███████▎  | 5444/7431 [5:26:17<1:48:31,  3.28s/it] 73%|███████▎  | 5445/7431 [5:26:20<1:47:47,  3.26s/it] 73%|███████▎  | 5446/7431 [5:26:23<1:48:42,  3.29s/it] 73%|███████▎  | 5447/7431 [5:26:27<1:49:16,  3.30s/it] 73%|███████▎  | 5448/7431 [5:26:30<1:47:45,  3.26s/it] 73%|███████▎  | 5449/7431 [5:26:33<1:47:19,  3.25s/it]08/31/2024 23:53:55 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.5293046236038208, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.039737872779369354, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.64742374420166, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.216465950012207}
 73%|███████▎  | 5450/7431 [5:26:36<1:46:43,  3.23s/it] 73%|███████▎  | 5451/7431 [5:26:40<1:47:14,  3.25s/it] 73%|███████▎  | 5452/7431 [5:26:43<1:48:02,  3.28s/it] 73%|███████▎  | 5453/7431 [5:26:46<1:48:21,  3.29s/it] 73%|███████▎  | 5454/7431 [5:26:50<1:48:37,  3.30s/it] 73%|███████▎  | 5455/7431 [5:26:53<1:47:13,  3.26s/it] 73%|███████▎  | 5456/7431 [5:26:56<1:47:06,  3.25s/it] 73%|███████▎  | 5457/7431 [5:26:59<1:46:20,  3.23s/it] 73%|███████▎  | 5458/7431 [5:27:03<1:48:14,  3.29s/it] 73%|███████▎  | 5459/7431 [5:27:06<1:48:35,  3.30s/it] 73%|███████▎  | 5460/7431 [5:27:09<1:47:41,  3.28s/it] 73%|███████▎  | 5461/7431 [5:27:12<1:48:17,  3.30s/it] 74%|███████▎  | 5462/7431 [5:27:16<1:47:20,  3.27s/it] 74%|███████▎  | 5463/7431 [5:27:19<1:47:21,  3.27s/it] 74%|███████▎  | 5464/7431 [5:27:22<1:48:25,  3.31s/it] 74%|███████▎  | 5465/7431 [5:27:26<1:48:20,  3.31s/it] 74%|███████▎  | 5466/7431 [5:27:29<1:46:55,  3.27s/it] 74%|███████▎  | 5467/7431 [5:27:32<1:48:59,  3.33s/it] 74%|███████▎  | 5468/7431 [5:27:36<1:49:57,  3.36s/it] 74%|███████▎  | 5469/7431 [5:27:39<1:48:17,  3.31s/it] 74%|███████▎  | 5470/7431 [5:27:42<1:46:53,  3.27s/it] 74%|███████▎  | 5471/7431 [5:27:45<1:46:11,  3.25s/it] 74%|███████▎  | 5472/7431 [5:27:49<1:46:36,  3.26s/it] 74%|███████▎  | 5473/7431 [5:27:52<1:47:37,  3.30s/it] 74%|███████▎  | 5474/7431 [5:27:56<1:49:33,  3.36s/it] 74%|███████▎  | 5475/7431 [5:27:59<1:47:25,  3.30s/it] 74%|███████▎  | 5476/7431 [5:28:02<1:46:24,  3.27s/it] 74%|███████▎  | 5477/7431 [5:28:05<1:45:38,  3.24s/it] 74%|███████▎  | 5478/7431 [5:28:08<1:45:01,  3.23s/it] 74%|███████▎  | 5479/7431 [5:28:12<1:46:03,  3.26s/it] 74%|███████▎  | 5480/7431 [5:28:15<1:45:12,  3.24s/it] 74%|███████▍  | 5481/7431 [5:28:18<1:45:21,  3.24s/it] 74%|███████▍  | 5482/7431 [5:28:21<1:45:54,  3.26s/it] 74%|███████▍  | 5483/7431 [5:28:25<1:46:38,  3.28s/it] 74%|███████▍  | 5484/7431 [5:28:28<1:46:07,  3.27s/it] 74%|███████▍  | 5485/7431 [5:28:31<1:47:25,  3.31s/it] 74%|███████▍  | 5486/7431 [5:28:34<1:45:40,  3.26s/it] 74%|███████▍  | 5487/7431 [5:28:38<1:45:51,  3.27s/it] 74%|███████▍  | 5488/7431 [5:28:41<1:44:29,  3.23s/it] 74%|███████▍  | 5489/7431 [5:28:44<1:46:54,  3.30s/it] 74%|███████▍  | 5490/7431 [5:28:48<1:47:06,  3.31s/it] 74%|███████▍  | 5491/7431 [5:28:51<1:45:34,  3.27s/it] 74%|███████▍  | 5492/7431 [5:28:54<1:44:54,  3.25s/it] 74%|███████▍  | 5493/7431 [5:28:57<1:46:38,  3.30s/it] 74%|███████▍  | 5494/7431 [5:29:01<1:46:22,  3.29s/it] 74%|███████▍  | 5495/7431 [5:29:04<1:46:32,  3.30s/it] 74%|███████▍  | 5496/7431 [5:29:07<1:46:44,  3.31s/it] 74%|███████▍  | 5497/7431 [5:29:11<1:45:21,  3.27s/it] 74%|███████▍  | 5498/7431 [5:29:14<1:45:28,  3.27s/it] 74%|███████▍  | 5499/7431 [5:29:17<1:45:11,  3.27s/it]08/31/2024 23:56:38 - INFO - __main__ -   evaluate on ret%tv--msrvtt_ret task
08/31/2024 23:56:38 - INFO - __main__ -   start running ret%tv validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  1%|          | 2/221 [00:00<00:55,  3.96it/s][A
  1%|▏         | 3/221 [00:00<00:55,  3.93it/s][A
  2%|▏         | 4/221 [00:00<00:48,  4.51it/s][A
  2%|▏         | 5/221 [00:01<00:43,  4.99it/s][A
  3%|▎         | 6/221 [00:01<00:40,  5.34it/s][A
  3%|▎         | 7/221 [00:01<00:40,  5.32it/s][A
  4%|▎         | 8/221 [00:01<00:37,  5.61it/s][A
  4%|▍         | 9/221 [00:01<00:38,  5.51it/s][A
  5%|▍         | 10/221 [00:02<00:51,  4.09it/s][A
  5%|▍         | 11/221 [00:02<00:45,  4.57it/s][A
  5%|▌         | 12/221 [00:02<00:45,  4.55it/s][A
  6%|▌         | 13/221 [00:02<00:52,  3.99it/s][A
  6%|▋         | 14/221 [00:03<00:46,  4.45it/s][A
  7%|▋         | 15/221 [00:03<00:44,  4.59it/s][A
  7%|▋         | 16/221 [00:03<00:58,  3.53it/s][A
  8%|▊         | 17/221 [00:03<00:59,  3.46it/s][A
  8%|▊         | 18/221 [00:04<00:49,  4.13it/s][A
  9%|▊         | 19/221 [00:04<00:49,  4.05it/s][A
  9%|▉         | 20/221 [00:04<00:45,  4.44it/s][A
 10%|▉         | 21/221 [00:04<00:48,  4.14it/s][A
 10%|▉         | 22/221 [00:05<00:51,  3.85it/s][A
 10%|█         | 23/221 [00:05<00:47,  4.18it/s][A
 11%|█         | 24/221 [00:05<00:44,  4.46it/s][A
 11%|█▏        | 25/221 [00:05<00:49,  3.96it/s][A
 12%|█▏        | 26/221 [00:06<00:51,  3.77it/s][A
 12%|█▏        | 27/221 [00:06<00:53,  3.62it/s][A
 13%|█▎        | 28/221 [00:06<00:52,  3.71it/s][A
 13%|█▎        | 29/221 [00:07<00:59,  3.21it/s][A
 14%|█▎        | 30/221 [00:07<01:03,  3.00it/s][A
 14%|█▍        | 31/221 [00:07<00:58,  3.27it/s][A
 14%|█▍        | 32/221 [00:07<00:50,  3.75it/s][A
 15%|█▍        | 33/221 [00:08<00:45,  4.10it/s][A
 15%|█▌        | 34/221 [00:08<00:41,  4.46it/s][A
 16%|█▌        | 35/221 [00:08<00:51,  3.63it/s][A
 16%|█▋        | 36/221 [00:09<00:59,  3.11it/s][A
 17%|█▋        | 37/221 [00:09<00:55,  3.32it/s][A
 17%|█▋        | 38/221 [00:09<00:51,  3.56it/s][A
 18%|█▊        | 39/221 [00:09<00:47,  3.83it/s][A
 18%|█▊        | 40/221 [00:10<00:52,  3.43it/s][A
 19%|█▊        | 41/221 [00:10<01:00,  2.99it/s][A
 19%|█▉        | 42/221 [00:10<00:48,  3.67it/s][A
 19%|█▉        | 43/221 [00:10<00:41,  4.24it/s][A
 20%|█▉        | 44/221 [00:11<00:40,  4.41it/s][A
 20%|██        | 45/221 [00:11<00:48,  3.63it/s][A
 21%|██        | 46/221 [00:11<00:51,  3.42it/s][A
 21%|██▏       | 47/221 [00:11<00:44,  3.90it/s][A
 22%|██▏       | 48/221 [00:12<00:40,  4.23it/s][A
 22%|██▏       | 49/221 [00:12<00:43,  3.94it/s][A
 23%|██▎       | 50/221 [00:12<00:48,  3.51it/s][A
 23%|██▎       | 51/221 [00:13<00:47,  3.59it/s][A
 24%|██▎       | 52/221 [00:13<00:49,  3.45it/s][A
 24%|██▍       | 53/221 [00:13<00:44,  3.75it/s][A
 24%|██▍       | 54/221 [00:14<00:52,  3.17it/s][A
 25%|██▍       | 55/221 [00:14<00:49,  3.32it/s][A
 25%|██▌       | 56/221 [00:14<00:46,  3.57it/s][A
 26%|██▌       | 57/221 [00:14<00:50,  3.27it/s][A
 26%|██▌       | 58/221 [00:15<00:46,  3.49it/s][A
 27%|██▋       | 59/221 [00:15<00:39,  4.06it/s][A
 27%|██▋       | 60/221 [00:15<00:39,  4.11it/s][A
 28%|██▊       | 61/221 [00:15<00:41,  3.89it/s][A
 28%|██▊       | 62/221 [00:16<00:43,  3.69it/s][A
 29%|██▊       | 63/221 [00:16<00:43,  3.60it/s][A
 29%|██▉       | 64/221 [00:16<00:48,  3.27it/s][A
 29%|██▉       | 65/221 [00:16<00:42,  3.64it/s][A
 30%|██▉       | 66/221 [00:17<00:51,  2.98it/s][A
 30%|███       | 67/221 [00:17<00:51,  3.00it/s][A
 31%|███       | 68/221 [00:17<00:42,  3.64it/s][A
 31%|███       | 69/221 [00:18<00:49,  3.10it/s][A
 32%|███▏      | 70/221 [00:18<00:42,  3.56it/s][A
 32%|███▏      | 71/221 [00:18<00:42,  3.54it/s][A
 33%|███▎      | 72/221 [00:19<00:38,  3.85it/s][A
 33%|███▎      | 73/221 [00:19<00:37,  3.97it/s][A
 33%|███▎      | 74/221 [00:19<00:35,  4.16it/s][A
 34%|███▍      | 75/221 [00:19<00:39,  3.70it/s][A
 34%|███▍      | 76/221 [00:20<00:40,  3.55it/s][A
 35%|███▍      | 77/221 [00:20<00:44,  3.24it/s][A
 35%|███▌      | 78/221 [00:20<00:40,  3.54it/s][A
 36%|███▌      | 79/221 [00:21<00:46,  3.08it/s][A
 36%|███▌      | 80/221 [00:21<00:42,  3.29it/s][A
 37%|███▋      | 81/221 [00:21<00:39,  3.58it/s][A
 37%|███▋      | 82/221 [00:21<00:38,  3.63it/s][A
 38%|███▊      | 83/221 [00:22<00:49,  2.76it/s][A
 38%|███▊      | 84/221 [00:22<00:43,  3.14it/s][A
 38%|███▊      | 85/221 [00:22<00:35,  3.81it/s][A
 39%|███▉      | 86/221 [00:23<00:38,  3.50it/s][A
 39%|███▉      | 87/221 [00:23<00:41,  3.21it/s][A
 40%|███▉      | 88/221 [00:23<00:42,  3.10it/s][A
 40%|████      | 89/221 [00:24<00:38,  3.39it/s][A
 41%|████      | 90/221 [00:24<00:37,  3.51it/s][A
 41%|████      | 91/221 [00:24<00:32,  3.99it/s][A
 42%|████▏     | 92/221 [00:24<00:34,  3.75it/s][A
 42%|████▏     | 93/221 [00:25<00:36,  3.49it/s][A
 43%|████▎     | 94/221 [00:25<00:41,  3.04it/s][A
 43%|████▎     | 95/221 [00:25<00:36,  3.47it/s][A
 43%|████▎     | 96/221 [00:26<00:45,  2.74it/s][A
 44%|████▍     | 97/221 [00:26<00:37,  3.28it/s][A
 44%|████▍     | 98/221 [00:27<00:48,  2.55it/s][A
 45%|████▍     | 99/221 [00:27<00:44,  2.75it/s][A
 45%|████▌     | 100/221 [00:27<00:40,  3.02it/s][A
 46%|████▌     | 101/221 [00:27<00:36,  3.32it/s][A
 46%|████▌     | 102/221 [00:28<00:43,  2.74it/s][A
 47%|████▋     | 103/221 [00:28<00:36,  3.27it/s][A
 47%|████▋     | 104/221 [00:28<00:35,  3.29it/s][A
 48%|████▊     | 105/221 [00:29<00:40,  2.84it/s][A
 48%|████▊     | 106/221 [00:29<00:37,  3.06it/s][A
 48%|████▊     | 107/221 [00:29<00:36,  3.09it/s][A
 49%|████▉     | 108/221 [00:30<00:33,  3.37it/s][A
 49%|████▉     | 109/221 [00:30<00:28,  3.92it/s][A
 50%|████▉     | 110/221 [00:30<00:32,  3.40it/s][A
 50%|█████     | 111/221 [00:30<00:31,  3.50it/s][A
 51%|█████     | 112/221 [00:31<00:31,  3.45it/s][A
 51%|█████     | 113/221 [00:31<00:27,  3.91it/s][A
 52%|█████▏    | 114/221 [00:31<00:23,  4.62it/s][A
 52%|█████▏    | 115/221 [00:31<00:27,  3.87it/s][A
 52%|█████▏    | 116/221 [00:32<00:27,  3.85it/s][A
 53%|█████▎    | 117/221 [00:32<00:28,  3.63it/s][A
 53%|█████▎    | 118/221 [00:32<00:26,  3.92it/s][A
 54%|█████▍    | 119/221 [00:32<00:27,  3.70it/s][A
 54%|█████▍    | 120/221 [00:33<00:28,  3.55it/s][A
 55%|█████▍    | 121/221 [00:33<00:23,  4.26it/s][A
 55%|█████▌    | 122/221 [00:33<00:24,  4.02it/s][A
 56%|█████▌    | 123/221 [00:33<00:22,  4.31it/s][A
 56%|█████▌    | 124/221 [00:34<00:26,  3.65it/s][A
 57%|█████▋    | 125/221 [00:34<00:28,  3.34it/s][A
 57%|█████▋    | 126/221 [00:34<00:24,  3.83it/s][A
 57%|█████▋    | 127/221 [00:35<00:26,  3.51it/s][A
 58%|█████▊    | 128/221 [00:35<00:26,  3.49it/s][A
 58%|█████▊    | 129/221 [00:35<00:23,  3.91it/s][A
 59%|█████▉    | 130/221 [00:35<00:24,  3.78it/s][A
 59%|█████▉    | 131/221 [00:36<00:21,  4.21it/s][A
 60%|█████▉    | 132/221 [00:36<00:32,  2.70it/s][A
 60%|██████    | 133/221 [00:37<00:32,  2.75it/s][A
 61%|██████    | 134/221 [00:37<00:31,  2.78it/s][A
 61%|██████    | 135/221 [00:37<00:30,  2.79it/s][A
 62%|██████▏   | 136/221 [00:38<00:26,  3.15it/s][A
 62%|██████▏   | 137/221 [00:38<00:23,  3.59it/s][A
 62%|██████▏   | 138/221 [00:38<00:21,  3.79it/s][A
 63%|██████▎   | 139/221 [00:38<00:20,  3.93it/s][A
 63%|██████▎   | 140/221 [00:38<00:21,  3.78it/s][A
 64%|██████▍   | 141/221 [00:39<00:22,  3.52it/s][A
 64%|██████▍   | 142/221 [00:39<00:24,  3.20it/s][A
 65%|██████▍   | 143/221 [00:40<00:25,  3.11it/s][A
 65%|██████▌   | 144/221 [00:40<00:25,  2.99it/s][A
 66%|██████▌   | 145/221 [00:40<00:23,  3.29it/s][A
 67%|██████▋   | 147/221 [00:40<00:16,  4.46it/s][A
 67%|██████▋   | 148/221 [00:41<00:17,  4.19it/s][A
 67%|██████▋   | 149/221 [00:41<00:19,  3.71it/s][A
 68%|██████▊   | 150/221 [00:41<00:19,  3.63it/s][A
 68%|██████▊   | 151/221 [00:42<00:19,  3.66it/s][A
 69%|██████▉   | 152/221 [00:42<00:19,  3.51it/s][A
 69%|██████▉   | 153/221 [00:42<00:16,  4.07it/s][A
 70%|██████▉   | 154/221 [00:42<00:15,  4.39it/s][A
 70%|███████   | 155/221 [00:42<00:15,  4.18it/s][A
 71%|███████   | 156/221 [00:43<00:18,  3.53it/s][A
 71%|███████   | 157/221 [00:43<00:18,  3.39it/s][A
 71%|███████▏  | 158/221 [00:44<00:19,  3.27it/s][A
 72%|███████▏  | 159/221 [00:44<00:17,  3.56it/s][A
 72%|███████▏  | 160/221 [00:44<00:14,  4.08it/s][A
 73%|███████▎  | 161/221 [00:44<00:16,  3.62it/s][A
 73%|███████▎  | 162/221 [00:44<00:14,  4.02it/s][A
 74%|███████▍  | 163/221 [00:45<00:15,  3.81it/s][A
 74%|███████▍  | 164/221 [00:45<00:13,  4.26it/s][A
 75%|███████▍  | 165/221 [00:45<00:14,  3.99it/s][A
 75%|███████▌  | 166/221 [00:45<00:12,  4.37it/s][A
 76%|███████▌  | 167/221 [00:46<00:13,  4.05it/s][A
 76%|███████▌  | 168/221 [00:46<00:12,  4.08it/s][A
 76%|███████▋  | 169/221 [00:46<00:13,  3.91it/s][A
 77%|███████▋  | 170/221 [00:46<00:13,  3.90it/s][A
 77%|███████▋  | 171/221 [00:47<00:12,  4.02it/s][A
 78%|███████▊  | 172/221 [00:47<00:12,  3.99it/s][A
 78%|███████▊  | 173/221 [00:47<00:11,  4.03it/s][A
 79%|███████▊  | 174/221 [00:47<00:11,  3.98it/s][A
 79%|███████▉  | 175/221 [00:48<00:13,  3.29it/s][A
 80%|███████▉  | 176/221 [00:48<00:11,  3.87it/s][A
 80%|████████  | 177/221 [00:48<00:10,  4.29it/s][A
 81%|████████  | 178/221 [00:48<00:10,  4.29it/s][A
 81%|████████  | 179/221 [00:49<00:09,  4.53it/s][A
 81%|████████▏ | 180/221 [00:49<00:08,  4.90it/s][A
 82%|████████▏ | 181/221 [00:49<00:07,  5.66it/s][A
 82%|████████▏ | 182/221 [00:49<00:07,  4.97it/s][A
 83%|████████▎ | 183/221 [00:50<00:09,  3.85it/s][A
 83%|████████▎ | 184/221 [00:50<00:09,  3.95it/s][A
 84%|████████▎ | 185/221 [00:50<00:09,  3.66it/s][A
 84%|████████▍ | 186/221 [00:51<00:10,  3.22it/s][A
 85%|████████▍ | 187/221 [00:51<00:12,  2.74it/s][A
 85%|████████▌ | 188/221 [00:51<00:10,  3.02it/s][A
 86%|████████▌ | 189/221 [00:51<00:09,  3.54it/s][A
 86%|████████▌ | 190/221 [00:52<00:09,  3.32it/s][A
 86%|████████▋ | 191/221 [00:52<00:07,  4.09it/s][A
 87%|████████▋ | 192/221 [00:52<00:07,  4.10it/s][A
 87%|████████▋ | 193/221 [00:52<00:07,  3.86it/s][A
 88%|████████▊ | 194/221 [00:53<00:06,  4.07it/s][A
 88%|████████▊ | 195/221 [00:53<00:06,  3.84it/s][A
 89%|████████▊ | 196/221 [00:53<00:07,  3.52it/s][A
 89%|████████▉ | 197/221 [00:54<00:06,  3.62it/s][A
 90%|████████▉ | 198/221 [00:54<00:06,  3.60it/s][A
 90%|█████████ | 199/221 [00:54<00:06,  3.43it/s][A
 90%|█████████ | 200/221 [00:54<00:06,  3.44it/s][A
 91%|█████████ | 201/221 [00:55<00:06,  3.13it/s][A
 91%|█████████▏| 202/221 [00:55<00:06,  3.09it/s][A
 92%|█████████▏| 203/221 [00:55<00:05,  3.03it/s][A
 92%|█████████▏| 204/221 [00:56<00:05,  2.99it/s][A
 93%|█████████▎| 205/221 [00:56<00:04,  3.36it/s][A
 93%|█████████▎| 206/221 [00:56<00:04,  3.09it/s][A
 94%|█████████▎| 207/221 [00:57<00:03,  3.62it/s][A
 94%|█████████▍| 208/221 [00:57<00:03,  3.28it/s][A
 95%|█████████▍| 209/221 [00:57<00:03,  3.53it/s][A
 95%|█████████▌| 210/221 [00:57<00:02,  3.72it/s][A
 95%|█████████▌| 211/221 [00:58<00:02,  3.44it/s][A
 96%|█████████▌| 212/221 [00:58<00:02,  3.67it/s][A
 96%|█████████▋| 213/221 [00:58<00:02,  3.98it/s][A
 97%|█████████▋| 214/221 [00:59<00:02,  3.26it/s][A
 97%|█████████▋| 215/221 [00:59<00:01,  3.72it/s][A
 98%|█████████▊| 216/221 [00:59<00:01,  3.74it/s][A
 98%|█████████▊| 217/221 [00:59<00:01,  3.45it/s][A
 99%|█████████▊| 218/221 [01:00<00:00,  3.60it/s][A
 99%|█████████▉| 219/221 [01:00<00:00,  3.74it/s][A
100%|█████████▉| 220/221 [01:00<00:00,  3.98it/s][A
100%|██████████| 221/221 [01:00<00:00,  4.03it/s][A100%|██████████| 221/221 [01:00<00:00,  3.63it/s]
08/31/2024 23:58:59 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forward=====step 5499--===========

08/31/2024 23:58:59 - INFO - __main__ -   {'area_r1': 9.8, 'area_recall': '9.8/26.4/33.9', 'area_ravg': 23.4}
08/31/2024 23:58:59 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_backard=====step 5499--===========

08/31/2024 23:58:59 - INFO - __main__ -   {'forward_r1': 44.2, 'forward_recall': '44.2/74.7/85.0', 'forward_ravg': 67.9}
08/31/2024 23:58:59 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forw_with_video=====step 5499--===========

08/31/2024 23:58:59 - INFO - __main__ -   {'forward_r1': 61.9, 'forward_recall': '61.9/85.3/90.5', 'forward_ravg': 79.2}
08/31/2024 23:58:59 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itc_tv=====step 5499--===========

08/31/2024 23:58:59 - INFO - __main__ -   {'video_r1': 44.5, 'video_recall': '44.5/75.9/84.3', 'video_ravg': 68.2}
08/31/2024 23:58:59 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itc_tv====history best step: 2999=======

08/31/2024 23:58:59 - INFO - __main__ -   {'video_r1': 46.0, 'video_recall': '46.0/75.3/83.9', 'video_ravg': 68.4}
08/31/2024 23:58:59 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itm_tv=====step 5499--===========

08/31/2024 23:58:59 - INFO - __main__ -   {'video_r1': 56.7, 'video_recall': '56.7/78.5/85.1', 'video_ravg': 73.4}
08/31/2024 23:58:59 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itm_tv====history best step: 3999=======

08/31/2024 23:58:59 - INFO - __main__ -   {'video_r1': 57.8, 'video_recall': '57.8/78.1/84.8', 'video_ravg': 73.6}
08/31/2024 23:59:25 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.3909122943878174, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.044656164944171906, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6406335830688477, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.076201915740967}
 74%|███████▍  | 5500/7431 [5:32:06<28:25:48, 53.00s/it] 74%|███████▍  | 5501/7431 [5:32:09<20:23:44, 38.04s/it] 74%|███████▍  | 5502/7431 [5:32:13<14:47:36, 27.61s/it] 74%|███████▍  | 5503/7431 [5:32:16<10:52:34, 20.31s/it] 74%|███████▍  | 5504/7431 [5:32:19<8:07:51, 15.19s/it]  74%|███████▍  | 5505/7431 [5:32:22<6:12:21, 11.60s/it] 74%|███████▍  | 5506/7431 [5:32:26<4:51:43,  9.09s/it] 74%|███████▍  | 5507/7431 [5:32:29<3:56:53,  7.39s/it] 74%|███████▍  | 5508/7431 [5:32:32<3:16:14,  6.12s/it] 74%|███████▍  | 5509/7431 [5:32:35<2:48:29,  5.26s/it] 74%|███████▍  | 5510/7431 [5:32:39<2:29:23,  4.67s/it] 74%|███████▍  | 5511/7431 [5:32:42<2:15:46,  4.24s/it] 74%|███████▍  | 5512/7431 [5:32:45<2:07:17,  3.98s/it] 74%|███████▍  | 5513/7431 [5:32:49<2:02:32,  3.83s/it] 74%|███████▍  | 5514/7431 [5:32:52<1:56:26,  3.64s/it] 74%|███████▍  | 5515/7431 [5:32:55<1:52:42,  3.53s/it] 74%|███████▍  | 5516/7431 [5:32:59<1:50:33,  3.46s/it] 74%|███████▍  | 5517/7431 [5:33:02<1:47:48,  3.38s/it] 74%|███████▍  | 5518/7431 [5:33:05<1:47:05,  3.36s/it] 74%|███████▍  | 5519/7431 [5:33:08<1:45:30,  3.31s/it] 74%|███████▍  | 5520/7431 [5:33:12<1:47:00,  3.36s/it] 74%|███████▍  | 5521/7431 [5:33:15<1:44:46,  3.29s/it] 74%|███████▍  | 5522/7431 [5:33:18<1:43:38,  3.26s/it] 74%|███████▍  | 5523/7431 [5:33:21<1:44:32,  3.29s/it] 74%|███████▍  | 5524/7431 [5:33:25<1:43:55,  3.27s/it] 74%|███████▍  | 5525/7431 [5:33:28<1:45:02,  3.31s/it] 74%|███████▍  | 5526/7431 [5:33:31<1:43:02,  3.25s/it] 74%|███████▍  | 5527/7431 [5:33:34<1:44:06,  3.28s/it] 74%|███████▍  | 5528/7431 [5:33:38<1:44:13,  3.29s/it] 74%|███████▍  | 5529/7431 [5:33:41<1:44:13,  3.29s/it] 74%|███████▍  | 5530/7431 [5:33:44<1:44:47,  3.31s/it] 74%|███████▍  | 5531/7431 [5:33:48<1:42:56,  3.25s/it] 74%|███████▍  | 5532/7431 [5:33:51<1:43:09,  3.26s/it] 74%|███████▍  | 5533/7431 [5:33:54<1:42:42,  3.25s/it] 74%|███████▍  | 5534/7431 [5:33:57<1:40:52,  3.19s/it] 74%|███████▍  | 5535/7431 [5:34:00<1:40:23,  3.18s/it] 74%|███████▍  | 5536/7431 [5:34:04<1:43:20,  3.27s/it] 75%|███████▍  | 5537/7431 [5:34:07<1:43:38,  3.28s/it] 75%|███████▍  | 5538/7431 [5:34:10<1:43:17,  3.27s/it] 75%|███████▍  | 5539/7431 [5:34:13<1:41:57,  3.23s/it] 75%|███████▍  | 5540/7431 [5:34:17<1:45:13,  3.34s/it] 75%|███████▍  | 5541/7431 [5:34:20<1:43:34,  3.29s/it] 75%|███████▍  | 5542/7431 [5:34:23<1:42:38,  3.26s/it] 75%|███████▍  | 5543/7431 [5:34:27<1:43:09,  3.28s/it] 75%|███████▍  | 5544/7431 [5:34:30<1:42:31,  3.26s/it] 75%|███████▍  | 5545/7431 [5:34:33<1:41:24,  3.23s/it] 75%|███████▍  | 5546/7431 [5:34:36<1:41:56,  3.24s/it] 75%|███████▍  | 5547/7431 [5:34:40<1:41:33,  3.23s/it] 75%|███████▍  | 5548/7431 [5:34:43<1:41:31,  3.24s/it] 75%|███████▍  | 5549/7431 [5:34:46<1:41:25,  3.23s/it]09/01/2024 00:02:08 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.853925108909607, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.06365019083023071, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.896923780441284, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.8144989013671875}
 75%|███████▍  | 5550/7431 [5:34:49<1:41:49,  3.25s/it] 75%|███████▍  | 5551/7431 [5:34:52<1:41:13,  3.23s/it] 75%|███████▍  | 5552/7431 [5:34:56<1:43:00,  3.29s/it] 75%|███████▍  | 5553/7431 [5:34:59<1:42:14,  3.27s/it] 75%|███████▍  | 5554/7431 [5:35:02<1:42:36,  3.28s/it] 75%|███████▍  | 5555/7431 [5:35:06<1:46:08,  3.39s/it] 75%|███████▍  | 5556/7431 [5:35:09<1:43:37,  3.32s/it] 75%|███████▍  | 5557/7431 [5:35:12<1:42:44,  3.29s/it] 75%|███████▍  | 5558/7431 [5:35:16<1:41:43,  3.26s/it] 75%|███████▍  | 5559/7431 [5:35:19<1:40:28,  3.22s/it] 75%|███████▍  | 5560/7431 [5:35:22<1:40:03,  3.21s/it] 75%|███████▍  | 5561/7431 [5:35:25<1:41:49,  3.27s/it] 75%|███████▍  | 5562/7431 [5:35:29<1:42:09,  3.28s/it] 75%|███████▍  | 5563/7431 [5:35:32<1:42:40,  3.30s/it] 75%|███████▍  | 5564/7431 [5:35:35<1:41:45,  3.27s/it] 75%|███████▍  | 5565/7431 [5:35:38<1:39:47,  3.21s/it] 75%|███████▍  | 5566/7431 [5:35:41<1:38:48,  3.18s/it] 75%|███████▍  | 5567/7431 [5:35:45<1:39:11,  3.19s/it] 75%|███████▍  | 5568/7431 [5:35:48<1:40:35,  3.24s/it] 75%|███████▍  | 5569/7431 [5:35:51<1:40:45,  3.25s/it] 75%|███████▍  | 5570/7431 [5:35:55<1:41:15,  3.26s/it] 75%|███████▍  | 5571/7431 [5:35:58<1:40:29,  3.24s/it] 75%|███████▍  | 5572/7431 [5:36:01<1:41:08,  3.26s/it] 75%|███████▍  | 5573/7431 [5:36:04<1:41:25,  3.28s/it] 75%|███████▌  | 5574/7431 [5:36:08<1:40:54,  3.26s/it] 75%|███████▌  | 5575/7431 [5:36:11<1:40:17,  3.24s/it] 75%|███████▌  | 5576/7431 [5:36:15<1:44:55,  3.39s/it] 75%|███████▌  | 5577/7431 [5:36:18<1:43:52,  3.36s/it] 75%|███████▌  | 5578/7431 [5:36:21<1:44:30,  3.38s/it] 75%|███████▌  | 5579/7431 [5:36:25<1:43:41,  3.36s/it] 75%|███████▌  | 5580/7431 [5:36:28<1:42:05,  3.31s/it] 75%|███████▌  | 5581/7431 [5:36:31<1:41:38,  3.30s/it] 75%|███████▌  | 5582/7431 [5:36:34<1:40:44,  3.27s/it] 75%|███████▌  | 5583/7431 [5:36:37<1:40:32,  3.26s/it] 75%|███████▌  | 5584/7431 [5:36:41<1:40:08,  3.25s/it] 75%|███████▌  | 5585/7431 [5:36:44<1:40:36,  3.27s/it] 75%|███████▌  | 5586/7431 [5:36:47<1:39:29,  3.24s/it] 75%|███████▌  | 5587/7431 [5:36:50<1:40:22,  3.27s/it] 75%|███████▌  | 5588/7431 [5:36:54<1:41:11,  3.29s/it] 75%|███████▌  | 5589/7431 [5:36:57<1:41:11,  3.30s/it] 75%|███████▌  | 5590/7431 [5:37:00<1:41:40,  3.31s/it] 75%|███████▌  | 5591/7431 [5:37:04<1:40:14,  3.27s/it] 75%|███████▌  | 5592/7431 [5:37:07<1:41:21,  3.31s/it] 75%|███████▌  | 5593/7431 [5:37:10<1:40:41,  3.29s/it] 75%|███████▌  | 5594/7431 [5:37:14<1:40:14,  3.27s/it] 75%|███████▌  | 5595/7431 [5:37:17<1:42:37,  3.35s/it] 75%|███████▌  | 5596/7431 [5:37:20<1:41:43,  3.33s/it] 75%|███████▌  | 5597/7431 [5:37:23<1:40:01,  3.27s/it] 75%|███████▌  | 5598/7431 [5:37:27<1:39:38,  3.26s/it] 75%|███████▌  | 5599/7431 [5:37:30<1:39:27,  3.26s/it]09/01/2024 00:04:52 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.6022310256958008, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03861150145530701, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6205925941467285, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.261435031890869}
 75%|███████▌  | 5600/7431 [5:37:33<1:38:32,  3.23s/it] 75%|███████▌  | 5601/7431 [5:37:36<1:38:18,  3.22s/it] 75%|███████▌  | 5602/7431 [5:37:40<1:39:44,  3.27s/it] 75%|███████▌  | 5603/7431 [5:37:43<1:38:52,  3.25s/it] 75%|███████▌  | 5604/7431 [5:37:46<1:38:58,  3.25s/it] 75%|███████▌  | 5605/7431 [5:37:49<1:39:34,  3.27s/it] 75%|███████▌  | 5606/7431 [5:37:53<1:38:55,  3.25s/it] 75%|███████▌  | 5607/7431 [5:37:56<1:38:55,  3.25s/it] 75%|███████▌  | 5608/7431 [5:37:59<1:39:08,  3.26s/it] 75%|███████▌  | 5609/7431 [5:38:02<1:38:15,  3.24s/it] 75%|███████▌  | 5610/7431 [5:38:06<1:39:19,  3.27s/it] 76%|███████▌  | 5611/7431 [5:38:09<1:38:08,  3.24s/it] 76%|███████▌  | 5612/7431 [5:38:12<1:39:21,  3.28s/it] 76%|███████▌  | 5613/7431 [5:38:15<1:36:50,  3.20s/it] 76%|███████▌  | 5614/7431 [5:38:19<1:37:05,  3.21s/it] 76%|███████▌  | 5615/7431 [5:38:22<1:37:07,  3.21s/it] 76%|███████▌  | 5616/7431 [5:38:25<1:38:32,  3.26s/it] 76%|███████▌  | 5617/7431 [5:38:28<1:37:38,  3.23s/it] 76%|███████▌  | 5618/7431 [5:38:32<1:38:43,  3.27s/it] 76%|███████▌  | 5619/7431 [5:38:35<1:38:37,  3.27s/it] 76%|███████▌  | 5620/7431 [5:38:38<1:39:57,  3.31s/it] 76%|███████▌  | 5621/7431 [5:38:41<1:38:09,  3.25s/it] 76%|███████▌  | 5622/7431 [5:38:45<1:38:04,  3.25s/it] 76%|███████▌  | 5623/7431 [5:38:48<1:40:01,  3.32s/it] 76%|███████▌  | 5624/7431 [5:38:51<1:37:58,  3.25s/it] 76%|███████▌  | 5625/7431 [5:38:54<1:36:59,  3.22s/it] 76%|███████▌  | 5626/7431 [5:38:58<1:37:45,  3.25s/it] 76%|███████▌  | 5627/7431 [5:39:01<1:37:53,  3.26s/it] 76%|███████▌  | 5628/7431 [5:39:04<1:39:41,  3.32s/it] 76%|███████▌  | 5629/7431 [5:39:08<1:39:40,  3.32s/it] 76%|███████▌  | 5630/7431 [5:39:11<1:38:11,  3.27s/it] 76%|███████▌  | 5631/7431 [5:39:14<1:38:24,  3.28s/it] 76%|███████▌  | 5632/7431 [5:39:18<1:39:51,  3.33s/it] 76%|███████▌  | 5633/7431 [5:39:21<1:37:40,  3.26s/it] 76%|███████▌  | 5634/7431 [5:39:24<1:37:09,  3.24s/it] 76%|███████▌  | 5635/7431 [5:39:27<1:36:54,  3.24s/it] 76%|███████▌  | 5636/7431 [5:39:31<1:39:25,  3.32s/it] 76%|███████▌  | 5637/7431 [5:39:34<1:39:11,  3.32s/it] 76%|███████▌  | 5638/7431 [5:39:37<1:38:12,  3.29s/it] 76%|███████▌  | 5639/7431 [5:39:41<1:38:22,  3.29s/it] 76%|███████▌  | 5640/7431 [5:39:44<1:37:08,  3.25s/it] 76%|███████▌  | 5641/7431 [5:39:47<1:37:39,  3.27s/it] 76%|███████▌  | 5642/7431 [5:39:50<1:38:00,  3.29s/it] 76%|███████▌  | 5643/7431 [5:39:54<1:37:40,  3.28s/it] 76%|███████▌  | 5644/7431 [5:39:57<1:37:27,  3.27s/it] 76%|███████▌  | 5645/7431 [5:40:00<1:37:38,  3.28s/it] 76%|███████▌  | 5646/7431 [5:40:04<1:38:58,  3.33s/it] 76%|███████▌  | 5647/7431 [5:40:07<1:38:22,  3.31s/it] 76%|███████▌  | 5648/7431 [5:40:10<1:37:28,  3.28s/it] 76%|███████▌  | 5649/7431 [5:40:13<1:36:59,  3.27s/it]09/01/2024 00:07:35 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.4430205821990967, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.038913626223802567, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.582418441772461, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.064352512359619}
 76%|███████▌  | 5650/7431 [5:40:17<1:36:34,  3.25s/it] 76%|███████▌  | 5651/7431 [5:40:20<1:36:35,  3.26s/it] 76%|███████▌  | 5652/7431 [5:40:23<1:38:56,  3.34s/it] 76%|███████▌  | 5653/7431 [5:40:27<1:37:52,  3.30s/it] 76%|███████▌  | 5654/7431 [5:40:30<1:37:50,  3.30s/it] 76%|███████▌  | 5655/7431 [5:40:33<1:37:18,  3.29s/it] 76%|███████▌  | 5656/7431 [5:40:36<1:37:22,  3.29s/it] 76%|███████▌  | 5657/7431 [5:40:40<1:38:16,  3.32s/it] 76%|███████▌  | 5658/7431 [5:40:43<1:37:54,  3.31s/it] 76%|███████▌  | 5659/7431 [5:40:46<1:37:15,  3.29s/it] 76%|███████▌  | 5660/7431 [5:40:50<1:37:01,  3.29s/it] 76%|███████▌  | 5661/7431 [5:40:53<1:36:26,  3.27s/it] 76%|███████▌  | 5662/7431 [5:40:56<1:35:59,  3.26s/it] 76%|███████▌  | 5663/7431 [5:40:59<1:37:01,  3.29s/it] 76%|███████▌  | 5664/7431 [5:41:03<1:36:43,  3.28s/it] 76%|███████▌  | 5665/7431 [5:41:06<1:37:17,  3.31s/it] 76%|███████▌  | 5666/7431 [5:41:09<1:37:54,  3.33s/it] 76%|███████▋  | 5667/7431 [5:41:13<1:39:35,  3.39s/it] 76%|███████▋  | 5668/7431 [5:41:16<1:38:40,  3.36s/it] 76%|███████▋  | 5669/7431 [5:41:19<1:37:07,  3.31s/it] 76%|███████▋  | 5670/7431 [5:41:23<1:36:55,  3.30s/it] 76%|███████▋  | 5671/7431 [5:41:26<1:37:20,  3.32s/it] 76%|███████▋  | 5672/7431 [5:41:29<1:37:10,  3.31s/it] 76%|███████▋  | 5673/7431 [5:41:33<1:35:39,  3.27s/it] 76%|███████▋  | 5674/7431 [5:41:36<1:37:56,  3.34s/it] 76%|███████▋  | 5675/7431 [5:41:39<1:37:27,  3.33s/it] 76%|███████▋  | 5676/7431 [5:41:43<1:36:37,  3.30s/it] 76%|███████▋  | 5677/7431 [5:41:46<1:35:51,  3.28s/it] 76%|███████▋  | 5678/7431 [5:41:49<1:36:17,  3.30s/it] 76%|███████▋  | 5679/7431 [5:41:52<1:34:59,  3.25s/it] 76%|███████▋  | 5680/7431 [5:41:55<1:34:00,  3.22s/it] 76%|███████▋  | 5681/7431 [5:41:59<1:34:33,  3.24s/it] 76%|███████▋  | 5682/7431 [5:42:02<1:35:36,  3.28s/it] 76%|███████▋  | 5683/7431 [5:42:05<1:35:24,  3.28s/it] 76%|███████▋  | 5684/7431 [5:42:09<1:34:55,  3.26s/it] 77%|███████▋  | 5685/7431 [5:42:12<1:35:04,  3.27s/it] 77%|███████▋  | 5686/7431 [5:42:15<1:34:26,  3.25s/it] 77%|███████▋  | 5687/7431 [5:42:18<1:33:25,  3.21s/it] 77%|███████▋  | 5688/7431 [5:42:22<1:33:36,  3.22s/it] 77%|███████▋  | 5689/7431 [5:42:25<1:34:48,  3.27s/it] 77%|███████▋  | 5690/7431 [5:42:28<1:36:45,  3.33s/it] 77%|███████▋  | 5691/7431 [5:42:32<1:35:28,  3.29s/it] 77%|███████▋  | 5692/7431 [5:42:35<1:34:41,  3.27s/it] 77%|███████▋  | 5693/7431 [5:42:38<1:33:51,  3.24s/it] 77%|███████▋  | 5694/7431 [5:42:41<1:33:59,  3.25s/it] 77%|███████▋  | 5695/7431 [5:42:44<1:32:53,  3.21s/it] 77%|███████▋  | 5696/7431 [5:42:48<1:34:54,  3.28s/it] 77%|███████▋  | 5697/7431 [5:42:51<1:34:57,  3.29s/it] 77%|███████▋  | 5698/7431 [5:42:54<1:34:23,  3.27s/it] 77%|███████▋  | 5699/7431 [5:42:58<1:34:26,  3.27s/it]09/01/2024 00:10:19 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.405282974243164, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.0339067205786705, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6257309913635254, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.064920425415039}
 77%|███████▋  | 5700/7431 [5:43:01<1:34:32,  3.28s/it] 77%|███████▋  | 5701/7431 [5:43:04<1:33:35,  3.25s/it] 77%|███████▋  | 5702/7431 [5:43:07<1:33:39,  3.25s/it] 77%|███████▋  | 5703/7431 [5:43:10<1:32:56,  3.23s/it] 77%|███████▋  | 5704/7431 [5:43:14<1:33:57,  3.26s/it] 77%|███████▋  | 5705/7431 [5:43:17<1:33:07,  3.24s/it] 77%|███████▋  | 5706/7431 [5:43:20<1:34:45,  3.30s/it] 77%|███████▋  | 5707/7431 [5:43:24<1:33:54,  3.27s/it] 77%|███████▋  | 5708/7431 [5:43:27<1:32:47,  3.23s/it] 77%|███████▋  | 5709/7431 [5:43:30<1:33:22,  3.25s/it] 77%|███████▋  | 5710/7431 [5:43:33<1:33:49,  3.27s/it] 77%|███████▋  | 5711/7431 [5:43:37<1:33:06,  3.25s/it] 77%|███████▋  | 5712/7431 [5:43:40<1:32:17,  3.22s/it] 77%|███████▋  | 5713/7431 [5:43:43<1:32:08,  3.22s/it] 77%|███████▋  | 5714/7431 [5:43:46<1:32:13,  3.22s/it] 77%|███████▋  | 5715/7431 [5:43:50<1:33:41,  3.28s/it] 77%|███████▋  | 5716/7431 [5:43:53<1:33:09,  3.26s/it] 77%|███████▋  | 5717/7431 [5:43:56<1:33:18,  3.27s/it] 77%|███████▋  | 5718/7431 [5:43:59<1:32:23,  3.24s/it] 77%|███████▋  | 5719/7431 [5:44:02<1:32:01,  3.23s/it] 77%|███████▋  | 5720/7431 [5:44:06<1:32:30,  3.24s/it] 77%|███████▋  | 5721/7431 [5:44:09<1:31:59,  3.23s/it] 77%|███████▋  | 5722/7431 [5:44:12<1:31:56,  3.23s/it] 77%|███████▋  | 5723/7431 [5:44:16<1:33:48,  3.30s/it] 77%|███████▋  | 5724/7431 [5:44:19<1:32:51,  3.26s/it] 77%|███████▋  | 5725/7431 [5:44:22<1:32:16,  3.25s/it] 77%|███████▋  | 5726/7431 [5:44:25<1:32:11,  3.24s/it] 77%|███████▋  | 5727/7431 [5:44:29<1:32:39,  3.26s/it] 77%|███████▋  | 5728/7431 [5:44:32<1:34:29,  3.33s/it] 77%|███████▋  | 5729/7431 [5:44:35<1:33:02,  3.28s/it] 77%|███████▋  | 5730/7431 [5:44:38<1:32:20,  3.26s/it] 77%|███████▋  | 5731/7431 [5:44:42<1:31:29,  3.23s/it] 77%|███████▋  | 5732/7431 [5:44:45<1:31:44,  3.24s/it] 77%|███████▋  | 5733/7431 [5:44:48<1:32:28,  3.27s/it] 77%|███████▋  | 5734/7431 [5:44:51<1:31:06,  3.22s/it] 77%|███████▋  | 5735/7431 [5:44:55<1:31:23,  3.23s/it] 77%|███████▋  | 5736/7431 [5:44:58<1:32:32,  3.28s/it] 77%|███████▋  | 5737/7431 [5:45:01<1:33:23,  3.31s/it] 77%|███████▋  | 5738/7431 [5:45:04<1:32:02,  3.26s/it] 77%|███████▋  | 5739/7431 [5:45:08<1:31:09,  3.23s/it] 77%|███████▋  | 5740/7431 [5:45:11<1:30:54,  3.23s/it] 77%|███████▋  | 5741/7431 [5:45:14<1:30:32,  3.21s/it] 77%|███████▋  | 5742/7431 [5:45:17<1:30:05,  3.20s/it] 77%|███████▋  | 5743/7431 [5:45:21<1:30:57,  3.23s/it] 77%|███████▋  | 5744/7431 [5:45:24<1:32:18,  3.28s/it] 77%|███████▋  | 5745/7431 [5:45:27<1:32:08,  3.28s/it] 77%|███████▋  | 5746/7431 [5:45:31<1:33:20,  3.32s/it] 77%|███████▋  | 5747/7431 [5:45:34<1:32:50,  3.31s/it] 77%|███████▋  | 5748/7431 [5:45:37<1:32:41,  3.30s/it] 77%|███████▋  | 5749/7431 [5:45:40<1:31:15,  3.26s/it]09/01/2024 00:13:02 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.7236462831497192, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.051561422646045685, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.735598564147949, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.510806083679199}
 77%|███████▋  | 5750/7431 [5:45:44<1:31:46,  3.28s/it] 77%|███████▋  | 5751/7431 [5:45:47<1:31:55,  3.28s/it] 77%|███████▋  | 5752/7431 [5:45:50<1:31:30,  3.27s/it] 77%|███████▋  | 5753/7431 [5:45:53<1:31:35,  3.27s/it] 77%|███████▋  | 5754/7431 [5:45:57<1:30:30,  3.24s/it] 77%|███████▋  | 5755/7431 [5:46:00<1:32:40,  3.32s/it] 77%|███████▋  | 5756/7431 [5:46:03<1:31:58,  3.29s/it] 77%|███████▋  | 5757/7431 [5:46:07<1:31:59,  3.30s/it] 77%|███████▋  | 5758/7431 [5:46:10<1:31:22,  3.28s/it] 77%|███████▋  | 5759/7431 [5:46:13<1:29:55,  3.23s/it] 78%|███████▊  | 5760/7431 [5:46:16<1:29:56,  3.23s/it] 78%|███████▊  | 5761/7431 [5:46:20<1:32:19,  3.32s/it] 78%|███████▊  | 5762/7431 [5:46:23<1:31:05,  3.27s/it] 78%|███████▊  | 5763/7431 [5:46:26<1:29:59,  3.24s/it] 78%|███████▊  | 5764/7431 [5:46:29<1:31:15,  3.28s/it] 78%|███████▊  | 5765/7431 [5:46:33<1:31:42,  3.30s/it] 78%|███████▊  | 5766/7431 [5:46:36<1:31:39,  3.30s/it] 78%|███████▊  | 5767/7431 [5:46:39<1:29:23,  3.22s/it] 78%|███████▊  | 5768/7431 [5:46:43<1:30:44,  3.27s/it] 78%|███████▊  | 5769/7431 [5:46:46<1:31:19,  3.30s/it] 78%|███████▊  | 5770/7431 [5:46:49<1:32:58,  3.36s/it] 78%|███████▊  | 5771/7431 [5:46:53<1:31:29,  3.31s/it] 78%|███████▊  | 5772/7431 [5:46:56<1:31:01,  3.29s/it] 78%|███████▊  | 5773/7431 [5:46:59<1:30:54,  3.29s/it] 78%|███████▊  | 5774/7431 [5:47:02<1:29:39,  3.25s/it] 78%|███████▊  | 5775/7431 [5:47:05<1:28:57,  3.22s/it] 78%|███████▊  | 5776/7431 [5:47:09<1:28:30,  3.21s/it] 78%|███████▊  | 5777/7431 [5:47:12<1:28:11,  3.20s/it] 78%|███████▊  | 5778/7431 [5:47:15<1:29:51,  3.26s/it] 78%|███████▊  | 5779/7431 [5:47:18<1:29:34,  3.25s/it] 78%|███████▊  | 5780/7431 [5:47:22<1:32:08,  3.35s/it] 78%|███████▊  | 5781/7431 [5:47:25<1:30:55,  3.31s/it] 78%|███████▊  | 5782/7431 [5:47:28<1:29:37,  3.26s/it] 78%|███████▊  | 5783/7431 [5:47:32<1:29:25,  3.26s/it] 78%|███████▊  | 5784/7431 [5:47:35<1:28:47,  3.23s/it] 78%|███████▊  | 5785/7431 [5:47:38<1:30:08,  3.29s/it] 78%|███████▊  | 5786/7431 [5:47:41<1:29:32,  3.27s/it] 78%|███████▊  | 5787/7431 [5:47:45<1:29:27,  3.26s/it] 78%|███████▊  | 5788/7431 [5:47:48<1:30:11,  3.29s/it] 78%|███████▊  | 5789/7431 [5:47:51<1:29:09,  3.26s/it] 78%|███████▊  | 5790/7431 [5:47:54<1:28:05,  3.22s/it] 78%|███████▊  | 5791/7431 [5:47:58<1:27:50,  3.21s/it] 78%|███████▊  | 5792/7431 [5:48:01<1:27:45,  3.21s/it] 78%|███████▊  | 5793/7431 [5:48:04<1:29:21,  3.27s/it] 78%|███████▊  | 5794/7431 [5:48:08<1:29:55,  3.30s/it] 78%|███████▊  | 5795/7431 [5:48:11<1:29:10,  3.27s/it] 78%|███████▊  | 5796/7431 [5:48:14<1:28:58,  3.27s/it] 78%|███████▊  | 5797/7431 [5:48:17<1:29:47,  3.30s/it] 78%|███████▊  | 5798/7431 [5:48:21<1:29:13,  3.28s/it] 78%|███████▊  | 5799/7431 [5:48:24<1:28:59,  3.27s/it]09/01/2024 00:15:46 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.7577574253082275, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.039111409336328506, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.8386995792388916, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.635568618774414}
 78%|███████▊  | 5800/7431 [5:48:27<1:28:57,  3.27s/it] 78%|███████▊  | 5801/7431 [5:48:30<1:28:02,  3.24s/it] 78%|███████▊  | 5802/7431 [5:48:34<1:28:09,  3.25s/it] 78%|███████▊  | 5803/7431 [5:48:37<1:28:44,  3.27s/it] 78%|███████▊  | 5804/7431 [5:48:40<1:28:50,  3.28s/it] 78%|███████▊  | 5805/7431 [5:48:43<1:28:34,  3.27s/it] 78%|███████▊  | 5806/7431 [5:48:47<1:29:08,  3.29s/it] 78%|███████▊  | 5807/7431 [5:48:50<1:28:32,  3.27s/it] 78%|███████▊  | 5808/7431 [5:48:53<1:29:12,  3.30s/it] 78%|███████▊  | 5809/7431 [5:48:57<1:28:32,  3.28s/it] 78%|███████▊  | 5810/7431 [5:49:00<1:27:42,  3.25s/it] 78%|███████▊  | 5811/7431 [5:49:03<1:27:36,  3.24s/it] 78%|███████▊  | 5812/7431 [5:49:06<1:29:01,  3.30s/it] 78%|███████▊  | 5813/7431 [5:49:10<1:28:22,  3.28s/it] 78%|███████▊  | 5814/7431 [5:49:13<1:27:51,  3.26s/it] 78%|███████▊  | 5815/7431 [5:49:16<1:29:17,  3.32s/it] 78%|███████▊  | 5816/7431 [5:49:19<1:27:40,  3.26s/it] 78%|███████▊  | 5817/7431 [5:49:23<1:27:06,  3.24s/it] 78%|███████▊  | 5818/7431 [5:49:26<1:26:17,  3.21s/it] 78%|███████▊  | 5819/7431 [5:49:29<1:28:32,  3.30s/it] 78%|███████▊  | 5820/7431 [5:49:33<1:28:29,  3.30s/it] 78%|███████▊  | 5821/7431 [5:49:36<1:27:40,  3.27s/it] 78%|███████▊  | 5822/7431 [5:49:39<1:25:43,  3.20s/it] 78%|███████▊  | 5823/7431 [5:49:42<1:26:51,  3.24s/it] 78%|███████▊  | 5824/7431 [5:49:45<1:25:56,  3.21s/it] 78%|███████▊  | 5825/7431 [5:49:48<1:25:50,  3.21s/it] 78%|███████▊  | 5826/7431 [5:49:52<1:27:06,  3.26s/it] 78%|███████▊  | 5827/7431 [5:49:55<1:27:49,  3.29s/it] 78%|███████▊  | 5828/7431 [5:49:58<1:27:27,  3.27s/it] 78%|███████▊  | 5829/7431 [5:50:02<1:26:35,  3.24s/it] 78%|███████▊  | 5830/7431 [5:50:05<1:27:47,  3.29s/it] 78%|███████▊  | 5831/7431 [5:50:08<1:27:52,  3.30s/it] 78%|███████▊  | 5832/7431 [5:50:11<1:26:23,  3.24s/it] 78%|███████▊  | 5833/7431 [5:50:15<1:28:13,  3.31s/it] 79%|███████▊  | 5834/7431 [5:50:18<1:27:53,  3.30s/it] 79%|███████▊  | 5835/7431 [5:50:21<1:26:28,  3.25s/it] 79%|███████▊  | 5836/7431 [5:50:24<1:25:21,  3.21s/it] 79%|███████▊  | 5837/7431 [5:50:28<1:24:47,  3.19s/it] 79%|███████▊  | 5838/7431 [5:50:31<1:26:36,  3.26s/it] 79%|███████▊  | 5839/7431 [5:50:34<1:25:56,  3.24s/it] 79%|███████▊  | 5840/7431 [5:50:37<1:24:58,  3.20s/it] 79%|███████▊  | 5841/7431 [5:50:41<1:24:52,  3.20s/it] 79%|███████▊  | 5842/7431 [5:50:44<1:24:21,  3.19s/it] 79%|███████▊  | 5843/7431 [5:50:47<1:23:54,  3.17s/it] 79%|███████▊  | 5844/7431 [5:50:50<1:25:27,  3.23s/it] 79%|███████▊  | 5845/7431 [5:50:54<1:26:17,  3.26s/it] 79%|███████▊  | 5846/7431 [5:50:57<1:27:03,  3.30s/it] 79%|███████▊  | 5847/7431 [5:51:00<1:25:09,  3.23s/it] 79%|███████▊  | 5848/7431 [5:51:03<1:25:19,  3.23s/it] 79%|███████▊  | 5849/7431 [5:51:07<1:25:42,  3.25s/it]09/01/2024 00:18:28 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.655961036682129, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04677603766322136, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7440757751464844, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.446812629699707}
 79%|███████▊  | 5850/7431 [5:51:10<1:26:07,  3.27s/it] 79%|███████▊  | 5851/7431 [5:51:13<1:26:37,  3.29s/it] 79%|███████▉  | 5852/7431 [5:51:17<1:27:14,  3.31s/it] 79%|███████▉  | 5853/7431 [5:51:20<1:26:21,  3.28s/it] 79%|███████▉  | 5854/7431 [5:51:23<1:26:31,  3.29s/it] 79%|███████▉  | 5855/7431 [5:51:27<1:28:22,  3.36s/it] 79%|███████▉  | 5856/7431 [5:51:30<1:26:40,  3.30s/it] 79%|███████▉  | 5857/7431 [5:51:33<1:26:47,  3.31s/it] 79%|███████▉  | 5858/7431 [5:51:36<1:26:37,  3.30s/it] 79%|███████▉  | 5859/7431 [5:51:39<1:25:14,  3.25s/it] 79%|███████▉  | 5860/7431 [5:51:43<1:26:01,  3.29s/it] 79%|███████▉  | 5861/7431 [5:51:46<1:27:35,  3.35s/it] 79%|███████▉  | 5862/7431 [5:51:50<1:26:29,  3.31s/it] 79%|███████▉  | 5863/7431 [5:51:53<1:26:41,  3.32s/it] 79%|███████▉  | 5864/7431 [5:51:56<1:27:04,  3.33s/it] 79%|███████▉  | 5865/7431 [5:51:59<1:26:06,  3.30s/it] 79%|███████▉  | 5866/7431 [5:52:03<1:26:25,  3.31s/it] 79%|███████▉  | 5867/7431 [5:52:06<1:25:17,  3.27s/it] 79%|███████▉  | 5868/7431 [5:52:09<1:26:03,  3.30s/it] 79%|███████▉  | 5869/7431 [5:52:12<1:24:21,  3.24s/it] 79%|███████▉  | 5870/7431 [5:52:16<1:25:29,  3.29s/it] 79%|███████▉  | 5871/7431 [5:52:19<1:25:17,  3.28s/it] 79%|███████▉  | 5872/7431 [5:52:22<1:25:33,  3.29s/it] 79%|███████▉  | 5873/7431 [5:52:26<1:24:46,  3.26s/it] 79%|███████▉  | 5874/7431 [5:52:29<1:24:22,  3.25s/it] 79%|███████▉  | 5875/7431 [5:52:32<1:26:39,  3.34s/it] 79%|███████▉  | 5876/7431 [5:52:36<1:27:11,  3.36s/it] 79%|███████▉  | 5877/7431 [5:52:39<1:25:23,  3.30s/it] 79%|███████▉  | 5878/7431 [5:52:42<1:24:42,  3.27s/it] 79%|███████▉  | 5879/7431 [5:52:45<1:24:13,  3.26s/it] 79%|███████▉  | 5880/7431 [5:52:49<1:24:12,  3.26s/it] 79%|███████▉  | 5881/7431 [5:52:52<1:24:36,  3.28s/it] 79%|███████▉  | 5882/7431 [5:52:55<1:24:30,  3.27s/it] 79%|███████▉  | 5883/7431 [5:52:58<1:23:17,  3.23s/it] 79%|███████▉  | 5884/7431 [5:53:02<1:22:30,  3.20s/it] 79%|███████▉  | 5885/7431 [5:53:05<1:22:27,  3.20s/it] 79%|███████▉  | 5886/7431 [5:53:08<1:23:05,  3.23s/it] 79%|███████▉  | 5887/7431 [5:53:11<1:23:32,  3.25s/it] 79%|███████▉  | 5888/7431 [5:53:15<1:23:59,  3.27s/it] 79%|███████▉  | 5889/7431 [5:53:18<1:24:43,  3.30s/it] 79%|███████▉  | 5890/7431 [5:53:21<1:23:34,  3.25s/it] 79%|███████▉  | 5891/7431 [5:53:24<1:22:46,  3.22s/it] 79%|███████▉  | 5892/7431 [5:53:27<1:22:25,  3.21s/it] 79%|███████▉  | 5893/7431 [5:53:31<1:23:56,  3.27s/it] 79%|███████▉  | 5894/7431 [5:53:34<1:23:11,  3.25s/it] 79%|███████▉  | 5895/7431 [5:53:37<1:22:52,  3.24s/it] 79%|███████▉  | 5896/7431 [5:53:41<1:23:35,  3.27s/it] 79%|███████▉  | 5897/7431 [5:53:44<1:22:21,  3.22s/it] 79%|███████▉  | 5898/7431 [5:53:47<1:23:23,  3.26s/it] 79%|███████▉  | 5899/7431 [5:53:51<1:24:16,  3.30s/it]09/01/2024 00:21:13 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.6402705907821655, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.05047673359513283, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.681749105453491, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.372496604919434}
 79%|███████▉  | 5900/7431 [5:53:54<1:25:33,  3.35s/it] 79%|███████▉  | 5901/7431 [5:53:57<1:24:22,  3.31s/it] 79%|███████▉  | 5902/7431 [5:54:00<1:23:26,  3.27s/it] 79%|███████▉  | 5903/7431 [5:54:04<1:23:16,  3.27s/it] 79%|███████▉  | 5904/7431 [5:54:07<1:22:57,  3.26s/it] 79%|███████▉  | 5905/7431 [5:54:10<1:22:00,  3.22s/it] 79%|███████▉  | 5906/7431 [5:54:13<1:23:03,  3.27s/it] 79%|███████▉  | 5907/7431 [5:54:17<1:23:42,  3.30s/it] 80%|███████▉  | 5908/7431 [5:54:20<1:23:26,  3.29s/it] 80%|███████▉  | 5909/7431 [5:54:23<1:22:41,  3.26s/it] 80%|███████▉  | 5910/7431 [5:54:26<1:22:28,  3.25s/it] 80%|███████▉  | 5911/7431 [5:54:30<1:23:56,  3.31s/it] 80%|███████▉  | 5912/7431 [5:54:33<1:23:54,  3.31s/it] 80%|███████▉  | 5913/7431 [5:54:37<1:23:57,  3.32s/it] 80%|███████▉  | 5914/7431 [5:54:40<1:22:11,  3.25s/it] 80%|███████▉  | 5915/7431 [5:54:43<1:22:27,  3.26s/it] 80%|███████▉  | 5916/7431 [5:54:46<1:22:29,  3.27s/it] 80%|███████▉  | 5917/7431 [5:54:49<1:21:58,  3.25s/it] 80%|███████▉  | 5918/7431 [5:54:53<1:22:01,  3.25s/it] 80%|███████▉  | 5919/7431 [5:54:56<1:22:52,  3.29s/it] 80%|███████▉  | 5920/7431 [5:54:59<1:22:35,  3.28s/it] 80%|███████▉  | 5921/7431 [5:55:03<1:21:54,  3.25s/it] 80%|███████▉  | 5922/7431 [5:55:06<1:22:38,  3.29s/it] 80%|███████▉  | 5923/7431 [5:55:09<1:22:55,  3.30s/it] 80%|███████▉  | 5924/7431 [5:55:12<1:22:40,  3.29s/it] 80%|███████▉  | 5925/7431 [5:55:16<1:22:23,  3.28s/it] 80%|███████▉  | 5926/7431 [5:55:19<1:21:34,  3.25s/it] 80%|███████▉  | 5927/7431 [5:55:22<1:21:22,  3.25s/it] 80%|███████▉  | 5928/7431 [5:55:25<1:20:46,  3.22s/it] 80%|███████▉  | 5929/7431 [5:55:29<1:22:39,  3.30s/it] 80%|███████▉  | 5930/7431 [5:55:32<1:21:03,  3.24s/it] 80%|███████▉  | 5931/7431 [5:55:35<1:20:03,  3.20s/it] 80%|███████▉  | 5932/7431 [5:55:38<1:21:12,  3.25s/it] 80%|███████▉  | 5933/7431 [5:55:42<1:21:06,  3.25s/it] 80%|███████▉  | 5934/7431 [5:55:45<1:20:32,  3.23s/it] 80%|███████▉  | 5935/7431 [5:55:48<1:21:34,  3.27s/it] 80%|███████▉  | 5936/7431 [5:55:51<1:21:25,  3.27s/it] 80%|███████▉  | 5937/7431 [5:55:55<1:21:54,  3.29s/it] 80%|███████▉  | 5938/7431 [5:55:58<1:22:30,  3.32s/it] 80%|███████▉  | 5939/7431 [5:56:01<1:22:08,  3.30s/it] 80%|███████▉  | 5940/7431 [5:56:05<1:21:45,  3.29s/it] 80%|███████▉  | 5941/7431 [5:56:08<1:22:02,  3.30s/it] 80%|███████▉  | 5942/7431 [5:56:11<1:21:39,  3.29s/it] 80%|███████▉  | 5943/7431 [5:56:15<1:21:20,  3.28s/it] 80%|███████▉  | 5944/7431 [5:56:18<1:20:44,  3.26s/it] 80%|████████  | 5945/7431 [5:56:21<1:20:50,  3.26s/it] 80%|████████  | 5946/7431 [5:56:24<1:20:15,  3.24s/it] 80%|████████  | 5947/7431 [5:56:27<1:20:06,  3.24s/it] 80%|████████  | 5948/7431 [5:56:31<1:20:21,  3.25s/it] 80%|████████  | 5949/7431 [5:56:34<1:20:18,  3.25s/it]09/01/2024 00:23:56 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.3308357000350952, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03625419735908508, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.5710713863372803, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 3.9381613731384277}
 80%|████████  | 5950/7431 [5:56:37<1:21:46,  3.31s/it] 80%|████████  | 5951/7431 [5:56:41<1:21:00,  3.28s/it] 80%|████████  | 5952/7431 [5:56:44<1:20:46,  3.28s/it] 80%|████████  | 5953/7431 [5:56:47<1:22:06,  3.33s/it] 80%|████████  | 5954/7431 [5:56:51<1:20:50,  3.28s/it] 80%|████████  | 5955/7431 [5:56:54<1:21:58,  3.33s/it] 80%|████████  | 5956/7431 [5:56:57<1:21:06,  3.30s/it] 80%|████████  | 5957/7431 [5:57:01<1:21:13,  3.31s/it] 80%|████████  | 5958/7431 [5:57:04<1:21:02,  3.30s/it] 80%|████████  | 5959/7431 [5:57:07<1:19:57,  3.26s/it] 80%|████████  | 5960/7431 [5:57:10<1:19:20,  3.24s/it] 80%|████████  | 5961/7431 [5:57:13<1:19:52,  3.26s/it] 80%|████████  | 5962/7431 [5:57:17<1:19:20,  3.24s/it] 80%|████████  | 5963/7431 [5:57:20<1:21:01,  3.31s/it] 80%|████████  | 5964/7431 [5:57:23<1:19:17,  3.24s/it] 80%|████████  | 5965/7431 [5:57:26<1:18:49,  3.23s/it] 80%|████████  | 5966/7431 [5:57:30<1:18:31,  3.22s/it] 80%|████████  | 5967/7431 [5:57:33<1:20:13,  3.29s/it] 80%|████████  | 5968/7431 [5:57:36<1:21:10,  3.33s/it] 80%|████████  | 5969/7431 [5:57:40<1:20:33,  3.31s/it] 80%|████████  | 5970/7431 [5:57:43<1:19:09,  3.25s/it] 80%|████████  | 5971/7431 [5:57:46<1:18:49,  3.24s/it] 80%|████████  | 5972/7431 [5:57:49<1:19:46,  3.28s/it] 80%|████████  | 5973/7431 [5:57:53<1:19:14,  3.26s/it] 80%|████████  | 5974/7431 [5:57:56<1:18:41,  3.24s/it] 80%|████████  | 5975/7431 [5:57:59<1:18:51,  3.25s/it] 80%|████████  | 5976/7431 [5:58:02<1:18:29,  3.24s/it] 80%|████████  | 5977/7431 [5:58:06<1:19:00,  3.26s/it] 80%|████████  | 5978/7431 [5:58:09<1:18:29,  3.24s/it] 80%|████████  | 5979/7431 [5:58:12<1:19:36,  3.29s/it] 80%|████████  | 5980/7431 [5:58:16<1:19:22,  3.28s/it] 80%|████████  | 5981/7431 [5:58:19<1:18:28,  3.25s/it] 81%|████████  | 5982/7431 [5:58:22<1:17:53,  3.23s/it] 81%|████████  | 5983/7431 [5:58:25<1:18:14,  3.24s/it] 81%|████████  | 5984/7431 [5:58:28<1:18:23,  3.25s/it] 81%|████████  | 5985/7431 [5:58:32<1:18:31,  3.26s/it] 81%|████████  | 5986/7431 [5:58:35<1:19:50,  3.31s/it] 81%|████████  | 5987/7431 [5:58:38<1:19:26,  3.30s/it] 81%|████████  | 5988/7431 [5:58:42<1:18:50,  3.28s/it] 81%|████████  | 5989/7431 [5:58:45<1:18:10,  3.25s/it] 81%|████████  | 5990/7431 [5:58:48<1:17:39,  3.23s/it] 81%|████████  | 5991/7431 [5:58:51<1:16:32,  3.19s/it] 81%|████████  | 5992/7431 [5:58:55<1:18:52,  3.29s/it] 81%|████████  | 5993/7431 [5:58:58<1:20:09,  3.34s/it] 81%|████████  | 5994/7431 [5:59:01<1:18:14,  3.27s/it] 81%|████████  | 5995/7431 [5:59:05<1:19:33,  3.32s/it] 81%|████████  | 5996/7431 [5:59:08<1:18:37,  3.29s/it] 81%|████████  | 5997/7431 [5:59:11<1:17:43,  3.25s/it] 81%|████████  | 5998/7431 [5:59:14<1:17:07,  3.23s/it] 81%|████████  | 5999/7431 [5:59:17<1:16:53,  3.22s/it]09/01/2024 00:26:38 - INFO - __main__ -   evaluate on ret%tv--msrvtt_ret task
09/01/2024 00:26:38 - INFO - __main__ -   start running ret%tv validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  1%|          | 2/221 [00:00<00:57,  3.83it/s][A
  1%|▏         | 3/221 [00:00<00:54,  3.99it/s][A
  2%|▏         | 4/221 [00:00<00:45,  4.80it/s][A
  2%|▏         | 5/221 [00:01<00:41,  5.22it/s][A
  3%|▎         | 6/221 [00:01<00:39,  5.48it/s][A
  3%|▎         | 7/221 [00:01<00:40,  5.29it/s][A
  4%|▎         | 8/221 [00:01<00:38,  5.56it/s][A
  4%|▍         | 9/221 [00:01<00:37,  5.58it/s][A
  5%|▍         | 10/221 [00:02<00:51,  4.07it/s][A
  5%|▍         | 11/221 [00:02<00:47,  4.38it/s][A
  5%|▌         | 12/221 [00:02<00:44,  4.66it/s][A
  6%|▌         | 13/221 [00:02<00:52,  3.95it/s][A
  6%|▋         | 14/221 [00:02<00:44,  4.64it/s][A
  7%|▋         | 15/221 [00:03<00:44,  4.65it/s][A
  7%|▋         | 16/221 [00:03<00:54,  3.76it/s][A
  8%|▊         | 17/221 [00:03<00:58,  3.49it/s][A
  8%|▊         | 18/221 [00:04<00:49,  4.07it/s][A
  9%|▊         | 19/221 [00:04<00:48,  4.12it/s][A
  9%|▉         | 20/221 [00:04<00:45,  4.45it/s][A
 10%|▉         | 21/221 [00:04<00:48,  4.14it/s][A
 10%|▉         | 22/221 [00:05<00:51,  3.87it/s][A
 10%|█         | 23/221 [00:05<00:49,  4.04it/s][A
 11%|█         | 24/221 [00:05<00:46,  4.26it/s][A
 11%|█▏        | 25/221 [00:05<00:51,  3.79it/s][A
 12%|█▏        | 26/221 [00:06<00:54,  3.56it/s][A
 12%|█▏        | 27/221 [00:06<00:55,  3.47it/s][A
 13%|█▎        | 28/221 [00:06<00:52,  3.70it/s][A
 13%|█▎        | 29/221 [00:07<01:02,  3.06it/s][A
 14%|█▎        | 30/221 [00:07<01:04,  2.96it/s][A
 14%|█▍        | 31/221 [00:07<00:58,  3.23it/s][A
 14%|█▍        | 32/221 [00:07<00:51,  3.71it/s][A
 15%|█▍        | 33/221 [00:08<00:46,  4.01it/s][A
 15%|█▌        | 34/221 [00:08<00:44,  4.19it/s][A
 16%|█▌        | 35/221 [00:08<00:56,  3.28it/s][A
 16%|█▋        | 36/221 [00:09<00:59,  3.10it/s][A
 17%|█▋        | 37/221 [00:09<00:56,  3.27it/s][A
 17%|█▋        | 38/221 [00:09<00:53,  3.44it/s][A
 18%|█▊        | 39/221 [00:09<00:47,  3.87it/s][A
 18%|█▊        | 40/221 [00:10<00:52,  3.46it/s][A
 19%|█▊        | 41/221 [00:10<00:57,  3.15it/s][A
 19%|█▉        | 42/221 [00:10<00:49,  3.64it/s][A
 19%|█▉        | 43/221 [00:10<00:44,  4.02it/s][A
 20%|█▉        | 44/221 [00:11<00:43,  4.10it/s][A
 20%|██        | 45/221 [00:11<00:49,  3.57it/s][A
 21%|██        | 46/221 [00:11<00:51,  3.42it/s][A
 21%|██▏       | 47/221 [00:12<00:44,  3.91it/s][A
 22%|██▏       | 48/221 [00:12<00:40,  4.23it/s][A
 22%|██▏       | 49/221 [00:12<00:45,  3.78it/s][A
 23%|██▎       | 50/221 [00:12<00:51,  3.35it/s][A
 23%|██▎       | 51/221 [00:13<00:48,  3.48it/s][A
 24%|██▎       | 52/221 [00:13<00:49,  3.42it/s][A
 24%|██▍       | 53/221 [00:13<00:46,  3.58it/s][A
 24%|██▍       | 54/221 [00:14<00:57,  2.90it/s][A
 25%|██▍       | 55/221 [00:14<00:53,  3.12it/s][A
 25%|██▌       | 56/221 [00:14<00:48,  3.39it/s][A
 26%|██▌       | 57/221 [00:15<00:51,  3.20it/s][A
 26%|██▌       | 58/221 [00:15<00:48,  3.36it/s][A
 27%|██▋       | 59/221 [00:15<00:43,  3.76it/s][A
 27%|██▋       | 60/221 [00:15<00:42,  3.81it/s][A
 28%|██▊       | 61/221 [00:16<00:41,  3.87it/s][A
 28%|██▊       | 62/221 [00:16<00:44,  3.57it/s][A
 29%|██▊       | 63/221 [00:16<00:45,  3.48it/s][A
 29%|██▉       | 64/221 [00:17<00:49,  3.16it/s][A
 29%|██▉       | 65/221 [00:17<00:44,  3.48it/s][A
 30%|██▉       | 66/221 [00:17<00:54,  2.83it/s][A
 30%|███       | 67/221 [00:18<00:52,  2.91it/s][A
 31%|███       | 68/221 [00:18<00:44,  3.47it/s][A
 31%|███       | 69/221 [00:18<00:51,  2.94it/s][A
 32%|███▏      | 70/221 [00:18<00:45,  3.34it/s][A
 32%|███▏      | 71/221 [00:19<00:44,  3.41it/s][A
 33%|███▎      | 72/221 [00:19<00:43,  3.39it/s][A
 33%|███▎      | 73/221 [00:19<00:39,  3.73it/s][A
 33%|███▎      | 74/221 [00:20<00:38,  3.86it/s][A
 34%|███▍      | 75/221 [00:20<00:41,  3.50it/s][A
 34%|███▍      | 76/221 [00:20<00:42,  3.42it/s][A
 35%|███▍      | 77/221 [00:21<00:47,  3.01it/s][A
 35%|███▌      | 78/221 [00:21<00:44,  3.23it/s][A
 36%|███▌      | 79/221 [00:21<00:48,  2.94it/s][A
 36%|███▌      | 80/221 [00:22<00:44,  3.16it/s][A
 37%|███▋      | 81/221 [00:22<00:40,  3.44it/s][A
 37%|███▋      | 82/221 [00:22<00:38,  3.59it/s][A
 38%|███▊      | 83/221 [00:22<00:44,  3.12it/s][A
 38%|███▊      | 84/221 [00:23<00:38,  3.55it/s][A
 38%|███▊      | 85/221 [00:23<00:32,  4.22it/s][A
 39%|███▉      | 86/221 [00:23<00:35,  3.85it/s][A
 39%|███▉      | 87/221 [00:23<00:38,  3.51it/s][A
 40%|███▉      | 88/221 [00:24<00:38,  3.43it/s][A
 40%|████      | 89/221 [00:24<00:36,  3.58it/s][A
 41%|████      | 90/221 [00:24<00:37,  3.52it/s][A
 41%|████      | 91/221 [00:24<00:33,  3.90it/s][A
 42%|████▏     | 92/221 [00:25<00:34,  3.73it/s][A
 42%|████▏     | 93/221 [00:25<00:37,  3.44it/s][A
 43%|████▎     | 94/221 [00:25<00:38,  3.29it/s][A
 43%|████▎     | 95/221 [00:26<00:34,  3.70it/s][A
 43%|████▎     | 96/221 [00:26<00:45,  2.75it/s][A
 44%|████▍     | 97/221 [00:26<00:38,  3.21it/s][A
 44%|████▍     | 98/221 [00:27<00:44,  2.73it/s][A
 45%|████▍     | 99/221 [00:27<00:41,  2.91it/s][A
 45%|████▌     | 100/221 [00:27<00:38,  3.13it/s][A
 46%|████▌     | 101/221 [00:28<00:34,  3.51it/s][A
 46%|████▌     | 102/221 [00:28<00:43,  2.76it/s][A
 47%|████▋     | 103/221 [00:28<00:36,  3.27it/s][A
 47%|████▋     | 104/221 [00:29<00:35,  3.30it/s][A
 48%|████▊     | 105/221 [00:29<00:37,  3.12it/s][A
 48%|████▊     | 106/221 [00:29<00:34,  3.33it/s][A
 48%|████▊     | 107/221 [00:30<00:35,  3.21it/s][A
 49%|████▉     | 108/221 [00:30<00:33,  3.41it/s][A
 49%|████▉     | 109/221 [00:30<00:28,  3.94it/s][A
 50%|████▉     | 110/221 [00:30<00:32,  3.43it/s][A
 50%|█████     | 111/221 [00:31<00:30,  3.55it/s][A
 51%|█████     | 112/221 [00:31<00:31,  3.50it/s][A
 51%|█████     | 113/221 [00:31<00:26,  4.00it/s][A
 52%|█████▏    | 114/221 [00:31<00:22,  4.79it/s][A
 52%|█████▏    | 115/221 [00:32<00:26,  4.03it/s][A
 52%|█████▏    | 116/221 [00:32<00:25,  4.06it/s][A
 53%|█████▎    | 117/221 [00:32<00:27,  3.79it/s][A
 53%|█████▎    | 118/221 [00:32<00:24,  4.17it/s][A
 54%|█████▍    | 119/221 [00:33<00:27,  3.74it/s][A
 54%|█████▍    | 120/221 [00:33<00:27,  3.74it/s][A
 55%|█████▍    | 121/221 [00:33<00:23,  4.22it/s][A
 55%|█████▌    | 122/221 [00:33<00:23,  4.24it/s][A
 56%|█████▌    | 123/221 [00:33<00:21,  4.49it/s][A
 56%|█████▌    | 124/221 [00:34<00:27,  3.52it/s][A
 57%|█████▋    | 125/221 [00:34<00:27,  3.48it/s][A
 57%|█████▋    | 126/221 [00:34<00:23,  3.96it/s][A
 57%|█████▋    | 127/221 [00:35<00:26,  3.55it/s][A
 58%|█████▊    | 128/221 [00:35<00:26,  3.48it/s][A
 58%|█████▊    | 129/221 [00:35<00:22,  4.03it/s][A
 59%|█████▉    | 130/221 [00:35<00:23,  3.87it/s][A
 59%|█████▉    | 131/221 [00:36<00:20,  4.36it/s][A
 60%|█████▉    | 132/221 [00:37<00:38,  2.33it/s][A
 60%|██████    | 133/221 [00:37<00:36,  2.40it/s][A
 61%|██████    | 134/221 [00:37<00:37,  2.30it/s][A
 61%|██████    | 135/221 [00:38<00:37,  2.28it/s][A
 62%|██████▏   | 136/221 [00:38<00:31,  2.69it/s][A
 62%|██████▏   | 137/221 [00:38<00:27,  3.09it/s][A
 62%|██████▏   | 138/221 [00:39<00:25,  3.27it/s][A
 63%|██████▎   | 139/221 [00:39<00:23,  3.52it/s][A
 63%|██████▎   | 140/221 [00:39<00:22,  3.58it/s][A
 64%|██████▍   | 141/221 [00:39<00:24,  3.32it/s][A
 64%|██████▍   | 142/221 [00:40<00:25,  3.15it/s][A
 65%|██████▍   | 143/221 [00:40<00:25,  3.02it/s][A
 65%|██████▌   | 144/221 [00:40<00:25,  3.02it/s][A
 66%|██████▌   | 145/221 [00:41<00:22,  3.38it/s][A
 67%|██████▋   | 147/221 [00:41<00:17,  4.34it/s][A
 67%|██████▋   | 148/221 [00:41<00:17,  4.07it/s][A
 67%|██████▋   | 149/221 [00:42<00:19,  3.71it/s][A
 68%|██████▊   | 150/221 [00:42<00:19,  3.67it/s][A
 68%|██████▊   | 151/221 [00:42<00:19,  3.64it/s][A
 69%|██████▉   | 152/221 [00:42<00:20,  3.39it/s][A
 69%|██████▉   | 153/221 [00:43<00:16,  4.07it/s][A
 70%|██████▉   | 154/221 [00:43<00:15,  4.28it/s][A
 70%|███████   | 155/221 [00:43<00:16,  3.97it/s][A
 71%|███████   | 156/221 [00:43<00:18,  3.51it/s][A
 71%|███████   | 157/221 [00:44<00:19,  3.34it/s][A
 71%|███████▏  | 158/221 [00:44<00:19,  3.17it/s][A
 72%|███████▏  | 159/221 [00:44<00:17,  3.49it/s][A
 72%|███████▏  | 160/221 [00:45<00:14,  4.17it/s][A
 73%|███████▎  | 161/221 [00:45<00:16,  3.73it/s][A
 73%|███████▎  | 162/221 [00:45<00:13,  4.24it/s][A
 74%|███████▍  | 163/221 [00:45<00:14,  3.97it/s][A
 74%|███████▍  | 164/221 [00:45<00:13,  4.32it/s][A
 75%|███████▍  | 165/221 [00:46<00:14,  3.97it/s][A
 75%|███████▌  | 166/221 [00:46<00:11,  4.63it/s][A
 76%|███████▌  | 167/221 [00:46<00:13,  4.06it/s][A
 76%|███████▌  | 168/221 [00:46<00:13,  4.04it/s][A
 76%|███████▋  | 169/221 [00:47<00:13,  3.98it/s][A
 77%|███████▋  | 170/221 [00:47<00:13,  3.91it/s][A
 77%|███████▋  | 171/221 [00:47<00:12,  4.00it/s][A
 78%|███████▊  | 172/221 [00:48<00:12,  3.86it/s][A
 78%|███████▊  | 173/221 [00:48<00:12,  3.96it/s][A
 79%|███████▊  | 174/221 [00:48<00:12,  3.72it/s][A
 79%|███████▉  | 175/221 [00:49<00:14,  3.14it/s][A
 80%|███████▉  | 176/221 [00:49<00:11,  3.80it/s][A
 80%|████████  | 177/221 [00:49<00:10,  4.09it/s][A
 81%|████████  | 178/221 [00:49<00:09,  4.32it/s][A
 81%|████████  | 179/221 [00:49<00:09,  4.55it/s][A
 81%|████████▏ | 180/221 [00:49<00:08,  4.89it/s][A
 82%|████████▏ | 182/221 [00:50<00:07,  5.27it/s][A
 83%|████████▎ | 183/221 [00:50<00:08,  4.32it/s][A
 83%|████████▎ | 184/221 [00:50<00:08,  4.27it/s][A
 84%|████████▎ | 185/221 [00:51<00:09,  3.66it/s][A
 84%|████████▍ | 186/221 [00:51<00:10,  3.30it/s][A
 85%|████████▍ | 187/221 [00:52<00:12,  2.83it/s][A
 85%|████████▌ | 188/221 [00:52<00:10,  3.13it/s][A
 86%|████████▌ | 189/221 [00:52<00:08,  3.57it/s][A
 86%|████████▌ | 190/221 [00:52<00:08,  3.49it/s][A
 86%|████████▋ | 191/221 [00:52<00:06,  4.30it/s][A
 87%|████████▋ | 192/221 [00:53<00:06,  4.27it/s][A
 87%|████████▋ | 193/221 [00:53<00:07,  3.86it/s][A
 88%|████████▊ | 194/221 [00:53<00:06,  4.09it/s][A
 88%|████████▊ | 195/221 [00:53<00:06,  3.92it/s][A
 89%|████████▊ | 196/221 [00:54<00:06,  3.74it/s][A
 89%|████████▉ | 197/221 [00:54<00:06,  3.69it/s][A
 90%|████████▉ | 198/221 [00:54<00:06,  3.55it/s][A
 90%|█████████ | 199/221 [00:55<00:06,  3.37it/s][A
 90%|█████████ | 200/221 [00:55<00:06,  3.41it/s][A
 91%|█████████ | 201/221 [00:55<00:06,  2.98it/s][A
 91%|█████████▏| 202/221 [00:56<00:06,  2.93it/s][A
 92%|█████████▏| 203/221 [00:56<00:06,  2.81it/s][A
 92%|█████████▏| 204/221 [00:57<00:06,  2.76it/s][A
 93%|█████████▎| 205/221 [00:57<00:05,  3.14it/s][A
 93%|█████████▎| 206/221 [00:57<00:04,  3.01it/s][A
 94%|█████████▎| 207/221 [00:57<00:04,  3.48it/s][A
 94%|█████████▍| 208/221 [00:58<00:03,  3.33it/s][A
 95%|█████████▍| 209/221 [00:58<00:03,  3.66it/s][A
 95%|█████████▌| 210/221 [00:58<00:03,  3.58it/s][A
 95%|█████████▌| 211/221 [00:58<00:02,  3.34it/s][A
 96%|█████████▌| 212/221 [00:59<00:02,  3.58it/s][A
 96%|█████████▋| 213/221 [00:59<00:01,  4.25it/s][A
 97%|█████████▋| 214/221 [00:59<00:01,  3.53it/s][A
 97%|█████████▋| 215/221 [00:59<00:01,  3.91it/s][A
 98%|█████████▊| 216/221 [01:00<00:01,  3.77it/s][A
 98%|█████████▊| 217/221 [01:00<00:01,  3.47it/s][A
 99%|█████████▊| 218/221 [01:00<00:00,  3.66it/s][A
 99%|█████████▉| 219/221 [01:01<00:00,  3.83it/s][A
100%|█████████▉| 220/221 [01:01<00:00,  4.11it/s][A
100%|██████████| 221/221 [01:01<00:00,  4.06it/s][A100%|██████████| 221/221 [01:01<00:00,  3.60it/s]
09/01/2024 00:28:59 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forward=====step 5999--===========

09/01/2024 00:28:59 - INFO - __main__ -   {'area_r1': 9.2, 'area_recall': '9.2/26.7/33.3', 'area_ravg': 23.0}
09/01/2024 00:28:59 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_backard=====step 5999--===========

09/01/2024 00:28:59 - INFO - __main__ -   {'forward_r1': 43.7, 'forward_recall': '43.7/75.1/84.0', 'forward_ravg': 67.6}
09/01/2024 00:28:59 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forw_with_video=====step 5999--===========

09/01/2024 00:28:59 - INFO - __main__ -   {'forward_r1': 61.1, 'forward_recall': '61.1/85.6/90.5', 'forward_ravg': 79.1}
09/01/2024 00:28:59 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itc_tv=====step 5999--===========

09/01/2024 00:28:59 - INFO - __main__ -   {'video_r1': 44.9, 'video_recall': '44.9/75.2/84.4', 'video_ravg': 68.2}
09/01/2024 00:28:59 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itc_tv====history best step: 2999=======

09/01/2024 00:28:59 - INFO - __main__ -   {'video_r1': 46.0, 'video_recall': '46.0/75.3/83.9', 'video_ravg': 68.4}
09/01/2024 00:28:59 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itm_tv=====step 5999--===========

09/01/2024 00:28:59 - INFO - __main__ -   {'video_r1': 56.9, 'video_recall': '56.9/78.3/85.2', 'video_ravg': 73.5}
09/01/2024 00:28:59 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itm_tv====history best step: 3999=======

09/01/2024 00:28:59 - INFO - __main__ -   {'video_r1': 57.8, 'video_recall': '57.8/78.1/84.8', 'video_ravg': 73.6}
09/01/2024 00:29:27 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.359490990638733, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04048088192939758, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.682732582092285, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.082704544067383}
 81%|████████  | 6000/7431 [6:02:08<21:16:31, 53.52s/it] 81%|████████  | 6001/7431 [6:02:12<15:16:00, 38.43s/it] 81%|████████  | 6002/7431 [6:02:15<11:02:57, 27.84s/it] 81%|████████  | 6003/7431 [6:02:18<8:07:15, 20.47s/it]  81%|████████  | 6004/7431 [6:02:21<6:04:51, 15.34s/it] 81%|████████  | 6005/7431 [6:02:25<4:38:36, 11.72s/it] 81%|████████  | 6006/7431 [6:02:28<3:37:51,  9.17s/it] 81%|████████  | 6007/7431 [6:02:31<2:56:26,  7.43s/it] 81%|████████  | 6008/7431 [6:02:34<2:26:11,  6.16s/it] 81%|████████  | 6009/7431 [6:02:38<2:05:55,  5.31s/it] 81%|████████  | 6010/7431 [6:02:41<1:51:25,  4.70s/it] 81%|████████  | 6011/7431 [6:02:44<1:41:33,  4.29s/it] 81%|████████  | 6012/7431 [6:02:48<1:33:59,  3.97s/it] 81%|████████  | 6013/7431 [6:02:51<1:29:56,  3.81s/it] 81%|████████  | 6014/7431 [6:02:54<1:25:01,  3.60s/it] 81%|████████  | 6015/7431 [6:02:57<1:22:41,  3.50s/it] 81%|████████  | 6016/7431 [6:03:01<1:20:53,  3.43s/it] 81%|████████  | 6017/7431 [6:03:04<1:20:15,  3.41s/it] 81%|████████  | 6018/7431 [6:03:07<1:18:47,  3.35s/it] 81%|████████  | 6019/7431 [6:03:10<1:18:16,  3.33s/it] 81%|████████  | 6020/7431 [6:03:14<1:17:55,  3.31s/it] 81%|████████  | 6021/7431 [6:03:17<1:17:46,  3.31s/it] 81%|████████  | 6022/7431 [6:03:20<1:18:05,  3.33s/it] 81%|████████  | 6023/7431 [6:03:24<1:16:57,  3.28s/it] 81%|████████  | 6024/7431 [6:03:27<1:17:03,  3.29s/it] 81%|████████  | 6025/7431 [6:03:30<1:16:53,  3.28s/it] 81%|████████  | 6026/7431 [6:03:33<1:17:11,  3.30s/it] 81%|████████  | 6027/7431 [6:03:37<1:16:34,  3.27s/it] 81%|████████  | 6028/7431 [6:03:40<1:16:43,  3.28s/it] 81%|████████  | 6029/7431 [6:03:43<1:16:01,  3.25s/it] 81%|████████  | 6030/7431 [6:03:46<1:14:58,  3.21s/it] 81%|████████  | 6031/7431 [6:03:50<1:15:17,  3.23s/it] 81%|████████  | 6032/7431 [6:03:53<1:16:54,  3.30s/it] 81%|████████  | 6033/7431 [6:03:56<1:16:59,  3.30s/it] 81%|████████  | 6034/7431 [6:04:00<1:16:01,  3.27s/it] 81%|████████  | 6035/7431 [6:04:03<1:15:41,  3.25s/it] 81%|████████  | 6036/7431 [6:04:06<1:15:35,  3.25s/it] 81%|████████  | 6037/7431 [6:04:09<1:16:00,  3.27s/it] 81%|████████▏ | 6038/7431 [6:04:12<1:15:14,  3.24s/it] 81%|████████▏ | 6039/7431 [6:04:16<1:15:15,  3.24s/it] 81%|████████▏ | 6040/7431 [6:04:19<1:14:23,  3.21s/it] 81%|████████▏ | 6041/7431 [6:04:22<1:13:52,  3.19s/it] 81%|████████▏ | 6042/7431 [6:04:25<1:14:02,  3.20s/it] 81%|████████▏ | 6043/7431 [6:04:29<1:15:05,  3.25s/it] 81%|████████▏ | 6044/7431 [6:04:32<1:15:22,  3.26s/it] 81%|████████▏ | 6045/7431 [6:04:35<1:16:45,  3.32s/it] 81%|████████▏ | 6046/7431 [6:04:39<1:16:35,  3.32s/it] 81%|████████▏ | 6047/7431 [6:04:42<1:16:05,  3.30s/it] 81%|████████▏ | 6048/7431 [6:04:45<1:15:29,  3.28s/it] 81%|████████▏ | 6049/7431 [6:04:48<1:15:16,  3.27s/it]09/01/2024 00:32:10 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.3895443677902222, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04146674647927284, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.634002447128296, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.065013408660889}
 81%|████████▏ | 6050/7431 [6:04:52<1:16:27,  3.32s/it] 81%|████████▏ | 6051/7431 [6:04:55<1:15:13,  3.27s/it] 81%|████████▏ | 6052/7431 [6:04:58<1:15:18,  3.28s/it] 81%|████████▏ | 6053/7431 [6:05:02<1:15:48,  3.30s/it] 81%|████████▏ | 6054/7431 [6:05:05<1:15:52,  3.31s/it] 81%|████████▏ | 6055/7431 [6:05:08<1:15:12,  3.28s/it] 81%|████████▏ | 6056/7431 [6:05:11<1:14:21,  3.24s/it] 82%|████████▏ | 6057/7431 [6:05:15<1:14:45,  3.26s/it] 82%|████████▏ | 6058/7431 [6:05:18<1:14:09,  3.24s/it] 82%|████████▏ | 6059/7431 [6:05:21<1:14:15,  3.25s/it] 82%|████████▏ | 6060/7431 [6:05:24<1:14:43,  3.27s/it] 82%|████████▏ | 6061/7431 [6:05:28<1:14:16,  3.25s/it] 82%|████████▏ | 6062/7431 [6:05:31<1:14:11,  3.25s/it] 82%|████████▏ | 6063/7431 [6:05:34<1:14:00,  3.25s/it] 82%|████████▏ | 6064/7431 [6:05:38<1:16:00,  3.34s/it] 82%|████████▏ | 6065/7431 [6:05:41<1:15:50,  3.33s/it] 82%|████████▏ | 6066/7431 [6:05:44<1:15:07,  3.30s/it] 82%|████████▏ | 6067/7431 [6:05:47<1:13:35,  3.24s/it] 82%|████████▏ | 6068/7431 [6:05:51<1:13:33,  3.24s/it] 82%|████████▏ | 6069/7431 [6:05:54<1:14:50,  3.30s/it] 82%|████████▏ | 6070/7431 [6:05:57<1:13:35,  3.24s/it] 82%|████████▏ | 6071/7431 [6:06:00<1:13:41,  3.25s/it] 82%|████████▏ | 6072/7431 [6:06:04<1:14:53,  3.31s/it] 82%|████████▏ | 6073/7431 [6:06:07<1:13:37,  3.25s/it] 82%|████████▏ | 6074/7431 [6:06:10<1:12:54,  3.22s/it] 82%|████████▏ | 6075/7431 [6:06:13<1:12:25,  3.20s/it] 82%|████████▏ | 6076/7431 [6:06:16<1:12:08,  3.19s/it] 82%|████████▏ | 6077/7431 [6:06:20<1:11:51,  3.18s/it] 82%|████████▏ | 6078/7431 [6:06:23<1:12:01,  3.19s/it] 82%|████████▏ | 6079/7431 [6:06:26<1:13:18,  3.25s/it] 82%|████████▏ | 6080/7431 [6:06:29<1:13:49,  3.28s/it] 82%|████████▏ | 6081/7431 [6:06:33<1:12:54,  3.24s/it] 82%|████████▏ | 6082/7431 [6:06:36<1:12:39,  3.23s/it] 82%|████████▏ | 6083/7431 [6:06:39<1:13:17,  3.26s/it] 82%|████████▏ | 6084/7431 [6:06:43<1:14:33,  3.32s/it] 82%|████████▏ | 6085/7431 [6:06:46<1:14:12,  3.31s/it] 82%|████████▏ | 6086/7431 [6:06:49<1:13:12,  3.27s/it] 82%|████████▏ | 6087/7431 [6:06:52<1:12:30,  3.24s/it] 82%|████████▏ | 6088/7431 [6:06:55<1:12:07,  3.22s/it] 82%|████████▏ | 6089/7431 [6:06:59<1:12:18,  3.23s/it] 82%|████████▏ | 6090/7431 [6:07:02<1:12:06,  3.23s/it] 82%|████████▏ | 6091/7431 [6:07:05<1:11:33,  3.20s/it] 82%|████████▏ | 6092/7431 [6:07:08<1:12:35,  3.25s/it] 82%|████████▏ | 6093/7431 [6:07:12<1:13:12,  3.28s/it] 82%|████████▏ | 6094/7431 [6:07:15<1:13:48,  3.31s/it] 82%|████████▏ | 6095/7431 [6:07:19<1:14:34,  3.35s/it] 82%|████████▏ | 6096/7431 [6:07:22<1:13:51,  3.32s/it] 82%|████████▏ | 6097/7431 [6:07:25<1:13:12,  3.29s/it] 82%|████████▏ | 6098/7431 [6:07:28<1:13:03,  3.29s/it] 82%|████████▏ | 6099/7431 [6:07:32<1:12:55,  3.29s/it]09/01/2024 00:34:53 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.5889776945114136, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03593920171260834, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7122623920440674, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.337179183959961}
 82%|████████▏ | 6100/7431 [6:07:35<1:13:07,  3.30s/it] 82%|████████▏ | 6101/7431 [6:07:38<1:12:40,  3.28s/it] 82%|████████▏ | 6102/7431 [6:07:42<1:14:37,  3.37s/it] 82%|████████▏ | 6103/7431 [6:07:45<1:13:15,  3.31s/it] 82%|████████▏ | 6104/7431 [6:07:48<1:13:24,  3.32s/it] 82%|████████▏ | 6105/7431 [6:07:52<1:13:06,  3.31s/it] 82%|████████▏ | 6106/7431 [6:07:55<1:14:54,  3.39s/it] 82%|████████▏ | 6107/7431 [6:07:58<1:13:04,  3.31s/it] 82%|████████▏ | 6108/7431 [6:08:02<1:12:38,  3.29s/it] 82%|████████▏ | 6109/7431 [6:08:05<1:11:44,  3.26s/it] 82%|████████▏ | 6110/7431 [6:08:08<1:11:26,  3.24s/it] 82%|████████▏ | 6111/7431 [6:08:11<1:11:09,  3.23s/it] 82%|████████▏ | 6112/7431 [6:08:14<1:11:10,  3.24s/it] 82%|████████▏ | 6113/7431 [6:08:18<1:10:35,  3.21s/it] 82%|████████▏ | 6114/7431 [6:08:21<1:11:23,  3.25s/it] 82%|████████▏ | 6115/7431 [6:08:24<1:11:30,  3.26s/it] 82%|████████▏ | 6116/7431 [6:08:27<1:11:28,  3.26s/it] 82%|████████▏ | 6117/7431 [6:08:31<1:11:01,  3.24s/it] 82%|████████▏ | 6118/7431 [6:08:34<1:11:26,  3.26s/it] 82%|████████▏ | 6119/7431 [6:08:37<1:10:22,  3.22s/it] 82%|████████▏ | 6120/7431 [6:08:40<1:10:50,  3.24s/it] 82%|████████▏ | 6121/7431 [6:08:44<1:11:16,  3.26s/it] 82%|████████▏ | 6122/7431 [6:08:47<1:10:52,  3.25s/it] 82%|████████▏ | 6123/7431 [6:08:50<1:10:37,  3.24s/it] 82%|████████▏ | 6124/7431 [6:08:53<1:10:38,  3.24s/it] 82%|████████▏ | 6125/7431 [6:08:57<1:10:41,  3.25s/it] 82%|████████▏ | 6126/7431 [6:09:00<1:10:28,  3.24s/it] 82%|████████▏ | 6127/7431 [6:09:03<1:11:34,  3.29s/it] 82%|████████▏ | 6128/7431 [6:09:07<1:12:14,  3.33s/it] 82%|████████▏ | 6129/7431 [6:09:10<1:12:09,  3.33s/it] 82%|████████▏ | 6130/7431 [6:09:13<1:11:50,  3.31s/it] 83%|████████▎ | 6131/7431 [6:09:16<1:10:48,  3.27s/it] 83%|████████▎ | 6132/7431 [6:09:20<1:10:38,  3.26s/it] 83%|████████▎ | 6133/7431 [6:09:23<1:12:02,  3.33s/it] 83%|████████▎ | 6134/7431 [6:09:26<1:12:00,  3.33s/it] 83%|████████▎ | 6135/7431 [6:09:30<1:12:42,  3.37s/it] 83%|████████▎ | 6136/7431 [6:09:33<1:12:04,  3.34s/it] 83%|████████▎ | 6137/7431 [6:09:37<1:11:44,  3.33s/it] 83%|████████▎ | 6138/7431 [6:09:40<1:10:55,  3.29s/it] 83%|████████▎ | 6139/7431 [6:09:43<1:10:33,  3.28s/it] 83%|████████▎ | 6140/7431 [6:09:46<1:10:43,  3.29s/it] 83%|████████▎ | 6141/7431 [6:09:49<1:10:16,  3.27s/it] 83%|████████▎ | 6142/7431 [6:09:53<1:10:28,  3.28s/it] 83%|████████▎ | 6143/7431 [6:09:56<1:09:02,  3.22s/it] 83%|████████▎ | 6144/7431 [6:09:59<1:08:55,  3.21s/it] 83%|████████▎ | 6145/7431 [6:10:02<1:09:45,  3.26s/it] 83%|████████▎ | 6146/7431 [6:10:06<1:10:27,  3.29s/it] 83%|████████▎ | 6147/7431 [6:10:09<1:10:21,  3.29s/it] 83%|████████▎ | 6148/7431 [6:10:12<1:09:45,  3.26s/it] 83%|████████▎ | 6149/7431 [6:10:15<1:09:01,  3.23s/it]09/01/2024 00:37:37 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.4452791213989258, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.038204263895750046, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.667473793029785, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.150957107543945}
 83%|████████▎ | 6150/7431 [6:10:19<1:08:39,  3.22s/it] 83%|████████▎ | 6151/7431 [6:10:22<1:08:44,  3.22s/it] 83%|████████▎ | 6152/7431 [6:10:25<1:09:12,  3.25s/it] 83%|████████▎ | 6153/7431 [6:10:28<1:08:43,  3.23s/it] 83%|████████▎ | 6154/7431 [6:10:32<1:09:36,  3.27s/it] 83%|████████▎ | 6155/7431 [6:10:35<1:08:52,  3.24s/it] 83%|████████▎ | 6156/7431 [6:10:38<1:09:00,  3.25s/it] 83%|████████▎ | 6157/7431 [6:10:41<1:09:27,  3.27s/it] 83%|████████▎ | 6158/7431 [6:10:45<1:11:17,  3.36s/it] 83%|████████▎ | 6159/7431 [6:10:48<1:09:20,  3.27s/it] 83%|████████▎ | 6160/7431 [6:10:51<1:09:37,  3.29s/it] 83%|████████▎ | 6161/7431 [6:10:55<1:09:04,  3.26s/it] 83%|████████▎ | 6162/7431 [6:10:58<1:09:32,  3.29s/it] 83%|████████▎ | 6163/7431 [6:11:01<1:09:37,  3.29s/it] 83%|████████▎ | 6164/7431 [6:11:05<1:10:04,  3.32s/it] 83%|████████▎ | 6165/7431 [6:11:08<1:09:32,  3.30s/it] 83%|████████▎ | 6166/7431 [6:11:11<1:09:54,  3.32s/it] 83%|████████▎ | 6167/7431 [6:11:14<1:08:48,  3.27s/it] 83%|████████▎ | 6168/7431 [6:11:18<1:08:23,  3.25s/it] 83%|████████▎ | 6169/7431 [6:11:21<1:08:12,  3.24s/it] 83%|████████▎ | 6170/7431 [6:11:24<1:08:45,  3.27s/it] 83%|████████▎ | 6171/7431 [6:11:27<1:07:37,  3.22s/it] 83%|████████▎ | 6172/7431 [6:11:30<1:07:01,  3.19s/it] 83%|████████▎ | 6173/7431 [6:11:34<1:08:21,  3.26s/it] 83%|████████▎ | 6174/7431 [6:11:37<1:08:47,  3.28s/it] 83%|████████▎ | 6175/7431 [6:11:41<1:08:57,  3.29s/it] 83%|████████▎ | 6176/7431 [6:11:44<1:08:41,  3.28s/it] 83%|████████▎ | 6177/7431 [6:11:47<1:08:53,  3.30s/it] 83%|████████▎ | 6178/7431 [6:11:50<1:08:17,  3.27s/it] 83%|████████▎ | 6179/7431 [6:11:53<1:07:42,  3.24s/it] 83%|████████▎ | 6180/7431 [6:11:57<1:06:51,  3.21s/it] 83%|████████▎ | 6181/7431 [6:12:00<1:06:56,  3.21s/it] 83%|████████▎ | 6182/7431 [6:12:03<1:06:57,  3.22s/it] 83%|████████▎ | 6183/7431 [6:12:06<1:07:41,  3.25s/it] 83%|████████▎ | 6184/7431 [6:12:10<1:08:30,  3.30s/it] 83%|████████▎ | 6185/7431 [6:12:13<1:08:00,  3.27s/it] 83%|████████▎ | 6186/7431 [6:12:16<1:07:51,  3.27s/it] 83%|████████▎ | 6187/7431 [6:12:19<1:07:02,  3.23s/it] 83%|████████▎ | 6188/7431 [6:12:23<1:08:34,  3.31s/it] 83%|████████▎ | 6189/7431 [6:12:26<1:08:47,  3.32s/it] 83%|████████▎ | 6190/7431 [6:12:30<1:08:28,  3.31s/it] 83%|████████▎ | 6191/7431 [6:12:33<1:07:26,  3.26s/it] 83%|████████▎ | 6192/7431 [6:12:36<1:07:09,  3.25s/it] 83%|████████▎ | 6193/7431 [6:12:39<1:06:52,  3.24s/it] 83%|████████▎ | 6194/7431 [6:12:42<1:07:10,  3.26s/it] 83%|████████▎ | 6195/7431 [6:12:46<1:06:58,  3.25s/it] 83%|████████▎ | 6196/7431 [6:12:49<1:06:31,  3.23s/it] 83%|████████▎ | 6197/7431 [6:12:52<1:06:44,  3.24s/it] 83%|████████▎ | 6198/7431 [6:12:55<1:06:37,  3.24s/it] 83%|████████▎ | 6199/7431 [6:12:59<1:07:09,  3.27s/it]09/01/2024 00:40:20 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.4435234069824219, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03199196234345436, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.645069122314453, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.120584487915039}
 83%|████████▎ | 6200/7431 [6:13:02<1:07:12,  3.28s/it] 83%|████████▎ | 6201/7431 [6:13:05<1:06:29,  3.24s/it] 83%|████████▎ | 6202/7431 [6:13:08<1:06:42,  3.26s/it] 83%|████████▎ | 6203/7431 [6:13:12<1:07:14,  3.29s/it] 83%|████████▎ | 6204/7431 [6:13:15<1:06:36,  3.26s/it] 84%|████████▎ | 6205/7431 [6:13:19<1:08:12,  3.34s/it] 84%|████████▎ | 6206/7431 [6:13:22<1:09:25,  3.40s/it] 84%|████████▎ | 6207/7431 [6:13:25<1:08:33,  3.36s/it] 84%|████████▎ | 6208/7431 [6:13:29<1:07:46,  3.33s/it] 84%|████████▎ | 6209/7431 [6:13:32<1:07:07,  3.30s/it] 84%|████████▎ | 6210/7431 [6:13:35<1:06:32,  3.27s/it] 84%|████████▎ | 6211/7431 [6:13:38<1:07:40,  3.33s/it] 84%|████████▎ | 6212/7431 [6:13:42<1:06:02,  3.25s/it] 84%|████████▎ | 6213/7431 [6:13:45<1:06:06,  3.26s/it] 84%|████████▎ | 6214/7431 [6:13:48<1:06:04,  3.26s/it] 84%|████████▎ | 6215/7431 [6:13:51<1:06:35,  3.29s/it] 84%|████████▎ | 6216/7431 [6:13:55<1:06:03,  3.26s/it] 84%|████████▎ | 6217/7431 [6:13:58<1:07:27,  3.33s/it] 84%|████████▎ | 6218/7431 [6:14:01<1:07:07,  3.32s/it] 84%|████████▎ | 6219/7431 [6:14:05<1:06:49,  3.31s/it] 84%|████████▎ | 6220/7431 [6:14:08<1:07:11,  3.33s/it] 84%|████████▎ | 6221/7431 [6:14:11<1:06:22,  3.29s/it] 84%|████████▎ | 6222/7431 [6:14:14<1:05:31,  3.25s/it] 84%|████████▎ | 6223/7431 [6:14:18<1:05:50,  3.27s/it] 84%|████████▍ | 6224/7431 [6:14:21<1:05:51,  3.27s/it] 84%|████████▍ | 6225/7431 [6:14:24<1:05:32,  3.26s/it] 84%|████████▍ | 6226/7431 [6:14:28<1:07:58,  3.38s/it] 84%|████████▍ | 6227/7431 [6:14:31<1:07:35,  3.37s/it] 84%|████████▍ | 6228/7431 [6:14:34<1:06:20,  3.31s/it] 84%|████████▍ | 6229/7431 [6:14:38<1:05:07,  3.25s/it] 84%|████████▍ | 6230/7431 [6:14:41<1:05:10,  3.26s/it] 84%|████████▍ | 6231/7431 [6:14:44<1:04:33,  3.23s/it] 84%|████████▍ | 6232/7431 [6:14:47<1:04:31,  3.23s/it] 84%|████████▍ | 6233/7431 [6:14:51<1:05:33,  3.28s/it] 84%|████████▍ | 6234/7431 [6:14:54<1:05:07,  3.26s/it] 84%|████████▍ | 6235/7431 [6:14:57<1:05:14,  3.27s/it] 84%|████████▍ | 6236/7431 [6:15:01<1:05:38,  3.30s/it] 84%|████████▍ | 6237/7431 [6:15:04<1:05:44,  3.30s/it] 84%|████████▍ | 6238/7431 [6:15:07<1:05:01,  3.27s/it] 84%|████████▍ | 6239/7431 [6:15:10<1:04:44,  3.26s/it] 84%|████████▍ | 6240/7431 [6:15:13<1:04:17,  3.24s/it] 84%|████████▍ | 6241/7431 [6:15:17<1:05:27,  3.30s/it] 84%|████████▍ | 6242/7431 [6:15:20<1:05:17,  3.29s/it] 84%|████████▍ | 6243/7431 [6:15:23<1:05:25,  3.30s/it] 84%|████████▍ | 6244/7431 [6:15:27<1:04:46,  3.27s/it] 84%|████████▍ | 6245/7431 [6:15:30<1:04:15,  3.25s/it] 84%|████████▍ | 6246/7431 [6:15:33<1:03:58,  3.24s/it] 84%|████████▍ | 6247/7431 [6:15:36<1:03:47,  3.23s/it] 84%|████████▍ | 6248/7431 [6:15:40<1:04:50,  3.29s/it] 84%|████████▍ | 6249/7431 [6:15:43<1:03:46,  3.24s/it]09/01/2024 00:43:05 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.5557661056518555, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03964391350746155, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.728236198425293, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.323646068572998}
 84%|████████▍ | 6250/7431 [6:15:46<1:03:33,  3.23s/it] 84%|████████▍ | 6251/7431 [6:15:49<1:03:59,  3.25s/it] 84%|████████▍ | 6252/7431 [6:15:53<1:04:22,  3.28s/it] 84%|████████▍ | 6253/7431 [6:15:56<1:03:42,  3.24s/it] 84%|████████▍ | 6254/7431 [6:15:59<1:03:38,  3.24s/it] 84%|████████▍ | 6255/7431 [6:16:02<1:03:52,  3.26s/it] 84%|████████▍ | 6256/7431 [6:16:06<1:04:33,  3.30s/it] 84%|████████▍ | 6257/7431 [6:16:09<1:04:57,  3.32s/it] 84%|████████▍ | 6258/7431 [6:16:12<1:03:21,  3.24s/it] 84%|████████▍ | 6259/7431 [6:16:15<1:03:25,  3.25s/it] 84%|████████▍ | 6260/7431 [6:16:19<1:03:35,  3.26s/it] 84%|████████▍ | 6261/7431 [6:16:22<1:02:25,  3.20s/it] 84%|████████▍ | 6262/7431 [6:16:25<1:03:04,  3.24s/it] 84%|████████▍ | 6263/7431 [6:16:28<1:03:18,  3.25s/it] 84%|████████▍ | 6264/7431 [6:16:32<1:03:26,  3.26s/it] 84%|████████▍ | 6265/7431 [6:16:35<1:03:41,  3.28s/it] 84%|████████▍ | 6266/7431 [6:16:38<1:03:13,  3.26s/it] 84%|████████▍ | 6267/7431 [6:16:41<1:02:11,  3.21s/it] 84%|████████▍ | 6268/7431 [6:16:45<1:02:59,  3.25s/it] 84%|████████▍ | 6269/7431 [6:16:48<1:03:28,  3.28s/it] 84%|████████▍ | 6270/7431 [6:16:51<1:03:14,  3.27s/it] 84%|████████▍ | 6271/7431 [6:16:55<1:03:28,  3.28s/it] 84%|████████▍ | 6272/7431 [6:16:58<1:02:52,  3.25s/it] 84%|████████▍ | 6273/7431 [6:17:01<1:02:24,  3.23s/it] 84%|████████▍ | 6274/7431 [6:17:04<1:03:35,  3.30s/it] 84%|████████▍ | 6275/7431 [6:17:08<1:03:19,  3.29s/it] 84%|████████▍ | 6276/7431 [6:17:11<1:02:55,  3.27s/it] 84%|████████▍ | 6277/7431 [6:17:14<1:02:23,  3.24s/it] 84%|████████▍ | 6278/7431 [6:17:17<1:03:10,  3.29s/it] 84%|████████▍ | 6279/7431 [6:17:21<1:03:11,  3.29s/it] 85%|████████▍ | 6280/7431 [6:17:24<1:02:24,  3.25s/it] 85%|████████▍ | 6281/7431 [6:17:27<1:03:21,  3.31s/it] 85%|████████▍ | 6282/7431 [6:17:31<1:02:48,  3.28s/it] 85%|████████▍ | 6283/7431 [6:17:34<1:03:01,  3.29s/it] 85%|████████▍ | 6284/7431 [6:17:37<1:03:16,  3.31s/it] 85%|████████▍ | 6285/7431 [6:17:41<1:03:20,  3.32s/it] 85%|████████▍ | 6286/7431 [6:17:44<1:03:20,  3.32s/it] 85%|████████▍ | 6287/7431 [6:17:47<1:02:39,  3.29s/it] 85%|████████▍ | 6288/7431 [6:17:51<1:03:23,  3.33s/it] 85%|████████▍ | 6289/7431 [6:17:54<1:02:51,  3.30s/it] 85%|████████▍ | 6290/7431 [6:17:57<1:02:31,  3.29s/it] 85%|████████▍ | 6291/7431 [6:18:00<1:02:46,  3.30s/it] 85%|████████▍ | 6292/7431 [6:18:04<1:01:55,  3.26s/it] 85%|████████▍ | 6293/7431 [6:18:07<1:02:23,  3.29s/it] 85%|████████▍ | 6294/7431 [6:18:10<1:02:22,  3.29s/it] 85%|████████▍ | 6295/7431 [6:18:13<1:01:23,  3.24s/it] 85%|████████▍ | 6296/7431 [6:18:17<1:01:16,  3.24s/it] 85%|████████▍ | 6297/7431 [6:18:20<1:01:30,  3.25s/it] 85%|████████▍ | 6298/7431 [6:18:23<1:01:32,  3.26s/it] 85%|████████▍ | 6299/7431 [6:18:26<1:01:11,  3.24s/it]09/01/2024 00:45:48 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.5429332256317139, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.040376923978328705, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.675032615661621, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.258342742919922}
 85%|████████▍ | 6300/7431 [6:18:30<1:01:16,  3.25s/it] 85%|████████▍ | 6301/7431 [6:18:33<1:00:26,  3.21s/it] 85%|████████▍ | 6302/7431 [6:18:36<1:00:22,  3.21s/it] 85%|████████▍ | 6303/7431 [6:18:39<1:01:16,  3.26s/it] 85%|████████▍ | 6304/7431 [6:18:43<1:01:05,  3.25s/it] 85%|████████▍ | 6305/7431 [6:18:46<1:01:19,  3.27s/it] 85%|████████▍ | 6306/7431 [6:18:49<1:02:38,  3.34s/it] 85%|████████▍ | 6307/7431 [6:18:53<1:02:31,  3.34s/it] 85%|████████▍ | 6308/7431 [6:18:56<1:01:18,  3.28s/it] 85%|████████▍ | 6309/7431 [6:18:59<1:01:53,  3.31s/it] 85%|████████▍ | 6310/7431 [6:19:02<1:01:24,  3.29s/it] 85%|████████▍ | 6311/7431 [6:19:06<1:01:28,  3.29s/it] 85%|████████▍ | 6312/7431 [6:19:09<1:02:02,  3.33s/it] 85%|████████▍ | 6313/7431 [6:19:13<1:02:57,  3.38s/it] 85%|████████▍ | 6314/7431 [6:19:16<1:01:43,  3.32s/it] 85%|████████▍ | 6315/7431 [6:19:19<1:00:43,  3.27s/it] 85%|████████▍ | 6316/7431 [6:19:22<1:01:04,  3.29s/it] 85%|████████▌ | 6317/7431 [6:19:26<1:01:42,  3.32s/it] 85%|████████▌ | 6318/7431 [6:19:29<1:01:23,  3.31s/it] 85%|████████▌ | 6319/7431 [6:19:32<1:00:57,  3.29s/it] 85%|████████▌ | 6320/7431 [6:19:36<1:00:53,  3.29s/it] 85%|████████▌ | 6321/7431 [6:19:39<1:00:17,  3.26s/it] 85%|████████▌ | 6322/7431 [6:19:42<1:00:04,  3.25s/it] 85%|████████▌ | 6323/7431 [6:19:45<1:00:59,  3.30s/it] 85%|████████▌ | 6324/7431 [6:19:49<1:00:23,  3.27s/it] 85%|████████▌ | 6325/7431 [6:19:52<59:47,  3.24s/it]   85%|████████▌ | 6326/7431 [6:19:55<59:21,  3.22s/it] 85%|████████▌ | 6327/7431 [6:19:58<59:16,  3.22s/it] 85%|████████▌ | 6328/7431 [6:20:02<1:00:02,  3.27s/it] 85%|████████▌ | 6329/7431 [6:20:05<1:00:37,  3.30s/it] 85%|████████▌ | 6330/7431 [6:20:08<1:00:15,  3.28s/it] 85%|████████▌ | 6331/7431 [6:20:11<59:58,  3.27s/it]   85%|████████▌ | 6332/7431 [6:20:15<59:56,  3.27s/it] 85%|████████▌ | 6333/7431 [6:20:18<59:20,  3.24s/it] 85%|████████▌ | 6334/7431 [6:20:22<1:02:02,  3.39s/it] 85%|████████▌ | 6335/7431 [6:20:25<1:01:40,  3.38s/it] 85%|████████▌ | 6336/7431 [6:20:28<1:00:06,  3.29s/it] 85%|████████▌ | 6337/7431 [6:20:31<59:15,  3.25s/it]   85%|████████▌ | 6338/7431 [6:20:34<59:14,  3.25s/it] 85%|████████▌ | 6339/7431 [6:20:38<58:37,  3.22s/it] 85%|████████▌ | 6340/7431 [6:20:41<58:18,  3.21s/it] 85%|████████▌ | 6341/7431 [6:20:44<58:50,  3.24s/it] 85%|████████▌ | 6342/7431 [6:20:47<58:48,  3.24s/it] 85%|████████▌ | 6343/7431 [6:20:51<59:17,  3.27s/it] 85%|████████▌ | 6344/7431 [6:20:54<59:54,  3.31s/it] 85%|████████▌ | 6345/7431 [6:20:57<59:07,  3.27s/it] 85%|████████▌ | 6346/7431 [6:21:00<58:26,  3.23s/it] 85%|████████▌ | 6347/7431 [6:21:04<58:09,  3.22s/it] 85%|████████▌ | 6348/7431 [6:21:07<57:26,  3.18s/it] 85%|████████▌ | 6349/7431 [6:21:10<59:01,  3.27s/it]09/01/2024 00:48:32 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.8685237169265747, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04818437993526459, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.854928493499756, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.771636486053467}
 85%|████████▌ | 6350/7431 [6:21:13<58:30,  3.25s/it] 85%|████████▌ | 6351/7431 [6:21:17<58:17,  3.24s/it] 85%|████████▌ | 6352/7431 [6:21:20<58:37,  3.26s/it] 85%|████████▌ | 6353/7431 [6:21:23<58:53,  3.28s/it] 86%|████████▌ | 6354/7431 [6:21:26<58:36,  3.27s/it] 86%|████████▌ | 6355/7431 [6:21:30<58:14,  3.25s/it] 86%|████████▌ | 6356/7431 [6:21:33<57:56,  3.23s/it] 86%|████████▌ | 6357/7431 [6:21:36<58:46,  3.28s/it] 86%|████████▌ | 6358/7431 [6:21:39<57:48,  3.23s/it] 86%|████████▌ | 6359/7431 [6:21:42<57:09,  3.20s/it] 86%|████████▌ | 6360/7431 [6:21:46<57:35,  3.23s/it] 86%|████████▌ | 6361/7431 [6:21:49<57:25,  3.22s/it] 86%|████████▌ | 6362/7431 [6:21:52<57:29,  3.23s/it] 86%|████████▌ | 6363/7431 [6:21:56<58:05,  3.26s/it] 86%|████████▌ | 6364/7431 [6:21:59<58:27,  3.29s/it] 86%|████████▌ | 6365/7431 [6:22:02<57:51,  3.26s/it] 86%|████████▌ | 6366/7431 [6:22:05<57:40,  3.25s/it] 86%|████████▌ | 6367/7431 [6:22:09<57:51,  3.26s/it] 86%|████████▌ | 6368/7431 [6:22:12<58:17,  3.29s/it] 86%|████████▌ | 6369/7431 [6:22:15<57:41,  3.26s/it] 86%|████████▌ | 6370/7431 [6:22:19<58:23,  3.30s/it] 86%|████████▌ | 6371/7431 [6:22:22<57:21,  3.25s/it] 86%|████████▌ | 6372/7431 [6:22:25<56:36,  3.21s/it] 86%|████████▌ | 6373/7431 [6:22:28<58:20,  3.31s/it] 86%|████████▌ | 6374/7431 [6:22:32<58:06,  3.30s/it] 86%|████████▌ | 6375/7431 [6:22:35<57:25,  3.26s/it] 86%|████████▌ | 6376/7431 [6:22:38<57:12,  3.25s/it] 86%|████████▌ | 6377/7431 [6:22:41<57:34,  3.28s/it] 86%|████████▌ | 6378/7431 [6:22:45<57:00,  3.25s/it] 86%|████████▌ | 6379/7431 [6:22:48<57:23,  3.27s/it] 86%|████████▌ | 6380/7431 [6:22:51<56:35,  3.23s/it] 86%|████████▌ | 6381/7431 [6:22:54<56:43,  3.24s/it] 86%|████████▌ | 6382/7431 [6:22:58<57:11,  3.27s/it] 86%|████████▌ | 6383/7431 [6:23:01<56:45,  3.25s/it] 86%|████████▌ | 6384/7431 [6:23:04<56:49,  3.26s/it] 86%|████████▌ | 6385/7431 [6:23:07<57:16,  3.29s/it] 86%|████████▌ | 6386/7431 [6:23:11<56:18,  3.23s/it] 86%|████████▌ | 6387/7431 [6:23:14<56:53,  3.27s/it] 86%|████████▌ | 6388/7431 [6:23:17<57:31,  3.31s/it] 86%|████████▌ | 6389/7431 [6:23:21<57:25,  3.31s/it] 86%|████████▌ | 6390/7431 [6:23:24<57:22,  3.31s/it] 86%|████████▌ | 6391/7431 [6:23:27<56:34,  3.26s/it] 86%|████████▌ | 6392/7431 [6:23:30<55:46,  3.22s/it] 86%|████████▌ | 6393/7431 [6:23:33<55:49,  3.23s/it] 86%|████████▌ | 6394/7431 [6:23:37<56:56,  3.29s/it] 86%|████████▌ | 6395/7431 [6:23:40<56:25,  3.27s/it] 86%|████████▌ | 6396/7431 [6:23:43<55:39,  3.23s/it] 86%|████████▌ | 6397/7431 [6:23:47<56:40,  3.29s/it] 86%|████████▌ | 6398/7431 [6:23:50<56:19,  3.27s/it] 86%|████████▌ | 6399/7431 [6:23:53<55:47,  3.24s/it]09/01/2024 00:51:15 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.2106528282165527, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.025668106973171234, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.5419275760650635, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 3.7782485485076904}
 86%|████████▌ | 6400/7431 [6:23:56<56:33,  3.29s/it] 86%|████████▌ | 6401/7431 [6:24:00<56:38,  3.30s/it] 86%|████████▌ | 6402/7431 [6:24:03<56:40,  3.30s/it] 86%|████████▌ | 6403/7431 [6:24:06<55:50,  3.26s/it] 86%|████████▌ | 6404/7431 [6:24:09<55:28,  3.24s/it] 86%|████████▌ | 6405/7431 [6:24:13<55:18,  3.23s/it] 86%|████████▌ | 6406/7431 [6:24:16<56:13,  3.29s/it] 86%|████████▌ | 6407/7431 [6:24:19<55:44,  3.27s/it] 86%|████████▌ | 6408/7431 [6:24:22<54:53,  3.22s/it] 86%|████████▌ | 6409/7431 [6:24:26<55:32,  3.26s/it] 86%|████████▋ | 6410/7431 [6:24:29<55:21,  3.25s/it] 86%|████████▋ | 6411/7431 [6:24:32<56:14,  3.31s/it] 86%|████████▋ | 6412/7431 [6:24:36<56:22,  3.32s/it] 86%|████████▋ | 6413/7431 [6:24:39<56:36,  3.34s/it] 86%|████████▋ | 6414/7431 [6:24:42<55:52,  3.30s/it] 86%|████████▋ | 6415/7431 [6:24:45<54:59,  3.25s/it] 86%|████████▋ | 6416/7431 [6:24:49<54:03,  3.20s/it] 86%|████████▋ | 6417/7431 [6:24:52<54:06,  3.20s/it] 86%|████████▋ | 6418/7431 [6:24:55<55:07,  3.26s/it] 86%|████████▋ | 6419/7431 [6:24:59<55:27,  3.29s/it] 86%|████████▋ | 6420/7431 [6:25:02<54:49,  3.25s/it] 86%|████████▋ | 6421/7431 [6:25:05<54:52,  3.26s/it] 86%|████████▋ | 6422/7431 [6:25:08<54:16,  3.23s/it] 86%|████████▋ | 6423/7431 [6:25:12<55:02,  3.28s/it] 86%|████████▋ | 6424/7431 [6:25:15<54:22,  3.24s/it] 86%|████████▋ | 6425/7431 [6:25:18<54:02,  3.22s/it] 86%|████████▋ | 6426/7431 [6:25:21<53:48,  3.21s/it] 86%|████████▋ | 6427/7431 [6:25:24<53:52,  3.22s/it] 87%|████████▋ | 6428/7431 [6:25:27<53:26,  3.20s/it] 87%|████████▋ | 6429/7431 [6:25:31<54:16,  3.25s/it] 87%|████████▋ | 6430/7431 [6:25:34<54:43,  3.28s/it] 87%|████████▋ | 6431/7431 [6:25:37<54:15,  3.26s/it] 87%|████████▋ | 6432/7431 [6:25:41<54:06,  3.25s/it] 87%|████████▋ | 6433/7431 [6:25:44<54:19,  3.27s/it] 87%|████████▋ | 6434/7431 [6:25:47<54:18,  3.27s/it] 87%|████████▋ | 6435/7431 [6:25:50<53:40,  3.23s/it] 87%|████████▋ | 6436/7431 [6:25:54<53:58,  3.26s/it] 87%|████████▋ | 6437/7431 [6:25:57<53:53,  3.25s/it] 87%|████████▋ | 6438/7431 [6:26:00<53:40,  3.24s/it] 87%|████████▋ | 6439/7431 [6:26:03<54:08,  3.27s/it] 87%|████████▋ | 6440/7431 [6:26:07<54:07,  3.28s/it] 87%|████████▋ | 6441/7431 [6:26:10<54:16,  3.29s/it] 87%|████████▋ | 6442/7431 [6:26:13<53:34,  3.25s/it] 87%|████████▋ | 6443/7431 [6:26:16<52:56,  3.21s/it] 87%|████████▋ | 6444/7431 [6:26:19<52:37,  3.20s/it] 87%|████████▋ | 6445/7431 [6:26:23<52:33,  3.20s/it] 87%|████████▋ | 6446/7431 [6:26:26<53:03,  3.23s/it] 87%|████████▋ | 6447/7431 [6:26:29<54:07,  3.30s/it] 87%|████████▋ | 6448/7431 [6:26:33<53:58,  3.29s/it] 87%|████████▋ | 6449/7431 [6:26:36<54:21,  3.32s/it]09/01/2024 00:53:58 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.6695882081985474, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.0358617827296257, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6536998748779297, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.359149932861328}
 87%|████████▋ | 6450/7431 [6:26:39<53:58,  3.30s/it] 87%|████████▋ | 6451/7431 [6:26:42<53:03,  3.25s/it] 87%|████████▋ | 6452/7431 [6:26:46<54:19,  3.33s/it] 87%|████████▋ | 6453/7431 [6:26:49<53:26,  3.28s/it] 87%|████████▋ | 6454/7431 [6:26:52<53:10,  3.27s/it] 87%|████████▋ | 6455/7431 [6:26:56<52:33,  3.23s/it] 87%|████████▋ | 6456/7431 [6:26:59<52:15,  3.22s/it] 87%|████████▋ | 6457/7431 [6:27:02<51:46,  3.19s/it] 87%|████████▋ | 6458/7431 [6:27:05<52:05,  3.21s/it] 87%|████████▋ | 6459/7431 [6:27:09<53:09,  3.28s/it] 87%|████████▋ | 6460/7431 [6:27:12<53:26,  3.30s/it] 87%|████████▋ | 6461/7431 [6:27:15<53:14,  3.29s/it] 87%|████████▋ | 6462/7431 [6:27:18<52:49,  3.27s/it] 87%|████████▋ | 6463/7431 [6:27:22<52:21,  3.25s/it] 87%|████████▋ | 6464/7431 [6:27:25<52:46,  3.27s/it] 87%|████████▋ | 6465/7431 [6:27:28<52:16,  3.25s/it] 87%|████████▋ | 6466/7431 [6:27:32<53:07,  3.30s/it] 87%|████████▋ | 6467/7431 [6:27:35<52:46,  3.28s/it] 87%|████████▋ | 6468/7431 [6:27:38<52:21,  3.26s/it] 87%|████████▋ | 6469/7431 [6:27:41<51:30,  3.21s/it] 87%|████████▋ | 6470/7431 [6:27:44<51:14,  3.20s/it] 87%|████████▋ | 6471/7431 [6:27:48<52:27,  3.28s/it] 87%|████████▋ | 6472/7431 [6:27:51<52:47,  3.30s/it] 87%|████████▋ | 6473/7431 [6:27:54<51:56,  3.25s/it] 87%|████████▋ | 6474/7431 [6:27:58<52:16,  3.28s/it] 87%|████████▋ | 6475/7431 [6:28:01<52:02,  3.27s/it] 87%|████████▋ | 6476/7431 [6:28:04<51:40,  3.25s/it] 87%|████████▋ | 6477/7431 [6:28:07<52:18,  3.29s/it] 87%|████████▋ | 6478/7431 [6:28:11<51:34,  3.25s/it] 87%|████████▋ | 6479/7431 [6:28:14<52:15,  3.29s/it] 87%|████████▋ | 6480/7431 [6:28:17<52:29,  3.31s/it] 87%|████████▋ | 6481/7431 [6:28:20<51:42,  3.27s/it] 87%|████████▋ | 6482/7431 [6:28:24<51:20,  3.25s/it] 87%|████████▋ | 6483/7431 [6:28:27<51:56,  3.29s/it] 87%|████████▋ | 6484/7431 [6:28:30<51:28,  3.26s/it] 87%|████████▋ | 6485/7431 [6:28:34<51:57,  3.30s/it] 87%|████████▋ | 6486/7431 [6:28:37<51:23,  3.26s/it] 87%|████████▋ | 6487/7431 [6:28:40<51:27,  3.27s/it] 87%|████████▋ | 6488/7431 [6:28:43<51:54,  3.30s/it] 87%|████████▋ | 6489/7431 [6:28:47<51:29,  3.28s/it] 87%|████████▋ | 6490/7431 [6:28:50<51:35,  3.29s/it] 87%|████████▋ | 6491/7431 [6:28:53<51:14,  3.27s/it] 87%|████████▋ | 6492/7431 [6:28:57<51:21,  3.28s/it] 87%|████████▋ | 6493/7431 [6:29:00<52:26,  3.35s/it] 87%|████████▋ | 6494/7431 [6:29:03<51:15,  3.28s/it] 87%|████████▋ | 6495/7431 [6:29:07<51:28,  3.30s/it] 87%|████████▋ | 6496/7431 [6:29:10<51:20,  3.30s/it] 87%|████████▋ | 6497/7431 [6:29:13<50:33,  3.25s/it] 87%|████████▋ | 6498/7431 [6:29:16<51:08,  3.29s/it] 87%|████████▋ | 6499/7431 [6:29:20<50:59,  3.28s/it]09/01/2024 00:56:40 - INFO - __main__ -   evaluate on ret%tv--msrvtt_ret task
09/01/2024 00:56:40 - INFO - __main__ -   start running ret%tv validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  1%|          | 2/221 [00:00<00:50,  4.31it/s][A
  1%|▏         | 3/221 [00:00<00:51,  4.27it/s][A
  2%|▏         | 4/221 [00:00<00:42,  5.09it/s][A
  2%|▏         | 5/221 [00:00<00:39,  5.47it/s][A
  3%|▎         | 6/221 [00:01<00:36,  5.96it/s][A
  3%|▎         | 7/221 [00:01<00:35,  5.99it/s][A
  4%|▎         | 8/221 [00:01<00:35,  6.07it/s][A
  4%|▍         | 9/221 [00:01<00:35,  5.92it/s][A
  5%|▍         | 10/221 [00:02<00:51,  4.11it/s][A
  5%|▍         | 11/221 [00:02<00:47,  4.39it/s][A
  5%|▌         | 12/221 [00:02<00:45,  4.61it/s][A
  6%|▌         | 13/221 [00:02<00:51,  4.07it/s][A
  6%|▋         | 14/221 [00:02<00:43,  4.75it/s][A
  7%|▋         | 15/221 [00:03<00:43,  4.73it/s][A
  7%|▋         | 16/221 [00:03<00:53,  3.85it/s][A
  8%|▊         | 17/221 [00:03<00:55,  3.65it/s][A
  8%|▊         | 18/221 [00:03<00:48,  4.16it/s][A
  9%|▊         | 19/221 [00:04<00:50,  4.02it/s][A
  9%|▉         | 20/221 [00:04<00:44,  4.51it/s][A
 10%|▉         | 21/221 [00:04<00:48,  4.13it/s][A
 10%|▉         | 22/221 [00:04<00:52,  3.77it/s][A
 10%|█         | 23/221 [00:05<00:49,  3.98it/s][A
 11%|█         | 24/221 [00:05<00:45,  4.29it/s][A
 11%|█▏        | 25/221 [00:05<00:50,  3.86it/s][A
 12%|█▏        | 26/221 [00:05<00:50,  3.86it/s][A
 12%|█▏        | 27/221 [00:06<00:52,  3.69it/s][A
 13%|█▎        | 28/221 [00:06<00:51,  3.78it/s][A
 13%|█▎        | 29/221 [00:06<01:00,  3.19it/s][A
 14%|█▎        | 30/221 [00:07<01:03,  2.99it/s][A
 14%|█▍        | 31/221 [00:07<00:59,  3.18it/s][A
 14%|█▍        | 32/221 [00:07<00:53,  3.56it/s][A
 15%|█▍        | 33/221 [00:07<00:49,  3.84it/s][A
 15%|█▌        | 34/221 [00:08<00:45,  4.12it/s][A
 16%|█▌        | 35/221 [00:08<00:53,  3.46it/s][A
 16%|█▋        | 36/221 [00:08<00:58,  3.16it/s][A
 17%|█▋        | 37/221 [00:09<00:56,  3.25it/s][A
 17%|█▋        | 38/221 [00:09<00:53,  3.42it/s][A
 18%|█▊        | 39/221 [00:09<00:46,  3.93it/s][A
 18%|█▊        | 40/221 [00:10<00:50,  3.61it/s][A
 19%|█▊        | 41/221 [00:10<00:56,  3.19it/s][A
 19%|█▉        | 42/221 [00:10<00:47,  3.74it/s][A
 19%|█▉        | 43/221 [00:10<00:42,  4.20it/s][A
 20%|█▉        | 44/221 [00:10<00:41,  4.28it/s][A
 20%|██        | 45/221 [00:11<00:48,  3.64it/s][A
 21%|██        | 46/221 [00:11<00:52,  3.31it/s][A
 21%|██▏       | 47/221 [00:11<00:45,  3.81it/s][A
 22%|██▏       | 48/221 [00:12<00:41,  4.19it/s][A
 22%|██▏       | 49/221 [00:12<00:44,  3.90it/s][A
 23%|██▎       | 50/221 [00:12<00:48,  3.51it/s][A
 23%|██▎       | 51/221 [00:12<00:46,  3.62it/s][A
 24%|██▎       | 52/221 [00:13<00:48,  3.48it/s][A
 24%|██▍       | 53/221 [00:13<00:45,  3.65it/s][A
 24%|██▍       | 54/221 [00:14<00:58,  2.87it/s][A
 25%|██▍       | 55/221 [00:14<00:55,  2.99it/s][A
 25%|██▌       | 56/221 [00:14<00:49,  3.33it/s][A
 26%|██▌       | 57/221 [00:14<00:53,  3.09it/s][A
 26%|██▌       | 58/221 [00:15<00:50,  3.22it/s][A
 27%|██▋       | 59/221 [00:15<00:44,  3.67it/s][A
 27%|██▋       | 60/221 [00:15<00:42,  3.77it/s][A
 28%|██▊       | 61/221 [00:15<00:41,  3.89it/s][A
 28%|██▊       | 62/221 [00:16<00:43,  3.69it/s][A
 29%|██▊       | 63/221 [00:16<00:45,  3.51it/s][A
 29%|██▉       | 64/221 [00:16<00:49,  3.17it/s][A
 29%|██▉       | 65/221 [00:17<00:45,  3.42it/s][A
 30%|██▉       | 66/221 [00:17<00:54,  2.82it/s][A
 30%|███       | 67/221 [00:17<00:53,  2.87it/s][A
 31%|███       | 68/221 [00:18<00:44,  3.41it/s][A
 31%|███       | 69/221 [00:18<00:51,  2.94it/s][A
 32%|███▏      | 70/221 [00:18<00:43,  3.46it/s][A
 32%|███▏      | 71/221 [00:19<00:43,  3.44it/s][A
 33%|███▎      | 72/221 [00:19<00:41,  3.55it/s][A
 33%|███▎      | 73/221 [00:19<00:38,  3.86it/s][A
 33%|███▎      | 74/221 [00:19<00:35,  4.19it/s][A
 34%|███▍      | 75/221 [00:20<00:39,  3.73it/s][A
 34%|███▍      | 76/221 [00:20<00:40,  3.58it/s][A
 35%|███▍      | 77/221 [00:20<00:44,  3.24it/s][A
 35%|███▌      | 78/221 [00:20<00:41,  3.49it/s][A
 36%|███▌      | 79/221 [00:21<00:46,  3.05it/s][A
 36%|███▌      | 80/221 [00:21<00:43,  3.28it/s][A
 37%|███▋      | 81/221 [00:21<00:37,  3.69it/s][A
 37%|███▋      | 82/221 [00:22<00:36,  3.83it/s][A
 38%|███▊      | 83/221 [00:22<00:40,  3.43it/s][A
 38%|███▊      | 84/221 [00:22<00:36,  3.76it/s][A
 38%|███▊      | 85/221 [00:22<00:30,  4.49it/s][A
 39%|███▉      | 86/221 [00:23<00:33,  4.01it/s][A
 39%|███▉      | 87/221 [00:23<00:36,  3.63it/s][A
 40%|███▉      | 88/221 [00:23<00:39,  3.37it/s][A
 40%|████      | 89/221 [00:24<00:38,  3.40it/s][A
 41%|████      | 90/221 [00:24<00:36,  3.54it/s][A
 41%|████      | 91/221 [00:24<00:32,  4.01it/s][A
 42%|████▏     | 92/221 [00:24<00:33,  3.86it/s][A
 42%|████▏     | 93/221 [00:25<00:36,  3.46it/s][A
 43%|████▎     | 94/221 [00:25<00:40,  3.16it/s][A
 43%|████▎     | 95/221 [00:25<00:34,  3.61it/s][A
 43%|████▎     | 96/221 [00:26<00:46,  2.67it/s][A
 44%|████▍     | 97/221 [00:26<00:39,  3.17it/s][A
 44%|████▍     | 98/221 [00:26<00:46,  2.65it/s][A
 45%|████▍     | 99/221 [00:27<00:42,  2.86it/s][A
 45%|████▌     | 100/221 [00:27<00:38,  3.11it/s][A
 46%|████▌     | 101/221 [00:27<00:34,  3.49it/s][A
 46%|████▌     | 102/221 [00:28<00:41,  2.85it/s][A
 47%|████▋     | 103/221 [00:28<00:35,  3.36it/s][A
 47%|████▋     | 104/221 [00:28<00:35,  3.29it/s][A
 48%|████▊     | 105/221 [00:29<00:41,  2.80it/s][A
 48%|████▊     | 106/221 [00:29<00:36,  3.16it/s][A
 48%|████▊     | 107/221 [00:29<00:36,  3.10it/s][A
 49%|████▉     | 108/221 [00:30<00:34,  3.32it/s][A
 49%|████▉     | 109/221 [00:30<00:28,  3.90it/s][A
 50%|████▉     | 110/221 [00:30<00:31,  3.51it/s][A
 50%|█████     | 111/221 [00:30<00:32,  3.43it/s][A
 51%|█████     | 112/221 [00:31<00:31,  3.52it/s][A
 51%|█████     | 113/221 [00:31<00:27,  3.96it/s][A
 52%|█████▏    | 114/221 [00:31<00:23,  4.64it/s][A
 52%|█████▏    | 115/221 [00:31<00:26,  4.04it/s][A
 52%|█████▏    | 116/221 [00:32<00:27,  3.78it/s][A
 53%|█████▎    | 117/221 [00:32<00:28,  3.61it/s][A
 53%|█████▎    | 118/221 [00:32<00:25,  4.02it/s][A
 54%|█████▍    | 119/221 [00:32<00:27,  3.77it/s][A
 54%|█████▍    | 120/221 [00:33<00:27,  3.62it/s][A
 55%|█████▍    | 121/221 [00:33<00:23,  4.31it/s][A
 55%|█████▌    | 122/221 [00:33<00:23,  4.30it/s][A
 56%|█████▌    | 123/221 [00:33<00:21,  4.56it/s][A
 56%|█████▌    | 124/221 [00:34<00:26,  3.69it/s][A
 57%|█████▋    | 125/221 [00:34<00:27,  3.45it/s][A
 57%|█████▋    | 126/221 [00:34<00:24,  3.92it/s][A
 57%|█████▋    | 127/221 [00:34<00:25,  3.63it/s][A
 58%|█████▊    | 128/221 [00:35<00:25,  3.59it/s][A
 58%|█████▊    | 129/221 [00:35<00:21,  4.26it/s][A
 59%|█████▉    | 130/221 [00:35<00:22,  3.99it/s][A
 59%|█████▉    | 131/221 [00:35<00:20,  4.49it/s][A
 60%|█████▉    | 132/221 [00:36<00:33,  2.63it/s][A
 60%|██████    | 133/221 [00:36<00:33,  2.61it/s][A
 61%|██████    | 134/221 [00:37<00:34,  2.56it/s][A
 61%|██████    | 135/221 [00:37<00:32,  2.61it/s][A
 62%|██████▏   | 136/221 [00:37<00:28,  3.02it/s][A
 62%|██████▏   | 137/221 [00:38<00:24,  3.47it/s][A
 62%|██████▏   | 138/221 [00:38<00:22,  3.61it/s][A
 63%|██████▎   | 139/221 [00:38<00:21,  3.89it/s][A
 63%|██████▎   | 140/221 [00:38<00:21,  3.79it/s][A
 64%|██████▍   | 141/221 [00:39<00:23,  3.40it/s][A
 64%|██████▍   | 142/221 [00:39<00:24,  3.21it/s][A
 65%|██████▍   | 143/221 [00:39<00:25,  3.01it/s][A
 65%|██████▌   | 144/221 [00:40<00:25,  2.98it/s][A
 66%|██████▌   | 145/221 [00:40<00:22,  3.33it/s][A
 67%|██████▋   | 147/221 [00:40<00:16,  4.51it/s][A
 67%|██████▋   | 148/221 [00:41<00:17,  4.16it/s][A
 67%|██████▋   | 149/221 [00:41<00:18,  3.89it/s][A
 68%|██████▊   | 150/221 [00:41<00:18,  3.87it/s][A
 68%|██████▊   | 151/221 [00:41<00:18,  3.86it/s][A
 69%|██████▉   | 152/221 [00:42<00:18,  3.64it/s][A
 69%|██████▉   | 153/221 [00:42<00:15,  4.26it/s][A
 70%|██████▉   | 154/221 [00:42<00:14,  4.55it/s][A
 70%|███████   | 155/221 [00:42<00:15,  4.30it/s][A
 71%|███████   | 156/221 [00:43<00:17,  3.63it/s][A
 71%|███████   | 157/221 [00:43<00:18,  3.47it/s][A
 71%|███████▏  | 158/221 [00:43<00:19,  3.27it/s][A
 72%|███████▏  | 159/221 [00:43<00:17,  3.62it/s][A
 72%|███████▏  | 160/221 [00:44<00:14,  4.26it/s][A
 73%|███████▎  | 161/221 [00:44<00:16,  3.73it/s][A
 73%|███████▎  | 162/221 [00:44<00:14,  4.09it/s][A
 74%|███████▍  | 163/221 [00:44<00:14,  3.89it/s][A
 74%|███████▍  | 164/221 [00:45<00:13,  4.31it/s][A
 75%|███████▍  | 165/221 [00:45<00:13,  4.05it/s][A
 75%|███████▌  | 166/221 [00:45<00:12,  4.39it/s][A
 76%|███████▌  | 167/221 [00:45<00:13,  3.87it/s][A
 76%|███████▌  | 168/221 [00:46<00:13,  3.87it/s][A
 76%|███████▋  | 169/221 [00:46<00:13,  3.72it/s][A
 77%|███████▋  | 170/221 [00:46<00:13,  3.77it/s][A
 77%|███████▋  | 171/221 [00:46<00:12,  3.90it/s][A
 78%|███████▊  | 172/221 [00:47<00:12,  3.91it/s][A
 78%|███████▊  | 173/221 [00:47<00:11,  4.02it/s][A
 79%|███████▊  | 174/221 [00:47<00:12,  3.70it/s][A
 79%|███████▉  | 175/221 [00:48<00:14,  3.09it/s][A
 80%|███████▉  | 176/221 [00:48<00:12,  3.68it/s][A
 80%|████████  | 177/221 [00:48<00:10,  4.05it/s][A
 81%|████████  | 178/221 [00:48<00:09,  4.35it/s][A
 81%|████████  | 179/221 [00:48<00:08,  4.69it/s][A
 81%|████████▏ | 180/221 [00:49<00:08,  5.00it/s][A
 82%|████████▏ | 182/221 [00:49<00:07,  5.44it/s][A
 83%|████████▎ | 183/221 [00:49<00:08,  4.41it/s][A
 83%|████████▎ | 184/221 [00:50<00:08,  4.28it/s][A
 84%|████████▎ | 185/221 [00:50<00:09,  3.66it/s][A
 84%|████████▍ | 186/221 [00:50<00:10,  3.41it/s][A
 85%|████████▍ | 187/221 [00:51<00:11,  2.96it/s][A
 85%|████████▌ | 188/221 [00:51<00:10,  3.23it/s][A
 86%|████████▌ | 189/221 [00:51<00:08,  3.71it/s][A
 86%|████████▌ | 190/221 [00:51<00:08,  3.57it/s][A
 86%|████████▋ | 191/221 [00:52<00:06,  4.38it/s][A
 87%|████████▋ | 192/221 [00:52<00:06,  4.25it/s][A
 87%|████████▋ | 193/221 [00:52<00:07,  3.66it/s][A
 88%|████████▊ | 194/221 [00:52<00:06,  4.07it/s][A
 88%|████████▊ | 195/221 [00:53<00:06,  3.86it/s][A
 89%|████████▊ | 196/221 [00:53<00:07,  3.42it/s][A
 89%|████████▉ | 197/221 [00:53<00:06,  3.66it/s][A
 90%|████████▉ | 198/221 [00:53<00:06,  3.72it/s][A
 90%|█████████ | 199/221 [00:54<00:06,  3.40it/s][A
 90%|█████████ | 200/221 [00:54<00:05,  3.52it/s][A
 91%|█████████ | 201/221 [00:54<00:06,  3.09it/s][A
 91%|█████████▏| 202/221 [00:55<00:06,  2.99it/s][A
 92%|█████████▏| 203/221 [00:55<00:06,  2.98it/s][A
 92%|█████████▏| 204/221 [00:56<00:05,  2.97it/s][A
 93%|█████████▎| 205/221 [00:56<00:04,  3.32it/s][A
 93%|█████████▎| 206/221 [00:56<00:04,  3.08it/s][A
 94%|█████████▎| 207/221 [00:56<00:04,  3.46it/s][A
 94%|█████████▍| 208/221 [00:57<00:04,  3.22it/s][A
 95%|█████████▍| 209/221 [00:57<00:03,  3.65it/s][A
 95%|█████████▌| 210/221 [00:57<00:02,  3.73it/s][A
 95%|█████████▌| 211/221 [00:58<00:02,  3.36it/s][A
 96%|█████████▌| 212/221 [00:58<00:02,  3.53it/s][A
 96%|█████████▋| 213/221 [00:58<00:01,  4.03it/s][A
 97%|█████████▋| 214/221 [00:58<00:02,  3.40it/s][A
 97%|█████████▋| 215/221 [00:59<00:01,  3.81it/s][A
 98%|█████████▊| 216/221 [00:59<00:01,  3.65it/s][A
 98%|█████████▊| 217/221 [00:59<00:01,  3.44it/s][A
 99%|█████████▊| 218/221 [00:59<00:00,  3.44it/s][A
 99%|█████████▉| 219/221 [01:00<00:00,  3.63it/s][A
100%|█████████▉| 220/221 [01:00<00:00,  3.80it/s][A
100%|██████████| 221/221 [01:00<00:00,  3.73it/s][A100%|██████████| 221/221 [01:00<00:00,  3.64it/s]
09/01/2024 00:59:02 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forward=====step 6499--===========

09/01/2024 00:59:02 - INFO - __main__ -   {'area_r1': 9.8, 'area_recall': '9.8/25.9/32.2', 'area_ravg': 22.7}
09/01/2024 00:59:02 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_backard=====step 6499--===========

09/01/2024 00:59:02 - INFO - __main__ -   {'forward_r1': 42.8, 'forward_recall': '42.8/75.1/84.7', 'forward_ravg': 67.5}
09/01/2024 00:59:02 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_area_forw_with_video=====step 6499--===========

09/01/2024 00:59:02 - INFO - __main__ -   {'forward_r1': 60.7, 'forward_recall': '60.7/85.6/90.4', 'forward_ravg': 78.9}
09/01/2024 00:59:02 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itc_tv=====step 6499--===========

09/01/2024 00:59:02 - INFO - __main__ -   {'video_r1': 44.7, 'video_recall': '44.7/75.6/84.0', 'video_ravg': 68.1}
09/01/2024 00:59:02 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itc_tv====history best step: 2999=======

09/01/2024 00:59:02 - INFO - __main__ -   {'video_r1': 46.0, 'video_recall': '46.0/75.3/83.9', 'video_ravg': 68.4}
09/01/2024 00:59:02 - INFO - __main__ -   ====-evaluation--ret%tv--msrvtt_ret_ret_itm_tv=====step 6499--===========

09/01/2024 00:59:02 - INFO - __main__ -   {'video_r1': 56.7, 'video_recall': '56.7/78.5/85.1', 'video_ravg': 73.4}
09/01/2024 00:59:02 - INFO - __main__ -   ======evaluation--ret%tv--msrvtt_ret_ret_itm_tv====history best step: 3999=======

09/01/2024 00:59:02 - INFO - __main__ -   {'video_r1': 57.8, 'video_recall': '57.8/78.1/84.8', 'video_ravg': 73.6}
09/01/2024 00:59:28 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.2133222818374634, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03695812448859215, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6103553771972656, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 3.860635757446289}
 87%|████████▋ | 6500/7431 [6:32:10<13:47:16, 53.31s/it] 87%|████████▋ | 6501/7431 [6:32:13<9:53:42, 38.30s/it]  87%|████████▋ | 6502/7431 [6:32:16<7:09:30, 27.74s/it] 88%|████████▊ | 6503/7431 [6:32:19<5:15:01, 20.37s/it] 88%|████████▊ | 6504/7431 [6:32:22<3:54:58, 15.21s/it] 88%|████████▊ | 6505/7431 [6:32:26<2:59:30, 11.63s/it] 88%|████████▊ | 6506/7431 [6:32:29<2:21:21,  9.17s/it] 88%|████████▊ | 6507/7431 [6:32:32<1:53:23,  7.36s/it] 88%|████████▊ | 6508/7431 [6:32:35<1:33:35,  6.08s/it] 88%|████████▊ | 6509/7431 [6:32:39<1:20:29,  5.24s/it] 88%|████████▊ | 6510/7431 [6:32:42<1:11:17,  4.64s/it] 88%|████████▊ | 6511/7431 [6:32:45<1:04:54,  4.23s/it] 88%|████████▊ | 6512/7431 [6:32:48<1:00:15,  3.93s/it] 88%|████████▊ | 6513/7431 [6:32:52<57:39,  3.77s/it]   88%|████████▊ | 6514/7431 [6:32:55<55:21,  3.62s/it] 88%|████████▊ | 6515/7431 [6:32:59<54:57,  3.60s/it] 88%|████████▊ | 6516/7431 [6:33:02<53:19,  3.50s/it] 88%|████████▊ | 6517/7431 [6:33:05<52:05,  3.42s/it] 88%|████████▊ | 6518/7431 [6:33:08<50:47,  3.34s/it] 88%|████████▊ | 6519/7431 [6:33:11<50:32,  3.33s/it] 88%|████████▊ | 6520/7431 [6:33:15<50:23,  3.32s/it] 88%|████████▊ | 6521/7431 [6:33:18<49:42,  3.28s/it] 88%|████████▊ | 6522/7431 [6:33:21<50:06,  3.31s/it] 88%|████████▊ | 6523/7431 [6:33:24<49:11,  3.25s/it] 88%|████████▊ | 6524/7431 [6:33:28<49:26,  3.27s/it] 88%|████████▊ | 6525/7431 [6:33:31<50:11,  3.32s/it] 88%|████████▊ | 6526/7431 [6:33:35<50:15,  3.33s/it] 88%|████████▊ | 6527/7431 [6:33:38<49:30,  3.29s/it] 88%|████████▊ | 6528/7431 [6:33:41<48:54,  3.25s/it] 88%|████████▊ | 6529/7431 [6:33:44<48:46,  3.24s/it] 88%|████████▊ | 6530/7431 [6:33:47<48:41,  3.24s/it] 88%|████████▊ | 6531/7431 [6:33:51<48:38,  3.24s/it] 88%|████████▊ | 6532/7431 [6:33:54<49:06,  3.28s/it] 88%|████████▊ | 6533/7431 [6:33:57<49:13,  3.29s/it] 88%|████████▊ | 6534/7431 [6:34:01<49:34,  3.32s/it] 88%|████████▊ | 6535/7431 [6:34:04<48:37,  3.26s/it] 88%|████████▊ | 6536/7431 [6:34:07<48:22,  3.24s/it] 88%|████████▊ | 6537/7431 [6:34:10<48:53,  3.28s/it] 88%|████████▊ | 6538/7431 [6:34:14<49:20,  3.32s/it] 88%|████████▊ | 6539/7431 [6:34:17<48:58,  3.29s/it] 88%|████████▊ | 6540/7431 [6:34:20<48:37,  3.27s/it] 88%|████████▊ | 6541/7431 [6:34:24<48:36,  3.28s/it] 88%|████████▊ | 6542/7431 [6:34:27<48:50,  3.30s/it] 88%|████████▊ | 6543/7431 [6:34:30<48:44,  3.29s/it] 88%|████████▊ | 6544/7431 [6:34:33<48:43,  3.30s/it] 88%|████████▊ | 6545/7431 [6:34:37<48:38,  3.29s/it] 88%|████████▊ | 6546/7431 [6:34:40<49:06,  3.33s/it] 88%|████████▊ | 6547/7431 [6:34:43<48:12,  3.27s/it] 88%|████████▊ | 6548/7431 [6:34:47<47:54,  3.26s/it] 88%|████████▊ | 6549/7431 [6:34:50<47:53,  3.26s/it]09/01/2024 01:02:12 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.5238230228424072, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03783868998289108, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7189998626708984, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.280661582946777}
 88%|████████▊ | 6550/7431 [6:34:53<48:19,  3.29s/it] 88%|████████▊ | 6551/7431 [6:34:57<48:45,  3.32s/it] 88%|████████▊ | 6552/7431 [6:35:00<48:32,  3.31s/it] 88%|████████▊ | 6553/7431 [6:35:03<48:14,  3.30s/it] 88%|████████▊ | 6554/7431 [6:35:06<47:48,  3.27s/it] 88%|████████▊ | 6555/7431 [6:35:10<47:23,  3.25s/it] 88%|████████▊ | 6556/7431 [6:35:13<47:16,  3.24s/it] 88%|████████▊ | 6557/7431 [6:35:16<47:42,  3.27s/it] 88%|████████▊ | 6558/7431 [6:35:19<47:29,  3.26s/it] 88%|████████▊ | 6559/7431 [6:35:22<46:38,  3.21s/it] 88%|████████▊ | 6560/7431 [6:35:26<46:39,  3.21s/it] 88%|████████▊ | 6561/7431 [6:35:29<47:21,  3.27s/it] 88%|████████▊ | 6562/7431 [6:35:32<46:54,  3.24s/it] 88%|████████▊ | 6563/7431 [6:35:36<47:06,  3.26s/it] 88%|████████▊ | 6564/7431 [6:35:39<46:48,  3.24s/it] 88%|████████▊ | 6565/7431 [6:35:42<46:55,  3.25s/it] 88%|████████▊ | 6566/7431 [6:35:45<47:39,  3.31s/it] 88%|████████▊ | 6567/7431 [6:35:49<46:48,  3.25s/it] 88%|████████▊ | 6568/7431 [6:35:52<46:09,  3.21s/it] 88%|████████▊ | 6569/7431 [6:35:55<46:12,  3.22s/it] 88%|████████▊ | 6570/7431 [6:35:58<47:00,  3.28s/it] 88%|████████▊ | 6571/7431 [6:36:02<47:12,  3.29s/it] 88%|████████▊ | 6572/7431 [6:36:05<48:01,  3.35s/it] 88%|████████▊ | 6573/7431 [6:36:08<47:10,  3.30s/it] 88%|████████▊ | 6574/7431 [6:36:11<46:33,  3.26s/it] 88%|████████▊ | 6575/7431 [6:36:15<47:27,  3.33s/it] 88%|████████▊ | 6576/7431 [6:36:18<47:12,  3.31s/it] 89%|████████▊ | 6577/7431 [6:36:21<46:42,  3.28s/it] 89%|████████▊ | 6578/7431 [6:36:25<46:38,  3.28s/it] 89%|████████▊ | 6579/7431 [6:36:28<46:41,  3.29s/it] 89%|████████▊ | 6580/7431 [6:36:31<47:21,  3.34s/it] 89%|████████▊ | 6581/7431 [6:36:35<47:01,  3.32s/it] 89%|████████▊ | 6582/7431 [6:36:38<46:48,  3.31s/it] 89%|████████▊ | 6583/7431 [6:36:41<46:16,  3.27s/it] 89%|████████▊ | 6584/7431 [6:36:44<46:01,  3.26s/it] 89%|████████▊ | 6585/7431 [6:36:48<45:47,  3.25s/it] 89%|████████▊ | 6586/7431 [6:36:51<45:27,  3.23s/it] 89%|████████▊ | 6587/7431 [6:36:54<45:12,  3.21s/it] 89%|████████▊ | 6588/7431 [6:36:57<44:55,  3.20s/it] 89%|████████▊ | 6589/7431 [6:37:01<45:37,  3.25s/it] 89%|████████▊ | 6590/7431 [6:37:04<45:03,  3.21s/it] 89%|████████▊ | 6591/7431 [6:37:07<46:10,  3.30s/it] 89%|████████▊ | 6592/7431 [6:37:10<45:44,  3.27s/it] 89%|████████▊ | 6593/7431 [6:37:14<45:39,  3.27s/it] 89%|████████▊ | 6594/7431 [6:37:17<45:19,  3.25s/it] 89%|████████▊ | 6595/7431 [6:37:20<45:08,  3.24s/it] 89%|████████▉ | 6596/7431 [6:37:23<45:26,  3.26s/it] 89%|████████▉ | 6597/7431 [6:37:27<44:43,  3.22s/it] 89%|████████▉ | 6598/7431 [6:37:30<44:26,  3.20s/it] 89%|████████▉ | 6599/7431 [6:37:33<45:32,  3.28s/it]09/01/2024 01:04:55 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.5137715339660645, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03966363146901131, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.618830680847168, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.172266006469727}
 89%|████████▉ | 6600/7431 [6:37:36<45:12,  3.26s/it] 89%|████████▉ | 6601/7431 [6:37:40<44:56,  3.25s/it] 89%|████████▉ | 6602/7431 [6:37:43<45:36,  3.30s/it] 89%|████████▉ | 6603/7431 [6:37:47<47:01,  3.41s/it] 89%|████████▉ | 6604/7431 [6:37:50<46:00,  3.34s/it] 89%|████████▉ | 6605/7431 [6:37:53<45:21,  3.29s/it] 89%|████████▉ | 6606/7431 [6:37:56<45:48,  3.33s/it] 89%|████████▉ | 6607/7431 [6:38:00<44:50,  3.26s/it] 89%|████████▉ | 6608/7431 [6:38:03<44:30,  3.25s/it] 89%|████████▉ | 6609/7431 [6:38:06<44:23,  3.24s/it] 89%|████████▉ | 6610/7431 [6:38:09<44:33,  3.26s/it] 89%|████████▉ | 6611/7431 [6:38:13<45:06,  3.30s/it] 89%|████████▉ | 6612/7431 [6:38:16<45:06,  3.30s/it] 89%|████████▉ | 6613/7431 [6:38:19<44:28,  3.26s/it] 89%|████████▉ | 6614/7431 [6:38:23<45:21,  3.33s/it] 89%|████████▉ | 6615/7431 [6:38:26<46:21,  3.41s/it] 89%|████████▉ | 6616/7431 [6:38:29<44:45,  3.30s/it] 89%|████████▉ | 6617/7431 [6:38:33<44:56,  3.31s/it] 89%|████████▉ | 6618/7431 [6:38:36<44:25,  3.28s/it] 89%|████████▉ | 6619/7431 [6:38:39<44:19,  3.28s/it] 89%|████████▉ | 6620/7431 [6:38:42<43:45,  3.24s/it] 89%|████████▉ | 6621/7431 [6:38:45<43:13,  3.20s/it] 89%|████████▉ | 6622/7431 [6:38:49<43:10,  3.20s/it] 89%|████████▉ | 6623/7431 [6:38:52<43:40,  3.24s/it] 89%|████████▉ | 6624/7431 [6:38:55<44:00,  3.27s/it] 89%|████████▉ | 6625/7431 [6:38:59<44:44,  3.33s/it] 89%|████████▉ | 6626/7431 [6:39:02<44:16,  3.30s/it] 89%|████████▉ | 6627/7431 [6:39:05<43:28,  3.24s/it] 89%|████████▉ | 6628/7431 [6:39:09<45:23,  3.39s/it] 89%|████████▉ | 6629/7431 [6:39:12<44:53,  3.36s/it] 89%|████████▉ | 6630/7431 [6:39:15<44:41,  3.35s/it] 89%|████████▉ | 6631/7431 [6:39:19<44:07,  3.31s/it] 89%|████████▉ | 6632/7431 [6:39:22<43:36,  3.28s/it] 89%|████████▉ | 6633/7431 [6:39:25<43:25,  3.26s/it] 89%|████████▉ | 6634/7431 [6:39:28<43:41,  3.29s/it] 89%|████████▉ | 6635/7431 [6:39:32<43:50,  3.30s/it] 89%|████████▉ | 6636/7431 [6:39:35<43:19,  3.27s/it] 89%|████████▉ | 6637/7431 [6:39:38<43:01,  3.25s/it] 89%|████████▉ | 6638/7431 [6:39:42<43:28,  3.29s/it] 89%|████████▉ | 6639/7431 [6:39:45<43:44,  3.31s/it] 89%|████████▉ | 6640/7431 [6:39:48<42:54,  3.26s/it] 89%|████████▉ | 6641/7431 [6:39:51<43:39,  3.32s/it] 89%|████████▉ | 6642/7431 [6:39:55<43:07,  3.28s/it] 89%|████████▉ | 6643/7431 [6:39:58<42:35,  3.24s/it] 89%|████████▉ | 6644/7431 [6:40:01<42:21,  3.23s/it] 89%|████████▉ | 6645/7431 [6:40:04<41:46,  3.19s/it] 89%|████████▉ | 6646/7431 [6:40:08<42:50,  3.27s/it] 89%|████████▉ | 6647/7431 [6:40:11<43:46,  3.35s/it] 89%|████████▉ | 6648/7431 [6:40:14<43:26,  3.33s/it] 89%|████████▉ | 6649/7431 [6:40:18<43:15,  3.32s/it]09/01/2024 01:07:39 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.5577847957611084, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04376896843314171, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.66892147064209, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.270475387573242}
 89%|████████▉ | 6650/7431 [6:40:21<42:49,  3.29s/it] 90%|████████▉ | 6651/7431 [6:40:24<42:59,  3.31s/it] 90%|████████▉ | 6652/7431 [6:40:27<42:27,  3.27s/it] 90%|████████▉ | 6653/7431 [6:40:31<42:07,  3.25s/it] 90%|████████▉ | 6654/7431 [6:40:34<42:08,  3.25s/it] 90%|████████▉ | 6655/7431 [6:40:37<42:03,  3.25s/it] 90%|████████▉ | 6656/7431 [6:40:40<42:02,  3.25s/it] 90%|████████▉ | 6657/7431 [6:40:44<42:24,  3.29s/it] 90%|████████▉ | 6658/7431 [6:40:47<42:10,  3.27s/it] 90%|████████▉ | 6659/7431 [6:40:50<41:57,  3.26s/it] 90%|████████▉ | 6660/7431 [6:40:54<42:16,  3.29s/it] 90%|████████▉ | 6661/7431 [6:40:57<41:53,  3.26s/it] 90%|████████▉ | 6662/7431 [6:41:00<42:01,  3.28s/it] 90%|████████▉ | 6663/7431 [6:41:03<41:22,  3.23s/it] 90%|████████▉ | 6664/7431 [6:41:07<42:14,  3.30s/it] 90%|████████▉ | 6665/7431 [6:41:10<41:25,  3.24s/it] 90%|████████▉ | 6666/7431 [6:41:13<42:29,  3.33s/it] 90%|████████▉ | 6667/7431 [6:41:17<42:17,  3.32s/it] 90%|████████▉ | 6668/7431 [6:41:20<41:27,  3.26s/it] 90%|████████▉ | 6669/7431 [6:41:23<41:14,  3.25s/it] 90%|████████▉ | 6670/7431 [6:41:26<41:31,  3.27s/it] 90%|████████▉ | 6671/7431 [6:41:30<41:24,  3.27s/it] 90%|████████▉ | 6672/7431 [6:41:33<41:06,  3.25s/it] 90%|████████▉ | 6673/7431 [6:41:36<41:02,  3.25s/it] 90%|████████▉ | 6674/7431 [6:41:40<41:55,  3.32s/it] 90%|████████▉ | 6675/7431 [6:41:43<42:06,  3.34s/it] 90%|████████▉ | 6676/7431 [6:41:46<41:25,  3.29s/it] 90%|████████▉ | 6677/7431 [6:41:50<41:53,  3.33s/it] 90%|████████▉ | 6678/7431 [6:41:53<42:15,  3.37s/it] 90%|████████▉ | 6679/7431 [6:41:56<41:42,  3.33s/it] 90%|████████▉ | 6680/7431 [6:41:59<41:17,  3.30s/it] 90%|████████▉ | 6681/7431 [6:42:03<40:45,  3.26s/it] 90%|████████▉ | 6682/7431 [6:42:06<41:13,  3.30s/it] 90%|████████▉ | 6683/7431 [6:42:09<40:54,  3.28s/it] 90%|████████▉ | 6684/7431 [6:42:13<41:51,  3.36s/it] 90%|████████▉ | 6685/7431 [6:42:16<41:33,  3.34s/it] 90%|████████▉ | 6686/7431 [6:42:19<40:57,  3.30s/it] 90%|████████▉ | 6687/7431 [6:42:23<41:27,  3.34s/it] 90%|█████████ | 6688/7431 [6:42:26<41:25,  3.35s/it] 90%|█████████ | 6689/7431 [6:42:29<40:55,  3.31s/it] 90%|█████████ | 6690/7431 [6:42:33<40:24,  3.27s/it] 90%|█████████ | 6691/7431 [6:42:36<40:16,  3.27s/it] 90%|█████████ | 6692/7431 [6:42:39<40:53,  3.32s/it] 90%|█████████ | 6693/7431 [6:42:42<40:38,  3.30s/it] 90%|█████████ | 6694/7431 [6:42:46<40:37,  3.31s/it] 90%|█████████ | 6695/7431 [6:42:49<41:42,  3.40s/it] 90%|█████████ | 6696/7431 [6:42:53<40:57,  3.34s/it] 90%|█████████ | 6697/7431 [6:42:56<40:05,  3.28s/it] 90%|█████████ | 6698/7431 [6:42:59<39:29,  3.23s/it] 90%|█████████ | 6699/7431 [6:43:02<39:51,  3.27s/it]09/01/2024 01:10:24 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.560485601425171, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.046750135719776154, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.7147350311279297, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.3219709396362305}
 90%|█████████ | 6700/7431 [6:43:05<39:36,  3.25s/it] 90%|█████████ | 6701/7431 [6:43:09<40:04,  3.29s/it] 90%|█████████ | 6702/7431 [6:43:12<39:29,  3.25s/it] 90%|█████████ | 6703/7431 [6:43:15<39:16,  3.24s/it] 90%|█████████ | 6704/7431 [6:43:19<39:36,  3.27s/it] 90%|█████████ | 6705/7431 [6:43:22<40:18,  3.33s/it] 90%|█████████ | 6706/7431 [6:43:25<40:11,  3.33s/it] 90%|█████████ | 6707/7431 [6:43:29<39:41,  3.29s/it] 90%|█████████ | 6708/7431 [6:43:32<39:39,  3.29s/it] 90%|█████████ | 6709/7431 [6:43:35<39:05,  3.25s/it] 90%|█████████ | 6710/7431 [6:43:38<39:16,  3.27s/it] 90%|█████████ | 6711/7431 [6:43:41<39:01,  3.25s/it] 90%|█████████ | 6712/7431 [6:43:45<39:47,  3.32s/it] 90%|█████████ | 6713/7431 [6:43:48<39:18,  3.28s/it] 90%|█████████ | 6714/7431 [6:43:52<39:32,  3.31s/it] 90%|█████████ | 6715/7431 [6:43:55<39:00,  3.27s/it] 90%|█████████ | 6716/7431 [6:43:58<38:46,  3.25s/it] 90%|█████████ | 6717/7431 [6:44:01<38:56,  3.27s/it] 90%|█████████ | 6718/7431 [6:44:04<38:44,  3.26s/it] 90%|█████████ | 6719/7431 [6:44:08<38:09,  3.22s/it] 90%|█████████ | 6720/7431 [6:44:11<37:59,  3.21s/it] 90%|█████████ | 6721/7431 [6:44:14<38:36,  3.26s/it] 90%|█████████ | 6722/7431 [6:44:17<38:06,  3.22s/it] 90%|█████████ | 6723/7431 [6:44:21<39:03,  3.31s/it] 90%|█████████ | 6724/7431 [6:44:24<38:30,  3.27s/it] 90%|█████████ | 6725/7431 [6:44:27<37:50,  3.22s/it] 91%|█████████ | 6726/7431 [6:44:30<38:04,  3.24s/it] 91%|█████████ | 6727/7431 [6:44:34<38:22,  3.27s/it] 91%|█████████ | 6728/7431 [6:44:37<38:47,  3.31s/it] 91%|█████████ | 6729/7431 [6:44:40<38:03,  3.25s/it] 91%|█████████ | 6730/7431 [6:44:44<38:08,  3.27s/it] 91%|█████████ | 6731/7431 [6:44:47<37:43,  3.23s/it] 91%|█████████ | 6732/7431 [6:44:50<38:44,  3.32s/it] 91%|█████████ | 6733/7431 [6:44:54<38:45,  3.33s/it] 91%|█████████ | 6734/7431 [6:44:57<38:37,  3.33s/it] 91%|█████████ | 6735/7431 [6:45:00<38:19,  3.30s/it] 91%|█████████ | 6736/7431 [6:45:04<38:35,  3.33s/it] 91%|█████████ | 6737/7431 [6:45:07<39:07,  3.38s/it] 91%|█████████ | 6738/7431 [6:45:10<38:10,  3.30s/it] 91%|█████████ | 6739/7431 [6:45:13<37:54,  3.29s/it] 91%|█████████ | 6740/7431 [6:45:17<37:33,  3.26s/it] 91%|█████████ | 6741/7431 [6:45:20<38:17,  3.33s/it] 91%|█████████ | 6742/7431 [6:45:23<37:44,  3.29s/it] 91%|█████████ | 6743/7431 [6:45:27<38:07,  3.33s/it] 91%|█████████ | 6744/7431 [6:45:30<37:18,  3.26s/it] 91%|█████████ | 6745/7431 [6:45:33<37:13,  3.26s/it] 91%|█████████ | 6746/7431 [6:45:36<36:49,  3.23s/it] 91%|█████████ | 6747/7431 [6:45:39<36:49,  3.23s/it] 91%|█████████ | 6748/7431 [6:45:43<37:14,  3.27s/it] 91%|█████████ | 6749/7431 [6:45:46<37:30,  3.30s/it]09/01/2024 01:13:08 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.5134377479553223, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.035844817757606506, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.652397632598877, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.2016801834106445}
 91%|█████████ | 6750/7431 [6:45:49<37:01,  3.26s/it] 91%|█████████ | 6751/7431 [6:45:53<37:12,  3.28s/it] 91%|█████████ | 6752/7431 [6:45:56<36:30,  3.23s/it] 91%|█████████ | 6753/7431 [6:45:59<37:05,  3.28s/it] 91%|█████████ | 6754/7431 [6:46:03<37:13,  3.30s/it] 91%|█████████ | 6755/7431 [6:46:06<37:20,  3.31s/it] 91%|█████████ | 6756/7431 [6:46:09<36:50,  3.27s/it] 91%|█████████ | 6757/7431 [6:46:12<37:04,  3.30s/it] 91%|█████████ | 6758/7431 [6:46:16<36:32,  3.26s/it] 91%|█████████ | 6759/7431 [6:46:19<36:29,  3.26s/it] 91%|█████████ | 6760/7431 [6:46:22<36:38,  3.28s/it] 91%|█████████ | 6761/7431 [6:46:26<36:55,  3.31s/it] 91%|█████████ | 6762/7431 [6:46:29<36:18,  3.26s/it] 91%|█████████ | 6763/7431 [6:46:32<36:25,  3.27s/it] 91%|█████████ | 6764/7431 [6:46:35<35:38,  3.21s/it] 91%|█████████ | 6765/7431 [6:46:38<36:16,  3.27s/it] 91%|█████████ | 6766/7431 [6:46:42<35:57,  3.24s/it] 91%|█████████ | 6767/7431 [6:46:45<35:46,  3.23s/it] 91%|█████████ | 6768/7431 [6:46:48<35:42,  3.23s/it] 91%|█████████ | 6769/7431 [6:46:51<36:12,  3.28s/it] 91%|█████████ | 6770/7431 [6:46:55<35:25,  3.22s/it] 91%|█████████ | 6771/7431 [6:46:58<35:37,  3.24s/it] 91%|█████████ | 6772/7431 [6:47:01<35:49,  3.26s/it] 91%|█████████ | 6773/7431 [6:47:04<36:02,  3.29s/it] 91%|█████████ | 6774/7431 [6:47:08<35:51,  3.27s/it] 91%|█████████ | 6775/7431 [6:47:11<35:32,  3.25s/it] 91%|█████████ | 6776/7431 [6:47:14<35:24,  3.24s/it] 91%|█████████ | 6777/7431 [6:47:17<35:39,  3.27s/it] 91%|█████████ | 6778/7431 [6:47:21<35:29,  3.26s/it] 91%|█████████ | 6779/7431 [6:47:24<35:17,  3.25s/it] 91%|█████████ | 6780/7431 [6:47:27<35:31,  3.27s/it] 91%|█████████▏| 6781/7431 [6:47:31<35:22,  3.27s/it] 91%|█████████▏| 6782/7431 [6:47:34<34:59,  3.23s/it] 91%|█████████▏| 6783/7431 [6:47:37<34:46,  3.22s/it] 91%|█████████▏| 6784/7431 [6:47:40<34:43,  3.22s/it] 91%|█████████▏| 6785/7431 [6:47:43<34:37,  3.22s/it] 91%|█████████▏| 6786/7431 [6:47:47<34:34,  3.22s/it] 91%|█████████▏| 6787/7431 [6:47:50<34:27,  3.21s/it] 91%|█████████▏| 6788/7431 [6:47:53<34:47,  3.25s/it] 91%|█████████▏| 6789/7431 [6:47:56<34:34,  3.23s/it] 91%|█████████▏| 6790/7431 [6:48:00<36:02,  3.37s/it] 91%|█████████▏| 6791/7431 [6:48:03<35:50,  3.36s/it] 91%|█████████▏| 6792/7431 [6:48:07<35:47,  3.36s/it] 91%|█████████▏| 6793/7431 [6:48:10<35:16,  3.32s/it] 91%|█████████▏| 6794/7431 [6:48:13<34:56,  3.29s/it] 91%|█████████▏| 6795/7431 [6:48:16<34:30,  3.26s/it] 91%|█████████▏| 6796/7431 [6:48:20<34:31,  3.26s/it] 91%|█████████▏| 6797/7431 [6:48:23<34:23,  3.26s/it] 91%|█████████▏| 6798/7431 [6:48:26<34:12,  3.24s/it] 91%|█████████▏| 6799/7431 [6:48:29<34:20,  3.26s/it]09/01/2024 01:15:51 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.4155852794647217, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03720320016145706, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.6200175285339355, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.072805881500244}
 92%|█████████▏| 6800/7431 [6:48:33<34:56,  3.32s/it] 92%|█████████▏| 6801/7431 [6:48:36<34:30,  3.29s/it] 92%|█████████▏| 6802/7431 [6:48:39<34:51,  3.33s/it] 92%|█████████▏| 6803/7431 [6:48:43<34:14,  3.27s/it] 92%|█████████▏| 6804/7431 [6:48:46<34:27,  3.30s/it] 92%|█████████▏| 6805/7431 [6:48:50<35:29,  3.40s/it] 92%|█████████▏| 6806/7431 [6:48:53<34:37,  3.32s/it] 92%|█████████▏| 6807/7431 [6:48:56<34:12,  3.29s/it] 92%|█████████▏| 6808/7431 [6:48:59<33:57,  3.27s/it] 92%|█████████▏| 6809/7431 [6:49:02<33:55,  3.27s/it] 92%|█████████▏| 6810/7431 [6:49:06<33:42,  3.26s/it] 92%|█████████▏| 6811/7431 [6:49:09<33:24,  3.23s/it] 92%|█████████▏| 6812/7431 [6:49:12<33:51,  3.28s/it] 92%|█████████▏| 6813/7431 [6:49:16<34:35,  3.36s/it] 92%|█████████▏| 6814/7431 [6:49:19<33:57,  3.30s/it] 92%|█████████▏| 6815/7431 [6:49:22<33:41,  3.28s/it] 92%|█████████▏| 6816/7431 [6:49:25<33:29,  3.27s/it] 92%|█████████▏| 6817/7431 [6:49:29<33:30,  3.28s/it] 92%|█████████▏| 6818/7431 [6:49:32<33:20,  3.26s/it] 92%|█████████▏| 6819/7431 [6:49:35<33:30,  3.29s/it] 92%|█████████▏| 6820/7431 [6:49:39<33:52,  3.33s/it] 92%|█████████▏| 6821/7431 [6:49:42<33:04,  3.25s/it] 92%|█████████▏| 6822/7431 [6:49:45<32:53,  3.24s/it] 92%|█████████▏| 6823/7431 [6:49:48<33:04,  3.26s/it] 92%|█████████▏| 6824/7431 [6:49:51<32:42,  3.23s/it] 92%|█████████▏| 6825/7431 [6:49:55<32:28,  3.21s/it] 92%|█████████▏| 6826/7431 [6:49:58<33:12,  3.29s/it] 92%|█████████▏| 6827/7431 [6:50:01<32:54,  3.27s/it] 92%|█████████▏| 6828/7431 [6:50:04<32:42,  3.25s/it] 92%|█████████▏| 6829/7431 [6:50:08<32:29,  3.24s/it] 92%|█████████▏| 6830/7431 [6:50:11<32:14,  3.22s/it] 92%|█████████▏| 6831/7431 [6:50:14<32:11,  3.22s/it] 92%|█████████▏| 6832/7431 [6:50:18<33:14,  3.33s/it] 92%|█████████▏| 6833/7431 [6:50:21<32:57,  3.31s/it] 92%|█████████▏| 6834/7431 [6:50:24<32:32,  3.27s/it] 92%|█████████▏| 6835/7431 [6:50:27<32:23,  3.26s/it] 92%|█████████▏| 6836/7431 [6:50:31<32:16,  3.25s/it] 92%|█████████▏| 6837/7431 [6:50:34<32:34,  3.29s/it] 92%|█████████▏| 6838/7431 [6:50:37<32:24,  3.28s/it] 92%|█████████▏| 6839/7431 [6:50:41<32:31,  3.30s/it] 92%|█████████▏| 6840/7431 [6:50:44<32:12,  3.27s/it] 92%|█████████▏| 6841/7431 [6:50:47<31:57,  3.25s/it] 92%|█████████▏| 6842/7431 [6:50:50<31:24,  3.20s/it] 92%|█████████▏| 6843/7431 [6:50:53<31:18,  3.19s/it] 92%|█████████▏| 6844/7431 [6:50:57<31:52,  3.26s/it] 92%|█████████▏| 6845/7431 [6:51:00<31:27,  3.22s/it] 92%|█████████▏| 6846/7431 [6:51:03<31:24,  3.22s/it] 92%|█████████▏| 6847/7431 [6:51:06<31:40,  3.25s/it] 92%|█████████▏| 6848/7431 [6:51:10<32:00,  3.29s/it] 92%|█████████▏| 6849/7431 [6:51:13<31:57,  3.30s/it]09/01/2024 01:18:35 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.7260768413543701, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04547109827399254, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.8931150436401367, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 4.664662837982178}
 92%|█████████▏| 6850/7431 [6:51:16<31:37,  3.27s/it] 92%|█████████▏| 6851/7431 [6:51:19<31:19,  3.24s/it] 92%|█████████▏| 6852/7431 [6:51:23<31:33,  3.27s/it] 92%|█████████▏| 6853/7431 [6:51:26<31:06,  3.23s/it] 92%|█████████▏| 6854/7431 [6:51:29<31:13,  3.25s/it] 92%|█████████▏| 6855/7431 [6:51:32<31:06,  3.24s/it] 92%|█████████▏| 6856/7431 [6:51:36<31:10,  3.25s/it] 92%|█████████▏| 6857/7431 [6:51:39<31:11,  3.26s/it] 92%|█████████▏| 6858/7431 [6:51:42<31:17,  3.28s/it] 92%|█████████▏| 6859/7431 [6:51:46<31:23,  3.29s/it] 92%|█████████▏| 6860/7431 [6:51:49<31:53,  3.35s/it] 92%|█████████▏| 6861/7431 [6:51:52<31:29,  3.31s/it] 92%|█████████▏| 6862/7431 [6:51:56<31:15,  3.30s/it] 92%|█████████▏| 6863/7431 [6:51:59<30:54,  3.27s/it] 92%|█████████▏| 6864/7431 [6:52:02<30:56,  3.27s/it] 92%|█████████▏| 6865/7431 [6:52:05<31:02,  3.29s/it] 92%|█████████▏| 6866/7431 [6:52:09<31:22,  3.33s/it] 92%|█████████▏| 6867/7431 [6:52:12<30:56,  3.29s/it] 92%|█████████▏| 6868/7431 [6:52:15<30:24,  3.24s/it] 92%|█████████▏| 6869/7431 [6:52:19<30:58,  3.31s/it] 92%|█████████▏| 6870/7431 [6:52:22<30:47,  3.29s/it] 92%|█████████▏| 6871/7431 [6:52:25<30:22,  3.25s/it] 92%|█████████▏| 6872/7431 [6:52:28<30:12,  3.24s/it] 92%|█████████▏| 6873/7431 [6:52:31<29:58,  3.22s/it] 93%|█████████▎| 6874/7431 [6:52:35<30:47,  3.32s/it] 93%|█████████▎| 6875/7431 [6:52:38<30:11,  3.26s/it] 93%|█████████▎| 6876/7431 [6:52:41<29:56,  3.24s/it] 93%|█████████▎| 6877/7431 [6:52:45<30:09,  3.27s/it] 93%|█████████▎| 6878/7431 [6:52:48<30:00,  3.26s/it] 93%|█████████▎| 6879/7431 [6:52:51<29:50,  3.24s/it] 93%|█████████▎| 6880/7431 [6:52:54<29:41,  3.23s/it] 93%|█████████▎| 6881/7431 [6:52:57<29:41,  3.24s/it] 93%|█████████▎| 6882/7431 [6:53:01<29:29,  3.22s/it] 93%|█████████▎| 6883/7431 [6:53:04<29:35,  3.24s/it] 93%|█████████▎| 6884/7431 [6:53:07<29:21,  3.22s/it] 93%|█████████▎| 6885/7431 [6:53:10<29:35,  3.25s/it] 93%|█████████▎| 6886/7431 [6:53:14<29:32,  3.25s/it] 93%|█████████▎| 6887/7431 [6:53:17<29:13,  3.22s/it] 93%|█████████▎| 6888/7431 [6:53:20<29:34,  3.27s/it] 93%|█████████▎| 6889/7431 [6:53:24<29:35,  3.28s/it] 93%|█████████▎| 6890/7431 [6:53:27<29:33,  3.28s/it] 93%|█████████▎| 6891/7431 [6:53:30<29:21,  3.26s/it] 93%|█████████▎| 6892/7431 [6:53:33<29:25,  3.28s/it] 93%|█████████▎| 6893/7431 [6:53:37<29:29,  3.29s/it] 93%|█████████▎| 6894/7431 [6:53:40<29:50,  3.34s/it] 93%|█████████▎| 6895/7431 [6:53:43<29:51,  3.34s/it] 93%|█████████▎| 6896/7431 [6:53:47<29:35,  3.32s/it] 93%|█████████▎| 6897/7431 [6:53:50<29:06,  3.27s/it] 93%|█████████▎| 6898/7431 [6:53:53<28:33,  3.22s/it] 93%|█████████▎| 6899/7431 [6:53:56<28:42,  3.24s/it]09/01/2024 01:21:18 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 1.24404776096344, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.0368652306497097, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.573852062225342, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 3.854764938354492}
 93%|█████████▎| 6900/7431 [6:54:00<29:13,  3.30s/it] 93%|█████████▎| 6901/7431 [6:54:03<28:59,  3.28s/it] 93%|█████████▎| 6902/7431 [6:54:06<28:38,  3.25s/it] 93%|█████████▎| 6903/7431 [6:54:09<28:28,  3.24s/it] 93%|█████████▎| 6904/7431 [6:54:13<28:38,  3.26s/it] 93%|█████████▎| 6905/7431 [6:54:16<29:06,  3.32s/it] 93%|█████████▎| 6906/7431 [6:54:20<29:21,  3.36s/it] 93%|█████████▎| 6907/7431 [6:54:23<28:48,  3.30s/it] 93%|█████████▎| 6908/7431 [6:54:26<28:19,  3.25s/it] 93%|█████████▎| 6909/7431 [6:54:29<28:26,  3.27s/it] 93%|█████████▎| 6910/7431 [6:54:32<28:27,  3.28s/it] 93%|█████████▎| 6911/7431 [6:54:36<28:02,  3.24s/it] 93%|█████████▎| 6912/7431 [6:54:39<27:58,  3.23s/it] 93%|█████████▎| 6913/7431 [6:54:42<28:09,  3.26s/it] 93%|█████████▎| 6914/7431 [6:54:45<28:20,  3.29s/it] 93%|█████████▎| 6915/7431 [6:54:49<28:24,  3.30s/it] 93%|█████████▎| 6916/7431 [6:54:52<27:58,  3.26s/it] 93%|█████████▎| 6917/7431 [6:54:55<27:46,  3.24s/it] 93%|█████████▎| 6918/7431 [6:54:58<27:37,  3.23s/it] 93%|█████████▎| 6919/7431 [6:55:02<27:31,  3.23s/it] 93%|█████████▎| 6920/7431 [6:55:05<27:30,  3.23s/it] 93%|█████████▎| 6921/7431 [6:55:08<27:30,  3.24s/it] 93%|█████████▎| 6922/7431 [6:55:11<27:12,  3.21s/it] 93%|█████████▎| 6923/7431 [6:55:15<27:19,  3.23s/it] 93%|█████████▎| 6924/7431 [6:55:18<27:10,  3.22s/it] 93%|█████████▎| 6925/7431 [6:55:21<27:20,  3.24s/it] 93%|█████████▎| 6926/7431 [6:55:24<27:24,  3.26s/it] 93%|█████████▎| 6927/7431 [6srun: Job step aborted: Waiting up to 92 seconds for job step to finish.
slurmstepd: error: *** JOB 7342837 ON lrdn3232 CANCELLED AT 2024-09-01T01:23:12 ***
:55:27<27:06,  3.23s/it] 93%|█████████▎| 6928/7431 [6:55:31<26:59,  3.22s/it] 93%|█████████▎| 6929/7431 [6:55:34<27:29,  3.29s/it] 93%|█████████▎| 6930/7431 [6:55:37<27:28,  3.29s/it] 93%|█████████▎| 6931/7431 [6:55:41<27:25,  3.29s/it] 93%|█████████▎| 6932/7431 [6:55:44<27:01,  3.25s/it] 93%|█████████▎| 6933/7431 [6:55:47<26:45,  3.22s/it] 93%|█████████▎| 6934/7431 [6:55:50<26:54,  3.25s/it]slurmstepd: error: *** STEP 7342837.0 ON lrdn3232 CANCELLED AT 2024-09-01T01:23:12 ***
