NODELIST=lrdn1065
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torch/distributed/launch.py:181: FutureWarning: The module torch.distributed.launch is deprecated
and will be removed in future. Use torchrun.
Note that --use-env is set by default in torchrun.
If your script expects `--local-rank` argument to be set, please
change it to read from `os.environ['LOCAL_RANK']` instead. See 
https://pytorch.org/docs/stable/distributed.html#launch-utility for 
further instructions

  warnings.warn(
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
1
2
0
3
DEVICE SET
DEVICE SET
DEVICE SET
DEVICE SET
09/20/2024 01:28:02 - INFO - torch.distributed.distributed_c10d -   Added key: store_based_barrier_key:1 to store for rank: 2
09/20/2024 01:28:02 - INFO - torch.distributed.distributed_c10d -   Added key: store_based_barrier_key:1 to store for rank: 1
09/20/2024 01:28:02 - INFO - torch.distributed.distributed_c10d -   Added key: store_based_barrier_key:1 to store for rank: 3
09/20/2024 01:28:02 - INFO - torch.distributed.distributed_c10d -   Added key: store_based_barrier_key:1 to store for rank: 0
09/20/2024 01:28:02 - INFO - torch.distributed.distributed_c10d -   Rank 2: Completed store-based barrier for key:store_based_barrier_key:1 with 4 nodes.
09/20/2024 01:28:02 - INFO - torch.distributed.distributed_c10d -   Rank 1: Completed store-based barrier for key:store_based_barrier_key:1 with 4 nodes.
09/20/2024 01:28:02 - INFO - torch.distributed.distributed_c10d -   Rank 3: Completed store-based barrier for key:store_based_barrier_key:1 with 4 nodes.
09/20/2024 01:28:02 - INFO - torch.distributed.distributed_c10d -   Rank 0: Completed store-based barrier for key:store_based_barrier_key:1 with 4 nodes.
09/20/2024 01:28:02 - INFO - __main__ -   ==================model_configs==================

09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_model_type : vast
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_itm_ratio : 0.1
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_frozen_vision : False
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_frozen_audio : False
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_checkpointing : True
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_max_caption_len : 40
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_max_omni_caption_len : 70
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_max_subtitle_len : 70
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_contra_dim : 512
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_inherit_keys : ['vision_encoder_type', 'audio_encoder_type', 'audio_melbins', 'audio_target_length']
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_frame_embedding_type : adaptive
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_vision_resolution : 224
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_vision_encoder_type : evaclip01_giant
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_audio_encoder_type : beats
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_audio_melbins : 64
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_audio_target_length : 1024
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_beam_size : 3
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_captioner_mode : False
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_generate_nums : 1
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_ret_bidirection_evaluation : False
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_itm_rerank_num : 50
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_evaluation_type : evaluation_mm
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_default : ./config/vast/default_model_cfg.json
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_max_vision_sample_num : 8
09/20/2024 01:28:02 - INFO - __main__ -   model_cfg_max_audio_sample_num : 1
09/20/2024 01:28:02 - INFO - __main__ -   ==================run_configs==================

09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_checkpoint : 
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_output_dir : ./output/vast/pretrain_vast//downstream/finetuneMSRVTT4
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_gradient_accumulation_steps : 1
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_clip_lr : 5e-07
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_optim : adamw
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_learning_rate : 2e-05
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_betas : [0.9, 0.98]
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_weight_decay : 0.01
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_grad_norm : 2.0
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_warmup_ratio : 0.1
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_resume : False
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_seed : 50
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_fp16 : True
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_bf16 : False
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_zero_shot : False
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_scheduler : warmup_linear
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_new_lr : 0
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_new_params_name : []
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_valid_freq : 10
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_dataset_mix_type : random
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_remove_before_ckpt : True
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_first_eval : True
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_pretrain_dir : ./output/vast/pretrain_vast/downstream/finetuneVolume256batchlossonlyvolume4Mod120k
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_num_train_steps : 0
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_save_best : True
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_pin_mem : True
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_vision_resolution : 224
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_use_ddp : False
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_mode : training
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_log_steps : 100
09/20/2024 01:28:02 - INFO - __main__ -   run_cfg_default : ./config/vast/default_run_cfg.json
09/20/2024 01:28:02 - INFO - __main__ -   ==================data_configs==================

09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_train_type : annoindexed
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_train_training : True
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_train_name : msrvtt_ret
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_train_txt : datasets/annotations/msrvtt/descs_ret_train.json
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_train_vision : ../MSRVTT/videos/videos
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_train_audio : ../MSRVTT/audios
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_train_vision_transforms : crop_flip
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_train_vision_format : video_rawvideo
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_train_vision_sample_num : 8
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_train_audio_sample_num : 1
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_train_task : ret%tv%ta
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_train_epoch : 4
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_train_n_workers : 8
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_train_batch_size : 64
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_val_type : annoindexed
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_val_training : False
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_val_name : msrvtt_ret
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_val_txt : datasets/annotations/msrvtt/descs_ret_test.json
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_val_vision : ../MSRVTT/video_test
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_val_vision_transforms : crop_flip
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_val_vision_format : video_rawvideo
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_val_audio : ../MSRVTT/audio_test
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_val_vision_sample_num : 16
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_val_audio_sample_num : 1
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_val_task : ret%tvas
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_val_n_workers : 8
09/20/2024 01:28:02 - INFO - __main__ -   data_cfg_msrvtt_ret_val_batch_size : 64
wandb: Tracking run with wandb version 0.17.8
wandb: W&B syncing is set to `offline` in this directory.  
wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
09/20/2024 01:28:06 - INFO - __main__ -   msrvtt_ret Using clip mean and std.
09/20/2024 01:28:06 - INFO - __main__ -   msrvtt_ret transforms crop_flip
ci sono 158540 labelsci sono 158540 labels

ci sono 158540 labels
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
ci sono 884 labelsci sono 884 labels

ci sono 884 labels
Please 'pip install xformers'
Please 'pip install xformers'
Please 'pip install xformers'
Please 'pip install xformers'
Please 'pip install xformers'
Please 'pip install xformers'Please 'pip install xformers'
Please 'pip install xformers'

Please 'pip install xformers'
09/20/2024 01:28:12 - INFO - root -   Loaded EVA01-CLIP-g-14 model config.
09/20/2024 01:28:12 - INFO - root -   Loaded EVA01-CLIP-g-14 model config.
09/20/2024 01:28:12 - INFO - root -   Loaded EVA01-CLIP-g-14 model config.
ci sono 158540 labels
09/20/2024 01:28:13 - INFO - __main__ -   Create Dataset msrvtt_ret Success
09/20/2024 01:28:13 - INFO - __main__ -    loader ret%tv%ta--msrvtt_ret , ratio 9908 , bs_pergpu 16, n_workers 8
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
09/20/2024 01:28:14 - INFO - __main__ -   msrvtt_ret Using clip mean and std.
09/20/2024 01:28:14 - INFO - __main__ -   msrvtt_ret transforms crop_flip
ci sono 884 labels
09/20/2024 01:28:14 - INFO - __main__ -   Create Dataset msrvtt_ret Success
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
Please 'pip install xformers'
Please 'pip install xformers'
Please 'pip install xformers'
09/20/2024 01:28:16 - INFO - root -   Loaded EVA01-CLIP-g-14 model config.
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
09/20/2024 01:29:16 - INFO - root -   Loading pretrained EVA01-CLIP-g-14 weights (./pretrained_weights/clip/EVA01_CLIP_g_14_psz14_s11B.pt).
09/20/2024 01:29:16 - INFO - root -   Loading pretrained EVA01-CLIP-g-14 weights (./pretrained_weights/clip/EVA01_CLIP_g_14_psz14_s11B.pt).
09/20/2024 01:29:16 - INFO - root -   Loading pretrained EVA01-CLIP-g-14 weights (./pretrained_weights/clip/EVA01_CLIP_g_14_psz14_s11B.pt).
09/20/2024 01:29:17 - INFO - root -   Loading pretrained EVA01-CLIP-g-14 weights (./pretrained_weights/clip/EVA01_CLIP_g_14_psz14_s11B.pt).
09/20/2024 01:29:18 - INFO - root -   incompatible_keys.missing_keys: []
09/20/2024 01:29:18 - INFO - root -   incompatible_keys.missing_keys: []
09/20/2024 01:29:18 - INFO - root -   incompatible_keys.missing_keys: []
09/20/2024 01:29:18 - INFO - model.audio_encoders.beats.beats -   BEATs Config: {'input_patch_size': 16, 'embed_dim': 512, 'conv_bias': False, 'encoder_layers': 12, 'encoder_embed_dim': 768, 'encoder_ffn_embed_dim': 3072, 'encoder_attention_heads': 12, 'activation_fn': 'gelu', 'layer_wise_gradient_decay_ratio': 1.0, 'layer_norm_first': False, 'deep_norm': True, 'dropout': 0.1, 'attention_dropout': 0.1, 'activation_dropout': 0.0, 'encoder_layerdrop': 0.05, 'dropout_input': 0.1, 'conv_pos': 128, 'conv_pos_groups': 16, 'relative_position_embedding': True, 'num_buckets': 320, 'max_distance': 800, 'gru_rel_pos': True, 'finetuned_model': False, 'predictor_dropout': 0.1, 'predictor_class': 527}
09/20/2024 01:29:18 - INFO - model.audio_encoders.beats.beats -   BEATs Config: {'input_patch_size': 16, 'embed_dim': 512, 'conv_bias': False, 'encoder_layers': 12, 'encoder_embed_dim': 768, 'encoder_ffn_embed_dim': 3072, 'encoder_attention_heads': 12, 'activation_fn': 'gelu', 'layer_wise_gradient_decay_ratio': 1.0, 'layer_norm_first': False, 'deep_norm': True, 'dropout': 0.1, 'attention_dropout': 0.1, 'activation_dropout': 0.0, 'encoder_layerdrop': 0.05, 'dropout_input': 0.1, 'conv_pos': 128, 'conv_pos_groups': 16, 'relative_position_embedding': True, 'num_buckets': 320, 'max_distance': 800, 'gru_rel_pos': True, 'finetuned_model': False, 'predictor_dropout': 0.1, 'predictor_class': 527}
09/20/2024 01:29:18 - INFO - model.audio_encoders.beats.beats -   BEATs Config: {'input_patch_size': 16, 'embed_dim': 512, 'conv_bias': False, 'encoder_layers': 12, 'encoder_embed_dim': 768, 'encoder_ffn_embed_dim': 3072, 'encoder_attention_heads': 12, 'activation_fn': 'gelu', 'layer_wise_gradient_decay_ratio': 1.0, 'layer_norm_first': False, 'deep_norm': True, 'dropout': 0.1, 'attention_dropout': 0.1, 'activation_dropout': 0.0, 'encoder_layerdrop': 0.05, 'dropout_input': 0.1, 'conv_pos': 128, 'conv_pos_groups': 16, 'relative_position_embedding': True, 'num_buckets': 320, 'max_distance': 800, 'gru_rel_pos': True, 'finetuned_model': False, 'predictor_dropout': 0.1, 'predictor_class': 527}
09/20/2024 01:29:19 - INFO - root -   incompatible_keys.missing_keys: []
09/20/2024 01:29:19 - INFO - model.audio_encoders.beats.beats -   BEATs Config: {'input_patch_size': 16, 'embed_dim': 512, 'conv_bias': False, 'encoder_layers': 12, 'encoder_embed_dim': 768, 'encoder_ffn_embed_dim': 3072, 'encoder_attention_heads': 12, 'activation_fn': 'gelu', 'layer_wise_gradient_decay_ratio': 1.0, 'layer_norm_first': False, 'deep_norm': True, 'dropout': 0.1, 'attention_dropout': 0.1, 'activation_dropout': 0.0, 'encoder_layerdrop': 0.05, 'dropout_input': 0.1, 'conv_pos': 128, 'conv_pos_groups': 16, 'relative_position_embedding': True, 'num_buckets': 320, 'max_distance': 800, 'gru_rel_pos': True, 'finetuned_model': False, 'predictor_dropout': 0.1, 'predictor_class': 527}
09/20/2024 01:29:20 - WARNING - model.text_encoders.bert.bert -   If you want to use `BertForMaskedLM` make sure `config.is_decoder=False` for bi-directional self-attention.
09/20/2024 01:29:20 - WARNING - model.text_encoders.bert.bert -   If you want to use `BertForMaskedLM` make sure `config.is_decoder=False` for bi-directional self-attention.
09/20/2024 01:29:20 - WARNING - model.text_encoders.bert.bert -   If you want to use `BertForMaskedLM` make sure `config.is_decoder=False` for bi-directional self-attention.
09/20/2024 01:29:21 - WARNING - model.text_encoders.bert.bert -   If you want to use `BertForMaskedLM` make sure `config.is_decoder=False` for bi-directional self-attention.
Some weights of BertForMaskedLM were not initialized from the model checkpoint at ./pretrained_weights/bert/bert-base-uncased and are newly initialized: ['encoder.layer.7.crossattention.self.query.bias', 'encoder.layer.2.crossattention.self.key.weight', 'encoder.layer.11.crossattention.output.LayerNorm.weight', 'encoder.layer.5.crossattention.self.value.bias', 'encoder.layer.8.crossattention.output.LayerNorm.weight', 'encoder.layer.5.crossattention.output.LayerNorm.weight', 'encoder.layer.4.crossattention.output.dense.weight', 'encoder.layer.2.crossattention.self.key.bias', 'encoder.layer.9.crossattention.self.value.weight', 'encoder.layer.4.crossattention.self.value.bias', 'encoder.layer.0.crossattention.output.dense.weight', 'encoder.layer.4.crossattention.self.value.weight', 'cls.predictions.transform.dense.weight', 'encoder.layer.6.crossattention.self.value.bias', 'encoder.layer.1.crossattention.self.query.bias', 'encoder.layer.8.crossattention.self.value.weight', 'encoder.layer.4.crossattention.self.key.bias', 'encoder.layer.7.crossattention.self.key.bias', 'encoder.layer.11.crossattention.self.query.bias', 'encoder.layer.1.crossattention.output.LayerNorm.weight', 'encoder.layer.9.crossattention.self.query.weight', 'encoder.layer.6.crossattention.output.dense.weight', 'cls.predictions.transform.LayerNorm.bias', 'encoder.layer.5.crossattention.self.query.weight', 'encoder.layer.7.crossattention.output.LayerNorm.bias', 'encoder.layer.6.crossattention.self.query.weight', 'encoder.layer.10.crossattention.self.key.bias', 'encoder.layer.1.crossattention.output.dense.bias', 'encoder.layer.4.crossattention.self.key.weight', 'encoder.layer.8.crossattention.self.key.weight', 'encoder.layer.0.crossattention.self.value.weight', 'encoder.layer.3.crossattention.output.LayerNorm.weight', 'encoder.layer.9.crossattention.self.key.weight', 'encoder.layer.0.crossattention.self.value.bias', 'encoder.layer.9.crossattention.self.key.bias', 'encoder.layer.4.crossattention.output.LayerNorm.weight', 'encoder.layer.10.crossattention.self.query.bias', 'encoder.layer.9.crossattention.output.dense.bias', 'encoder.layer.0.crossattention.output.LayerNorm.weight', 'encoder.layer.0.crossattention.self.query.bias', 'encoder.layer.1.crossattention.self.value.bias', 'encoder.layer.0.crossattention.self.query.weight', 'encoder.layer.11.crossattention.output.LayerNorm.bias', 'encoder.layer.4.crossattention.output.LayerNorm.bias', 'encoder.layer.8.crossattention.output.dense.weight', 'encoder.layer.11.crossattention.self.value.bias', 'encoder.layer.5.crossattention.output.dense.weight', 'encoder.layer.9.crossattention.self.value.bias', 'encoder.layer.8.crossattention.output.LayerNorm.bias', 'encoder.layer.7.crossattention.self.value.weight', 'encoder.layer.6.crossattention.self.key.bias', 'encoder.layer.11.crossattention.output.dense.bias', 'encoder.layer.9.crossattention.output.LayerNorm.bias', 'encoder.layer.8.crossattention.self.key.bias', 'encoder.layer.3.crossattention.self.value.bias', 'encoder.layer.10.crossattention.self.value.bias', 'encoder.layer.7.crossattention.self.query.weight', 'encoder.layer.2.crossattention.self.value.bias', 'encoder.layer.10.crossattention.output.dense.weight', 'encoder.layer.7.crossattention.self.key.weight', 'encoder.layer.6.crossattention.self.query.bias', 'encoder.layer.2.crossattention.self.query.weight', 'encoder.layer.8.crossattention.self.query.weight', 'encoder.layer.3.crossattention.self.key.bias', 'encoder.layer.3.crossattention.output.LayerNorm.bias', 'encoder.layer.5.crossattention.self.value.weight', 'encoder.layer.2.crossattention.output.dense.bias', 'encoder.layer.3.crossattention.output.dense.weight', 'encoder.layer.4.crossattention.self.query.weight', 'encoder.layer.5.crossattention.self.key.bias', 'encoder.layer.8.crossattention.self.value.bias', 'encoder.layer.0.crossattention.self.key.bias', 'encoder.layer.3.crossattention.output.dense.bias', 'encoder.layer.1.crossattention.self.value.weight', 'encoder.layer.4.crossattention.output.dense.bias', 'encoder.layer.6.crossattention.output.LayerNorm.weight', 'encoder.layer.2.crossattention.self.query.bias', 'encoder.layer.10.crossattention.self.value.weight', 'encoder.layer.2.crossattention.output.LayerNorm.bias', 'encoder.layer.3.crossattention.self.key.weight', 'cls.predictions.bias', 'encoder.layer.2.crossattention.output.LayerNorm.weight', 'encoder.layer.11.crossattention.output.dense.weight', 'encoder.layer.5.crossattention.output.dense.bias', 'encoder.layer.2.crossattention.output.dense.weight', 'encoder.layer.11.crossattention.self.key.bias', 'encoder.layer.0.crossattention.output.LayerNorm.bias', 'encoder.layer.5.crossattention.self.query.bias', 'encoder.layer.1.crossattention.self.query.weight', 'encoder.layer.10.crossattention.self.key.weight', 'encoder.layer.10.crossattention.self.query.weight', 'encoder.layer.2.crossattention.self.value.weight', 'encoder.layer.9.crossattention.output.dense.weight', 'encoder.layer.9.crossattention.self.query.bias', 'encoder.layer.1.crossattention.output.LayerNorm.bias', 'encoder.layer.6.crossattention.self.key.weight', 'cls.predictions.transform.dense.bias', 'encoder.layer.10.crossattention.output.LayerNorm.weight', 'encoder.layer.9.crossattention.output.LayerNorm.weight', 'encoder.layer.6.crossattention.output.LayerNorm.bias', 'encoder.layer.1.crossattention.self.key.weight', 'encoder.layer.3.crossattention.self.query.bias', 'encoder.layer.4.crossattention.self.query.bias', 'encoder.layer.11.crossattention.self.value.weight', 'encoder.layer.3.crossattention.self.query.weight', 'encoder.layer.6.crossattention.output.dense.bias', 'encoder.layer.10.crossattention.output.LayerNorm.bias', 'encoder.layer.7.crossattention.self.value.bias', 'encoder.layer.8.crossattention.output.dense.bias', 'encoder.layer.1.crossattention.self.key.bias', 'encoder.layer.7.crossattention.output.LayerNorm.weight', 'encoder.layer.0.crossattention.self.key.weight', 'encoder.layer.11.crossattention.self.key.weight', 'encoder.layer.10.crossattention.output.dense.bias', 'encoder.layer.11.crossattention.self.query.weight', 'encoder.layer.5.crossattention.self.key.weight', 'encoder.layer.7.crossattention.output.dense.bias', 'encoder.layer.1.crossattention.output.dense.weight', 'encoder.layer.6.crossattention.self.value.weight', 'encoder.layer.3.crossattention.self.value.weight', 'encoder.layer.8.crossattention.self.query.bias', 'encoder.layer.0.crossattention.output.dense.bias', 'cls.predictions.transform.LayerNorm.weight', 'encoder.layer.7.crossattention.output.dense.weight', 'encoder.layer.5.crossattention.output.LayerNorm.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Some weights of BertForMaskedLM were not initialized from the model checkpoint at ./pretrained_weights/bert/bert-base-uncased and are newly initialized: ['encoder.layer.0.crossattention.self.query.bias', 'encoder.layer.1.crossattention.self.query.bias', 'encoder.layer.5.crossattention.self.value.bias', 'encoder.layer.5.crossattention.output.dense.bias', 'encoder.layer.9.crossattention.self.key.bias', 'encoder.layer.9.crossattention.output.LayerNorm.weight', 'encoder.layer.0.crossattention.output.dense.bias', 'encoder.layer.2.crossattention.self.query.bias', 'encoder.layer.1.crossattention.self.value.weight', 'encoder.layer.11.crossattention.output.dense.weight', 'encoder.layer.8.crossattention.output.LayerNorm.bias', 'encoder.layer.8.crossattention.self.key.bias', 'encoder.layer.4.crossattention.self.query.bias', 'encoder.layer.1.crossattention.output.dense.weight', 'encoder.layer.7.crossattention.self.query.weight', 'encoder.layer.6.crossattention.output.LayerNorm.bias', 'encoder.layer.7.crossattention.self.value.bias', 'encoder.layer.2.crossattention.self.query.weight', 'encoder.layer.11.crossattention.self.query.weight', 'encoder.layer.6.crossattention.self.key.weight', 'encoder.layer.2.crossattention.output.LayerNorm.weight', 'encoder.layer.0.crossattention.self.query.weight', 'encoder.layer.10.crossattention.output.LayerNorm.weight', 'encoder.layer.1.crossattention.self.value.bias', 'cls.predictions.transform.dense.bias', 'encoder.layer.4.crossattention.output.LayerNorm.bias', 'encoder.layer.3.crossattention.self.value.weight', 'encoder.layer.6.crossattention.output.dense.weight', 'encoder.layer.10.crossattention.output.dense.weight', 'cls.predictions.transform.dense.weight', 'encoder.layer.2.crossattention.output.dense.weight', 'encoder.layer.5.crossattention.output.dense.weight', 'encoder.layer.11.crossattention.self.key.weight', 'encoder.layer.3.crossattention.self.key.weight', 'encoder.layer.9.crossattention.output.dense.bias', 'encoder.layer.8.crossattention.output.LayerNorm.weight', 'encoder.layer.2.crossattention.self.value.weight', 'encoder.layer.0.crossattention.self.value.bias', 'encoder.layer.7.crossattention.output.dense.weight', 'encoder.layer.2.crossattention.output.LayerNorm.bias', 'encoder.layer.10.crossattention.self.key.weight', 'encoder.layer.3.crossattention.output.LayerNorm.bias', 'encoder.layer.11.crossattention.output.dense.bias', 'encoder.layer.9.crossattention.self.value.weight', 'encoder.layer.1.crossattention.self.query.weight', 'encoder.layer.7.crossattention.output.LayerNorm.weight', 'encoder.layer.4.crossattention.self.value.weight', 'encoder.layer.6.crossattention.self.value.bias', 'encoder.layer.7.crossattention.output.LayerNorm.bias', 'encoder.layer.10.crossattention.output.LayerNorm.bias', 'encoder.layer.1.crossattention.self.key.bias', 'encoder.layer.8.crossattention.output.dense.bias', 'encoder.layer.11.crossattention.self.key.bias', 'encoder.layer.1.crossattention.output.LayerNorm.weight', 'encoder.layer.2.crossattention.self.key.bias', 'encoder.layer.9.crossattention.output.dense.weight', 'encoder.layer.6.crossattention.output.LayerNorm.weight', 'encoder.layer.10.crossattention.self.query.bias', 'encoder.layer.5.crossattention.self.value.weight', 'encoder.layer.4.crossattention.self.query.weight', 'encoder.layer.3.crossattention.self.value.bias', 'encoder.layer.6.crossattention.self.query.bias', 'encoder.layer.8.crossattention.self.value.weight', 'encoder.layer.0.crossattention.self.key.weight', 'encoder.layer.5.crossattention.self.key.weight', 'encoder.layer.3.crossattention.self.query.weight', 'encoder.layer.3.crossattention.self.query.bias', 'encoder.layer.4.crossattention.output.LayerNorm.weight', 'encoder.layer.5.crossattention.self.key.bias', 'encoder.layer.9.crossattention.self.query.bias', 'encoder.layer.8.crossattention.self.value.bias', 'encoder.layer.7.crossattention.output.dense.bias', 'encoder.layer.11.crossattention.self.value.weight', 'encoder.layer.9.crossattention.self.key.weight', 'encoder.layer.1.crossattention.output.LayerNorm.bias', 'encoder.layer.8.crossattention.output.dense.weight', 'encoder.layer.9.crossattention.self.query.weight', 'encoder.layer.10.crossattention.self.value.bias', 'encoder.layer.3.crossattention.output.dense.bias', 'encoder.layer.9.crossattention.output.LayerNorm.bias', 'encoder.layer.2.crossattention.self.key.weight', 'encoder.layer.6.crossattention.self.value.weight', 'encoder.layer.6.crossattention.self.key.bias', 'encoder.layer.2.crossattention.output.dense.bias', 'encoder.layer.6.crossattention.output.dense.bias', 'cls.predictions.transform.LayerNorm.weight', 'encoder.layer.1.crossattention.self.key.weight', 'cls.predictions.transform.LayerNorm.bias', 'encoder.layer.0.crossattention.self.value.weight', 'encoder.layer.7.crossattention.self.key.bias', 'encoder.layer.6.crossattention.self.query.weight', 'encoder.layer.9.crossattention.self.value.bias', 'encoder.layer.5.crossattention.self.query.bias', 'encoder.layer.4.crossattention.self.key.bias', 'encoder.layer.0.crossattention.self.key.bias', 'encoder.layer.3.crossattention.output.LayerNorm.weight', 'encoder.layer.3.crossattention.self.key.bias', 'encoder.layer.10.crossattention.self.value.weight', 'encoder.layer.5.crossattention.output.LayerNorm.weight', 'encoder.layer.10.crossattention.self.key.bias', 'encoder.layer.10.crossattention.output.dense.bias', 'encoder.layer.11.crossattention.self.value.bias', 'encoder.layer.4.crossattention.output.dense.bias', 'encoder.layer.8.crossattention.self.key.weight', 'encoder.layer.4.crossattention.self.value.bias', 'encoder.layer.7.crossattention.self.value.weight', 'encoder.layer.4.crossattention.output.dense.weight', 'encoder.layer.0.crossattention.output.LayerNorm.weight', 'encoder.layer.7.crossattention.self.query.bias', 'encoder.layer.1.crossattention.output.dense.bias', 'encoder.layer.8.crossattention.self.query.weight', 'encoder.layer.4.crossattention.self.key.weight', 'encoder.layer.5.crossattention.output.LayerNorm.bias', 'encoder.layer.2.crossattention.self.value.bias', 'encoder.layer.0.crossattention.output.LayerNorm.bias', 'encoder.layer.11.crossattention.output.LayerNorm.weight', 'encoder.layer.8.crossattention.self.query.bias', 'encoder.layer.11.crossattention.self.query.bias', 'encoder.layer.11.crossattention.output.LayerNorm.bias', 'cls.predictions.bias', 'encoder.layer.7.crossattention.self.key.weight', 'encoder.layer.0.crossattention.output.dense.weight', 'encoder.layer.10.crossattention.self.query.weight', 'encoder.layer.5.crossattention.self.query.weight', 'encoder.layer.3.crossattention.output.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Some weights of BertForMaskedLM were not initialized from the model checkpoint at ./pretrained_weights/bert/bert-base-uncased and are newly initialized: ['encoder.layer.10.crossattention.output.LayerNorm.weight', 'encoder.layer.2.crossattention.self.value.weight', 'encoder.layer.6.crossattention.self.value.weight', 'encoder.layer.8.crossattention.output.dense.bias', 'encoder.layer.11.crossattention.self.key.weight', 'encoder.layer.5.crossattention.self.key.weight', 'encoder.layer.6.crossattention.self.value.bias', 'encoder.layer.8.crossattention.output.dense.weight', 'encoder.layer.4.crossattention.self.query.bias', 'encoder.layer.9.crossattention.output.dense.bias', 'encoder.layer.7.crossattention.self.key.weight', 'encoder.layer.3.crossattention.self.value.weight', 'encoder.layer.3.crossattention.self.value.bias', 'encoder.layer.0.crossattention.output.dense.bias', 'encoder.layer.2.crossattention.output.dense.weight', 'encoder.layer.9.crossattention.output.LayerNorm.weight', 'encoder.layer.8.crossattention.self.key.weight', 'encoder.layer.6.crossattention.output.LayerNorm.weight', 'encoder.layer.5.crossattention.self.value.bias', 'encoder.layer.7.crossattention.output.LayerNorm.weight', 'encoder.layer.4.crossattention.output.LayerNorm.weight', 'encoder.layer.8.crossattention.self.value.weight', 'encoder.layer.5.crossattention.self.key.bias', 'encoder.layer.9.crossattention.self.value.weight', 'encoder.layer.2.crossattention.self.key.weight', 'encoder.layer.11.crossattention.output.dense.weight', 'encoder.layer.10.crossattention.self.value.weight', 'encoder.layer.0.crossattention.self.value.weight', 'encoder.layer.3.crossattention.self.query.bias', 'cls.predictions.transform.dense.bias', 'encoder.layer.10.crossattention.output.dense.weight', 'encoder.layer.7.crossattention.self.key.bias', 'encoder.layer.9.crossattention.self.value.bias', 'encoder.layer.1.crossattention.self.key.weight', 'encoder.layer.1.crossattention.self.value.weight', 'encoder.layer.9.crossattention.output.dense.weight', 'encoder.layer.2.crossattention.output.LayerNorm.bias', 'cls.predictions.transform.LayerNorm.weight', 'encoder.layer.4.crossattention.output.dense.bias', 'encoder.layer.1.crossattention.self.value.bias', 'encoder.layer.3.crossattention.self.key.bias', 'encoder.layer.11.crossattention.self.query.bias', 'encoder.layer.4.crossattention.self.value.weight', 'encoder.layer.6.crossattention.output.dense.weight', 'encoder.layer.0.crossattention.self.key.bias', 'encoder.layer.3.crossattention.self.key.weight', 'encoder.layer.0.crossattention.output.LayerNorm.weight', 'encoder.layer.9.crossattention.self.query.weight', 'encoder.layer.3.crossattention.output.LayerNorm.weight', 'encoder.layer.7.crossattention.self.value.bias', 'encoder.layer.4.crossattention.self.query.weight', 'encoder.layer.7.crossattention.self.query.weight', 'encoder.layer.2.crossattention.output.LayerNorm.weight', 'encoder.layer.8.crossattention.self.key.bias', 'encoder.layer.11.crossattention.output.LayerNorm.weight', 'encoder.layer.2.crossattention.self.value.bias', 'encoder.layer.1.crossattention.output.dense.weight', 'encoder.layer.5.crossattention.self.value.weight', 'encoder.layer.1.crossattention.output.dense.bias', 'encoder.layer.1.crossattention.output.LayerNorm.weight', 'encoder.layer.9.crossattention.self.query.bias', 'encoder.layer.9.crossattention.self.key.weight', 'encoder.layer.6.crossattention.self.key.bias', 'encoder.layer.5.crossattention.output.dense.weight', 'encoder.layer.6.crossattention.self.query.bias', 'encoder.layer.5.crossattention.self.query.bias', 'encoder.layer.10.crossattention.self.value.bias', 'encoder.layer.8.crossattention.self.value.bias', 'encoder.layer.5.crossattention.output.dense.bias', 'encoder.layer.1.crossattention.output.LayerNorm.bias', 'encoder.layer.2.crossattention.self.query.bias', 'encoder.layer.4.crossattention.self.value.bias', 'encoder.layer.3.crossattention.output.dense.weight', 'encoder.layer.10.crossattention.output.dense.bias', 'encoder.layer.0.crossattention.self.value.bias', 'encoder.layer.7.crossattention.output.LayerNorm.bias', 'encoder.layer.8.crossattention.self.query.weight', 'encoder.layer.10.crossattention.self.query.bias', 'encoder.layer.7.crossattention.output.dense.weight', 'encoder.layer.10.crossattention.output.LayerNorm.bias', 'encoder.layer.6.crossattention.self.key.weight', 'encoder.layer.0.crossattention.self.key.weight', 'encoder.layer.11.crossattention.output.dense.bias', 'encoder.layer.0.crossattention.self.query.bias', 'encoder.layer.3.crossattention.self.query.weight', 'encoder.layer.10.crossattention.self.key.weight', 'encoder.layer.4.crossattention.self.key.bias', 'encoder.layer.11.crossattention.self.query.weight', 'encoder.layer.3.crossattention.output.dense.bias', 'cls.predictions.bias', 'encoder.layer.10.crossattention.self.query.weight', 'encoder.layer.5.crossattention.output.LayerNorm.bias', 'encoder.layer.2.crossattention.output.dense.bias', 'encoder.layer.2.crossattention.self.query.weight', 'encoder.layer.11.crossattention.self.key.bias', 'encoder.layer.6.crossattention.self.query.weight', 'encoder.layer.6.crossattention.output.LayerNorm.bias', 'encoder.layer.3.crossattention.output.LayerNorm.bias', 'encoder.layer.6.crossattention.output.dense.bias', 'encoder.layer.2.crossattention.self.key.bias', 'encoder.layer.8.crossattention.output.LayerNorm.bias', 'encoder.layer.4.crossattention.self.key.weight', 'encoder.layer.7.crossattention.self.query.bias', 'encoder.layer.5.crossattention.self.query.weight', 'encoder.layer.5.crossattention.output.LayerNorm.weight', 'encoder.layer.11.crossattention.output.LayerNorm.bias', 'encoder.layer.1.crossattention.self.query.bias', 'encoder.layer.1.crossattention.self.key.bias', 'encoder.layer.7.crossattention.output.dense.bias', 'encoder.layer.11.crossattention.self.value.weight', 'encoder.layer.8.crossattention.self.query.bias', 'encoder.layer.0.crossattention.output.dense.weight', 'encoder.layer.4.crossattention.output.dense.weight', 'encoder.layer.4.crossattention.output.LayerNorm.bias', 'encoder.layer.9.crossattention.self.key.bias', 'cls.predictions.transform.dense.weight', 'encoder.layer.1.crossattention.self.query.weight', 'encoder.layer.0.crossattention.output.LayerNorm.bias', 'encoder.layer.7.crossattention.self.value.weight', 'encoder.layer.10.crossattention.self.key.bias', 'encoder.layer.9.crossattention.output.LayerNorm.bias', 'encoder.layer.11.crossattention.self.value.bias', 'encoder.layer.0.crossattention.self.query.weight', 'encoder.layer.8.crossattention.output.LayerNorm.weight', 'cls.predictions.transform.LayerNorm.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Some weights of BertForMaskedLM were not initialized from the model checkpoint at ./pretrained_weights/bert/bert-base-uncased and are newly initialized: ['encoder.layer.4.crossattention.self.value.weight', 'encoder.layer.7.crossattention.self.query.bias', 'encoder.layer.6.crossattention.self.query.weight', 'encoder.layer.7.crossattention.self.key.bias', 'encoder.layer.9.crossattention.output.LayerNorm.weight', 'encoder.layer.0.crossattention.self.key.weight', 'encoder.layer.5.crossattention.self.query.bias', 'encoder.layer.8.crossattention.output.LayerNorm.bias', 'encoder.layer.3.crossattention.self.value.bias', 'encoder.layer.4.crossattention.output.dense.bias', 'encoder.layer.3.crossattention.output.LayerNorm.weight', 'encoder.layer.6.crossattention.output.dense.bias', 'encoder.layer.5.crossattention.self.value.bias', 'encoder.layer.10.crossattention.self.key.bias', 'encoder.layer.10.crossattention.self.query.bias', 'encoder.layer.7.crossattention.self.key.weight', 'encoder.layer.9.crossattention.self.value.bias', 'encoder.layer.2.crossattention.self.query.weight', 'encoder.layer.0.crossattention.output.LayerNorm.bias', 'encoder.layer.10.crossattention.self.key.weight', 'encoder.layer.8.crossattention.output.dense.bias', 'encoder.layer.4.crossattention.self.key.weight', 'encoder.layer.11.crossattention.self.value.weight', 'encoder.layer.3.crossattention.output.LayerNorm.bias', 'encoder.layer.5.crossattention.output.dense.weight', 'encoder.layer.4.crossattention.self.value.bias', 'encoder.layer.1.crossattention.output.LayerNorm.bias', 'encoder.layer.8.crossattention.output.dense.weight', 'encoder.layer.6.crossattention.self.query.bias', 'encoder.layer.8.crossattention.self.query.weight', 'encoder.layer.6.crossattention.output.dense.weight', 'encoder.layer.4.crossattention.output.LayerNorm.bias', 'encoder.layer.9.crossattention.output.dense.bias', 'encoder.layer.10.crossattention.output.LayerNorm.weight', 'cls.predictions.transform.dense.bias', 'cls.predictions.transform.dense.weight', 'encoder.layer.11.crossattention.self.value.bias', 'encoder.layer.8.crossattention.output.LayerNorm.weight', 'encoder.layer.11.crossattention.self.query.bias', 'encoder.layer.0.crossattention.output.dense.bias', 'encoder.layer.2.crossattention.output.dense.weight', 'encoder.layer.7.crossattention.self.value.weight', 'encoder.layer.1.crossattention.self.query.weight', 'encoder.layer.2.crossattention.output.LayerNorm.weight', 'encoder.layer.0.crossattention.self.value.bias', 'encoder.layer.5.crossattention.self.key.bias', 'encoder.layer.2.crossattention.output.dense.bias', 'encoder.layer.9.crossattention.self.query.weight', 'encoder.layer.1.crossattention.output.dense.weight', 'encoder.layer.8.crossattention.self.query.bias', 'encoder.layer.8.crossattention.self.key.bias', 'encoder.layer.9.crossattention.output.dense.weight', 'encoder.layer.7.crossattention.self.query.weight', 'encoder.layer.3.crossattention.self.query.bias', 'encoder.layer.11.crossattention.output.LayerNorm.weight', 'encoder.layer.2.crossattention.self.value.bias', 'encoder.layer.10.crossattention.output.dense.weight', 'encoder.layer.7.crossattention.self.value.bias', 'encoder.layer.11.crossattention.self.query.weight', 'encoder.layer.10.crossattention.output.dense.bias', 'encoder.layer.3.crossattention.self.key.weight', 'encoder.layer.1.crossattention.self.value.weight', 'encoder.layer.9.crossattention.self.query.bias', 'encoder.layer.4.crossattention.self.key.bias', 'encoder.layer.0.crossattention.self.value.weight', 'encoder.layer.11.crossattention.self.key.weight', 'encoder.layer.8.crossattention.self.value.weight', 'encoder.layer.1.crossattention.self.value.bias', 'encoder.layer.10.crossattention.self.value.bias', 'encoder.layer.4.crossattention.self.query.weight', 'encoder.layer.6.crossattention.self.key.weight', 'encoder.layer.5.crossattention.self.value.weight', 'encoder.layer.11.crossattention.output.LayerNorm.bias', 'encoder.layer.2.crossattention.output.LayerNorm.bias', 'encoder.layer.9.crossattention.output.LayerNorm.bias', 'encoder.layer.1.crossattention.self.key.weight', 'encoder.layer.6.crossattention.self.value.bias', 'encoder.layer.10.crossattention.self.query.weight', 'cls.predictions.transform.LayerNorm.weight', 'encoder.layer.5.crossattention.self.key.weight', 'encoder.layer.4.crossattention.output.dense.weight', 'encoder.layer.6.crossattention.self.key.bias', 'encoder.layer.11.crossattention.output.dense.weight', 'encoder.layer.8.crossattention.self.value.bias', 'cls.predictions.transform.LayerNorm.bias', 'encoder.layer.0.crossattention.self.query.bias', 'encoder.layer.2.crossattention.self.value.weight', 'encoder.layer.5.crossattention.output.dense.bias', 'encoder.layer.3.crossattention.self.value.weight', 'encoder.layer.3.crossattention.output.dense.weight', 'encoder.layer.1.crossattention.output.LayerNorm.weight', 'encoder.layer.2.crossattention.self.key.weight', 'encoder.layer.11.crossattention.output.dense.bias', 'encoder.layer.4.crossattention.output.LayerNorm.weight', 'encoder.layer.0.crossattention.self.query.weight', 'encoder.layer.9.crossattention.self.key.bias', 'encoder.layer.9.crossattention.self.value.weight', 'encoder.layer.3.crossattention.output.dense.bias', 'encoder.layer.10.crossattention.output.LayerNorm.bias', 'encoder.layer.6.crossattention.self.value.weight', 'encoder.layer.6.crossattention.output.LayerNorm.weight', 'encoder.layer.0.crossattention.output.dense.weight', 'encoder.layer.2.crossattention.self.query.bias', 'encoder.layer.3.crossattention.self.query.weight', 'encoder.layer.5.crossattention.output.LayerNorm.bias', 'encoder.layer.0.crossattention.output.LayerNorm.weight', 'encoder.layer.9.crossattention.self.key.weight', 'encoder.layer.1.crossattention.output.dense.bias', 'encoder.layer.1.crossattention.self.key.bias', 'encoder.layer.7.crossattention.output.dense.bias', 'encoder.layer.3.crossattention.self.key.bias', 'encoder.layer.6.crossattention.output.LayerNorm.bias', 'encoder.layer.5.crossattention.self.query.weight', 'encoder.layer.10.crossattention.self.value.weight', 'encoder.layer.7.crossattention.output.LayerNorm.weight', 'encoder.layer.8.crossattention.self.key.weight', 'encoder.layer.2.crossattention.self.key.bias', 'encoder.layer.7.crossattention.output.dense.weight', 'encoder.layer.11.crossattention.self.key.bias', 'encoder.layer.7.crossattention.output.LayerNorm.bias', 'encoder.layer.5.crossattention.output.LayerNorm.weight', 'encoder.layer.4.crossattention.self.query.bias', 'cls.predictions.bias', 'encoder.layer.1.crossattention.self.query.bias', 'encoder.layer.0.crossattention.self.key.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
09/20/2024 01:29:26 - INFO - __main__ -   load_from_pretrained: ./output/vast/pretrain_vast/downstream/finetuneVolume256batchlossonlyvolume4Mod120k/ckpt/model_step_459.pt
09/20/2024 01:29:26 - INFO - __main__ -   Load from pretrained dir ./output/vast/pretrain_vast/downstream/finetuneVolume256batchlossonlyvolume4Mod120k
09/20/2024 01:29:27 - INFO - __main__ -   Unexpected keys []
09/20/2024 01:29:27 - INFO - __main__ -   missing_keys  []
09/20/2024 01:29:29 - INFO - __main__ -   ==================learning_rate_settings==================

09/20/2024 01:29:29 - INFO - __main__ -     basic_lr : 2e-05
09/20/2024 01:29:29 - INFO - __main__ -     clip_lr_visual : 5e-07
09/20/2024 01:29:29 - INFO - __main__ -     clip_lr_visual_len : 245
09/20/2024 01:29:29 - INFO - __main__ -     new_lr : 0
09/20/2024 01:29:29 - INFO - __main__ -     new_params_name: []
09/20/2024 01:29:29 - INFO - __main__ -   evaluate on ret%tvas--msrvtt_ret task
09/20/2024 01:29:29 - INFO - __main__ -   start running ret%tvas validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torch/utils/checkpoint.py:31: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn("None of the inputs have requires_grad=True. Gradients will be None")
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torch/utils/checkpoint.py:31: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn("None of the inputs have requires_grad=True. Gradients will be None")
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torch/utils/checkpoint.py:31: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn("None of the inputs have requires_grad=True. Gradients will be None")
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torch/utils/checkpoint.py:31: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn("None of the inputs have requires_grad=True. Gradients will be None")
  0%|          | 0/221 [00:00<?, ?it/s]  0%|          | 1/221 [00:01<04:46,  1.30s/it]  1%|          | 2/221 [00:02<03:29,  1.04it/s]  1%|▏         | 3/221 [00:02<02:34,  1.41it/s]  2%|▏         | 4/221 [00:02<01:47,  2.01it/s]  2%|▏         | 5/221 [00:02<01:28,  2.45it/s]  3%|▎         | 6/221 [00:03<01:10,  3.05it/s]  3%|▎         | 7/221 [00:03<01:10,  3.05it/s]  4%|▎         | 8/221 [00:04<01:34,  2.24it/s]  4%|▍         | 9/221 [00:04<01:39,  2.12it/s]  5%|▍         | 10/221 [00:05<01:54,  1.85it/s]  5%|▍         | 11/221 [00:05<01:34,  2.21it/s]  5%|▌         | 12/221 [00:06<02:04,  1.67it/s]  6%|▌         | 13/221 [00:06<01:47,  1.93it/s]  6%|▋         | 14/221 [00:08<03:01,  1.14it/s]  7%|▋         | 15/221 [00:08<02:27,  1.39it/s]  7%|▋         | 16/221 [00:09<02:21,  1.45it/s]  8%|▊         | 17/221 [00:10<02:53,  1.17it/s]  8%|▊         | 18/221 [00:11<02:27,  1.38it/s]  9%|▊         | 19/221 [00:11<01:52,  1.80it/s]  9%|▉         | 20/221 [00:11<01:35,  2.10it/s] 10%|▉         | 21/221 [00:11<01:25,  2.35it/s] 10%|▉         | 22/221 [00:12<01:18,  2.54it/s] 11%|█         | 24/221 [00:12<00:54,  3.61it/s] 11%|█▏        | 25/221 [00:12<00:52,  3.74it/s] 12%|█▏        | 26/221 [00:13<01:19,  2.44it/s] 12%|█▏        | 27/221 [00:13<01:06,  2.91it/s] 13%|█▎        | 28/221 [00:14<01:40,  1.92it/s] 13%|█▎        | 29/221 [00:15<02:02,  1.57it/s] 14%|█▎        | 30/221 [00:16<01:49,  1.75it/s] 14%|█▍        | 31/221 [00:16<01:41,  1.88it/s] 14%|█▍        | 32/221 [00:16<01:17,  2.45it/s] 15%|█▍        | 33/221 [00:17<01:19,  2.37it/s] 15%|█▌        | 34/221 [00:17<01:10,  2.66it/s] 16%|█▌        | 35/221 [00:17<01:08,  2.70it/s] 16%|█▋        | 36/221 [00:18<01:16,  2.41it/s] 17%|█▋        | 37/221 [00:19<01:47,  1.71it/s] 17%|█▋        | 38/221 [00:19<01:50,  1.65it/s] 18%|█▊        | 39/221 [00:20<01:47,  1.70it/s] 18%|█▊        | 40/221 [00:20<01:46,  1.70it/s] 19%|█▊        | 41/221 [00:21<01:21,  2.21it/s] 19%|█▉        | 42/221 [00:21<01:37,  1.84it/s] 19%|█▉        | 43/221 [00:21<01:14,  2.38it/s] 20%|██        | 45/221 [00:23<01:44,  1.68it/s] 21%|██        | 46/221 [00:24<01:49,  1.60it/s] 21%|██▏       | 47/221 [00:25<02:05,  1.39it/s] 22%|██▏       | 48/221 [00:25<01:36,  1.78it/s] 22%|██▏       | 49/221 [00:25<01:37,  1.77it/s] 23%|██▎       | 50/221 [00:26<01:33,  1.83it/s] 23%|██▎       | 51/221 [00:26<01:12,  2.35it/s] 24%|██▎       | 52/221 [00:26<01:03,  2.67it/s] 24%|██▍       | 53/221 [00:27<00:54,  3.06it/s] 24%|██▍       | 54/221 [00:29<02:15,  1.23it/s] 25%|██▍       | 55/221 [00:29<01:55,  1.44it/s] 25%|██▌       | 56/221 [00:29<01:38,  1.68it/s] 26%|██▌       | 57/221 [00:30<01:24,  1.95it/s] 26%|██▌       | 58/221 [00:30<01:06,  2.44it/s] 27%|██▋       | 59/221 [00:30<01:01,  2.62it/s] 27%|██▋       | 60/221 [00:31<01:37,  1.65it/s] 28%|██▊       | 61/221 [00:32<01:24,  1.88it/s] 28%|██▊       | 62/221 [00:32<01:14,  2.14it/s] 29%|██▊       | 63/221 [00:32<01:11,  2.20it/s] 29%|██▉       | 64/221 [00:33<01:01,  2.54it/s] 29%|██▉       | 65/221 [00:33<00:58,  2.67it/s] 30%|██▉       | 66/221 [00:33<01:05,  2.38it/s] 30%|███       | 67/221 [00:34<01:20,  1.92it/s] 31%|███       | 68/221 [00:35<01:08,  2.22it/s] 31%|███       | 69/221 [00:36<01:39,  1.53it/s] 32%|███▏      | 70/221 [00:36<01:19,  1.89it/s] 32%|███▏      | 71/221 [00:37<01:32,  1.63it/s] 33%|███▎      | 72/221 [00:37<01:24,  1.77it/s] 33%|███▎      | 73/221 [00:38<01:25,  1.73it/s] 33%|███▎      | 74/221 [00:38<01:07,  2.16it/s] 34%|███▍      | 75/221 [00:39<01:21,  1.80it/s] 34%|███▍      | 76/221 [00:39<01:05,  2.21it/s] 35%|███▍      | 77/221 [00:39<01:04,  2.25it/s] 35%|███▌      | 78/221 [00:40<01:02,  2.28it/s] 36%|███▌      | 79/221 [00:41<01:19,  1.79it/s] 36%|███▌      | 80/221 [00:41<01:08,  2.05it/s] 37%|███▋      | 81/221 [00:41<01:07,  2.06it/s] 37%|███▋      | 82/221 [00:43<01:54,  1.22it/s] 38%|███▊      | 83/221 [00:44<01:42,  1.34it/s] 38%|███▊      | 84/221 [00:44<01:31,  1.49it/s] 39%|███▉      | 86/221 [00:45<01:10,  1.90it/s] 39%|███▉      | 87/221 [00:46<01:27,  1.53it/s] 40%|███▉      | 88/221 [00:47<01:33,  1.42it/s] 40%|████      | 89/221 [00:48<01:39,  1.33it/s] 41%|████      | 90/221 [00:48<01:26,  1.52it/s] 41%|████      | 91/221 [00:48<01:10,  1.85it/s] 42%|████▏     | 92/221 [00:49<01:02,  2.08it/s] 42%|████▏     | 93/221 [00:50<01:20,  1.60it/s] 43%|████▎     | 94/221 [00:50<01:09,  1.82it/s] 43%|████▎     | 95/221 [00:50<01:04,  1.96it/s] 43%|████▎     | 96/221 [00:51<01:01,  2.02it/s] 44%|████▍     | 97/221 [00:51<00:49,  2.51it/s] 44%|████▍     | 98/221 [00:51<00:50,  2.46it/s] 45%|████▍     | 99/221 [00:52<00:39,  3.06it/s] 45%|████▌     | 100/221 [00:52<00:42,  2.83it/s] 46%|████▌     | 101/221 [00:52<00:34,  3.45it/s] 46%|████▌     | 102/221 [00:53<00:55,  2.15it/s] 47%|████▋     | 103/221 [00:53<00:47,  2.48it/s] 47%|████▋     | 104/221 [00:53<00:39,  2.99it/s] 48%|████▊     | 105/221 [00:54<00:40,  2.85it/s] 48%|████▊     | 106/221 [00:55<01:10,  1.63it/s] 48%|████▊     | 107/221 [00:55<00:56,  2.03it/s] 49%|████▉     | 108/221 [00:55<00:47,  2.39it/s] 49%|████▉     | 109/221 [00:56<01:02,  1.80it/s] 50%|████▉     | 110/221 [00:57<01:00,  1.84it/s] 50%|█████     | 111/221 [00:58<01:10,  1.57it/s] 51%|█████     | 112/221 [00:58<00:56,  1.94it/s] 51%|█████     | 113/221 [00:58<00:56,  1.90it/s] 52%|█████▏    | 115/221 [00:59<00:35,  3.02it/s] 52%|█████▏    | 116/221 [01:06<03:26,  1.97s/it] 53%|█████▎    | 117/221 [01:06<02:43,  1.58s/it] 53%|█████▎    | 118/221 [01:07<02:11,  1.27s/it] 54%|█████▍    | 119/221 [01:07<01:48,  1.06s/it] 54%|█████▍    | 120/221 [01:08<01:32,  1.09it/s] 55%|█████▍    | 121/221 [01:08<01:08,  1.46it/s] 55%|█████▌    | 122/221 [01:08<00:56,  1.74it/s] 56%|█████▌    | 123/221 [01:08<00:45,  2.15it/s] 56%|█████▌    | 124/221 [01:09<00:40,  2.37it/s] 57%|█████▋    | 125/221 [01:09<00:47,  2.01it/s] 57%|█████▋    | 126/221 [01:10<00:50,  1.88it/s] 57%|█████▋    | 127/221 [01:11<00:59,  1.59it/s] 58%|█████▊    | 128/221 [01:11<01:02,  1.49it/s] 58%|█████▊    | 129/221 [01:12<00:49,  1.88it/s] 59%|█████▉    | 130/221 [01:12<00:47,  1.92it/s] 59%|█████▉    | 131/221 [01:12<00:38,  2.35it/s] 60%|█████▉    | 132/221 [01:13<00:35,  2.51it/s] 60%|██████    | 133/221 [01:13<00:42,  2.09it/s] 61%|██████    | 134/221 [01:14<00:37,  2.34it/s] 61%|██████    | 135/221 [01:14<00:39,  2.15it/s] 62%|██████▏   | 136/221 [01:15<00:45,  1.86it/s] 62%|██████▏   | 137/221 [01:15<00:40,  2.08it/s] 62%|██████▏   | 138/221 [01:16<00:44,  1.85it/s] 63%|██████▎   | 139/221 [01:17<00:53,  1.52it/s] 63%|██████▎   | 140/221 [01:17<00:49,  1.63it/s] 64%|██████▍   | 141/221 [01:18<00:44,  1.81it/s] 64%|██████▍   | 142/221 [01:18<00:42,  1.86it/s] 65%|██████▍   | 143/221 [01:19<00:47,  1.65it/s] 65%|██████▌   | 144/221 [01:20<00:42,  1.79it/s] 66%|██████▌   | 145/221 [01:20<00:32,  2.36it/s] 66%|██████▌   | 146/221 [01:20<00:26,  2.82it/s] 67%|██████▋   | 147/221 [01:20<00:25,  2.95it/s] 67%|██████▋   | 148/221 [01:21<00:30,  2.41it/s] 67%|██████▋   | 149/221 [01:21<00:26,  2.74it/s] 68%|██████▊   | 150/221 [01:21<00:25,  2.79it/s] 68%|██████▊   | 151/221 [01:24<01:05,  1.08it/s] 69%|██████▉   | 152/221 [01:27<01:47,  1.56s/it] 69%|██████▉   | 153/221 [01:27<01:25,  1.26s/it] 70%|██████▉   | 154/221 [01:28<01:09,  1.04s/it] 70%|███████   | 155/221 [01:28<00:54,  1.21it/s] 71%|███████   | 156/221 [01:28<00:44,  1.47it/s] 71%|███████   | 157/221 [01:31<01:13,  1.15s/it] 71%|███████▏  | 158/221 [01:31<00:58,  1.08it/s] 72%|███████▏  | 159/221 [01:31<00:45,  1.38it/s] 72%|███████▏  | 160/221 [01:32<00:38,  1.59it/s] 73%|███████▎  | 161/221 [01:32<00:28,  2.08it/s] 73%|███████▎  | 162/221 [01:33<00:32,  1.80it/s] 74%|███████▍  | 163/221 [01:33<00:29,  1.95it/s] 74%|███████▍  | 164/221 [01:34<00:31,  1.78it/s] 75%|███████▍  | 165/221 [01:34<00:25,  2.23it/s] 75%|███████▌  | 166/221 [01:35<00:30,  1.79it/s] 76%|███████▌  | 167/221 [01:35<00:26,  2.00it/s] 76%|███████▌  | 168/221 [01:37<00:44,  1.19it/s] 76%|███████▋  | 169/221 [01:37<00:34,  1.49it/s] 77%|███████▋  | 170/221 [01:38<00:33,  1.54it/s] 77%|███████▋  | 171/221 [01:38<00:33,  1.49it/s] 78%|███████▊  | 172/221 [01:39<00:27,  1.78it/s] 78%|███████▊  | 173/221 [01:39<00:22,  2.09it/s] 79%|███████▊  | 174/221 [01:39<00:21,  2.17it/s] 79%|███████▉  | 175/221 [01:40<00:23,  1.95it/s] 80%|███████▉  | 176/221 [01:40<00:21,  2.10it/s] 80%|████████  | 177/221 [01:41<00:18,  2.35it/s] 81%|████████  | 178/221 [01:41<00:17,  2.50it/s] 81%|████████  | 179/221 [01:42<00:20,  2.02it/s] 81%|████████▏ | 180/221 [01:42<00:16,  2.54it/s] 82%|████████▏ | 181/221 [01:42<00:14,  2.70it/s] 82%|████████▏ | 182/221 [01:42<00:13,  2.84it/s] 83%|████████▎ | 183/221 [01:43<00:13,  2.85it/s] 83%|████████▎ | 184/221 [01:43<00:15,  2.35it/s] 84%|████████▎ | 185/221 [01:44<00:13,  2.73it/s] 84%|████████▍ | 186/221 [01:45<00:18,  1.86it/s] 85%|████████▍ | 187/221 [01:45<00:15,  2.14it/s] 85%|████████▌ | 188/221 [01:45<00:15,  2.08it/s] 86%|████████▌ | 189/221 [01:46<00:16,  1.94it/s] 86%|████████▌ | 190/221 [01:47<00:17,  1.73it/s] 86%|████████▋ | 191/221 [01:47<00:13,  2.17it/s] 87%|████████▋ | 192/221 [01:47<00:11,  2.44it/s] 88%|████████▊ | 194/221 [01:49<00:17,  1.54it/s] 88%|████████▊ | 195/221 [01:49<00:14,  1.82it/s] 89%|████████▊ | 196/221 [01:50<00:16,  1.48it/s] 89%|████████▉ | 197/221 [01:51<00:13,  1.77it/s] 90%|████████▉ | 198/221 [01:51<00:12,  1.88it/s] 90%|█████████ | 199/221 [01:51<00:09,  2.23it/s] 90%|█████████ | 200/221 [01:52<00:09,  2.16it/s] 91%|█████████ | 201/221 [01:52<00:08,  2.23it/s] 91%|█████████▏| 202/221 [01:52<00:07,  2.47it/s] 92%|█████████▏| 203/221 [01:53<00:06,  2.67it/s] 92%|█████████▏| 204/221 [01:53<00:06,  2.51it/s] 93%|█████████▎| 205/221 [01:53<00:05,  2.98it/s] 93%|█████████▎| 206/221 [01:55<00:11,  1.34it/s] 94%|█████████▎| 207/221 [01:55<00:08,  1.60it/s] 94%|█████████▍| 208/221 [01:56<00:06,  1.93it/s] 95%|█████████▍| 209/221 [01:56<00:05,  2.01it/s] 95%|█████████▌| 210/221 [01:56<00:04,  2.51it/s] 95%|█████████▌| 211/221 [01:57<00:04,  2.03it/s] 96%|█████████▌| 212/221 [01:57<00:04,  2.23it/s] 96%|█████████▋| 213/221 [01:58<00:03,  2.30it/s] 97%|█████████▋| 214/221 [01:58<00:03,  2.09it/s] 97%|█████████▋| 215/221 [01:59<00:02,  2.24it/s] 98%|█████████▊| 216/221 [01:59<00:02,  2.07it/s] 98%|█████████▊| 217/221 [02:00<00:02,  1.74it/s] 99%|█████████▊| 218/221 [02:01<00:01,  1.60it/s] 99%|█████████▉| 219/221 [02:01<00:01,  1.78it/s]100%|█████████▉| 220/221 [02:06<00:01,  1.94s/it]100%|██████████| 221/221 [02:07<00:00,  1.45s/it]100%|██████████| 221/221 [02:07<00:00,  1.74it/s]
  0%|          | 0/221 [00:00<?, ?it/s]  0%|          | 1/221 [00:00<01:56,  1.89it/s]  1%|          | 2/221 [00:01<01:55,  1.89it/s]  1%|▏         | 3/221 [00:01<01:55,  1.89it/s]  2%|▏         | 4/221 [00:02<01:54,  1.89it/s]  2%|▏         | 5/221 [00:02<01:54,  1.89it/s]  3%|▎         | 6/221 [00:03<01:53,  1.89it/s]  3%|▎         | 7/221 [00:03<01:53,  1.89it/s]  4%|▎         | 8/221 [00:04<01:52,  1.89it/s]  4%|▍         | 9/221 [00:04<01:51,  1.89it/s]  5%|▍         | 10/221 [00:05<01:51,  1.89it/s]  5%|▍         | 11/221 [00:05<01:50,  1.89it/s]  5%|▌         | 12/221 [00:06<01:50,  1.89it/s]  6%|▌         | 13/221 [00:06<01:49,  1.89it/s]  6%|▋         | 14/221 [00:07<01:49,  1.89it/s]  7%|▋         | 15/221 [00:07<01:48,  1.89it/s]  7%|▋         | 16/221 [00:08<01:48,  1.89it/s]  8%|▊         | 17/221 [00:08<01:47,  1.89it/s]  8%|▊         | 18/221 [00:09<01:47,  1.89it/s]  9%|▊         | 19/221 [00:10<01:46,  1.89it/s]  9%|▉         | 20/221 [00:10<01:46,  1.89it/s] 10%|▉         | 21/221 [00:11<01:45,  1.89it/s] 10%|▉         | 22/221 [00:11<01:45,  1.89it/s] 10%|█         | 23/221 [00:12<01:44,  1.89it/s] 11%|█         | 24/221 [00:12<01:44,  1.89it/s] 11%|█▏        | 25/221 [00:13<01:43,  1.89it/s] 12%|█▏        | 26/221 [00:13<01:43,  1.89it/s] 12%|█▏        | 27/221 [00:14<01:42,  1.89it/s] 13%|█▎        | 28/221 [00:14<01:41,  1.89it/s] 13%|█▎        | 29/221 [00:15<01:41,  1.89it/s] 14%|█▎        | 30/221 [00:15<01:40,  1.89it/s] 14%|█▍        | 31/221 [00:16<01:40,  1.89it/s] 14%|█▍        | 32/221 [00:16<01:39,  1.89it/s] 15%|█▍        | 33/221 [00:17<01:39,  1.89it/s] 15%|█▌        | 34/221 [00:17<01:38,  1.89it/s] 16%|█▌        | 35/221 [00:18<01:38,  1.89it/s] 16%|█▋        | 36/221 [00:19<01:37,  1.89it/s] 17%|█▋        | 37/221 [00:19<01:37,  1.89it/s] 17%|█▋        | 38/221 [00:20<01:36,  1.89it/s] 18%|█▊        | 39/221 [00:20<01:36,  1.89it/s] 18%|█▊        | 40/221 [00:21<01:35,  1.89it/s] 19%|█▊        | 41/221 [00:21<01:35,  1.89it/s] 19%|█▉        | 42/221 [00:22<01:34,  1.89it/s] 19%|█▉        | 43/221 [00:22<01:34,  1.89it/s] 20%|█▉        | 44/221 [00:23<01:33,  1.89it/s] 20%|██        | 45/221 [00:23<01:32,  1.89it/s] 21%|██        | 46/221 [00:24<01:32,  1.89it/s] 21%|██▏       | 47/221 [00:24<01:31,  1.89it/s] 22%|██▏       | 48/221 [00:25<01:31,  1.89it/s] 22%|██▏       | 49/221 [00:25<01:30,  1.89it/s] 23%|██▎       | 50/221 [00:26<01:30,  1.89it/s] 23%|██▎       | 51/221 [00:26<01:29,  1.89it/s] 24%|██▎       | 52/221 [00:27<01:29,  1.89it/s] 24%|██▍       | 53/221 [00:27<01:28,  1.89it/s] 24%|██▍       | 54/221 [00:28<01:28,  1.89it/s] 25%|██▍       | 55/221 [00:29<01:27,  1.89it/s] 25%|██▌       | 56/221 [00:29<01:27,  1.89it/s] 26%|██▌       | 57/221 [00:30<01:26,  1.89it/s] 26%|██▌       | 58/221 [00:30<01:26,  1.89it/s] 27%|██▋       | 59/221 [00:31<01:25,  1.89it/s] 27%|██▋       | 60/221 [00:31<01:25,  1.89it/s] 28%|██▊       | 61/221 [00:32<01:24,  1.89it/s] 28%|██▊       | 62/221 [00:32<01:23,  1.89it/s] 29%|██▊       | 63/221 [00:33<01:23,  1.89it/s] 29%|██▉       | 64/221 [00:33<01:22,  1.89it/s] 29%|██▉       | 65/221 [00:34<01:22,  1.89it/s] 30%|██▉       | 66/221 [00:34<01:21,  1.89it/s] 30%|███       | 67/221 [00:35<01:21,  1.89it/s] 31%|███       | 68/221 [00:35<01:20,  1.89it/s] 31%|███       | 69/221 [00:36<01:20,  1.89it/s] 32%|███▏      | 70/221 [00:36<01:19,  1.89it/s] 32%|███▏      | 71/221 [00:37<01:19,  1.89it/s] 33%|███▎      | 72/221 [00:38<01:18,  1.89it/s] 33%|███▎      | 73/221 [00:38<01:18,  1.89it/s] 33%|███▎      | 74/221 [00:39<01:17,  1.89it/s] 34%|███▍      | 75/221 [00:39<01:17,  1.89it/s] 34%|███▍      | 76/221 [00:40<01:16,  1.89it/s] 35%|███▍      | 77/221 [00:40<01:16,  1.89it/s] 35%|███▌      | 78/221 [00:41<01:15,  1.89it/s] 36%|███▌      | 79/221 [00:41<01:15,  1.89it/s] 36%|███▌      | 80/221 [00:42<01:14,  1.89it/s] 37%|███▋      | 81/221 [00:42<01:13,  1.89it/s] 37%|███▋      | 82/221 [00:43<01:13,  1.89it/s] 38%|███▊      | 83/221 [00:43<01:12,  1.89it/s] 38%|███▊      | 84/221 [00:44<01:12,  1.89it/s] 38%|███▊      | 85/221 [00:44<01:11,  1.89it/s] 39%|███▉      | 86/221 [00:45<01:11,  1.89it/s] 39%|███▉      | 87/221 [00:45<01:10,  1.89it/s] 40%|███▉      | 88/221 [00:46<01:10,  1.89it/s] 40%|████      | 89/221 [00:47<01:09,  1.89it/s] 41%|████      | 90/221 [00:47<01:09,  1.89it/s] 41%|████      | 91/221 [00:48<01:08,  1.89it/s] 42%|████▏     | 92/221 [00:48<01:08,  1.89it/s] 42%|████▏     | 93/221 [00:49<01:07,  1.89it/s] 43%|████▎     | 94/221 [00:49<01:07,  1.89it/s] 43%|████▎     | 95/221 [00:50<01:06,  1.89it/s] 43%|████▎     | 96/221 [00:50<01:06,  1.89it/s] 44%|████▍     | 97/221 [00:51<01:05,  1.89it/s] 44%|████▍     | 98/221 [00:51<01:04,  1.89it/s] 45%|████▍     | 99/221 [00:52<01:04,  1.89it/s] 45%|████▌     | 100/221 [00:52<01:03,  1.89it/s] 46%|████▌     | 101/221 [00:53<01:03,  1.89it/s] 46%|████▌     | 102/221 [00:53<01:02,  1.89it/s] 47%|████▋     | 103/221 [00:54<01:02,  1.89it/s] 47%|████▋     | 104/221 [00:54<01:01,  1.89it/s] 48%|████▊     | 105/221 [00:55<01:01,  1.89it/s] 48%|████▊     | 106/221 [00:55<01:00,  1.89it/s] 48%|████▊     | 107/221 [00:56<01:00,  1.89it/s] 49%|████▉     | 108/221 [00:57<00:59,  1.89it/s] 49%|████▉     | 109/221 [00:57<00:59,  1.89it/s] 50%|████▉     | 110/221 [00:58<00:58,  1.89it/s] 50%|█████     | 111/221 [00:58<00:58,  1.89it/s] 51%|█████     | 112/221 [00:59<00:57,  1.89it/s] 51%|█████     | 113/221 [00:59<00:57,  1.89it/s] 52%|█████▏    | 114/221 [01:00<00:56,  1.89it/s] 52%|█████▏    | 115/221 [01:00<00:55,  1.89it/s] 52%|█████▏    | 116/221 [01:01<00:55,  1.89it/s] 53%|█████▎    | 117/221 [01:01<00:54,  1.89it/s] 53%|█████▎    | 118/221 [01:02<00:54,  1.89it/s] 54%|█████▍    | 119/221 [01:02<00:53,  1.89it/s] 54%|█████▍    | 120/221 [01:03<00:53,  1.89it/s] 55%|█████▍    | 121/221 [01:03<00:52,  1.89it/s] 55%|█████▌    | 122/221 [01:04<00:52,  1.89it/s] 56%|█████▌    | 123/221 [01:04<00:51,  1.89it/s] 56%|█████▌    | 124/221 [01:05<00:51,  1.89it/s] 57%|█████▋    | 125/221 [01:06<00:50,  1.89it/s] 57%|█████▋    | 126/221 [01:06<00:50,  1.89it/s] 57%|█████▋    | 127/221 [01:07<00:49,  1.89it/s] 58%|█████▊    | 128/221 [01:07<00:49,  1.89it/s] 58%|█████▊    | 129/221 [01:08<00:48,  1.89it/s] 59%|█████▉    | 130/221 [01:08<00:48,  1.89it/s] 59%|█████▉    | 131/221 [01:09<00:47,  1.89it/s] 60%|█████▉    | 132/221 [01:09<00:47,  1.89it/s] 60%|██████    | 133/221 [01:10<00:46,  1.89it/s] 61%|██████    | 134/221 [01:10<00:45,  1.89it/s] 61%|██████    | 135/221 [01:11<00:45,  1.89it/s] 62%|██████▏   | 136/221 [01:11<00:44,  1.89it/s] 62%|██████▏   | 137/221 [01:12<00:44,  1.89it/s] 62%|██████▏   | 138/221 [01:12<00:43,  1.89it/s] 63%|██████▎   | 139/221 [01:13<00:43,  1.89it/s] 63%|██████▎   | 140/221 [01:13<00:42,  1.89it/s] 64%|██████▍   | 141/221 [01:14<00:42,  1.89it/s] 64%|██████▍   | 142/221 [01:15<00:41,  1.89it/s] 65%|██████▍   | 143/221 [01:15<00:41,  1.89it/s] 65%|██████▌   | 144/221 [01:16<00:40,  1.89it/s] 66%|██████▌   | 145/221 [01:16<00:40,  1.89it/s] 66%|██████▌   | 146/221 [01:17<00:39,  1.89it/s] 67%|██████▋   | 147/221 [01:17<00:39,  1.89it/s] 67%|██████▋   | 148/221 [01:18<00:38,  1.89it/s] 67%|██████▋   | 149/221 [01:18<00:38,  1.89it/s] 68%|██████▊   | 150/221 [01:19<00:37,  1.89it/s] 68%|██████▊   | 151/221 [01:19<00:36,  1.89it/s] 69%|██████▉   | 152/221 [01:20<00:36,  1.89it/s] 69%|██████▉   | 153/221 [01:20<00:35,  1.89it/s] 70%|██████▉   | 154/221 [01:21<00:35,  1.89it/s] 70%|███████   | 155/221 [01:21<00:34,  1.89it/s] 71%|███████   | 156/221 [01:22<00:34,  1.89it/s] 71%|███████   | 157/221 [01:22<00:33,  1.89it/s] 71%|███████▏  | 158/221 [01:23<00:33,  1.89it/s] 72%|███████▏  | 159/221 [01:23<00:32,  1.89it/s] 72%|███████▏  | 160/221 [01:24<00:32,  1.89it/s] 73%|███████▎  | 161/221 [01:25<00:31,  1.89it/s] 73%|███████▎  | 162/221 [01:25<00:31,  1.89it/s] 74%|███████▍  | 163/221 [01:26<00:30,  1.89it/s] 74%|███████▍  | 164/221 [01:26<00:30,  1.89it/s] 75%|███████▍  | 165/221 [01:27<00:29,  1.89it/s] 75%|███████▌  | 166/221 [01:27<00:29,  1.89it/s] 76%|███████▌  | 167/221 [01:28<00:28,  1.89it/s] 76%|███████▌  | 168/221 [01:28<00:27,  1.89it/s] 76%|███████▋  | 169/221 [01:29<00:27,  1.89it/s] 77%|███████▋  | 170/221 [01:29<00:26,  1.89it/s] 77%|███████▋  | 171/221 [01:30<00:26,  1.89it/s] 78%|███████▊  | 172/221 [01:30<00:25,  1.89it/s] 78%|███████▊  | 173/221 [01:31<00:25,  1.89it/s] 79%|███████▊  | 174/221 [01:31<00:24,  1.89it/s] 79%|███████▉  | 175/221 [01:32<00:24,  1.89it/s] 80%|███████▉  | 176/221 [01:32<00:23,  1.89it/s] 80%|████████  | 177/221 [01:33<00:23,  1.89it/s] 81%|████████  | 178/221 [01:34<00:22,  1.89it/s] 81%|████████  | 179/221 [01:34<00:22,  1.89it/s] 81%|████████▏ | 180/221 [01:35<00:21,  1.89it/s] 82%|████████▏ | 181/221 [01:35<00:21,  1.89it/s] 82%|████████▏ | 182/221 [01:36<00:20,  1.89it/s] 83%|████████▎ | 183/221 [01:36<00:20,  1.89it/s] 83%|████████▎ | 184/221 [01:37<00:19,  1.89it/s] 84%|████████▎ | 185/221 [01:37<00:19,  1.89it/s] 84%|████████▍ | 186/221 [01:38<00:18,  1.89it/s] 85%|████████▍ | 187/221 [01:38<00:17,  1.89it/s] 85%|████████▌ | 188/221 [01:39<00:17,  1.89it/s] 86%|████████▌ | 189/221 [01:39<00:16,  1.89it/s] 86%|████████▌ | 190/221 [01:40<00:16,  1.89it/s] 86%|████████▋ | 191/221 [01:40<00:15,  1.89it/s] 87%|████████▋ | 192/221 [01:41<00:15,  1.89it/s] 87%|████████▋ | 193/221 [01:41<00:14,  1.89it/s] 88%|████████▊ | 194/221 [01:42<00:14,  1.89it/s] 88%|████████▊ | 195/221 [01:43<00:13,  1.89it/s] 89%|████████▊ | 196/221 [01:43<00:13,  1.89it/s] 89%|████████▉ | 197/221 [01:44<00:12,  1.89it/s] 90%|████████▉ | 198/221 [01:44<00:12,  1.89it/s] 90%|█████████ | 199/221 [01:45<00:11,  1.89it/s] 90%|█████████ | 200/221 [01:45<00:11,  1.89it/s] 91%|█████████ | 201/221 [01:46<00:10,  1.89it/s] 91%|█████████▏| 202/221 [01:46<00:10,  1.89it/s] 92%|█████████▏| 203/221 [01:47<00:09,  1.89it/s] 92%|█████████▏| 204/221 [01:47<00:08,  1.89it/s] 93%|█████████▎| 205/221 [01:48<00:08,  1.89it/s] 93%|█████████▎| 206/221 [01:48<00:07,  1.89it/s] 94%|█████████▎| 207/221 [01:49<00:07,  1.89it/s] 94%|█████████▍| 208/221 [01:49<00:06,  1.89it/s] 95%|█████████▍| 209/221 [01:50<00:06,  1.89it/s] 95%|█████████▌| 210/221 [01:50<00:05,  1.89it/s] 95%|█████████▌| 211/221 [01:51<00:05,  1.89it/s] 96%|█████████▌| 212/221 [01:51<00:04,  1.89it/s] 96%|█████████▋| 213/221 [01:52<00:04,  1.89it/s] 97%|█████████▋| 214/221 [01:53<00:03,  1.89it/s] 97%|█████████▋| 215/221 [01:53<00:03,  1.89it/s] 98%|█████████▊| 216/221 [01:54<00:02,  1.89it/s] 98%|█████████▊| 217/221 [01:54<00:02,  1.89it/s] 99%|█████████▊| 218/221 [01:55<00:01,  1.89it/s] 99%|█████████▉| 219/221 [01:55<00:01,  1.89it/s]100%|█████████▉| 220/221 [01:56<00:00,  1.89it/s]100%|██████████| 221/221 [01:56<00:00,  1.89it/s]100%|██████████| 221/221 [01:56<00:00,  1.89it/s]
09/20/2024 01:36:33 - INFO - __main__ -   ==== evaluation--ret%tvas--msrvtt_ret_ret_area_forward========

09/20/2024 01:36:33 - INFO - __main__ -   {'area_r1': 40.7, 'area_recall': '40.7/67.4/76.7', 'area_ravg': 61.6}
09/20/2024 01:36:33 - INFO - __main__ -   ==== evaluation--ret%tvas--msrvtt_ret_ret_area_backard========

09/20/2024 01:36:33 - INFO - __main__ -   {'forward_r1': 37.1, 'forward_recall': '37.1/65.4/76.2', 'forward_ravg': 59.6}
09/20/2024 01:36:33 - INFO - __main__ -   ==== evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video========

09/20/2024 01:36:33 - INFO - __main__ -   {'area_video_r1': 39.0, 'area_video_recall': '39.0/68.0/77.6', 'area_video_ravg': 61.5}
09/20/2024 01:36:33 - INFO - __main__ -   ==== evaluation--ret%tvas--msrvtt_ret_ret_itm_area========

09/20/2024 01:36:33 - INFO - __main__ -   {'area_video_r1': 55.3, 'area_video_recall': '55.3/76.1/83.8', 'area_video_ravg': 71.8, 'area_video_back_r1': 54.1, 'area_video_back_recall': '54.1/76.6/83.1', 'area_video_back_ravg': 71.3}
09/20/2024 01:36:33 - INFO - __main__ -   ==== evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas========

09/20/2024 01:36:33 - INFO - __main__ -   {'video_r1': 28.1, 'video_recall': '28.1/52.8/63.5', 'video_ravg': 48.1}
  0%|          | 0/9908 [00:00<?, ?it/s]/leonardo_scratch/fast/IscrC_GenOpt/giordano/VAST/utils/build_optimizer.py:171: UserWarning: This overload of add_ is deprecated:
	add_(Number alpha, Tensor other)
Consider using one of the following signatures instead:
	add_(Tensor other, *, Number alpha) (Triggered internally at ../torch/csrc/utils/python_arg_parser.cpp:1485.)
  exp_avg.mul_(beta1).add_(1.0 - beta1, grad)
/leonardo_scratch/fast/IscrC_GenOpt/giordano/VAST/utils/build_optimizer.py:171: UserWarning: This overload of add_ is deprecated:
	add_(Number alpha, Tensor other)
Consider using one of the following signatures instead:
	add_(Tensor other, *, Number alpha) (Triggered internally at ../torch/csrc/utils/python_arg_parser.cpp:1485.)
  exp_avg.mul_(beta1).add_(1.0 - beta1, grad)
/leonardo_scratch/fast/IscrC_GenOpt/giordano/VAST/utils/build_optimizer.py:171: UserWarning: This overload of add_ is deprecated:
	add_(Number alpha, Tensor other)
Consider using one of the following signatures instead:
	add_(Tensor other, *, Number alpha) (Triggered internally at ../torch/csrc/utils/python_arg_parser.cpp:1485.)
  exp_avg.mul_(beta1).add_(1.0 - beta1, grad)
/leonardo_scratch/fast/IscrC_GenOpt/giordano/VAST/utils/build_optimizer.py:171: UserWarning: This overload of add_ is deprecated:
	add_(Number alpha, Tensor other)
Consider using one of the following signatures instead:
	add_(Tensor other, *, Number alpha) (Triggered internally at ../torch/csrc/utils/python_arg_parser.cpp:1485.)
  exp_avg.mul_(beta1).add_(1.0 - beta1, grad)
  0%|          | 1/9908 [00:05<13:49:48,  5.03s/it]  0%|          | 2/9908 [00:08<12:02:59,  4.38s/it]  0%|          | 3/9908 [00:12<11:02:08,  4.01s/it]  0%|          | 4/9908 [00:16<10:32:02,  3.83s/it]  0%|          | 5/9908 [00:19<10:09:04,  3.69s/it]  0%|          | 6/9908 [00:23<10:04:55,  3.67s/it]  0%|          | 7/9908 [00:27<10:24:11,  3.78s/it]  0%|          | 8/9908 [00:31<10:32:04,  3.83s/it]  0%|          | 9/9908 [00:34<10:21:00,  3.76s/it]  0%|          | 10/9908 [00:38<10:03:03,  3.66s/it]  0%|          | 11/9908 [00:41<9:52:46,  3.59s/it]   0%|          | 12/9908 [00:45<10:17:30,  3.74s/it]  0%|          | 13/9908 [00:49<10:31:47,  3.83s/it]  0%|          | 14/9908 [00:53<10:39:39,  3.88s/it]  0%|          | 15/9908 [00:57<10:19:38,  3.76s/it]  0%|          | 16/9908 [01:00<10:08:50,  3.69s/it]  0%|          | 17/9908 [01:04<10:15:56,  3.74s/it]  0%|          | 18/9908 [01:08<10:36:02,  3.86s/it]  0%|          | 19/9908 [01:12<10:22:11,  3.78s/it]  0%|          | 20/9908 [01:16<10:24:50,  3.79s/it]  0%|          | 21/9908 [01:19<10:24:48,  3.79s/it]  0%|          | 22/9908 [01:23<10:20:15,  3.76s/it]  0%|          | 23/9908 [01:27<10:11:13,  3.71s/it]  0%|          | 24/9908 [01:31<10:19:31,  3.76s/it]  0%|          | 25/9908 [01:35<10:29:11,  3.82s/it]  0%|          | 26/9908 [01:38<10:19:47,  3.76s/it]  0%|          | 27/9908 [01:42<10:15:36,  3.74s/it]  0%|          | 28/9908 [01:45<9:59:59,  3.64s/it]   0%|          | 29/9908 [01:49<9:51:15,  3.59s/it]  0%|          | 30/9908 [01:52<9:53:32,  3.61s/it]  0%|          | 31/9908 [01:56<10:11:48,  3.72s/it]  0%|          | 32/9908 [02:00<10:09:40,  3.70s/it]  0%|          | 33/9908 [02:04<10:13:57,  3.73s/it]  0%|          | 34/9908 [02:07<9:51:22,  3.59s/it]   0%|          | 35/9908 [02:11<9:58:23,  3.64s/it]  0%|          | 36/9908 [02:15<10:01:56,  3.66s/it]  0%|          | 37/9908 [02:19<10:31:44,  3.84s/it]  0%|          | 38/9908 [02:22<10:23:32,  3.79s/it]  0%|          | 39/9908 [02:26<10:16:22,  3.75s/it]  0%|          | 40/9908 [02:30<10:00:32,  3.65s/it]  0%|          | 41/9908 [02:34<10:16:33,  3.75s/it]  0%|          | 42/9908 [02:38<10:43:50,  3.92s/it]  0%|          | 43/9908 [02:42<10:39:51,  3.89s/it]  0%|          | 44/9908 [02:45<10:15:36,  3.74s/it]  0%|          | 45/9908 [02:49<10:18:11,  3.76s/it]  0%|          | 46/9908 [02:53<10:26:30,  3.81s/it]  0%|          | 47/9908 [02:57<10:38:43,  3.89s/it]  0%|          | 48/9908 [03:00<10:24:25,  3.80s/it]  0%|          | 49/9908 [03:04<10:28:44,  3.83s/it]09/20/2024 01:39:39 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04493037611246109, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.6509122848510742, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.6958426237106323}
  1%|          | 50/9908 [03:08<10:32:49,  3.85s/it]  1%|          | 51/9908 [03:12<10:29:39,  3.83s/it]  1%|          | 52/9908 [03:16<10:14:02,  3.74s/it]  1%|          | 53/9908 [03:19<10:16:50,  3.76s/it]  1%|          | 54/9908 [03:23<10:36:57,  3.88s/it]  1%|          | 55/9908 [03:27<10:30:18,  3.84s/it]  1%|          | 56/9908 [03:31<10:25:39,  3.81s/it]  1%|          | 57/9908 [03:35<10:22:54,  3.79s/it]  1%|          | 58/9908 [03:38<10:20:01,  3.78s/it]  1%|          | 59/9908 [03:42<10:16:02,  3.75s/it]  1%|          | 60/9908 [03:46<10:31:26,  3.85s/it]  1%|          | 61/9908 [03:50<10:18:43,  3.77s/it]  1%|          | 62/9908 [03:53<10:09:29,  3.71s/it]  1%|          | 63/9908 [03:57<10:11:32,  3.73s/it]  1%|          | 64/9908 [04:01<10:06:07,  3.69s/it]  1%|          | 65/9908 [04:04<10:02:59,  3.68s/it]  1%|          | 66/9908 [04:08<10:06:54,  3.70s/it]  1%|          | 67/9908 [04:12<10:05:21,  3.69s/it]  1%|          | 68/9908 [04:15<10:02:08,  3.67s/it]  1%|          | 69/9908 [04:19<10:12:59,  3.74s/it]  1%|          | 70/9908 [04:23<10:01:00,  3.67s/it]  1%|          | 71/9908 [04:27<10:11:50,  3.73s/it]  1%|          | 72/9908 [04:31<10:31:52,  3.85s/it]  1%|          | 73/9908 [04:34<10:16:25,  3.76s/it]  1%|          | 74/9908 [04:38<10:12:30,  3.74s/it]  1%|          | 75/9908 [04:42<10:04:02,  3.69s/it]  1%|          | 76/9908 [04:46<10:18:42,  3.78s/it]  1%|          | 77/9908 [04:49<10:08:14,  3.71s/it]  1%|          | 78/9908 [04:53<10:31:41,  3.86s/it]  1%|          | 79/9908 [04:57<10:20:10,  3.79s/it]  1%|          | 80/9908 [05:01<10:17:21,  3.77s/it]  1%|          | 81/9908 [05:04<10:10:27,  3.73s/it]  1%|          | 82/9908 [05:08<10:04:22,  3.69s/it]  1%|          | 83/9908 [05:12<10:20:55,  3.79s/it]  1%|          | 84/9908 [05:16<10:20:40,  3.79s/it]  1%|          | 85/9908 [05:19<10:10:39,  3.73s/it]  1%|          | 86/9908 [05:24<10:32:55,  3.87s/it]  1%|          | 87/9908 [05:27<10:22:35,  3.80s/it]  1%|          | 88/9908 [05:31<10:20:32,  3.79s/it]  1%|          | 89/9908 [05:35<10:25:02,  3.82s/it]  1%|          | 90/9908 [05:39<10:40:03,  3.91s/it]  1%|          | 91/9908 [05:43<10:20:55,  3.80s/it]  1%|          | 92/9908 [05:46<10:04:32,  3.70s/it]  1%|          | 93/9908 [05:50<10:05:26,  3.70s/it]  1%|          | 94/9908 [05:54<10:20:16,  3.79s/it]  1%|          | 95/9908 [05:57<10:14:48,  3.76s/it]  1%|          | 96/9908 [06:01<10:10:02,  3.73s/it]  1%|          | 97/9908 [06:05<10:08:03,  3.72s/it]  1%|          | 98/9908 [06:08<10:00:37,  3.67s/it]  1%|          | 99/9908 [06:12<9:47:27,  3.59s/it] 09/20/2024 01:42:46 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.01230157446116209, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.0760436058044434, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.0883451700210571}
  1%|          | 100/9908 [06:15<9:45:54,  3.58s/it]  1%|          | 101/9908 [06:20<10:19:24,  3.79s/it]  1%|          | 102/9908 [06:23<10:20:38,  3.80s/it]  1%|          | 103/9908 [06:27<10:23:07,  3.81s/it]  1%|          | 104/9908 [06:31<10:13:57,  3.76s/it]  1%|          | 105/9908 [06:35<10:19:09,  3.79s/it]  1%|          | 106/9908 [06:38<10:15:42,  3.77s/it]  1%|          | 107/9908 [06:42<9:58:01,  3.66s/it]   1%|          | 108/9908 [06:46<9:59:43,  3.67s/it]  1%|          | 109/9908 [06:49<10:09:40,  3.73s/it]  1%|          | 110/9908 [06:53<10:08:53,  3.73s/it]  1%|          | 111/9908 [06:57<10:05:18,  3.71s/it]  1%|          | 112/9908 [07:01<10:31:24,  3.87s/it]  1%|          | 113/9908 [07:05<10:22:35,  3.81s/it]  1%|          | 114/9908 [07:08<10:13:24,  3.76s/it]  1%|          | 115/9908 [07:12<9:53:06,  3.63s/it]   1%|          | 116/9908 [07:16<10:10:15,  3.74s/it]  1%|          | 117/9908 [07:19<10:11:02,  3.74s/it]  1%|          | 118/9908 [07:23<10:15:46,  3.77s/it]  1%|          | 119/9908 [07:27<10:04:46,  3.71s/it]  1%|          | 120/9908 [07:30<9:49:04,  3.61s/it]   1%|          | 121/9908 [07:34<9:57:10,  3.66s/it]  1%|          | 122/9908 [07:38<10:07:28,  3.72s/it]  1%|          | 123/9908 [07:42<10:12:17,  3.75s/it]  1%|▏         | 124/9908 [07:45<10:09:16,  3.74s/it]  1%|▏         | 125/9908 [07:49<10:12:26,  3.76s/it]  1%|▏         | 126/9908 [07:53<10:05:32,  3.71s/it]  1%|▏         | 127/9908 [07:57<10:11:11,  3.75s/it]  1%|▏         | 128/9908 [08:00<10:12:29,  3.76s/it]  1%|▏         | 129/9908 [08:04<10:06:40,  3.72s/it]  1%|▏         | 130/9908 [08:08<10:08:15,  3.73s/it]  1%|▏         | 131/9908 [08:11<10:02:38,  3.70s/it]  1%|▏         | 132/9908 [08:15<9:59:11,  3.68s/it]   1%|▏         | 133/9908 [08:19<10:03:28,  3.70s/it]  1%|▏         | 134/9908 [08:23<10:08:45,  3.74s/it]  1%|▏         | 135/9908 [08:26<10:07:40,  3.73s/it]  1%|▏         | 136/9908 [08:30<10:16:35,  3.79s/it]  1%|▏         | 137/9908 [08:34<10:10:54,  3.75s/it]  1%|▏         | 138/9908 [08:38<10:10:59,  3.75s/it]  1%|▏         | 139/9908 [08:41<10:00:56,  3.69s/it]  1%|▏         | 140/9908 [08:45<10:00:33,  3.69s/it]  1%|▏         | 141/9908 [08:49<10:04:23,  3.71s/it]  1%|▏         | 142/9908 [08:52<10:03:46,  3.71s/it]  1%|▏         | 143/9908 [08:56<9:57:49,  3.67s/it]   1%|▏         | 144/9908 [08:59<9:41:03,  3.57s/it]  1%|▏         | 145/9908 [09:03<10:02:28,  3.70s/it]  1%|▏         | 146/9908 [09:07<10:07:35,  3.73s/it]  1%|▏         | 147/9908 [09:11<10:21:34,  3.82s/it]  1%|▏         | 148/9908 [09:15<10:09:59,  3.75s/it]  2%|▏         | 149/9908 [09:18<9:59:15,  3.68s/it] 09/20/2024 01:45:53 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.052086230367422104, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.513878345489502, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 2.565964460372925}
  2%|▏         | 150/9908 [09:22<9:55:19,  3.66s/it]  2%|▏         | 151/9908 [09:26<10:03:24,  3.71s/it]  2%|▏         | 152/9908 [09:29<10:01:34,  3.70s/it]  2%|▏         | 153/9908 [09:33<10:08:12,  3.74s/it]  2%|▏         | 154/9908 [09:37<10:09:08,  3.75s/it]  2%|▏         | 155/9908 [09:41<10:21:56,  3.83s/it]  2%|▏         | 156/9908 [09:45<10:07:37,  3.74s/it]  2%|▏         | 157/9908 [09:48<10:04:21,  3.72s/it]  2%|▏         | 158/9908 [09:52<10:05:03,  3.72s/it]  2%|▏         | 159/9908 [09:56<10:06:58,  3.74s/it]  2%|▏         | 160/9908 [09:59<10:08:55,  3.75s/it]  2%|▏         | 161/9908 [10:03<10:08:43,  3.75s/it]  2%|▏         | 162/9908 [10:07<9:49:56,  3.63s/it]   2%|▏         | 163/9908 [10:11<10:18:51,  3.81s/it]  2%|▏         | 164/9908 [10:14<9:54:16,  3.66s/it]   2%|▏         | 165/9908 [10:18<10:13:11,  3.78s/it]  2%|▏         | 166/9908 [10:22<10:12:17,  3.77s/it]  2%|▏         | 167/9908 [10:26<10:16:17,  3.80s/it]  2%|▏         | 168/9908 [10:29<10:08:30,  3.75s/it]  2%|▏         | 169/9908 [10:33<9:48:55,  3.63s/it]   2%|▏         | 170/9908 [10:36<9:50:31,  3.64s/it]  2%|▏         | 171/9908 [10:40<9:52:56,  3.65s/it]  2%|▏         | 172/9908 [10:44<10:04:22,  3.72s/it]  2%|▏         | 173/9908 [10:48<9:59:58,  3.70s/it]   2%|▏         | 174/9908 [10:51<10:05:24,  3.73s/it]  2%|▏         | 175/9908 [10:55<10:01:35,  3.71s/it]  2%|▏         | 176/9908 [10:59<9:50:15,  3.64s/it]   2%|▏         | 177/9908 [11:02<9:52:45,  3.65s/it]  2%|▏         | 178/9908 [11:06<10:10:03,  3.76s/it]  2%|▏         | 179/9908 [11:10<10:02:30,  3.72s/it]  2%|▏         | 180/9908 [11:14<10:08:38,  3.75s/it]  2%|▏         | 181/9908 [11:17<10:07:09,  3.75s/it]  2%|▏         | 182/9908 [11:21<10:01:30,  3.71s/it]  2%|▏         | 183/9908 [11:25<10:08:38,  3.76s/it]  2%|▏         | 184/9908 [11:29<10:01:33,  3.71s/it]  2%|▏         | 185/9908 [11:33<10:16:24,  3.80s/it]  2%|▏         | 186/9908 [11:37<10:26:32,  3.87s/it]  2%|▏         | 187/9908 [11:40<10:10:05,  3.77s/it]  2%|▏         | 188/9908 [11:44<10:00:27,  3.71s/it]  2%|▏         | 189/9908 [11:48<10:04:37,  3.73s/it]  2%|▏         | 190/9908 [11:51<10:10:23,  3.77s/it]  2%|▏         | 191/9908 [11:55<10:19:59,  3.83s/it]  2%|▏         | 192/9908 [12:00<10:41:01,  3.96s/it]  2%|▏         | 193/9908 [12:03<10:21:44,  3.84s/it]  2%|▏         | 194/9908 [12:07<10:05:11,  3.74s/it]  2%|▏         | 195/9908 [12:10<10:10:13,  3.77s/it]  2%|▏         | 196/9908 [12:14<9:57:20,  3.69s/it]   2%|▏         | 197/9908 [12:18<9:57:32,  3.69s/it]  2%|▏         | 198/9908 [12:21<9:49:25,  3.64s/it]  2%|▏         | 199/9908 [12:25<9:32:45,  3.54s/it]09/20/2024 01:48:59 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.0359707809984684, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.4293638467788696, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.4653346538543701}
  2%|▏         | 200/9908 [12:28<9:53:22,  3.67s/it]  2%|▏         | 201/9908 [12:32<10:00:03,  3.71s/it]  2%|▏         | 202/9908 [12:36<9:51:36,  3.66s/it]   2%|▏         | 203/9908 [12:40<10:04:20,  3.74s/it]  2%|▏         | 204/9908 [12:43<9:42:48,  3.60s/it]   2%|▏         | 205/9908 [12:47<9:49:18,  3.64s/it]  2%|▏         | 206/9908 [12:50<9:36:14,  3.56s/it]  2%|▏         | 207/9908 [12:54<9:38:47,  3.58s/it]  2%|▏         | 208/9908 [12:58<10:01:23,  3.72s/it]  2%|▏         | 209/9908 [13:02<10:11:15,  3.78s/it]  2%|▏         | 210/9908 [13:06<10:29:06,  3.89s/it]  2%|▏         | 211/9908 [13:10<10:27:16,  3.88s/it]  2%|▏         | 212/9908 [13:13<10:13:21,  3.80s/it]  2%|▏         | 213/9908 [13:17<10:03:43,  3.74s/it]  2%|▏         | 214/9908 [13:21<9:55:28,  3.69s/it]   2%|▏         | 215/9908 [13:24<9:38:03,  3.58s/it]  2%|▏         | 216/9908 [13:28<10:05:56,  3.75s/it]  2%|▏         | 217/9908 [13:32<10:02:01,  3.73s/it]  2%|▏         | 218/9908 [13:35<9:59:54,  3.71s/it]   2%|▏         | 219/9908 [13:39<10:10:35,  3.78s/it]  2%|▏         | 220/9908 [13:43<9:49:59,  3.65s/it]   2%|▏         | 221/9908 [13:46<9:52:28,  3.67s/it]  2%|▏         | 222/9908 [13:51<10:16:59,  3.82s/it]  2%|▏         | 223/9908 [13:54<10:05:44,  3.75s/it]  2%|▏         | 224/9908 [13:58<9:53:15,  3.68s/it]   2%|▏         | 225/9908 [14:01<9:57:54,  3.70s/it]  2%|▏         | 226/9908 [14:05<9:59:40,  3.72s/it]  2%|▏         | 227/9908 [14:09<9:52:36,  3.67s/it]  2%|▏         | 228/9908 [14:12<9:47:07,  3.64s/it]  2%|▏         | 229/9908 [14:16<9:50:46,  3.66s/it]  2%|▏         | 230/9908 [14:20<9:53:53,  3.68s/it]  2%|▏         | 231/9908 [14:24<10:02:02,  3.73s/it]  2%|▏         | 232/9908 [14:27<9:49:43,  3.66s/it]   2%|▏         | 233/9908 [14:31<9:46:50,  3.64s/it]  2%|▏         | 234/9908 [14:35<10:13:55,  3.81s/it]  2%|▏         | 235/9908 [14:39<10:12:55,  3.80s/it]  2%|▏         | 236/9908 [14:43<10:37:53,  3.96s/it]  2%|▏         | 237/9908 [14:46<10:05:02,  3.75s/it]  2%|▏         | 238/9908 [14:50<10:01:13,  3.73s/it]  2%|▏         | 239/9908 [14:54<10:21:09,  3.85s/it]  2%|▏         | 240/9908 [14:58<10:04:17,  3.75s/it]  2%|▏         | 241/9908 [15:01<10:04:20,  3.75s/it]  2%|▏         | 242/9908 [15:05<10:01:22,  3.73s/it]  2%|▏         | 243/9908 [15:09<9:59:23,  3.72s/it]   2%|▏         | 244/9908 [15:12<9:54:29,  3.69s/it]  2%|▏         | 245/9908 [15:16<9:39:41,  3.60s/it]  2%|▏         | 246/9908 [15:19<9:36:00,  3.58s/it]  2%|▏         | 247/9908 [15:23<9:44:06,  3.63s/it]  3%|▎         | 248/9908 [15:27<10:07:48,  3.78s/it]  3%|▎         | 249/9908 [15:31<9:53:35,  3.69s/it] 09/20/2024 01:52:05 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.02954036369919777, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.4096237421035767, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.439164161682129}
  3%|▎         | 250/9908 [15:34<9:52:58,  3.68s/it]  3%|▎         | 251/9908 [15:38<10:13:59,  3.81s/it]  3%|▎         | 252/9908 [15:42<9:50:59,  3.67s/it]   3%|▎         | 253/9908 [15:45<9:33:52,  3.57s/it]  3%|▎         | 254/9908 [15:49<9:56:34,  3.71s/it]  3%|▎         | 255/9908 [15:53<10:08:22,  3.78s/it]  3%|▎         | 256/9908 [15:56<9:47:51,  3.65s/it]   3%|▎         | 257/9908 [16:00<9:51:27,  3.68s/it]  3%|▎         | 258/9908 [16:04<9:57:24,  3.71s/it]  3%|▎         | 259/9908 [16:08<10:16:27,  3.83s/it]  3%|▎         | 260/9908 [16:12<10:15:29,  3.83s/it]  3%|▎         | 261/9908 [16:15<10:04:17,  3.76s/it]  3%|▎         | 262/9908 [16:19<9:48:37,  3.66s/it]   3%|▎         | 263/9908 [16:23<10:05:23,  3.77s/it]  3%|▎         | 264/9908 [16:27<10:07:16,  3.78s/it]  3%|▎         | 265/9908 [16:31<10:26:49,  3.90s/it]  3%|▎         | 266/9908 [16:35<10:14:33,  3.82s/it]  3%|▎         | 267/9908 [16:38<10:11:18,  3.80s/it]  3%|▎         | 268/9908 [16:42<10:12:49,  3.81s/it]  3%|▎         | 269/9908 [16:46<10:12:10,  3.81s/it]  3%|▎         | 270/9908 [16:50<10:18:09,  3.85s/it]  3%|▎         | 271/9908 [16:54<10:13:24,  3.82s/it]  3%|▎         | 272/9908 [16:57<10:02:56,  3.75s/it]  3%|▎         | 273/9908 [17:01<9:48:03,  3.66s/it]   3%|▎         | 274/9908 [17:04<9:37:46,  3.60s/it]  3%|▎         | 275/9908 [17:08<9:48:58,  3.67s/it]  3%|▎         | 276/9908 [17:12<9:53:37,  3.70s/it]  3%|▎         | 277/9908 [17:15<9:57:20,  3.72s/it]  3%|▎         | 278/9908 [17:19<9:53:57,  3.70s/it]  3%|▎         | 279/9908 [17:23<9:46:58,  3.66s/it]  3%|▎         | 280/9908 [17:26<9:52:07,  3.69s/it]  3%|▎         | 281/9908 [17:30<9:37:47,  3.60s/it]  3%|▎         | 282/9908 [17:33<9:32:24,  3.57s/it]  3%|▎         | 283/9908 [17:37<9:57:55,  3.73s/it]  3%|▎         | 284/9908 [17:41<10:05:12,  3.77s/it]  3%|▎         | 285/9908 [17:45<9:49:18,  3.67s/it]   3%|▎         | 286/9908 [17:48<9:46:39,  3.66s/it]  3%|▎         | 287/9908 [17:52<10:03:04,  3.76s/it]  3%|▎         | 288/9908 [17:57<10:21:52,  3.88s/it]  3%|▎         | 289/9908 [18:00<10:02:54,  3.76s/it]  3%|▎         | 290/9908 [18:04<9:58:50,  3.74s/it]   3%|▎         | 291/9908 [18:07<10:00:02,  3.74s/it]  3%|▎         | 292/9908 [18:11<9:54:54,  3.71s/it]   3%|▎         | 293/9908 [18:15<9:59:13,  3.74s/it]  3%|▎         | 294/9908 [18:18<9:44:18,  3.65s/it]  3%|▎         | 295/9908 [18:22<10:05:39,  3.78s/it]  3%|▎         | 296/9908 [18:26<10:03:48,  3.77s/it]  3%|▎         | 297/9908 [18:30<10:12:37,  3.82s/it]  3%|▎         | 298/9908 [18:34<10:04:07,  3.77s/it]  3%|▎         | 299/9908 [18:37<9:56:36,  3.73s/it] 09/20/2024 01:55:12 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.032135527580976486, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.141568660736084, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 2.173704147338867}
  3%|▎         | 300/9908 [18:41<10:05:17,  3.78s/it]  3%|▎         | 301/9908 [18:45<10:00:19,  3.75s/it]  3%|▎         | 302/9908 [18:49<10:05:45,  3.78s/it]  3%|▎         | 303/9908 [18:52<9:55:26,  3.72s/it]   3%|▎         | 304/9908 [18:56<10:04:15,  3.78s/it]  3%|▎         | 305/9908 [19:00<9:50:07,  3.69s/it]   3%|▎         | 306/9908 [19:03<9:46:32,  3.67s/it]  3%|▎         | 307/9908 [19:07<9:50:50,  3.69s/it]  3%|▎         | 308/9908 [19:11<9:39:06,  3.62s/it]  3%|▎         | 309/9908 [19:15<9:52:23,  3.70s/it]  3%|▎         | 310/9908 [19:18<9:45:42,  3.66s/it]  3%|▎         | 311/9908 [19:22<10:17:15,  3.86s/it]  3%|▎         | 312/9908 [19:26<10:09:19,  3.81s/it]  3%|▎         | 313/9908 [19:30<10:10:43,  3.82s/it]  3%|▎         | 314/9908 [19:33<9:53:01,  3.71s/it]   3%|▎         | 315/9908 [19:37<9:55:35,  3.73s/it]  3%|▎         | 316/9908 [19:41<10:01:02,  3.76s/it]  3%|▎         | 317/9908 [19:44<9:45:47,  3.66s/it]   3%|▎         | 318/9908 [19:49<10:14:33,  3.84s/it]  3%|▎         | 319/9908 [19:52<10:05:48,  3.79s/it]  3%|▎         | 320/9908 [19:56<10:03:27,  3.78s/it]  3%|▎         | 321/9908 [20:00<9:56:42,  3.73s/it]   3%|▎         | 322/9908 [20:03<9:49:36,  3.69s/it]  3%|▎         | 323/9908 [20:07<9:59:10,  3.75s/it]  3%|▎         | 324/9908 [20:11<9:55:54,  3.73s/it]  3%|▎         | 325/9908 [20:15<9:56:52,  3.74s/it]  3%|▎         | 326/9908 [20:18<9:53:52,  3.72s/it]  3%|▎         | 327/9908 [20:22<10:01:58,  3.77s/it]  3%|▎         | 328/9908 [20:26<9:45:03,  3.66s/it]   3%|▎         | 329/9908 [20:29<9:47:22,  3.68s/it]  3%|▎         | 330/9908 [20:33<9:41:29,  3.64s/it]  3%|▎         | 331/9908 [20:37<10:05:15,  3.79s/it]  3%|▎         | 332/9908 [20:41<10:12:33,  3.84s/it]  3%|▎         | 333/9908 [20:45<10:02:41,  3.78s/it]  3%|▎         | 334/9908 [20:48<9:57:01,  3.74s/it]   3%|▎         | 335/9908 [20:52<10:14:17,  3.85s/it]  3%|▎         | 336/9908 [20:56<10:12:56,  3.84s/it]  3%|▎         | 337/9908 [21:00<10:16:47,  3.87s/it]  3%|▎         | 338/9908 [21:04<9:55:30,  3.73s/it]   3%|▎         | 339/9908 [21:07<9:55:19,  3.73s/it]  3%|▎         | 340/9908 [21:11<10:03:59,  3.79s/it]  3%|▎         | 341/9908 [21:15<10:06:52,  3.81s/it]  3%|▎         | 342/9908 [21:19<10:00:41,  3.77s/it]  3%|▎         | 343/9908 [21:22<9:57:15,  3.75s/it]   3%|▎         | 344/9908 [21:26<10:05:37,  3.80s/it]  3%|▎         | 345/9908 [21:30<9:58:07,  3.75s/it]   3%|▎         | 346/9908 [21:33<9:40:21,  3.64s/it]  4%|▎         | 347/9908 [21:37<9:38:54,  3.63s/it]  4%|▎         | 348/9908 [21:41<9:51:50,  3.71s/it]  4%|▎         | 349/9908 [21:45<9:47:38,  3.69s/it]09/20/2024 01:58:19 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.0351392887532711, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.687022089958191, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.7221614122390747}
  4%|▎         | 350/9908 [21:48<9:44:13,  3.67s/it]  4%|▎         | 351/9908 [21:52<9:47:20,  3.69s/it]  4%|▎         | 352/9908 [21:56<9:54:30,  3.73s/it]  4%|▎         | 353/9908 [22:00<10:01:45,  3.78s/it]  4%|▎         | 354/9908 [22:03<9:50:57,  3.71s/it]   4%|▎         | 355/9908 [22:07<9:35:19,  3.61s/it]  4%|▎         | 356/9908 [22:10<9:39:07,  3.64s/it]  4%|▎         | 357/9908 [22:14<9:50:30,  3.71s/it]  4%|▎         | 358/9908 [22:18<9:49:57,  3.71s/it]  4%|▎         | 359/9908 [22:22<9:57:21,  3.75s/it]  4%|▎         | 360/9908 [22:25<9:57:25,  3.75s/it]  4%|▎         | 361/9908 [22:29<9:41:14,  3.65s/it]  4%|▎         | 362/9908 [22:33<9:59:35,  3.77s/it]  4%|▎         | 363/9908 [22:37<10:30:27,  3.96s/it]  4%|▎         | 364/9908 [22:41<10:08:28,  3.83s/it]  4%|▎         | 365/9908 [22:45<10:21:03,  3.90s/it]  4%|▎         | 366/9908 [22:49<10:09:09,  3.83s/it]  4%|▎         | 367/9908 [22:52<9:58:44,  3.77s/it]   4%|▎         | 368/9908 [22:56<9:55:21,  3.74s/it]  4%|▎         | 369/9908 [22:59<9:41:42,  3.66s/it]  4%|▎         | 370/9908 [23:03<9:39:16,  3.64s/it]  4%|▎         | 371/9908 [23:07<9:39:05,  3.64s/it]  4%|▍         | 372/9908 [23:10<9:31:23,  3.60s/it]  4%|▍         | 373/9908 [23:14<9:36:27,  3.63s/it]  4%|▍         | 374/9908 [23:18<9:48:48,  3.71s/it]  4%|▍         | 375/9908 [23:21<9:50:48,  3.72s/it]  4%|▍         | 376/9908 [23:25<9:51:50,  3.73s/it]  4%|▍         | 377/9908 [23:29<10:01:05,  3.78s/it]  4%|▍         | 378/9908 [23:32<9:40:21,  3.65s/it]   4%|▍         | 379/9908 [23:36<9:50:18,  3.72s/it]  4%|▍         | 380/9908 [23:40<9:57:08,  3.76s/it]  4%|▍         | 381/9908 [23:44<9:52:54,  3.73s/it]  4%|▍         | 382/9908 [23:48<10:00:16,  3.78s/it]  4%|▍         | 383/9908 [23:51<9:54:05,  3.74s/it]   4%|▍         | 384/9908 [23:55<10:00:43,  3.78s/it]  4%|▍         | 385/9908 [23:59<9:59:22,  3.78s/it]   4%|▍         | 386/9908 [24:03<9:57:29,  3.76s/it]  4%|▍         | 387/9908 [24:06<9:40:08,  3.66s/it]  4%|▍         | 388/9908 [24:10<9:33:45,  3.62s/it]  4%|▍         | 389/9908 [24:13<9:33:44,  3.62s/it]  4%|▍         | 390/9908 [24:17<9:59:19,  3.78s/it]  4%|▍         | 391/9908 [24:21<10:03:20,  3.80s/it]  4%|▍         | 392/9908 [24:25<10:12:47,  3.86s/it]  4%|▍         | 393/9908 [24:29<9:51:12,  3.73s/it]   4%|▍         | 394/9908 [24:33<9:58:29,  3.77s/it]  4%|▍         | 395/9908 [24:36<9:57:34,  3.77s/it]  4%|▍         | 396/9908 [24:40<10:01:22,  3.79s/it]  4%|▍         | 397/9908 [24:44<9:47:49,  3.71s/it]   4%|▍         | 398/9908 [24:47<9:45:41,  3.70s/it]  4%|▍         | 399/9908 [24:51<9:32:02,  3.61s/it]09/20/2024 02:01:25 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.028727412223815918, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.645893931388855, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.674621343612671}
  4%|▍         | 400/9908 [24:54<9:35:54,  3.63s/it]  4%|▍         | 401/9908 [24:58<9:42:07,  3.67s/it]  4%|▍         | 402/9908 [25:02<9:29:00,  3.59s/it]  4%|▍         | 403/9908 [25:06<9:42:56,  3.68s/it]  4%|▍         | 404/9908 [25:09<9:35:00,  3.63s/it]  4%|▍         | 405/9908 [25:13<9:53:02,  3.74s/it]  4%|▍         | 406/9908 [25:17<9:50:05,  3.73s/it]  4%|▍         | 407/9908 [25:20<9:35:57,  3.64s/it]  4%|▍         | 408/9908 [25:24<9:38:34,  3.65s/it]  4%|▍         | 409/9908 [25:27<9:23:14,  3.56s/it]  4%|▍         | 410/9908 [25:31<9:26:34,  3.58s/it]  4%|▍         | 411/9908 [25:34<9:30:00,  3.60s/it]  4%|▍         | 412/9908 [25:38<9:36:59,  3.65s/it]  4%|▍         | 413/9908 [25:42<9:37:02,  3.65s/it]  4%|▍         | 414/9908 [25:46<9:40:41,  3.67s/it]  4%|▍         | 415/9908 [25:49<9:37:38,  3.65s/it]  4%|▍         | 416/9908 [25:53<9:28:28,  3.59s/it]  4%|▍         | 417/9908 [25:56<9:28:44,  3.60s/it]  4%|▍         | 418/9908 [26:00<9:30:06,  3.60s/it]  4%|▍         | 419/9908 [26:03<9:29:13,  3.60s/it]  4%|▍         | 420/9908 [26:08<9:50:39,  3.74s/it]  4%|▍         | 421/9908 [26:11<9:46:01,  3.71s/it]  4%|▍         | 422/9908 [26:15<9:38:10,  3.66s/it]  4%|▍         | 423/9908 [26:18<9:44:46,  3.70s/it]  4%|▍         | 424/9908 [26:22<9:33:23,  3.63s/it]  4%|▍         | 425/9908 [26:26<9:40:10,  3.67s/it]  4%|▍         | 426/9908 [26:30<9:53:25,  3.76s/it]  4%|▍         | 427/9908 [26:33<9:54:13,  3.76s/it]  4%|▍         | 428/9908 [26:37<9:36:51,  3.65s/it]  4%|▍         | 429/9908 [26:40<9:29:48,  3.61s/it]  4%|▍         | 430/9908 [26:44<9:35:41,  3.64s/it]  4%|▍         | 431/9908 [26:48<9:45:30,  3.71s/it]  4%|▍         | 432/9908 [26:52<9:49:00,  3.73s/it]  4%|▍         | 433/9908 [26:55<9:43:07,  3.69s/it]  4%|▍         | 434/9908 [27:00<10:07:55,  3.85s/it]  4%|▍         | 435/9908 [27:03<9:59:09,  3.79s/it]   4%|▍         | 436/9908 [27:07<10:06:53,  3.84s/it]  4%|▍         | 437/9908 [27:11<10:03:49,  3.83s/it]  4%|▍         | 438/9908 [27:14<9:41:51,  3.69s/it]   4%|▍         | 439/9908 [27:18<9:54:00,  3.76s/it]  4%|▍         | 440/9908 [27:22<10:01:45,  3.81s/it]  4%|▍         | 441/9908 [27:26<10:20:20,  3.93s/it]  4%|▍         | 442/9908 [27:30<10:05:44,  3.84s/it]  4%|▍         | 443/9908 [27:34<9:51:36,  3.75s/it]   4%|▍         | 444/9908 [27:37<9:41:44,  3.69s/it]  4%|▍         | 445/9908 [27:41<9:35:26,  3.65s/it]  5%|▍         | 446/9908 [27:44<9:38:07,  3.67s/it]  5%|▍         | 447/9908 [27:48<9:40:53,  3.68s/it]  5%|▍         | 448/9908 [27:52<9:35:19,  3.65s/it]  5%|▍         | 449/9908 [27:55<9:43:52,  3.70s/it]09/20/2024 02:04:30 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03368505463004112, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.7973026037216187, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.8309876918792725}
  5%|▍         | 450/9908 [27:59<9:49:11,  3.74s/it]  5%|▍         | 451/9908 [28:03<9:55:17,  3.78s/it]  5%|▍         | 452/9908 [28:07<9:35:33,  3.65s/it]  5%|▍         | 453/9908 [28:10<9:36:42,  3.66s/it]  5%|▍         | 454/9908 [28:14<9:30:15,  3.62s/it]  5%|▍         | 455/9908 [28:18<9:48:14,  3.73s/it]  5%|▍         | 456/9908 [28:22<9:52:29,  3.76s/it]  5%|▍         | 457/9908 [28:25<9:37:53,  3.67s/it]  5%|▍         | 458/9908 [28:28<9:22:45,  3.57s/it]  5%|▍         | 459/9908 [28:32<9:46:25,  3.72s/it]  5%|▍         | 460/9908 [28:36<9:40:19,  3.69s/it]  5%|▍         | 461/9908 [28:40<9:42:33,  3.70s/it]  5%|▍         | 462/9908 [28:44<9:52:41,  3.76s/it]  5%|▍         | 463/9908 [28:48<9:58:01,  3.80s/it]  5%|▍         | 464/9908 [28:51<9:47:42,  3.73s/it]  5%|▍         | 465/9908 [28:55<9:53:45,  3.77s/it]  5%|▍         | 466/9908 [28:59<9:49:38,  3.75s/it]  5%|▍         | 467/9908 [29:02<9:41:34,  3.70s/it]  5%|▍         | 468/9908 [29:06<9:42:48,  3.70s/it]  5%|▍         | 469/9908 [29:10<9:53:09,  3.77s/it]  5%|▍         | 470/9908 [29:14<9:49:13,  3.75s/it]  5%|▍         | 471/9908 [29:17<9:29:19,  3.62s/it]  5%|▍         | 472/9908 [29:21<9:38:14,  3.68s/it]  5%|▍         | 473/9908 [29:24<9:34:59,  3.66s/it]  5%|▍         | 474/9908 [29:28<9:44:29,  3.72s/it]  5%|▍         | 475/9908 [29:31<9:23:00,  3.58s/it]  5%|▍         | 476/9908 [29:35<9:36:21,  3.67s/it]  5%|▍         | 477/9908 [29:39<9:42:00,  3.70s/it]  5%|▍         | 478/9908 [29:43<9:27:41,  3.61s/it]  5%|▍         | 479/9908 [29:46<9:30:12,  3.63s/it]  5%|▍         | 480/9908 [29:50<9:42:33,  3.71s/it]  5%|▍         | 481/9908 [29:54<10:00:39,  3.82s/it]  5%|▍         | 482/9908 [29:58<9:45:10,  3.72s/it]   5%|▍         | 483/9908 [30:01<9:31:26,  3.64s/it]  5%|▍         | 484/9908 [30:05<9:43:55,  3.72s/it]  5%|▍         | 485/9908 [30:09<9:40:10,  3.69s/it]  5%|▍         | 486/9908 [30:12<9:27:17,  3.61s/it]  5%|▍         | 487/9908 [30:16<9:19:24,  3.56s/it]  5%|▍         | 488/9908 [30:19<9:26:55,  3.61s/it]  5%|▍         | 489/9908 [30:23<9:24:27,  3.60s/it]  5%|▍         | 490/9908 [30:27<9:32:33,  3.65s/it]  5%|▍         | 491/9908 [30:31<10:02:56,  3.84s/it]  5%|▍         | 492/9908 [30:34<9:43:39,  3.72s/it]   5%|▍         | 493/9908 [30:38<9:51:42,  3.77s/it]  5%|▍         | 494/9908 [30:42<9:40:01,  3.70s/it]  5%|▍         | 495/9908 [30:45<9:39:19,  3.69s/it]  5%|▌         | 496/9908 [30:49<9:45:32,  3.73s/it]  5%|▌         | 497/9908 [30:53<9:37:28,  3.68s/it]  5%|▌         | 498/9908 [30:57<9:40:48,  3.70s/it]  5%|▌         | 499/9908 [31:00<9:35:47,  3.67s/it]09/20/2024 02:07:33 - INFO - __main__ -   evaluate on ret%tvas--msrvtt_ret task
09/20/2024 02:07:33 - INFO - __main__ -   start running ret%tvas validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:00<01:40,  2.19it/s][A
  1%|          | 2/221 [00:01<02:43,  1.34it/s][A
  1%|▏         | 3/221 [00:01<02:26,  1.49it/s][A
  2%|▏         | 5/221 [00:02<01:13,  2.95it/s][A
  3%|▎         | 6/221 [00:02<01:13,  2.91it/s][A
  3%|▎         | 7/221 [00:03<01:28,  2.42it/s][A
  4%|▎         | 8/221 [00:03<01:22,  2.58it/s][A
  4%|▍         | 9/221 [00:03<01:27,  2.43it/s][A
  5%|▍         | 10/221 [00:04<01:13,  2.88it/s][A
  5%|▍         | 11/221 [00:04<01:02,  3.34it/s][A
  5%|▌         | 12/221 [00:05<02:12,  1.58it/s][A
  6%|▌         | 13/221 [00:05<01:46,  1.95it/s][A
  6%|▋         | 14/221 [00:06<01:33,  2.21it/s][A
  7%|▋         | 15/221 [00:06<01:30,  2.28it/s][A
  7%|▋         | 16/221 [00:07<01:31,  2.24it/s][A
  8%|▊         | 17/221 [00:07<01:35,  2.14it/s][A
  8%|▊         | 18/221 [00:08<02:00,  1.69it/s][A
  9%|▊         | 19/221 [00:09<01:58,  1.71it/s][A
  9%|▉         | 20/221 [00:09<01:35,  2.11it/s][A
 10%|▉         | 21/221 [00:09<01:24,  2.37it/s][A
 10%|▉         | 22/221 [00:10<01:29,  2.22it/s][A
 11%|█         | 24/221 [00:10<00:59,  3.30it/s][A
 11%|█▏        | 25/221 [00:10<01:00,  3.23it/s][A
 12%|█▏        | 26/221 [00:11<01:01,  3.16it/s][A
 13%|█▎        | 28/221 [00:11<01:08,  2.82it/s][A
 13%|█▎        | 29/221 [00:12<01:08,  2.82it/s][A
 14%|█▎        | 30/221 [00:12<01:28,  2.17it/s][A
 14%|█▍        | 31/221 [00:13<01:28,  2.15it/s][A
 15%|█▍        | 33/221 [00:13<01:07,  2.77it/s][A
 15%|█▌        | 34/221 [00:14<00:58,  3.21it/s][A
 16%|█▌        | 35/221 [00:14<00:56,  3.27it/s][A
 16%|█▋        | 36/221 [00:14<00:58,  3.16it/s][A
 17%|█▋        | 37/221 [00:15<01:12,  2.54it/s][A
 17%|█▋        | 38/221 [00:15<01:23,  2.19it/s][A
 18%|█▊        | 39/221 [00:16<01:07,  2.70it/s][A
 18%|█▊        | 40/221 [00:16<01:16,  2.36it/s][A
 19%|█▊        | 41/221 [00:16<01:01,  2.92it/s][A
 19%|█▉        | 42/221 [00:17<01:11,  2.52it/s][A
 19%|█▉        | 43/221 [00:17<01:03,  2.79it/s][A
 20%|█▉        | 44/221 [00:17<00:53,  3.32it/s][A
 20%|██        | 45/221 [00:19<02:17,  1.28it/s][A
 21%|██        | 46/221 [00:20<01:56,  1.51it/s][A
 21%|██▏       | 47/221 [00:21<02:15,  1.28it/s][A
 22%|██▏       | 48/221 [00:21<01:39,  1.73it/s][A
 22%|██▏       | 49/221 [00:21<01:24,  2.04it/s][A
 23%|██▎       | 50/221 [00:21<01:09,  2.45it/s][A
 23%|██▎       | 51/221 [00:21<01:03,  2.69it/s][A
 24%|██▎       | 52/221 [00:22<00:52,  3.22it/s][A
 24%|██▍       | 53/221 [00:22<00:48,  3.46it/s][A
 24%|██▍       | 54/221 [00:23<01:40,  1.66it/s][A
 25%|██▍       | 55/221 [00:24<01:51,  1.49it/s][A
 25%|██▌       | 56/221 [00:24<01:30,  1.82it/s][A
 26%|██▌       | 57/221 [00:25<01:16,  2.15it/s][A
 26%|██▌       | 58/221 [00:25<00:58,  2.79it/s][A
 27%|██▋       | 59/221 [00:25<00:48,  3.33it/s][A
 27%|██▋       | 60/221 [00:26<01:15,  2.12it/s][A
 28%|██▊       | 61/221 [00:26<01:08,  2.33it/s][A
 28%|██▊       | 62/221 [00:26<01:08,  2.32it/s][A
 29%|██▊       | 63/221 [00:27<00:53,  2.94it/s][A
 29%|██▉       | 64/221 [00:27<01:05,  2.41it/s][A
 29%|██▉       | 65/221 [00:27<00:59,  2.61it/s][A
 30%|██▉       | 66/221 [00:28<01:08,  2.26it/s][A
 30%|███       | 67/221 [00:28<01:06,  2.33it/s][A
 31%|███       | 68/221 [00:29<00:57,  2.64it/s][A
 31%|███       | 69/221 [00:30<01:19,  1.92it/s][A
 32%|███▏      | 70/221 [00:30<01:01,  2.46it/s][A
 32%|███▏      | 71/221 [00:30<01:12,  2.06it/s][A
 33%|███▎      | 72/221 [00:31<01:17,  1.92it/s][A
 33%|███▎      | 73/221 [00:32<01:23,  1.77it/s][A
 33%|███▎      | 74/221 [00:32<01:12,  2.02it/s][A
 34%|███▍      | 75/221 [00:32<01:12,  2.02it/s][A
 34%|███▍      | 76/221 [00:33<00:58,  2.49it/s][A
 35%|███▍      | 77/221 [00:33<01:14,  1.93it/s][A
 35%|███▌      | 78/221 [00:34<00:57,  2.49it/s][A
 36%|███▌      | 79/221 [00:35<01:27,  1.62it/s][A
 37%|███▋      | 81/221 [00:35<01:09,  2.01it/s][A
 37%|███▋      | 82/221 [00:36<01:24,  1.65it/s][A
 38%|███▊      | 83/221 [00:37<01:32,  1.49it/s][A
 38%|███▊      | 84/221 [00:37<01:12,  1.90it/s][A
 39%|███▉      | 86/221 [00:38<01:00,  2.23it/s][A
 39%|███▉      | 87/221 [00:39<01:30,  1.48it/s][A
 40%|███▉      | 88/221 [00:40<01:30,  1.47it/s][A
 40%|████      | 89/221 [00:41<01:36,  1.37it/s][A
 41%|████      | 90/221 [00:41<01:22,  1.59it/s][A
 41%|████      | 91/221 [00:42<01:04,  2.01it/s][A
 42%|████▏     | 92/221 [00:42<01:09,  1.85it/s][A
 42%|████▏     | 93/221 [00:43<01:07,  1.90it/s][A
 43%|████▎     | 94/221 [00:44<01:20,  1.58it/s][A
 43%|████▎     | 95/221 [00:44<01:08,  1.84it/s][A
 43%|████▎     | 96/221 [00:45<01:34,  1.32it/s][A
 44%|████▍     | 97/221 [00:45<01:12,  1.70it/s][A
 44%|████▍     | 98/221 [00:46<01:15,  1.63it/s][A
 45%|████▍     | 99/221 [00:46<01:03,  1.92it/s][A
 45%|████▌     | 100/221 [00:47<00:59,  2.03it/s][A
 46%|████▌     | 101/221 [00:47<00:46,  2.59it/s][A
 46%|████▌     | 102/221 [00:49<01:36,  1.24it/s][A
 47%|████▋     | 103/221 [00:49<01:11,  1.64it/s][A
 47%|████▋     | 104/221 [00:49<01:00,  1.94it/s][A
 48%|████▊     | 105/221 [00:50<01:01,  1.88it/s][A
 48%|████▊     | 106/221 [00:51<01:12,  1.59it/s][A
 48%|████▊     | 107/221 [00:51<01:00,  1.90it/s][A
 49%|████▉     | 108/221 [00:51<00:54,  2.06it/s][A
 49%|████▉     | 109/221 [00:52<00:50,  2.21it/s][A
 50%|████▉     | 110/221 [00:52<00:39,  2.79it/s][A
 50%|█████     | 111/221 [00:52<00:40,  2.72it/s][A
 51%|█████     | 112/221 [00:52<00:39,  2.79it/s][A
 51%|█████     | 113/221 [00:53<00:35,  3.07it/s][A
 52%|█████▏    | 115/221 [00:53<00:34,  3.06it/s][A
 52%|█████▏    | 116/221 [00:56<01:28,  1.19it/s][A
 53%|█████▎    | 117/221 [00:56<01:17,  1.34it/s][A
 53%|█████▎    | 118/221 [00:57<01:05,  1.57it/s][A
 54%|█████▍    | 119/221 [00:57<00:58,  1.73it/s][A
 54%|█████▍    | 120/221 [00:58<00:55,  1.82it/s][A
 55%|█████▍    | 121/221 [00:58<00:48,  2.04it/s][A
 55%|█████▌    | 122/221 [00:58<00:43,  2.30it/s][A
 56%|█████▌    | 123/221 [00:59<00:41,  2.34it/s][A
 56%|█████▌    | 124/221 [00:59<00:36,  2.69it/s][A
 57%|█████▋    | 125/221 [01:00<00:51,  1.88it/s][A
 57%|█████▋    | 126/221 [01:00<00:53,  1.78it/s][A
 57%|█████▋    | 127/221 [01:01<00:53,  1.74it/s][A
 58%|█████▊    | 128/221 [01:02<00:58,  1.58it/s][A
 58%|█████▊    | 129/221 [01:02<00:46,  1.97it/s][A
 59%|█████▉    | 130/221 [01:03<00:53,  1.69it/s][A
 59%|█████▉    | 131/221 [01:03<00:44,  2.04it/s][A
 60%|█████▉    | 132/221 [01:04<01:00,  1.47it/s][A
 60%|██████    | 133/221 [01:04<00:48,  1.82it/s][A
 61%|██████    | 134/221 [01:06<01:08,  1.26it/s][A
 61%|██████    | 135/221 [01:06<01:05,  1.31it/s][A
 62%|██████▏   | 136/221 [01:07<00:59,  1.42it/s][A
 62%|██████▏   | 137/221 [01:07<00:45,  1.86it/s][A
 62%|██████▏   | 138/221 [01:08<00:58,  1.42it/s][A
 63%|██████▎   | 139/221 [01:09<00:49,  1.66it/s][A
 63%|██████▎   | 140/221 [01:09<00:49,  1.62it/s][A
 64%|██████▍   | 141/221 [01:10<00:53,  1.51it/s][A
 64%|██████▍   | 142/221 [01:11<00:50,  1.57it/s][A
 65%|██████▍   | 143/221 [01:11<00:51,  1.52it/s][A
 65%|██████▌   | 144/221 [01:12<00:47,  1.64it/s][A
 66%|██████▌   | 145/221 [01:12<00:36,  2.09it/s][A
 66%|██████▌   | 146/221 [01:12<00:28,  2.61it/s][A
 67%|██████▋   | 148/221 [01:14<00:42,  1.74it/s][A
 67%|██████▋   | 149/221 [01:14<00:42,  1.71it/s][A
 68%|██████▊   | 150/221 [01:15<00:38,  1.83it/s][A
 68%|██████▊   | 151/221 [01:15<00:35,  1.94it/s][A
 69%|██████▉   | 152/221 [01:16<00:42,  1.62it/s][A
 69%|██████▉   | 153/221 [01:16<00:32,  2.06it/s][A
 70%|██████▉   | 154/221 [01:17<00:30,  2.17it/s][A
 70%|███████   | 155/221 [01:17<00:28,  2.30it/s][A
 71%|███████   | 156/221 [01:17<00:27,  2.40it/s][A
 71%|███████   | 157/221 [01:25<02:38,  2.47s/it][A
 71%|███████▏  | 158/221 [01:25<02:03,  1.96s/it][A
 72%|███████▏  | 159/221 [01:26<01:28,  1.42s/it][A
 72%|███████▏  | 160/221 [01:26<01:04,  1.06s/it][A
 73%|███████▎  | 161/221 [01:26<00:52,  1.15it/s][A
 73%|███████▎  | 162/221 [01:26<00:38,  1.54it/s][A
 74%|███████▍  | 163/221 [01:27<00:36,  1.61it/s][A
 74%|███████▍  | 164/221 [01:27<00:28,  2.00it/s][A
 75%|███████▍  | 165/221 [01:28<00:29,  1.91it/s][A
 75%|███████▌  | 166/221 [01:29<00:38,  1.45it/s][A
 76%|███████▌  | 167/221 [01:30<00:37,  1.42it/s][A
 76%|███████▌  | 168/221 [01:33<01:26,  1.63s/it][A
 76%|███████▋  | 169/221 [01:34<01:03,  1.22s/it][A
 77%|███████▋  | 170/221 [01:34<00:50,  1.02it/s][A
 77%|███████▋  | 171/221 [01:35<00:45,  1.11it/s][A
 78%|███████▊  | 172/221 [01:35<00:40,  1.22it/s][A
 78%|███████▊  | 173/221 [01:36<00:40,  1.20it/s][A
 79%|███████▊  | 174/221 [01:36<00:29,  1.58it/s][A
 79%|███████▉  | 175/221 [01:37<00:26,  1.73it/s][A
 80%|███████▉  | 176/221 [01:37<00:21,  2.08it/s][A
 80%|████████  | 177/221 [01:37<00:18,  2.37it/s][A
 81%|████████  | 178/221 [01:38<00:18,  2.32it/s][A
 81%|████████  | 179/221 [01:38<00:20,  2.08it/s][A
 81%|████████▏ | 180/221 [01:39<00:16,  2.55it/s][A
 82%|████████▏ | 181/221 [01:39<00:12,  3.27it/s][A
 82%|████████▏ | 182/221 [01:39<00:12,  3.02it/s][A
 83%|████████▎ | 183/221 [01:40<00:16,  2.24it/s][A
 83%|████████▎ | 184/221 [01:41<00:19,  1.92it/s][A
 84%|████████▍ | 186/221 [01:41<00:14,  2.41it/s][A
 85%|████████▍ | 187/221 [01:41<00:13,  2.59it/s][A
 85%|████████▌ | 188/221 [01:42<00:12,  2.69it/s][A
 86%|████████▌ | 189/221 [01:42<00:11,  2.82it/s][A
 86%|████████▌ | 190/221 [01:43<00:12,  2.53it/s][A
 86%|████████▋ | 191/221 [01:43<00:10,  2.74it/s][A
 87%|████████▋ | 192/221 [01:43<00:11,  2.57it/s][A
 87%|████████▋ | 193/221 [01:44<00:09,  2.87it/s][A
 88%|████████▊ | 194/221 [01:45<00:19,  1.38it/s][A
 88%|████████▊ | 195/221 [01:45<00:14,  1.80it/s][A
 89%|████████▊ | 196/221 [01:46<00:12,  1.96it/s][A
 89%|████████▉ | 197/221 [01:46<00:11,  2.02it/s][A
 90%|████████▉ | 198/221 [01:47<00:10,  2.19it/s][A
 90%|█████████ | 199/221 [01:47<00:09,  2.29it/s][A
 90%|█████████ | 200/221 [01:48<00:10,  2.06it/s][A
 91%|█████████ | 201/221 [01:48<00:09,  2.11it/s][A
 91%|█████████▏| 202/221 [01:49<00:09,  2.04it/s][A
 92%|█████████▏| 203/221 [01:49<00:08,  2.08it/s][A
 92%|█████████▏| 204/221 [01:50<00:08,  2.03it/s][A
 93%|█████████▎| 205/221 [01:50<00:06,  2.52it/s][A
 93%|█████████▎| 206/221 [01:50<00:07,  1.92it/s][A
 94%|█████████▍| 208/221 [01:51<00:05,  2.49it/s][A
 95%|█████████▍| 209/221 [01:51<00:04,  2.90it/s][A
 95%|█████████▌| 211/221 [01:52<00:03,  2.53it/s][A
 96%|█████████▌| 212/221 [01:53<00:03,  2.36it/s][A
 96%|█████████▋| 213/221 [01:53<00:02,  2.81it/s][A
 97%|█████████▋| 214/221 [01:53<00:02,  2.60it/s][A
 97%|█████████▋| 215/221 [01:54<00:02,  2.49it/s][A
 98%|█████████▊| 216/221 [01:54<00:02,  2.24it/s][A
 98%|█████████▊| 217/221 [01:57<00:04,  1.21s/it][A
 99%|█████████▊| 218/221 [01:58<00:03,  1.12s/it][A
 99%|█████████▉| 219/221 [01:59<00:01,  1.16it/s][A
100%|█████████▉| 220/221 [02:01<00:01,  1.38s/it][A
100%|██████████| 221/221 [02:01<00:00,  1.06s/it][A100%|██████████| 221/221 [02:01<00:00,  1.81it/s]

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:00<01:56,  1.89it/s][A
  1%|          | 2/221 [00:01<01:55,  1.89it/s][A
  1%|▏         | 3/221 [00:01<01:55,  1.89it/s][A
  2%|▏         | 4/221 [00:02<01:54,  1.89it/s][A
  2%|▏         | 5/221 [00:02<01:54,  1.89it/s][A
  3%|▎         | 6/221 [00:03<01:53,  1.89it/s][A
  3%|▎         | 7/221 [00:03<01:53,  1.89it/s][A
  4%|▎         | 8/221 [00:04<01:52,  1.89it/s][A
  4%|▍         | 9/221 [00:04<01:52,  1.89it/s][A
  5%|▍         | 10/221 [00:05<01:51,  1.89it/s][A
  5%|▍         | 11/221 [00:05<01:50,  1.89it/s][A
  5%|▌         | 12/221 [00:06<01:50,  1.89it/s][A
  6%|▌         | 13/221 [00:06<01:49,  1.89it/s][A
  6%|▋         | 14/221 [00:07<01:49,  1.89it/s][A
  7%|▋         | 15/221 [00:07<01:48,  1.89it/s][A
  7%|▋         | 16/221 [00:08<01:48,  1.89it/s][A
  8%|▊         | 17/221 [00:08<01:47,  1.89it/s][A
  8%|▊         | 18/221 [00:09<01:47,  1.89it/s][A
  9%|▊         | 19/221 [00:10<01:46,  1.89it/s][A
  9%|▉         | 20/221 [00:10<01:46,  1.89it/s][A
 10%|▉         | 21/221 [00:11<01:45,  1.89it/s][A
 10%|▉         | 22/221 [00:11<01:45,  1.89it/s][A
 10%|█         | 23/221 [00:12<01:44,  1.89it/s][A
 11%|█         | 24/221 [00:12<01:44,  1.89it/s][A
 11%|█▏        | 25/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 26/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 27/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 28/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 29/221 [00:15<01:41,  1.89it/s][A
 14%|█▎        | 30/221 [00:15<01:40,  1.89it/s][A
 14%|█▍        | 31/221 [00:16<01:40,  1.89it/s][A
 14%|█▍        | 32/221 [00:16<01:39,  1.89it/s][A
 15%|█▍        | 33/221 [00:17<01:39,  1.89it/s][A
 15%|█▌        | 34/221 [00:17<01:38,  1.89it/s][A
 16%|█▌        | 35/221 [00:18<01:38,  1.89it/s][A
 16%|█▋        | 36/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 37/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 38/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 39/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 40/221 [00:21<01:35,  1.89it/s][A
 19%|█▊        | 41/221 [00:21<01:35,  1.89it/s][A
 19%|█▉        | 42/221 [00:22<01:34,  1.89it/s][A
 19%|█▉        | 43/221 [00:22<01:34,  1.89it/s][A
 20%|█▉        | 44/221 [00:23<01:33,  1.89it/s][A
 20%|██        | 45/221 [00:23<01:33,  1.89it/s][A
 21%|██        | 46/221 [00:24<01:32,  1.89it/s][A
 21%|██▏       | 47/221 [00:24<01:31,  1.89it/s][A
 22%|██▏       | 48/221 [00:25<01:31,  1.89it/s][A
 22%|██▏       | 49/221 [00:25<01:30,  1.89it/s][A
 23%|██▎       | 50/221 [00:26<01:30,  1.89it/s][A
 23%|██▎       | 51/221 [00:26<01:29,  1.89it/s][A
 24%|██▎       | 52/221 [00:27<01:29,  1.89it/s][A
 24%|██▍       | 53/221 [00:28<01:28,  1.89it/s][A
 24%|██▍       | 54/221 [00:28<01:28,  1.89it/s][A
 25%|██▍       | 55/221 [00:29<01:27,  1.89it/s][A
 25%|██▌       | 56/221 [00:29<01:27,  1.89it/s][A
 26%|██▌       | 57/221 [00:30<01:26,  1.89it/s][A
 26%|██▌       | 58/221 [00:30<01:26,  1.89it/s][A
 27%|██▋       | 59/221 [00:31<01:25,  1.89it/s][A
 27%|██▋       | 60/221 [00:31<01:25,  1.89it/s][A
 28%|██▊       | 61/221 [00:32<01:24,  1.89it/s][A
 28%|██▊       | 62/221 [00:32<01:24,  1.89it/s][A
 29%|██▊       | 63/221 [00:33<01:23,  1.89it/s][A
 29%|██▉       | 64/221 [00:33<01:22,  1.89it/s][A
 29%|██▉       | 65/221 [00:34<01:22,  1.89it/s][A
 30%|██▉       | 66/221 [00:34<01:21,  1.89it/s][A
 30%|███       | 67/221 [00:35<01:21,  1.89it/s][A
 31%|███       | 68/221 [00:35<01:20,  1.89it/s][A
 31%|███       | 69/221 [00:36<01:20,  1.89it/s][A
 32%|███▏      | 70/221 [00:37<01:19,  1.89it/s][A
 32%|███▏      | 71/221 [00:37<01:19,  1.89it/s][A
 33%|███▎      | 72/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 73/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 74/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 75/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 76/221 [00:40<01:16,  1.89it/s][A
 35%|███▍      | 77/221 [00:40<01:16,  1.89it/s][A
 35%|███▌      | 78/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 79/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 80/221 [00:42<01:14,  1.89it/s][A
 37%|███▋      | 81/221 [00:42<01:13,  1.89it/s][A
 37%|███▋      | 82/221 [00:43<01:13,  1.89it/s][A
 38%|███▊      | 83/221 [00:43<01:12,  1.89it/s][A
 38%|███▊      | 84/221 [00:44<01:12,  1.89it/s][A
 38%|███▊      | 85/221 [00:44<01:11,  1.89it/s][A
 39%|███▉      | 86/221 [00:45<01:11,  1.89it/s][A
 39%|███▉      | 87/221 [00:45<01:10,  1.89it/s][A
 40%|███▉      | 88/221 [00:46<01:10,  1.89it/s][A
 40%|████      | 89/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 90/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 91/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 92/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 93/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 94/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 95/221 [00:50<01:06,  1.89it/s][A
 43%|████▎     | 96/221 [00:50<01:06,  1.89it/s][A
 44%|████▍     | 97/221 [00:51<01:05,  1.89it/s][A
 44%|████▍     | 98/221 [00:51<01:05,  1.89it/s][A
 45%|████▍     | 99/221 [00:52<01:04,  1.89it/s][A
 45%|████▌     | 100/221 [00:52<01:03,  1.89it/s][A
 46%|████▌     | 101/221 [00:53<01:03,  1.89it/s][A
 46%|████▌     | 102/221 [00:53<01:02,  1.89it/s][A
 47%|████▋     | 103/221 [00:54<01:02,  1.89it/s][A
 47%|████▋     | 104/221 [00:54<01:01,  1.89it/s][A
 48%|████▊     | 105/221 [00:55<01:01,  1.89it/s][A
 48%|████▊     | 106/221 [00:56<01:00,  1.89it/s][A
 48%|████▊     | 107/221 [00:56<01:00,  1.89it/s][A
 49%|████▉     | 108/221 [00:57<00:59,  1.89it/s][A
 49%|████▉     | 109/221 [00:57<00:59,  1.89it/s][A
 50%|████▉     | 110/221 [00:58<00:58,  1.89it/s][A
 50%|█████     | 111/221 [00:58<00:58,  1.89it/s][A
 51%|█████     | 112/221 [00:59<00:57,  1.89it/s][A
 51%|█████     | 113/221 [00:59<00:57,  1.89it/s][A
 52%|█████▏    | 114/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 115/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 116/221 [01:01<00:55,  1.89it/s][A
 53%|█████▎    | 117/221 [01:01<00:54,  1.89it/s][A
 53%|█████▎    | 118/221 [01:02<00:54,  1.89it/s][A
 54%|█████▍    | 119/221 [01:02<00:53,  1.89it/s][A
 54%|█████▍    | 120/221 [01:03<00:53,  1.89it/s][A
 55%|█████▍    | 121/221 [01:03<00:52,  1.89it/s][A
 55%|█████▌    | 122/221 [01:04<00:52,  1.89it/s][A
 56%|█████▌    | 123/221 [01:05<00:51,  1.89it/s][A
 56%|█████▌    | 124/221 [01:05<00:51,  1.89it/s][A
 57%|█████▋    | 125/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 126/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 127/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 128/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 129/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 130/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 131/221 [01:09<00:47,  1.89it/s][A
 60%|█████▉    | 132/221 [01:09<00:47,  1.89it/s][A
 60%|██████    | 133/221 [01:10<00:46,  1.89it/s][A
 61%|██████    | 134/221 [01:10<00:45,  1.89it/s][A
 61%|██████    | 135/221 [01:11<00:45,  1.89it/s][A
 62%|██████▏   | 136/221 [01:11<00:44,  1.89it/s][A
 62%|██████▏   | 137/221 [01:12<00:44,  1.89it/s][A
 62%|██████▏   | 138/221 [01:12<00:43,  1.89it/s][A
 63%|██████▎   | 139/221 [01:13<00:43,  1.89it/s][A
 63%|██████▎   | 140/221 [01:13<00:42,  1.89it/s][A
 64%|██████▍   | 141/221 [01:14<00:42,  1.89it/s][A
 64%|██████▍   | 142/221 [01:15<00:41,  1.89it/s][A
 65%|██████▍   | 143/221 [01:15<00:41,  1.89it/s][A
 65%|██████▌   | 144/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 145/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 146/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 147/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 148/221 [01:18<00:38,  1.89it/s][A
 67%|██████▋   | 149/221 [01:18<00:38,  1.89it/s][A
 68%|██████▊   | 150/221 [01:19<00:37,  1.89it/s][A
 68%|██████▊   | 151/221 [01:19<00:36,  1.89it/s][A
 69%|██████▉   | 152/221 [01:20<00:36,  1.89it/s][A
 69%|██████▉   | 153/221 [01:20<00:35,  1.89it/s][A
 70%|██████▉   | 154/221 [01:21<00:35,  1.89it/s][A
 70%|███████   | 155/221 [01:21<00:34,  1.89it/s][A
 71%|███████   | 156/221 [01:22<00:34,  1.89it/s][A
 71%|███████   | 157/221 [01:22<00:33,  1.89it/s][A
 71%|███████▏  | 158/221 [01:23<00:33,  1.89it/s][A
 72%|███████▏  | 159/221 [01:24<00:32,  1.89it/s][A
 72%|███████▏  | 160/221 [01:24<00:32,  1.89it/s][A
 73%|███████▎  | 161/221 [01:25<00:31,  1.89it/s][A
 73%|███████▎  | 162/221 [01:25<00:31,  1.89it/s][A
 74%|███████▍  | 163/221 [01:26<00:30,  1.89it/s][A
 74%|███████▍  | 164/221 [01:26<00:30,  1.89it/s][A
 75%|███████▍  | 165/221 [01:27<00:29,  1.89it/s][A
 75%|███████▌  | 166/221 [01:27<00:29,  1.89it/s][A
 76%|███████▌  | 167/221 [01:28<00:28,  1.89it/s][A
 76%|███████▌  | 168/221 [01:28<00:28,  1.89it/s][A
 76%|███████▋  | 169/221 [01:29<00:27,  1.89it/s][A
 77%|███████▋  | 170/221 [01:29<00:26,  1.89it/s][A
 77%|███████▋  | 171/221 [01:30<00:26,  1.89it/s][A
 78%|███████▊  | 172/221 [01:30<00:25,  1.89it/s][A
 78%|███████▊  | 173/221 [01:31<00:25,  1.89it/s][A
 79%|███████▊  | 174/221 [01:31<00:24,  1.89it/s][A
 79%|███████▉  | 175/221 [01:32<00:24,  1.89it/s][A
 80%|███████▉  | 176/221 [01:33<00:23,  1.89it/s][A
 80%|████████  | 177/221 [01:33<00:23,  1.89it/s][A
 81%|████████  | 178/221 [01:34<00:22,  1.89it/s][A
 81%|████████  | 179/221 [01:34<00:22,  1.89it/s][A
 81%|████████▏ | 180/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 181/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 182/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 183/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 184/221 [01:37<00:19,  1.89it/s][A
 84%|████████▎ | 185/221 [01:37<00:19,  1.89it/s][A
 84%|████████▍ | 186/221 [01:38<00:18,  1.89it/s][A
 85%|████████▍ | 187/221 [01:38<00:17,  1.89it/s][A
 85%|████████▌ | 188/221 [01:39<00:17,  1.89it/s][A
 86%|████████▌ | 189/221 [01:39<00:16,  1.89it/s][A
 86%|████████▌ | 190/221 [01:40<00:16,  1.89it/s][A
 86%|████████▋ | 191/221 [01:40<00:15,  1.89it/s][A
 87%|████████▋ | 192/221 [01:41<00:15,  1.89it/s][A
 87%|████████▋ | 193/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 194/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 195/221 [01:43<00:13,  1.89it/s][A
 89%|████████▊ | 196/221 [01:43<00:13,  1.89it/s][A
 89%|████████▉ | 197/221 [01:44<00:12,  1.89it/s][A
 90%|████████▉ | 198/221 [01:44<00:12,  1.89it/s][A
 90%|█████████ | 199/221 [01:45<00:11,  1.89it/s][A
 90%|█████████ | 200/221 [01:45<00:11,  1.89it/s][A
 91%|█████████ | 201/221 [01:46<00:10,  1.89it/s][A
 91%|█████████▏| 202/221 [01:46<00:10,  1.89it/s][A
 92%|█████████▏| 203/221 [01:47<00:09,  1.89it/s][A
 92%|█████████▏| 204/221 [01:47<00:08,  1.89it/s][A
 93%|█████████▎| 205/221 [01:48<00:08,  1.89it/s][A
 93%|█████████▎| 206/221 [01:48<00:07,  1.89it/s][A
 94%|█████████▎| 207/221 [01:49<00:07,  1.89it/s][A
 94%|█████████▍| 208/221 [01:49<00:06,  1.89it/s][A
 95%|█████████▍| 209/221 [01:50<00:06,  1.89it/s][A
 95%|█████████▌| 210/221 [01:50<00:05,  1.89it/s][A
 95%|█████████▌| 211/221 [01:51<00:05,  1.89it/s][A
 96%|█████████▌| 212/221 [01:52<00:04,  1.89it/s][A
 96%|█████████▋| 213/221 [01:52<00:04,  1.89it/s][A
 97%|█████████▋| 214/221 [01:53<00:03,  1.89it/s][A
 97%|█████████▋| 215/221 [01:53<00:03,  1.89it/s][A
 98%|█████████▊| 216/221 [01:54<00:02,  1.89it/s][A
 98%|█████████▊| 217/221 [01:54<00:02,  1.89it/s][A
 99%|█████████▊| 218/221 [01:55<00:01,  1.89it/s][A
 99%|█████████▉| 219/221 [01:55<00:01,  1.89it/s][A
100%|█████████▉| 220/221 [01:56<00:00,  1.89it/s][A
100%|██████████| 221/221 [01:56<00:00,  1.89it/s][A100%|██████████| 221/221 [01:56<00:00,  1.89it/s]
09/20/2024 02:14:22 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_forward=====step 499--===========

09/20/2024 02:14:22 - INFO - __main__ -   {'area_r1': 44.2, 'area_recall': '44.2/71.4/81.7', 'area_ravg': 65.8}
09/20/2024 02:14:22 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_backard=====step 499--===========

09/20/2024 02:14:22 - INFO - __main__ -   {'forward_r1': 47.5, 'forward_recall': '47.5/74.5/85.2', 'forward_ravg': 69.1}
09/20/2024 02:14:22 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video=====step 499--===========

09/20/2024 02:14:22 - INFO - __main__ -   {'area_video_r1': 47.3, 'area_video_recall': '47.3/75.3/85.6', 'area_video_ravg': 69.4}
09/20/2024 02:14:22 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video====history best step: 499=======

09/20/2024 02:14:22 - INFO - __main__ -   {'area_video_r1': 47.3, 'area_video_recall': '47.3/75.3/85.6', 'area_video_ravg': 69.4}
09/20/2024 02:14:22 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itm_area=====step 499--===========

09/20/2024 02:14:22 - INFO - __main__ -   {'area_video_r1': 56.7, 'area_video_recall': '56.7/78.4/85.3', 'area_video_ravg': 73.5, 'area_video_back_r1': 56.1, 'area_video_back_recall': '56.1/80.3/88.3', 'area_video_back_ravg': 74.9}
09/20/2024 02:14:22 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itm_area====history best step: 499=======

09/20/2024 02:14:22 - INFO - __main__ -   {'area_video_r1': 56.7, 'area_video_recall': '56.7/78.4/85.3', 'area_video_ravg': 73.5, 'area_video_back_r1': 56.1, 'area_video_back_recall': '56.1/80.3/88.3', 'area_video_back_ravg': 74.9}
09/20/2024 02:14:22 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas=====step 499--===========

09/20/2024 02:14:22 - INFO - __main__ -   {'video_r1': 31.1, 'video_recall': '31.1/54.4/64.1', 'video_ravg': 49.9}
09/20/2024 02:14:22 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas====history best step: 499=======

09/20/2024 02:14:22 - INFO - __main__ -   {'video_r1': 31.1, 'video_recall': '31.1/54.4/64.1', 'video_ravg': 49.9}
09/20/2024 02:14:55 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.034213315695524216, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.097562789916992, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 2.1317760944366455}
  5%|▌         | 500/9908 [38:24<354:31:07, 135.66s/it]  5%|▌         | 501/9908 [38:27<250:34:34, 95.89s/it]   5%|▌         | 502/9908 [38:30<178:05:44, 68.16s/it]  5%|▌         | 503/9908 [38:34<127:38:41, 48.86s/it]  5%|▌         | 504/9908 [38:38<92:13:29, 35.31s/it]   5%|▌         | 505/9908 [38:41<67:14:30, 25.74s/it]  5%|▌         | 506/9908 [38:45<49:52:33, 19.10s/it]  5%|▌         | 507/9908 [38:49<37:50:24, 14.49s/it]  5%|▌         | 508/9908 [38:52<29:30:46, 11.30s/it]  5%|▌         | 509/9908 [38:57<23:53:35,  9.15s/it]  5%|▌         | 510/9908 [39:00<19:38:40,  7.53s/it]  5%|▌         | 511/9908 [39:04<16:41:26,  6.39s/it]  5%|▌         | 512/9908 [39:08<14:27:21,  5.54s/it]  5%|▌         | 513/9908 [39:11<13:00:46,  4.99s/it]  5%|▌         | 514/9908 [39:15<12:04:54,  4.63s/it]  5%|▌         | 515/9908 [39:18<11:03:27,  4.24s/it]  5%|▌         | 516/9908 [39:22<10:39:54,  4.09s/it]  5%|▌         | 517/9908 [39:26<10:13:28,  3.92s/it]  5%|▌         | 518/9908 [39:29<9:53:41,  3.79s/it]   5%|▌         | 519/9908 [39:33<9:34:06,  3.67s/it]  5%|▌         | 520/9908 [39:36<9:33:29,  3.67s/it]  5%|▌         | 521/9908 [39:40<9:54:10,  3.80s/it]  5%|▌         | 522/9908 [39:44<10:09:51,  3.90s/it]  5%|▌         | 523/9908 [39:48<10:06:25,  3.88s/it]  5%|▌         | 524/9908 [39:52<9:47:59,  3.76s/it]   5%|▌         | 525/9908 [39:55<9:38:14,  3.70s/it]  5%|▌         | 526/9908 [39:59<9:47:44,  3.76s/it]  5%|▌         | 527/9908 [40:03<9:46:16,  3.75s/it]  5%|▌         | 528/9908 [40:07<9:50:32,  3.78s/it]  5%|▌         | 529/9908 [40:10<9:43:39,  3.73s/it]  5%|▌         | 530/9908 [40:14<9:50:36,  3.78s/it]  5%|▌         | 531/9908 [40:18<9:57:59,  3.83s/it]  5%|▌         | 532/9908 [40:22<9:44:03,  3.74s/it]  5%|▌         | 533/9908 [40:26<9:56:48,  3.82s/it]  5%|▌         | 534/9908 [40:29<9:25:58,  3.62s/it]  5%|▌         | 535/9908 [40:33<9:34:08,  3.68s/it]  5%|▌         | 536/9908 [40:37<9:36:34,  3.69s/it]  5%|▌         | 537/9908 [40:40<9:34:56,  3.68s/it]  5%|▌         | 538/9908 [40:44<9:41:37,  3.72s/it]  5%|▌         | 539/9908 [40:48<9:54:13,  3.81s/it]  5%|▌         | 540/9908 [40:51<9:34:16,  3.68s/it]  5%|▌         | 541/9908 [40:55<9:37:32,  3.70s/it]  5%|▌         | 542/9908 [40:59<9:25:46,  3.62s/it]  5%|▌         | 543/9908 [41:02<9:28:55,  3.64s/it]  5%|▌         | 544/9908 [41:06<9:37:03,  3.70s/it]  6%|▌         | 545/9908 [41:10<9:30:07,  3.65s/it]  6%|▌         | 546/9908 [41:13<9:31:50,  3.66s/it]  6%|▌         | 547/9908 [41:17<9:37:48,  3.70s/it]  6%|▌         | 548/9908 [41:21<9:35:18,  3.69s/it]  6%|▌         | 549/9908 [41:25<9:41:10,  3.73s/it]09/20/2024 02:17:59 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.0469512976706028, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.6104962825775146, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.6574475765228271}
  6%|▌         | 550/9908 [41:28<9:31:58,  3.67s/it]  6%|▌         | 551/9908 [41:32<9:22:06,  3.60s/it]  6%|▌         | 552/9908 [41:35<9:08:50,  3.52s/it]  6%|▌         | 553/9908 [41:39<9:39:20,  3.72s/it]  6%|▌         | 554/9908 [41:43<9:48:21,  3.77s/it]  6%|▌         | 555/9908 [41:46<9:28:56,  3.65s/it]  6%|▌         | 556/9908 [41:50<9:38:43,  3.71s/it]  6%|▌         | 557/9908 [41:54<9:47:58,  3.77s/it]  6%|▌         | 558/9908 [41:57<9:30:05,  3.66s/it]  6%|▌         | 559/9908 [42:01<9:44:19,  3.75s/it]  6%|▌         | 560/9908 [42:05<9:53:06,  3.81s/it]  6%|▌         | 561/9908 [42:09<9:57:21,  3.83s/it]  6%|▌         | 562/9908 [42:13<9:43:17,  3.74s/it]  6%|▌         | 563/9908 [42:16<9:32:38,  3.68s/it]  6%|▌         | 564/9908 [42:20<9:45:21,  3.76s/it]  6%|▌         | 565/9908 [42:25<10:14:57,  3.95s/it]  6%|▌         | 566/9908 [42:28<9:53:49,  3.81s/it]   6%|▌         | 567/9908 [42:32<9:47:32,  3.77s/it]  6%|▌         | 568/9908 [42:35<9:36:49,  3.71s/it]  6%|▌         | 569/9908 [42:39<9:35:22,  3.70s/it]  6%|▌         | 570/9908 [42:43<9:32:29,  3.68s/it]  6%|▌         | 571/9908 [42:47<9:39:17,  3.72s/it]  6%|▌         | 572/9908 [42:50<9:32:43,  3.68s/it]  6%|▌         | 573/9908 [42:54<9:54:28,  3.82s/it]  6%|▌         | 574/9908 [42:58<9:36:19,  3.70s/it]  6%|▌         | 575/9908 [43:01<9:37:13,  3.71s/it]  6%|▌         | 576/9908 [43:05<9:41:31,  3.74s/it]  6%|▌         | 577/9908 [43:09<9:37:17,  3.71s/it]  6%|▌         | 578/9908 [43:12<9:23:41,  3.62s/it]  6%|▌         | 579/9908 [43:16<9:27:02,  3.65s/it]  6%|▌         | 580/9908 [43:20<9:52:52,  3.81s/it]  6%|▌         | 581/9908 [43:24<9:39:21,  3.73s/it]  6%|▌         | 582/9908 [43:27<9:29:40,  3.67s/it]  6%|▌         | 583/9908 [43:31<9:31:54,  3.68s/it]  6%|▌         | 584/9908 [43:35<9:51:54,  3.81s/it]  6%|▌         | 585/9908 [43:39<9:59:32,  3.86s/it]  6%|▌         | 586/9908 [43:43<9:45:22,  3.77s/it]  6%|▌         | 587/9908 [43:46<9:43:14,  3.75s/it]  6%|▌         | 588/9908 [43:50<9:29:10,  3.66s/it]  6%|▌         | 589/9908 [43:54<9:32:01,  3.68s/it]  6%|▌         | 590/9908 [43:57<9:26:21,  3.65s/it]  6%|▌         | 591/9908 [44:01<9:20:11,  3.61s/it]  6%|▌         | 592/9908 [44:04<9:33:22,  3.69s/it]  6%|▌         | 593/9908 [44:08<9:28:20,  3.66s/it]  6%|▌         | 594/9908 [44:12<9:30:13,  3.67s/it]  6%|▌         | 595/9908 [44:15<9:27:26,  3.66s/it]  6%|▌         | 596/9908 [44:19<9:17:59,  3.60s/it]  6%|▌         | 597/9908 [44:23<9:20:30,  3.61s/it]  6%|▌         | 598/9908 [44:27<9:50:31,  3.81s/it]  6%|▌         | 599/9908 [44:30<9:27:37,  3.66s/it]09/20/2024 02:21:05 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.034747879952192307, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.4406275749206543, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.4753754138946533}
  6%|▌         | 600/9908 [44:34<9:32:38,  3.69s/it]  6%|▌         | 601/9908 [44:38<9:38:12,  3.73s/it]  6%|▌         | 602/9908 [44:41<9:38:08,  3.73s/it]  6%|▌         | 603/9908 [44:45<9:32:48,  3.69s/it]  6%|▌         | 604/9908 [44:49<9:45:22,  3.77s/it]  6%|▌         | 605/9908 [44:53<9:42:16,  3.76s/it]  6%|▌         | 606/9908 [44:57<9:45:36,  3.78s/it]  6%|▌         | 607/9908 [45:00<9:37:55,  3.73s/it]  6%|▌         | 608/9908 [45:04<9:36:21,  3.72s/it]  6%|▌         | 609/9908 [45:08<9:50:07,  3.81s/it]  6%|▌         | 610/9908 [45:11<9:20:29,  3.62s/it]  6%|▌         | 611/9908 [45:14<9:04:02,  3.51s/it]  6%|▌         | 612/9908 [45:18<9:20:49,  3.62s/it]  6%|▌         | 613/9908 [45:22<9:29:20,  3.68s/it]  6%|▌         | 614/9908 [45:26<9:36:31,  3.72s/it]  6%|▌         | 615/9908 [45:30<9:39:22,  3.74s/it]  6%|▌         | 616/9908 [45:33<9:37:51,  3.73s/it]  6%|▌         | 617/9908 [45:37<9:38:52,  3.74s/it]  6%|▌         | 618/9908 [45:41<9:37:06,  3.73s/it]  6%|▌         | 619/9908 [45:45<9:42:42,  3.76s/it]  6%|▋         | 620/9908 [45:48<9:27:02,  3.66s/it]  6%|▋         | 621/9908 [45:52<9:27:57,  3.67s/it]  6%|▋         | 622/9908 [45:56<9:36:40,  3.73s/it]  6%|▋         | 623/9908 [45:59<9:24:15,  3.65s/it]  6%|▋         | 624/9908 [46:03<9:26:12,  3.66s/it]  6%|▋         | 625/9908 [46:07<9:34:30,  3.71s/it]  6%|▋         | 626/9908 [46:10<9:34:06,  3.71s/it]  6%|▋         | 627/9908 [46:14<9:30:08,  3.69s/it]  6%|▋         | 628/9908 [46:18<9:45:12,  3.78s/it]  6%|▋         | 629/9908 [46:22<9:46:37,  3.79s/it]  6%|▋         | 630/9908 [46:26<9:49:31,  3.81s/it]  6%|▋         | 631/9908 [46:29<9:36:02,  3.73s/it]  6%|▋         | 632/9908 [46:33<9:36:11,  3.73s/it]  6%|▋         | 633/9908 [46:37<9:39:18,  3.75s/it]  6%|▋         | 634/9908 [46:40<9:29:13,  3.68s/it]  6%|▋         | 635/9908 [46:44<9:35:00,  3.72s/it]  6%|▋         | 636/9908 [46:48<9:34:14,  3.72s/it]  6%|▋         | 637/9908 [46:52<9:48:45,  3.81s/it]  6%|▋         | 638/9908 [46:55<9:33:11,  3.71s/it]  6%|▋         | 639/9908 [46:59<9:29:42,  3.69s/it]  6%|▋         | 640/9908 [47:03<9:39:09,  3.75s/it]  6%|▋         | 641/9908 [47:06<9:23:15,  3.65s/it]  6%|▋         | 642/9908 [47:10<9:26:42,  3.67s/it]  6%|▋         | 643/9908 [47:14<9:35:06,  3.72s/it]  6%|▋         | 644/9908 [47:18<9:45:57,  3.80s/it]  7%|▋         | 645/9908 [47:21<9:33:48,  3.72s/it]  7%|▋         | 646/9908 [47:25<9:34:07,  3.72s/it]  7%|▋         | 647/9908 [47:29<9:31:13,  3.70s/it]  7%|▋         | 648/9908 [47:33<9:49:08,  3.82s/it]  7%|▋         | 649/9908 [47:36<9:47:11,  3.81s/it]09/20/2024 02:24:11 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03923747316002846, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.4326176643371582, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.4718551635742188}
  7%|▋         | 650/9908 [47:40<9:34:54,  3.73s/it]  7%|▋         | 651/9908 [47:44<9:39:08,  3.75s/it]  7%|▋         | 652/9908 [47:47<9:34:21,  3.72s/it]  7%|▋         | 653/9908 [47:51<9:27:22,  3.68s/it]  7%|▋         | 654/9908 [47:55<9:25:23,  3.67s/it]  7%|▋         | 655/9908 [47:58<9:15:25,  3.60s/it]  7%|▋         | 656/9908 [48:01<9:04:25,  3.53s/it]  7%|▋         | 657/9908 [48:05<9:17:25,  3.62s/it]  7%|▋         | 658/9908 [48:09<9:17:08,  3.61s/it]  7%|▋         | 659/9908 [48:13<9:31:37,  3.71s/it]  7%|▋         | 660/9908 [48:17<9:34:16,  3.73s/it]  7%|▋         | 661/9908 [48:20<9:37:31,  3.75s/it]  7%|▋         | 662/9908 [48:24<9:39:13,  3.76s/it]  7%|▋         | 663/9908 [48:28<9:46:33,  3.81s/it]  7%|▋         | 664/9908 [48:32<9:37:23,  3.75s/it]  7%|▋         | 665/9908 [48:36<9:44:59,  3.80s/it]  7%|▋         | 666/9908 [48:40<9:57:46,  3.88s/it]  7%|▋         | 667/9908 [48:43<9:41:06,  3.77s/it]  7%|▋         | 668/9908 [48:47<9:53:09,  3.85s/it]  7%|▋         | 669/9908 [48:51<9:48:00,  3.82s/it]  7%|▋         | 670/9908 [48:54<9:30:02,  3.70s/it]  7%|▋         | 671/9908 [48:58<9:35:53,  3.74s/it]  7%|▋         | 672/9908 [49:02<9:20:37,  3.64s/it]  7%|▋         | 673/9908 [49:05<9:26:17,  3.68s/it]  7%|▋         | 674/9908 [49:09<9:23:09,  3.66s/it]  7%|▋         | 675/9908 [49:13<9:27:51,  3.69s/it]  7%|▋         | 676/9908 [49:16<9:25:07,  3.67s/it]  7%|▋         | 677/9908 [49:21<9:47:23,  3.82s/it]  7%|▋         | 678/9908 [49:25<9:58:06,  3.89s/it]  7%|▋         | 679/9908 [49:28<9:49:34,  3.83s/it]  7%|▋         | 680/9908 [49:32<9:54:20,  3.86s/it]  7%|▋         | 681/9908 [49:36<9:55:30,  3.87s/it]  7%|▋         | 682/9908 [49:40<9:35:22,  3.74s/it]  7%|▋         | 683/9908 [49:43<9:21:58,  3.66s/it]  7%|▋         | 684/9908 [49:47<9:16:01,  3.62s/it]  7%|▋         | 685/9908 [49:50<9:26:12,  3.68s/it]  7%|▋         | 686/9908 [49:54<9:18:43,  3.64s/it]  7%|▋         | 687/9908 [49:57<9:14:28,  3.61s/it]  7%|▋         | 688/9908 [50:01<9:28:10,  3.70s/it]  7%|▋         | 689/9908 [50:05<9:12:54,  3.60s/it]  7%|▋         | 690/9908 [50:09<9:33:17,  3.73s/it]  7%|▋         | 691/9908 [50:13<9:34:29,  3.74s/it]  7%|▋         | 692/9908 [50:16<9:20:03,  3.65s/it]  7%|▋         | 693/9908 [50:20<9:20:39,  3.65s/it]  7%|▋         | 694/9908 [50:23<9:19:13,  3.64s/it]  7%|▋         | 695/9908 [50:27<9:13:46,  3.61s/it]  7%|▋         | 696/9908 [50:31<9:34:12,  3.74s/it]  7%|▋         | 697/9908 [50:35<9:46:36,  3.82s/it]  7%|▋         | 698/9908 [50:39<9:50:50,  3.85s/it]  7%|▋         | 699/9908 [50:42<9:42:50,  3.80s/it]09/20/2024 02:27:17 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.029787421226501465, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.3475470542907715, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.377334475517273}
  7%|▋         | 700/9908 [50:46<9:38:24,  3.77s/it]  7%|▋         | 701/9908 [50:50<9:45:30,  3.82s/it]  7%|▋         | 702/9908 [50:54<9:58:40,  3.90s/it]  7%|▋         | 703/9908 [50:58<9:33:13,  3.74s/it]  7%|▋         | 704/9908 [51:01<9:24:40,  3.68s/it]  7%|▋         | 705/9908 [51:05<9:49:38,  3.84s/it]  7%|▋         | 706/9908 [51:09<9:43:40,  3.81s/it]  7%|▋         | 707/9908 [51:13<9:35:22,  3.75s/it]  7%|▋         | 708/9908 [51:17<9:43:13,  3.80s/it]  7%|▋         | 709/9908 [51:20<9:33:15,  3.74s/it]  7%|▋         | 710/9908 [51:24<9:49:59,  3.85s/it]  7%|▋         | 711/9908 [51:28<9:32:41,  3.74s/it]  7%|▋         | 712/9908 [51:31<9:26:51,  3.70s/it]  7%|▋         | 713/9908 [51:35<9:31:28,  3.73s/it]  7%|▋         | 714/9908 [51:39<9:46:31,  3.83s/it]  7%|▋         | 715/9908 [51:43<9:34:52,  3.75s/it]  7%|▋         | 716/9908 [51:46<9:28:16,  3.71s/it]  7%|▋         | 717/9908 [51:50<9:14:22,  3.62s/it]  7%|▋         | 718/9908 [51:53<9:13:56,  3.62s/it]  7%|▋         | 719/9908 [51:57<9:30:58,  3.73s/it]  7%|▋         | 720/9908 [52:01<9:30:35,  3.73s/it]  7%|▋         | 721/9908 [52:05<9:29:59,  3.72s/it]  7%|▋         | 722/9908 [52:08<9:19:42,  3.66s/it]  7%|▋         | 723/9908 [52:12<9:29:16,  3.72s/it]  7%|▋         | 724/9908 [52:16<9:28:35,  3.71s/it]  7%|▋         | 725/9908 [52:20<9:31:15,  3.73s/it]  7%|▋         | 726/9908 [52:24<9:41:46,  3.80s/it]  7%|▋         | 727/9908 [52:28<9:53:28,  3.88s/it]  7%|▋         | 728/9908 [52:31<9:31:52,  3.74s/it]  7%|▋         | 729/9908 [52:34<9:12:11,  3.61s/it]  7%|▋         | 730/9908 [52:38<9:15:05,  3.63s/it]  7%|▋         | 731/9908 [52:42<9:18:10,  3.65s/it]  7%|▋         | 732/9908 [52:46<9:21:43,  3.67s/it]  7%|▋         | 733/9908 [52:49<9:24:11,  3.69s/it]  7%|▋         | 734/9908 [52:53<9:20:10,  3.66s/it]  7%|▋         | 735/9908 [52:57<9:24:43,  3.69s/it]  7%|▋         | 736/9908 [53:00<9:18:36,  3.65s/it]  7%|▋         | 737/9908 [53:04<9:05:01,  3.57s/it]  7%|▋         | 738/9908 [53:08<9:24:01,  3.69s/it]  7%|▋         | 739/9908 [53:11<9:17:01,  3.65s/it]  7%|▋         | 740/9908 [53:15<9:35:29,  3.77s/it]  7%|▋         | 741/9908 [53:19<9:24:09,  3.69s/it]  7%|▋         | 742/9908 [53:22<9:27:55,  3.72s/it]  7%|▋         | 743/9908 [53:26<9:22:39,  3.68s/it]  8%|▊         | 744/9908 [53:30<9:33:33,  3.76s/it]  8%|▊         | 745/9908 [53:34<9:43:24,  3.82s/it]  8%|▊         | 746/9908 [53:37<9:33:23,  3.76s/it]  8%|▊         | 747/9908 [53:41<9:23:43,  3.69s/it]  8%|▊         | 748/9908 [53:45<9:41:47,  3.81s/it]  8%|▊         | 749/9908 [53:49<9:30:50,  3.74s/it]09/20/2024 02:30:23 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04637918621301651, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 2.2959845066070557, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 2.3423635959625244}
  8%|▊         | 750/9908 [53:53<9:44:36,  3.83s/it]  8%|▊         | 751/9908 [53:56<9:30:47,  3.74s/it]  8%|▊         | 752/9908 [54:00<9:27:08,  3.72s/it]  8%|▊         | 753/9908 [54:03<9:11:06,  3.61s/it]  8%|▊         | 754/9908 [54:07<9:17:33,  3.65s/it]  8%|▊         | 755/9908 [54:11<9:46:07,  3.84s/it]  8%|▊         | 756/9908 [54:15<9:37:28,  3.79s/it]  8%|▊         | 757/9908 [54:19<9:30:35,  3.74s/it]  8%|▊         | 758/9908 [54:22<9:26:55,  3.72s/it]  8%|▊         | 759/9908 [54:26<9:23:04,  3.69s/it]  8%|▊         | 760/9908 [54:30<9:19:29,  3.67s/it]  8%|▊         | 761/9908 [54:33<9:15:18,  3.64s/it]  8%|▊         | 762/9908 [54:37<9:33:31,  3.76s/it]  8%|▊         | 763/9908 [54:41<9:40:32,  3.81s/it]  8%|▊         | 764/9908 [54:45<9:26:26,  3.72s/it]  8%|▊         | 765/9908 [54:48<9:25:37,  3.71s/it]  8%|▊         | 766/9908 [54:52<9:14:40,  3.64s/it]  8%|▊         | 767/9908 [54:56<9:29:53,  3.74s/it]  8%|▊         | 768/9908 [54:59<9:31:17,  3.75s/it]  8%|▊         | 769/9908 [55:03<9:16:37,  3.65s/it]  8%|▊         | 770/9908 [55:07<9:32:42,  3.76s/it]  8%|▊         | 771/9908 [55:11<9:25:31,  3.71s/it]  8%|▊         | 772/9908 [55:14<9:10:32,  3.62s/it]  8%|▊         | 773/9908 [55:18<9:23:26,  3.70s/it]  8%|▊         | 774/9908 [55:22<9:40:28,  3.81s/it]  8%|▊         | 775/9908 [55:26<9:51:47,  3.89s/it]  8%|▊         | 776/9908 [55:30<9:44:34,  3.84s/it]  8%|▊         | 777/9908 [55:33<9:24:27,  3.71s/it]  8%|▊         | 778/9908 [55:37<9:18:31,  3.67s/it]  8%|▊         | 779/9908 [55:41<9:33:13,  3.77s/it]  8%|▊         | 780/9908 [55:44<9:16:17,  3.66s/it]  8%|▊         | 781/9908 [55:48<9:13:37,  3.64s/it]  8%|▊         | 782/9908 [55:51<9:09:02,  3.61s/it]  8%|▊         | 783/9908 [55:56<9:44:18,  3.84s/it]  8%|▊         | 784/9908 [55:59<9:38:41,  3.81s/it]  8%|▊         | 785/9908 [56:03<9:34:42,  3.78s/it]  8%|▊         | 786/9908 [56:07<9:26:00,  3.72s/it]  8%|▊         | 787/9908 [56:10<9:27:52,  3.74s/it]  8%|▊         | 788/9908 [56:14<9:25:43,  3.72s/it]  8%|▊         | 789/9908 [56:18<9:39:51,  3.82s/it]  8%|▊         | 790/9908 [56:22<9:33:08,  3.77s/it]  8%|▊         | 791/9908 [56:25<9:06:55,  3.60s/it]  8%|▊         | 792/9908 [56:29<9:07:38,  3.60s/it]  8%|▊         | 793/9908 [56:32<9:10:08,  3.62s/it]  8%|▊         | 794/9908 [56:36<9:21:48,  3.70s/it]  8%|▊         | 795/9908 [56:40<9:21:47,  3.70s/it]  8%|▊         | 796/9908 [56:44<9:22:07,  3.70s/it]  8%|▊         | 797/9908 [56:47<9:16:31,  3.67s/it]  8%|▊         | 798/9908 [56:51<9:13:28,  3.65s/it]  8%|▊         | 799/9908 [56:54<9:17:42,  3.67s/it]09/20/2024 02:33:29 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.040253207087516785, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.8029320240020752, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.8431851863861084}
  8%|▊         | 800/9908 [56:58<9:08:32,  3.61s/it]  8%|▊         | 801/9908 [57:02<9:26:16,  3.73s/it]  8%|▊         | 802/9908 [57:05<9:14:56,  3.66s/it]  8%|▊         | 803/9908 [57:09<9:11:43,  3.64s/it]  8%|▊         | 804/9908 [57:13<9:09:30,  3.62s/it]  8%|▊         | 805/9908 [57:16<9:21:02,  3.70s/it]  8%|▊         | 806/9908 [57:20<9:26:34,  3.73s/it]  8%|▊         | 807/9908 [57:24<9:28:00,  3.74s/it]  8%|▊         | 808/9908 [57:28<9:26:57,  3.74s/it]  8%|▊         | 809/9908 [57:32<9:34:05,  3.79s/it]  8%|▊         | 810/9908 [57:35<9:21:42,  3.70s/it]  8%|▊         | 811/9908 [57:39<9:37:53,  3.81s/it]  8%|▊         | 812/9908 [57:43<9:33:15,  3.78s/it]  8%|▊         | 813/9908 [57:47<9:26:49,  3.74s/it]  8%|▊         | 814/9908 [57:50<9:18:38,  3.69s/it]  8%|▊         | 815/9908 [57:54<9:20:47,  3.70s/it]  8%|▊         | 816/9908 [57:58<9:30:50,  3.77s/it]  8%|▊         | 817/9908 [58:02<9:27:06,  3.74s/it]  8%|▊         | 818/9908 [58:05<9:37:05,  3.81s/it]  8%|▊         | 819/9908 [58:09<9:20:13,  3.70s/it]  8%|▊         | 820/9908 [58:13<9:20:22,  3.70s/it]  8%|▊         | 821/9908 [58:16<9:17:03,  3.68s/it]  8%|▊         | 822/9908 [58:20<9:07:37,  3.62s/it]  8%|▊         | 823/9908 [58:23<9:13:01,  3.65s/it]  8%|▊         | 824/9908 [58:27<9:17:53,  3.68s/it]  8%|▊         | 825/9908 [58:31<9:18:06,  3.69s/it]  8%|▊         | 826/9908 [58:34<9:13:18,  3.66s/it]  8%|▊         | 827/9908 [58:38<9:16:56,  3.68s/it]  8%|▊         | 828/9908 [58:42<9:22:59,  3.72s/it]  8%|▊         | 829/9908 [58:46<9:23:52,  3.73s/it]  8%|▊         | 830/9908 [58:50<9:25:43,  3.74s/it]  8%|▊         | 831/9908 [58:53<9:32:23,  3.78s/it]  8%|▊         | 832/9908 [58:57<9:23:27,  3.72s/it]  8%|▊         | 833/9908 [59:01<9:13:25,  3.66s/it]  8%|▊         | 834/9908 [59:04<9:15:07,  3.67s/it]  8%|▊         | 835/9908 [59:08<9:15:04,  3.67s/it]  8%|▊         | 836/9908 [59:11<9:10:46,  3.64s/it]  8%|▊         | 837/9908 [59:15<9:16:26,  3.68s/it]  8%|▊         | 838/9908 [59:19<9:11:57,  3.65s/it]  8%|▊         | 839/9908 [59:23<9:22:07,  3.72s/it]  8%|▊         | 840/9908 [59:27<9:26:06,  3.75s/it]  8%|▊         | 841/9908 [59:30<9:25:01,  3.74s/it]  8%|▊         | 842/9908 [59:34<9:26:40,  3.75s/it]  9%|▊         | 843/9908 [59:38<9:38:28,  3.83s/it]  9%|▊         | 844/9908 [59:42<9:41:10,  3.85s/it]  9%|▊         | 845/9908 [59:46<9:34:40,  3.80s/it]  9%|▊         | 846/9908 [59:49<9:20:15,  3.71s/it]  9%|▊         | 847/9908 [59:53<9:13:50,  3.67s/it]  9%|▊         | 848/9908 [59:57<9:44:20,  3.87s/it]  9%|▊         | 849/9908 [1:00:01<9:42:59,  3.86s/it]09/20/2024 02:36:35 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.030142271891236305, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.3276035785675049, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.357745885848999}
  9%|▊         | 850/9908 [1:00:05<9:34:07,  3.80s/it]  9%|▊         | 851/9908 [1:00:08<9:39:43,  3.84s/it]  9%|▊         | 852/9908 [1:00:12<9:23:27,  3.73s/it]  9%|▊         | 853/9908 [1:00:16<9:22:34,  3.73s/it]  9%|▊         | 854/9908 [1:00:19<9:20:06,  3.71s/it]  9%|▊         | 855/9908 [1:00:23<9:28:53,  3.77s/it]  9%|▊         | 856/9908 [1:00:27<9:23:56,  3.74s/it]  9%|▊         | 857/9908 [1:00:31<9:33:49,  3.80s/it]  9%|▊         | 858/9908 [1:00:35<9:37:58,  3.83s/it]  9%|▊         | 859/9908 [1:00:38<9:15:32,  3.68s/it]  9%|▊         | 860/9908 [1:00:42<9:29:24,  3.78s/it]  9%|▊         | 861/9908 [1:00:46<9:13:31,  3.67s/it]  9%|▊         | 862/9908 [1:00:49<9:15:06,  3.68s/it]  9%|▊         | 863/9908 [1:00:53<9:31:18,  3.79s/it]  9%|▊         | 864/9908 [1:00:57<9:19:05,  3.71s/it]  9%|▊         | 865/9908 [1:01:00<9:11:37,  3.66s/it]  9%|▊         | 866/9908 [1:01:04<9:14:21,  3.68s/it]  9%|▉         | 867/9908 [1:01:07<8:59:33,  3.58s/it]  9%|▉         | 868/9908 [1:01:11<9:20:03,  3.72s/it]  9%|▉         | 869/9908 [1:01:16<9:39:12,  3.84s/it]  9%|▉         | 870/9908 [1:01:19<9:20:51,  3.72s/it]  9%|▉         | 871/9908 [1:01:23<9:14:31,  3.68s/it]  9%|▉         | 872/9908 [1:01:26<9:06:21,  3.63s/it]  9%|▉         | 873/9908 [1:01:30<8:59:20,  3.58s/it]  9%|▉         | 874/9908 [1:01:33<9:07:25,  3.64s/it]  9%|▉         | 875/9908 [1:01:37<9:05:45,  3.63s/it]  9%|▉         | 876/9908 [1:01:41<9:14:55,  3.69s/it]  9%|▉         | 877/9908 [1:01:45<9:18:03,  3.71s/it]  9%|▉         | 878/9908 [1:01:48<9:22:22,  3.74s/it]  9%|▉         | 879/9908 [1:01:52<9:20:11,  3.72s/it]  9%|▉         | 880/9908 [1:01:56<9:22:27,  3.74s/it]  9%|▉         | 881/9908 [1:02:00<9:33:19,  3.81s/it]  9%|▉         | 882/9908 [1:02:03<9:14:23,  3.69s/it]  9%|▉         | 883/9908 [1:02:07<9:09:03,  3.65s/it]  9%|▉         | 884/9908 [1:02:11<9:15:05,  3.69s/it]  9%|▉         | 885/9908 [1:02:14<9:20:24,  3.73s/it]  9%|▉         | 886/9908 [1:02:18<9:19:21,  3.72s/it]  9%|▉         | 887/9908 [1:02:22<9:45:36,  3.89s/it]  9%|▉         | 888/9908 [1:02:26<9:53:17,  3.95s/it]  9%|▉         | 889/9908 [1:02:30<9:34:14,  3.82s/it]  9%|▉         | 890/9908 [1:02:34<9:39:37,  3.86s/it]  9%|▉         | 891/9908 [1:02:37<9:25:24,  3.76s/it]  9%|▉         | 892/9908 [1:02:41<9:24:24,  3.76s/it]  9%|▉         | 893/9908 [1:02:45<9:10:46,  3.67s/it]  9%|▉         | 894/9908 [1:02:48<9:18:07,  3.72s/it]  9%|▉         | 895/9908 [1:02:52<9:15:37,  3.70s/it]  9%|▉         | 896/9908 [1:02:56<9:24:03,  3.76s/it]  9%|▉         | 897/9908 [1:03:00<9:19:10,  3.72s/it]  9%|▉         | 898/9908 [1:03:03<9:17:54,  3.72s/it]  9%|▉         | 899/9908 [1:03:07<9:17:07,  3.71s/it]09/20/2024 02:39:42 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.02732659876346588, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.3982093334197998, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.4255359172821045}
  9%|▉         | 900/9908 [1:03:11<9:16:47,  3.71s/it]  9%|▉         | 901/9908 [1:03:15<9:20:49,  3.74s/it]  9%|▉         | 902/9908 [1:03:18<9:07:58,  3.65s/it]  9%|▉         | 903/9908 [1:03:22<9:09:19,  3.66s/it]  9%|▉         | 904/9908 [1:03:25<9:08:48,  3.66s/it]  9%|▉         | 905/9908 [1:03:29<9:00:52,  3.60s/it]  9%|▉         | 906/9908 [1:03:33<9:15:19,  3.70s/it]  9%|▉         | 907/9908 [1:03:37<9:22:03,  3.75s/it]  9%|▉         | 908/9908 [1:03:40<9:17:46,  3.72s/it]  9%|▉         | 909/9908 [1:03:44<9:14:51,  3.70s/it]  9%|▉         | 910/9908 [1:03:47<9:07:17,  3.65s/it]  9%|▉         | 911/9908 [1:03:51<9:09:12,  3.66s/it]  9%|▉         | 912/9908 [1:03:55<9:15:26,  3.70s/it]  9%|▉         | 913/9908 [1:03:59<9:17:15,  3.72s/it]  9%|▉         | 914/9908 [1:04:02<9:14:52,  3.70s/it]  9%|▉         | 915/9908 [1:04:07<9:42:39,  3.89s/it]  9%|▉         | 916/9908 [1:04:10<9:26:41,  3.78s/it]  9%|▉         | 917/9908 [1:04:14<9:37:59,  3.86s/it]  9%|▉         | 918/9908 [1:04:18<9:35:28,  3.84s/it]  9%|▉         | 919/9908 [1:04:22<9:29:25,  3.80s/it]  9%|▉         | 920/9908 [1:04:25<9:14:53,  3.70s/it]  9%|▉         | 921/9908 [1:04:29<9:05:56,  3.64s/it]  9%|▉         | 922/9908 [1:04:32<8:59:02,  3.60s/it]  9%|▉         | 923/9908 [1:04:36<9:04:32,  3.64s/it]  9%|▉         | 924/9908 [1:04:40<9:02:04,  3.62s/it]  9%|▉         | 925/9908 [1:04:43<9:05:36,  3.64s/it]  9%|▉         | 926/9908 [1:04:47<9:02:24,  3.62s/it]  9%|▉         | 927/9908 [1:04:50<9:06:07,  3.65s/it]  9%|▉         | 928/9908 [1:04:54<9:14:52,  3.71s/it]  9%|▉         | 929/9908 [1:04:58<9:16:00,  3.72s/it]  9%|▉         | 930/9908 [1:05:02<9:17:36,  3.73s/it]  9%|▉         | 931/9908 [1:05:05<9:13:54,  3.70s/it]  9%|▉         | 932/9908 [1:05:09<9:08:39,  3.67s/it]  9%|▉         | 933/9908 [1:05:13<9:15:32,  3.71s/it]  9%|▉         | 934/9908 [1:05:17<9:20:36,  3.75s/it]  9%|▉         | 935/9908 [1:05:20<9:17:25,  3.73s/it]  9%|▉         | 936/9908 [1:05:24<9:15:58,  3.72s/it]  9%|▉         | 937/9908 [1:05:28<9:31:52,  3.82s/it]  9%|▉         | 938/9908 [1:05:32<9:19:46,  3.74s/it]  9%|▉         | 939/9908 [1:05:35<9:20:50,  3.75s/it]  9%|▉         | 940/9908 [1:05:39<9:18:51,  3.74s/it]  9%|▉         | 941/9908 [1:05:43<9:34:32,  3.84s/it] 10%|▉         | 942/9908 [1:05:47<9:16:26,  3.72s/it] 10%|▉         | 943/9908 [1:05:50<9:16:39,  3.73s/it] 10%|▉         | 944/9908 [1:05:54<9:07:49,  3.67s/it] 10%|▉         | 945/9908 [1:05:58<9:06:32,  3.66s/it] 10%|▉         | 946/9908 [1:06:01<8:55:24,  3.58s/it] 10%|▉         | 947/9908 [1:06:05<9:00:45,  3.62s/it] 10%|▉         | 948/9908 [1:06:08<9:03:20,  3.64s/it] 10%|▉         | 949/9908 [1:06:12<9:18:18,  3.74s/it]09/20/2024 02:42:47 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.02472660131752491, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.0933723449707031, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.1180989742279053}
 10%|▉         | 950/9908 [1:06:16<9:18:55,  3.74s/it] 10%|▉         | 951/9908 [1:06:20<9:27:40,  3.80s/it] 10%|▉         | 952/9908 [1:06:24<9:33:24,  3.84s/it] 10%|▉         | 953/9908 [1:06:28<9:28:37,  3.81s/it] 10%|▉         | 954/9908 [1:06:31<9:24:58,  3.79s/it] 10%|▉         | 955/9908 [1:06:35<9:09:36,  3.68s/it] 10%|▉         | 956/9908 [1:06:39<9:16:37,  3.73s/it] 10%|▉         | 957/9908 [1:06:43<9:23:56,  3.78s/it] 10%|▉         | 958/9908 [1:06:46<9:23:31,  3.78s/it] 10%|▉         | 959/9908 [1:06:50<9:25:53,  3.79s/it] 10%|▉         | 960/9908 [1:06:54<9:15:55,  3.73s/it] 10%|▉         | 961/9908 [1:06:58<9:18:18,  3.74s/it] 10%|▉         | 962/9908 [1:07:02<9:26:13,  3.80s/it] 10%|▉         | 963/9908 [1:07:05<9:18:50,  3.75s/it] 10%|▉         | 964/9908 [1:07:09<9:12:54,  3.71s/it] 10%|▉         | 965/9908 [1:07:12<9:01:10,  3.63s/it] 10%|▉         | 966/9908 [1:07:16<9:12:33,  3.71s/it] 10%|▉         | 967/9908 [1:07:19<8:56:22,  3.60s/it] 10%|▉         | 968/9908 [1:07:23<9:00:14,  3.63s/it] 10%|▉         | 969/9908 [1:07:27<9:12:21,  3.71s/it] 10%|▉         | 970/9908 [1:07:31<9:09:21,  3.69s/it] 10%|▉         | 971/9908 [1:07:34<9:02:06,  3.64s/it] 10%|▉         | 972/9908 [1:07:38<9:04:48,  3.66s/it] 10%|▉         | 973/9908 [1:07:42<9:03:52,  3.65s/it] 10%|▉         | 974/9908 [1:07:45<8:51:04,  3.57s/it] 10%|▉         | 975/9908 [1:07:49<9:11:57,  3.71s/it] 10%|▉         | 976/9908 [1:07:52<9:01:34,  3.64s/it] 10%|▉         | 977/9908 [1:07:56<8:59:41,  3.63s/it] 10%|▉         | 978/9908 [1:08:00<9:11:07,  3.70s/it] 10%|▉         | 979/9908 [1:08:04<9:14:27,  3.73s/it] 10%|▉         | 980/9908 [1:08:07<9:14:32,  3.73s/it] 10%|▉         | 981/9908 [1:08:11<9:10:51,  3.70s/it] 10%|▉         | 982/9908 [1:08:15<9:11:46,  3.71s/it] 10%|▉         | 983/9908 [1:08:18<9:01:56,  3.64s/it] 10%|▉         | 984/9908 [1:08:22<9:12:21,  3.71s/it] 10%|▉         | 985/9908 [1:08:26<9:27:56,  3.82s/it] 10%|▉         | 986/9908 [1:08:30<9:16:19,  3.74s/it] 10%|▉         | 987/9908 [1:08:33<9:07:55,  3.69s/it] 10%|▉         | 988/9908 [1:08:37<9:07:06,  3.68s/it] 10%|▉         | 989/9908 [1:08:41<9:10:33,  3.70s/it] 10%|▉         | 990/9908 [1:08:45<9:13:03,  3.72s/it] 10%|█         | 991/9908 [1:08:48<9:04:58,  3.67s/it] 10%|█         | 992/9908 [1:08:52<9:10:56,  3.71s/it] 10%|█         | 993/9908 [1:08:56<9:07:56,  3.69s/it] 10%|█         | 994/9908 [1:08:59<9:15:40,  3.74s/it] 10%|█         | 995/9908 [1:09:03<9:10:54,  3.71s/it] 10%|█         | 996/9908 [1:09:07<9:15:36,  3.74s/it] 10%|█         | 997/9908 [1:09:11<9:13:38,  3.73s/it] 10%|█         | 998/9908 [1:09:14<9:07:24,  3.69s/it] 10%|█         | 999/9908 [1:09:18<9:19:01,  3.76s/it]09/20/2024 02:45:51 - INFO - __main__ -   evaluate on ret%tvas--msrvtt_ret task
09/20/2024 02:45:51 - INFO - __main__ -   start running ret%tvas validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:00<01:04,  3.44it/s][A
  1%|          | 2/221 [00:00<01:33,  2.35it/s][A
  1%|▏         | 3/221 [00:02<02:57,  1.23it/s][A
  2%|▏         | 5/221 [00:02<01:26,  2.51it/s][A
  3%|▎         | 6/221 [00:02<01:28,  2.42it/s][A
  3%|▎         | 7/221 [00:03<01:25,  2.49it/s][A
  4%|▎         | 8/221 [00:03<01:17,  2.76it/s][A
  4%|▍         | 9/221 [00:03<01:14,  2.84it/s][A
  5%|▍         | 10/221 [00:04<01:17,  2.71it/s][A
  5%|▌         | 12/221 [00:04<01:23,  2.50it/s][A
  6%|▌         | 13/221 [00:05<01:10,  2.94it/s][A
  6%|▋         | 14/221 [00:05<01:00,  3.45it/s][A
  7%|▋         | 15/221 [00:05<01:02,  3.28it/s][A
  7%|▋         | 16/221 [00:06<01:21,  2.52it/s][A
  8%|▊         | 17/221 [00:06<01:42,  2.00it/s][A
  8%|▊         | 18/221 [00:08<02:24,  1.40it/s][A
  9%|▊         | 19/221 [00:08<02:22,  1.41it/s][A
 10%|▉         | 21/221 [00:09<01:35,  2.10it/s][A
 10%|▉         | 22/221 [00:09<01:30,  2.19it/s][A
 11%|█         | 24/221 [00:10<01:06,  2.98it/s][A
 11%|█▏        | 25/221 [00:10<01:04,  3.03it/s][A
 12%|█▏        | 26/221 [00:10<01:15,  2.58it/s][A
 13%|█▎        | 28/221 [00:11<01:06,  2.89it/s][A
 13%|█▎        | 29/221 [00:11<01:09,  2.77it/s][A
 14%|█▎        | 30/221 [00:12<01:35,  2.00it/s][A
 14%|█▍        | 31/221 [00:13<01:40,  1.88it/s][A
 15%|█▍        | 33/221 [00:13<01:13,  2.57it/s][A
 16%|█▌        | 35/221 [00:14<01:02,  2.96it/s][A
 16%|█▋        | 36/221 [00:14<00:58,  3.17it/s][A
 17%|█▋        | 37/221 [00:15<01:15,  2.44it/s][A
 17%|█▋        | 38/221 [00:16<01:37,  1.88it/s][A
 18%|█▊        | 39/221 [00:16<01:18,  2.31it/s][A
 18%|█▊        | 40/221 [00:16<01:14,  2.43it/s][A
 19%|█▊        | 41/221 [00:16<00:59,  3.00it/s][A
 19%|█▉        | 42/221 [00:17<01:05,  2.73it/s][A
 19%|█▉        | 43/221 [00:17<00:55,  3.22it/s][A
 20%|█▉        | 44/221 [00:17<00:45,  3.89it/s][A
 20%|██        | 45/221 [00:22<05:05,  1.73s/it][A
 21%|██        | 46/221 [00:23<03:55,  1.35s/it][A
 21%|██▏       | 47/221 [00:24<04:01,  1.39s/it][A
 22%|██▏       | 48/221 [00:24<02:57,  1.02s/it][A
 22%|██▏       | 49/221 [00:25<02:13,  1.29it/s][A
 23%|██▎       | 50/221 [00:25<01:40,  1.70it/s][A
 23%|██▎       | 51/221 [00:25<01:19,  2.15it/s][A
 24%|██▎       | 52/221 [00:25<01:02,  2.68it/s][A
 24%|██▍       | 53/221 [00:25<00:56,  2.98it/s][A
 24%|██▍       | 54/221 [00:26<01:23,  2.01it/s][A
 25%|██▍       | 55/221 [00:31<04:46,  1.72s/it][A
 25%|██▌       | 56/221 [00:31<03:31,  1.28s/it][A
 26%|██▌       | 57/221 [00:31<02:42,  1.01it/s][A
 27%|██▋       | 59/221 [00:32<01:32,  1.75it/s][A
 27%|██▋       | 60/221 [00:32<01:32,  1.73it/s][A
 28%|██▊       | 61/221 [00:32<01:16,  2.10it/s][A
 28%|██▊       | 62/221 [00:33<01:08,  2.31it/s][A
 29%|██▊       | 63/221 [00:33<01:11,  2.21it/s][A
 29%|██▉       | 64/221 [00:34<01:24,  1.86it/s][A
 29%|██▉       | 65/221 [00:34<01:15,  2.07it/s][A
 30%|██▉       | 66/221 [00:35<01:13,  2.11it/s][A
 30%|███       | 67/221 [00:35<01:04,  2.38it/s][A
 31%|███       | 68/221 [00:35<00:56,  2.71it/s][A
 31%|███       | 69/221 [00:36<01:17,  1.97it/s][A
 32%|███▏      | 70/221 [00:36<00:58,  2.57it/s][A
 32%|███▏      | 71/221 [00:37<01:04,  2.34it/s][A
 33%|███▎      | 72/221 [00:37<01:10,  2.12it/s][A
 33%|███▎      | 73/221 [00:38<01:24,  1.75it/s][A
 33%|███▎      | 74/221 [00:38<01:05,  2.23it/s][A
 34%|███▍      | 75/221 [00:39<01:01,  2.38it/s][A
 34%|███▍      | 76/221 [00:39<01:02,  2.31it/s][A
 35%|███▍      | 77/221 [00:40<01:28,  1.63it/s][A
 35%|███▌      | 78/221 [00:40<01:08,  2.10it/s][A
 36%|███▌      | 79/221 [00:41<01:36,  1.48it/s][A
 37%|███▋      | 81/221 [00:44<01:59,  1.17it/s][A
 37%|███▋      | 82/221 [00:48<04:16,  1.84s/it][A
 38%|███▊      | 83/221 [00:49<03:47,  1.65s/it][A
 38%|███▊      | 84/221 [00:50<02:51,  1.26s/it][A
 38%|███▊      | 85/221 [00:50<02:06,  1.07it/s][A
 39%|███▉      | 86/221 [00:50<01:45,  1.29it/s][A
 39%|███▉      | 87/221 [00:51<01:56,  1.15it/s][A
 40%|███▉      | 88/221 [00:52<01:41,  1.31it/s][A
 40%|████      | 89/221 [00:53<01:43,  1.27it/s][A
 41%|████      | 90/221 [00:53<01:27,  1.49it/s][A
 41%|████      | 91/221 [00:53<01:10,  1.85it/s][A
 42%|████▏     | 92/221 [00:54<01:03,  2.02it/s][A
 42%|████▏     | 93/221 [00:54<01:07,  1.91it/s][A
 43%|████▎     | 94/221 [00:55<01:15,  1.69it/s][A
 43%|████▎     | 95/221 [00:55<01:01,  2.04it/s][A
 43%|████▎     | 96/221 [00:58<02:25,  1.17s/it][A
 44%|████▍     | 97/221 [00:58<01:49,  1.13it/s][A
 44%|████▍     | 98/221 [00:59<01:44,  1.18it/s][A
 45%|████▍     | 99/221 [00:59<01:21,  1.50it/s][A
 45%|████▌     | 100/221 [01:00<01:19,  1.53it/s][A
 46%|████▌     | 101/221 [01:00<01:03,  1.88it/s][A
 46%|████▌     | 102/221 [01:02<02:06,  1.06s/it][A
 47%|████▋     | 103/221 [01:02<01:32,  1.28it/s][A
 47%|████▋     | 104/221 [01:03<01:15,  1.55it/s][A
 48%|████▊     | 105/221 [01:03<01:10,  1.65it/s][A
 48%|████▊     | 106/221 [01:04<01:11,  1.61it/s][A
 48%|████▊     | 107/221 [01:04<01:01,  1.85it/s][A
 49%|████▉     | 108/221 [01:05<00:54,  2.06it/s][A
 49%|████▉     | 109/221 [01:05<00:44,  2.52it/s][A
 50%|█████     | 111/221 [01:05<00:34,  3.15it/s][A
 51%|█████     | 112/221 [01:06<00:36,  2.96it/s][A
 51%|█████     | 113/221 [01:06<00:33,  3.18it/s][A
 52%|█████▏    | 115/221 [01:06<00:28,  3.77it/s][A
 52%|█████▏    | 116/221 [01:11<02:03,  1.18s/it][A
 53%|█████▎    | 117/221 [01:11<01:43,  1.01it/s][A
 53%|█████▎    | 118/221 [01:11<01:24,  1.22it/s][A
 54%|█████▍    | 119/221 [01:12<01:10,  1.45it/s][A
 54%|█████▍    | 120/221 [01:12<00:59,  1.69it/s][A
 55%|█████▍    | 121/221 [01:12<00:51,  1.95it/s][A
 55%|█████▌    | 122/221 [01:13<00:47,  2.10it/s][A
 56%|█████▌    | 123/221 [01:14<01:12,  1.34it/s][A
 56%|█████▌    | 124/221 [01:14<00:55,  1.74it/s][A
 57%|█████▋    | 125/221 [01:15<01:02,  1.53it/s][A
 57%|█████▋    | 126/221 [01:16<00:58,  1.62it/s][A
 57%|█████▋    | 127/221 [01:16<00:55,  1.69it/s][A
 58%|█████▊    | 128/221 [01:17<00:56,  1.64it/s][A
 58%|█████▊    | 129/221 [01:17<00:43,  2.11it/s][A
 59%|█████▉    | 130/221 [01:17<00:42,  2.13it/s][A
 59%|█████▉    | 131/221 [01:18<00:43,  2.07it/s][A
 60%|█████▉    | 132/221 [01:19<00:53,  1.66it/s][A
 60%|██████    | 133/221 [01:19<00:45,  1.95it/s][A
 61%|██████    | 134/221 [01:23<02:15,  1.56s/it][A
 61%|██████    | 135/221 [01:24<02:00,  1.40s/it][A
 62%|██████▏   | 136/221 [01:25<01:33,  1.10s/it][A
 62%|██████▏   | 137/221 [01:25<01:10,  1.19it/s][A
 62%|██████▏   | 138/221 [01:26<01:30,  1.09s/it][A
 63%|██████▎   | 139/221 [01:27<01:11,  1.14it/s][A
 63%|██████▎   | 140/221 [01:27<01:01,  1.32it/s][A
 64%|██████▍   | 141/221 [01:28<00:54,  1.47it/s][A
 64%|██████▍   | 142/221 [01:28<00:51,  1.54it/s][A
 65%|██████▍   | 143/221 [01:29<00:52,  1.49it/s][A
 65%|██████▌   | 144/221 [01:29<00:39,  1.94it/s][A
 66%|██████▌   | 146/221 [01:29<00:22,  3.26it/s][A
 67%|██████▋   | 148/221 [01:31<00:34,  2.14it/s][A
 67%|██████▋   | 149/221 [01:31<00:31,  2.29it/s][A
 68%|██████▊   | 150/221 [01:32<00:34,  2.08it/s][A
 68%|██████▊   | 151/221 [01:32<00:28,  2.43it/s][A
 69%|██████▉   | 152/221 [01:32<00:26,  2.60it/s][A
 69%|██████▉   | 153/221 [01:32<00:21,  3.11it/s][A
 70%|██████▉   | 154/221 [01:33<00:24,  2.78it/s][A
 70%|███████   | 155/221 [01:33<00:24,  2.66it/s][A
 71%|███████   | 156/221 [01:34<00:21,  3.09it/s][A
 71%|███████   | 157/221 [01:39<02:04,  1.94s/it][A
 71%|███████▏  | 158/221 [01:40<01:32,  1.47s/it][A
 72%|███████▏  | 159/221 [01:40<01:07,  1.08s/it][A
 72%|███████▏  | 160/221 [01:40<00:49,  1.24it/s][A
 73%|███████▎  | 161/221 [01:40<00:40,  1.49it/s][A
 74%|███████▍  | 163/221 [01:41<00:26,  2.19it/s][A
 74%|███████▍  | 164/221 [01:41<00:22,  2.49it/s][A
 75%|███████▍  | 165/221 [01:42<00:34,  1.62it/s][A
 75%|███████▌  | 166/221 [01:44<00:49,  1.12it/s][A
 76%|███████▌  | 167/221 [01:44<00:41,  1.31it/s][A
 76%|███████▌  | 168/221 [01:53<02:34,  2.91s/it][A
 76%|███████▋  | 169/221 [01:53<01:52,  2.16s/it][A
 77%|███████▋  | 170/221 [01:53<01:23,  1.65s/it][A
 77%|███████▋  | 171/221 [01:54<01:03,  1.27s/it][A
 78%|███████▊  | 172/221 [01:54<00:52,  1.06s/it][A
 78%|███████▊  | 173/221 [01:55<00:45,  1.06it/s][A
 79%|███████▊  | 174/221 [01:55<00:32,  1.44it/s][A
 79%|███████▉  | 175/221 [01:55<00:24,  1.86it/s][A
 80%|███████▉  | 176/221 [01:55<00:20,  2.20it/s][A
 80%|████████  | 177/221 [01:56<00:17,  2.53it/s][A
 81%|████████  | 178/221 [01:56<00:15,  2.70it/s][A
 81%|████████  | 179/221 [01:57<00:17,  2.45it/s][A
 81%|████████▏ | 180/221 [01:57<00:13,  3.05it/s][A
 82%|████████▏ | 182/221 [01:57<00:13,  2.90it/s][A
 83%|████████▎ | 183/221 [01:59<00:21,  1.75it/s][A
 83%|████████▎ | 184/221 [02:00<00:24,  1.51it/s][A
 84%|████████▍ | 186/221 [02:00<00:16,  2.09it/s][A
 85%|████████▍ | 187/221 [02:00<00:14,  2.27it/s][A
 85%|████████▌ | 188/221 [02:01<00:13,  2.47it/s][A
 86%|████████▌ | 189/221 [02:01<00:10,  3.01it/s][A
 86%|████████▌ | 190/221 [02:01<00:10,  2.83it/s][A
 86%|████████▋ | 191/221 [02:01<00:10,  2.91it/s][A
 87%|████████▋ | 192/221 [02:02<00:14,  2.04it/s][A
 87%|████████▋ | 193/221 [02:02<00:10,  2.56it/s][A
 88%|████████▊ | 194/221 [02:03<00:14,  1.82it/s][A
 88%|████████▊ | 195/221 [02:04<00:12,  2.12it/s][A
 89%|████████▊ | 196/221 [02:04<00:09,  2.62it/s][A
 89%|████████▉ | 197/221 [02:04<00:08,  2.70it/s][A
 90%|████████▉ | 198/221 [02:05<00:09,  2.46it/s][A
 90%|█████████ | 199/221 [02:05<00:07,  2.89it/s][A
 90%|█████████ | 200/221 [02:05<00:07,  2.76it/s][A
 91%|█████████ | 201/221 [02:06<00:07,  2.56it/s][A
 91%|█████████▏| 202/221 [02:06<00:07,  2.67it/s][A
 92%|█████████▏| 203/221 [02:08<00:12,  1.46it/s][A
 92%|█████████▏| 204/221 [02:08<00:09,  1.79it/s][A
 93%|█████████▎| 205/221 [02:08<00:06,  2.31it/s][A
 93%|█████████▎| 206/221 [02:09<00:07,  1.94it/s][A
 94%|█████████▍| 208/221 [02:09<00:04,  2.66it/s][A
 95%|█████████▍| 209/221 [02:09<00:03,  3.18it/s][A
 95%|█████████▌| 211/221 [02:10<00:04,  2.33it/s][A
 96%|█████████▌| 212/221 [02:11<00:03,  2.29it/s][A
 96%|█████████▋| 213/221 [02:11<00:03,  2.64it/s][A
 97%|█████████▋| 214/221 [02:12<00:02,  2.45it/s][A
 97%|█████████▋| 215/221 [02:12<00:02,  2.37it/s][A
 98%|█████████▊| 216/221 [02:12<00:02,  2.41it/s][A
 98%|█████████▊| 217/221 [02:14<00:03,  1.29it/s][A
 99%|█████████▊| 218/221 [02:15<00:02,  1.36it/s][A
 99%|█████████▉| 219/221 [02:15<00:01,  1.70it/s][A
100%|█████████▉| 220/221 [02:18<00:01,  1.41s/it][A
100%|██████████| 221/221 [02:19<00:00,  1.08s/it][A100%|██████████| 221/221 [02:19<00:00,  1.59it/s]

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:00<01:56,  1.89it/s][A
  1%|          | 2/221 [00:01<01:55,  1.89it/s][A
  1%|▏         | 3/221 [00:01<01:55,  1.89it/s][A
  2%|▏         | 4/221 [00:02<01:54,  1.89it/s][A
  2%|▏         | 5/221 [00:02<01:54,  1.89it/s][A
  3%|▎         | 6/221 [00:03<01:53,  1.89it/s][A
  3%|▎         | 7/221 [00:03<01:53,  1.89it/s][A
  4%|▎         | 8/221 [00:04<01:52,  1.89it/s][A
  4%|▍         | 9/221 [00:04<01:52,  1.89it/s][A
  5%|▍         | 10/221 [00:05<01:51,  1.89it/s][A
  5%|▍         | 11/221 [00:05<01:51,  1.89it/s][A
  5%|▌         | 12/221 [00:06<01:50,  1.89it/s][A
  6%|▌         | 13/221 [00:06<01:49,  1.89it/s][A
  6%|▋         | 14/221 [00:07<01:49,  1.89it/s][A
  7%|▋         | 15/221 [00:07<01:48,  1.89it/s][A
  7%|▋         | 16/221 [00:08<01:48,  1.89it/s][A
  8%|▊         | 17/221 [00:08<01:47,  1.89it/s][A
  8%|▊         | 18/221 [00:09<01:47,  1.89it/s][A
  9%|▊         | 19/221 [00:10<01:46,  1.89it/s][A
  9%|▉         | 20/221 [00:10<01:46,  1.89it/s][A
 10%|▉         | 21/221 [00:11<01:45,  1.89it/s][A
 10%|▉         | 22/221 [00:11<01:45,  1.89it/s][A
 10%|█         | 23/221 [00:12<01:44,  1.89it/s][A
 11%|█         | 24/221 [00:12<01:44,  1.89it/s][A
 11%|█▏        | 25/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 26/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 27/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 28/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 29/221 [00:15<01:41,  1.89it/s][A
 14%|█▎        | 30/221 [00:15<01:40,  1.89it/s][A
 14%|█▍        | 31/221 [00:16<01:40,  1.89it/s][A
 14%|█▍        | 32/221 [00:16<01:39,  1.89it/s][A
 15%|█▍        | 33/221 [00:17<01:39,  1.89it/s][A
 15%|█▌        | 34/221 [00:17<01:38,  1.89it/s][A
 16%|█▌        | 35/221 [00:18<01:38,  1.89it/s][A
 16%|█▋        | 36/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 37/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 38/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 39/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 40/221 [00:21<01:35,  1.89it/s][A
 19%|█▊        | 41/221 [00:21<01:35,  1.89it/s][A
 19%|█▉        | 42/221 [00:22<01:34,  1.89it/s][A
 19%|█▉        | 43/221 [00:22<01:34,  1.89it/s][A
 20%|█▉        | 44/221 [00:23<01:33,  1.89it/s][A
 20%|██        | 45/221 [00:23<01:33,  1.89it/s][A
 21%|██        | 46/221 [00:24<01:32,  1.89it/s][A
 21%|██▏       | 47/221 [00:24<01:31,  1.89it/s][A
 22%|██▏       | 48/221 [00:25<01:31,  1.89it/s][A
 22%|██▏       | 49/221 [00:25<01:30,  1.89it/s][A
 23%|██▎       | 50/221 [00:26<01:30,  1.89it/s][A
 23%|██▎       | 51/221 [00:26<01:29,  1.89it/s][A
 24%|██▎       | 52/221 [00:27<01:29,  1.89it/s][A
 24%|██▍       | 53/221 [00:28<01:28,  1.89it/s][A
 24%|██▍       | 54/221 [00:28<01:28,  1.89it/s][A
 25%|██▍       | 55/221 [00:29<01:27,  1.89it/s][A
 25%|██▌       | 56/221 [00:29<01:27,  1.89it/s][A
 26%|██▌       | 57/221 [00:30<01:26,  1.89it/s][A
 26%|██▌       | 58/221 [00:30<01:26,  1.89it/s][A
 27%|██▋       | 59/221 [00:31<01:25,  1.89it/s][A
 27%|██▋       | 60/221 [00:31<01:25,  1.89it/s][A
 28%|██▊       | 61/221 [00:32<01:24,  1.89it/s][A
 28%|██▊       | 62/221 [00:32<01:24,  1.89it/s][A
 29%|██▊       | 63/221 [00:33<01:23,  1.89it/s][A
 29%|██▉       | 64/221 [00:33<01:22,  1.89it/s][A
 29%|██▉       | 65/221 [00:34<01:22,  1.89it/s][A
 30%|██▉       | 66/221 [00:34<01:21,  1.89it/s][A
 30%|███       | 67/221 [00:35<01:21,  1.89it/s][A
 31%|███       | 68/221 [00:35<01:20,  1.89it/s][A
 31%|███       | 69/221 [00:36<01:20,  1.89it/s][A
 32%|███▏      | 70/221 [00:36<01:19,  1.89it/s][A
 32%|███▏      | 71/221 [00:37<01:19,  1.89it/s][A
 33%|███▎      | 72/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 73/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 74/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 75/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 76/221 [00:40<01:16,  1.89it/s][A
 35%|███▍      | 77/221 [00:40<01:16,  1.89it/s][A
 35%|███▌      | 78/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 79/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 80/221 [00:42<01:14,  1.89it/s][A
 37%|███▋      | 81/221 [00:42<01:13,  1.89it/s][A
 37%|███▋      | 82/221 [00:43<01:13,  1.89it/s][A
 38%|███▊      | 83/221 [00:43<01:13,  1.89it/s][A
 38%|███▊      | 84/221 [00:44<01:12,  1.89it/s][A
 38%|███▊      | 85/221 [00:44<01:11,  1.89it/s][A
 39%|███▉      | 86/221 [00:45<01:11,  1.89it/s][A
 39%|███▉      | 87/221 [00:45<01:10,  1.89it/s][A
 40%|███▉      | 88/221 [00:46<01:10,  1.89it/s][A
 40%|████      | 89/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 90/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 91/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 92/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 93/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 94/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 95/221 [00:50<01:06,  1.89it/s][A
 43%|████▎     | 96/221 [00:50<01:06,  1.89it/s][A
 44%|████▍     | 97/221 [00:51<01:05,  1.89it/s][A
 44%|████▍     | 98/221 [00:51<01:05,  1.89it/s][A
 45%|████▍     | 99/221 [00:52<01:04,  1.89it/s][A
 45%|████▌     | 100/221 [00:52<01:03,  1.89it/s][A
 46%|████▌     | 101/221 [00:53<01:03,  1.89it/s][A
 46%|████▌     | 102/221 [00:53<01:02,  1.89it/s][A
 47%|████▋     | 103/221 [00:54<01:02,  1.89it/s][A
 47%|████▋     | 104/221 [00:54<01:01,  1.89it/s][A
 48%|████▊     | 105/221 [00:55<01:01,  1.89it/s][A
 48%|████▊     | 106/221 [00:56<01:00,  1.89it/s][A
 48%|████▊     | 107/221 [00:56<01:00,  1.89it/s][A
 49%|████▉     | 108/221 [00:57<00:59,  1.89it/s][A
 49%|████▉     | 109/221 [00:57<00:59,  1.89it/s][A
 50%|████▉     | 110/221 [00:58<00:58,  1.89it/s][A
 50%|█████     | 111/221 [00:58<00:58,  1.89it/s][A
 51%|█████     | 112/221 [00:59<00:57,  1.89it/s][A
 51%|█████     | 113/221 [00:59<00:57,  1.89it/s][A
 52%|█████▏    | 114/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 115/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 116/221 [01:01<00:55,  1.89it/s][A
 53%|█████▎    | 117/221 [01:01<00:54,  1.89it/s][A
 53%|█████▎    | 118/221 [01:02<00:54,  1.89it/s][A
 54%|█████▍    | 119/221 [01:02<00:53,  1.89it/s][A
 54%|█████▍    | 120/221 [01:03<00:53,  1.89it/s][A
 55%|█████▍    | 121/221 [01:03<00:52,  1.89it/s][A
 55%|█████▌    | 122/221 [01:04<00:52,  1.89it/s][A
 56%|█████▌    | 123/221 [01:05<00:51,  1.89it/s][A
 56%|█████▌    | 124/221 [01:05<00:51,  1.89it/s][A
 57%|█████▋    | 125/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 126/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 127/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 128/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 129/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 130/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 131/221 [01:09<00:47,  1.89it/s][A
 60%|█████▉    | 132/221 [01:09<00:47,  1.89it/s][A
 60%|██████    | 133/221 [01:10<00:46,  1.89it/s][A
 61%|██████    | 134/221 [01:10<00:45,  1.89it/s][A
 61%|██████    | 135/221 [01:11<00:45,  1.89it/s][A
 62%|██████▏   | 136/221 [01:11<00:44,  1.89it/s][A
 62%|██████▏   | 137/221 [01:12<00:44,  1.89it/s][A
 62%|██████▏   | 138/221 [01:12<00:43,  1.89it/s][A
 63%|██████▎   | 139/221 [01:13<00:43,  1.89it/s][A
 63%|██████▎   | 140/221 [01:13<00:42,  1.89it/s][A
 64%|██████▍   | 141/221 [01:14<00:42,  1.89it/s][A
 64%|██████▍   | 142/221 [01:15<00:41,  1.89it/s][A
 65%|██████▍   | 143/221 [01:15<00:41,  1.89it/s][A
 65%|██████▌   | 144/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 145/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 146/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 147/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 148/221 [01:18<00:38,  1.89it/s][A
 67%|██████▋   | 149/221 [01:18<00:38,  1.89it/s][A
 68%|██████▊   | 150/221 [01:19<00:37,  1.89it/s][A
 68%|██████▊   | 151/221 [01:19<00:36,  1.89it/s][A
 69%|██████▉   | 152/221 [01:20<00:36,  1.89it/s][A
 69%|██████▉   | 153/221 [01:20<00:35,  1.89it/s][A
 70%|██████▉   | 154/221 [01:21<00:35,  1.89it/s][A
 70%|███████   | 155/221 [01:21<00:34,  1.89it/s][A
 71%|███████   | 156/221 [01:22<00:34,  1.89it/s][A
 71%|███████   | 157/221 [01:22<00:33,  1.89it/s][A
 71%|███████▏  | 158/221 [01:23<00:33,  1.89it/s][A
 72%|███████▏  | 159/221 [01:24<00:32,  1.89it/s][A
 72%|███████▏  | 160/221 [01:24<00:32,  1.89it/s][A
 73%|███████▎  | 161/221 [01:25<00:31,  1.89it/s][A
 73%|███████▎  | 162/221 [01:25<00:31,  1.89it/s][A
 74%|███████▍  | 163/221 [01:26<00:30,  1.89it/s][A
 74%|███████▍  | 164/221 [01:26<00:30,  1.89it/s][A
 75%|███████▍  | 165/221 [01:27<00:29,  1.89it/s][A
 75%|███████▌  | 166/221 [01:27<00:29,  1.89it/s][A
 76%|███████▌  | 167/221 [01:28<00:28,  1.89it/s][A
 76%|███████▌  | 168/221 [01:28<00:28,  1.89it/s][A
 76%|███████▋  | 169/221 [01:29<00:27,  1.89it/s][A
 77%|███████▋  | 170/221 [01:29<00:26,  1.89it/s][A
 77%|███████▋  | 171/221 [01:30<00:26,  1.89it/s][A
 78%|███████▊  | 172/221 [01:30<00:25,  1.89it/s][A
 78%|███████▊  | 173/221 [01:31<00:25,  1.89it/s][A
 79%|███████▊  | 174/221 [01:31<00:24,  1.89it/s][A
 79%|███████▉  | 175/221 [01:32<00:24,  1.89it/s][A
 80%|███████▉  | 176/221 [01:33<00:23,  1.89it/s][A
 80%|████████  | 177/221 [01:33<00:23,  1.89it/s][A
 81%|████████  | 178/221 [01:34<00:22,  1.89it/s][A
 81%|████████  | 179/221 [01:34<00:22,  1.89it/s][A
 81%|████████▏ | 180/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 181/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 182/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 183/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 184/221 [01:37<00:19,  1.89it/s][A
 84%|████████▎ | 185/221 [01:37<00:19,  1.89it/s][A
 84%|████████▍ | 186/221 [01:38<00:18,  1.89it/s][A
 85%|████████▍ | 187/221 [01:38<00:17,  1.89it/s][A
 85%|████████▌ | 188/221 [01:39<00:17,  1.89it/s][A
 86%|████████▌ | 189/221 [01:39<00:16,  1.89it/s][A
 86%|████████▌ | 190/221 [01:40<00:16,  1.89it/s][A
 86%|████████▋ | 191/221 [01:40<00:15,  1.89it/s][A
 87%|████████▋ | 192/221 [01:41<00:15,  1.89it/s][A
 87%|████████▋ | 193/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 194/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 195/221 [01:43<00:13,  1.89it/s][A
 89%|████████▊ | 196/221 [01:43<00:13,  1.89it/s][A
 89%|████████▉ | 197/221 [01:44<00:12,  1.89it/s][A
 90%|████████▉ | 198/221 [01:44<00:12,  1.89it/s][A
 90%|█████████ | 199/221 [01:45<00:11,  1.89it/s][A
 90%|█████████ | 200/221 [01:45<00:11,  1.89it/s][A
 91%|█████████ | 201/221 [01:46<00:10,  1.89it/s][A
 91%|█████████▏| 202/221 [01:46<00:10,  1.89it/s][A
 92%|█████████▏| 203/221 [01:47<00:09,  1.89it/s][A
 92%|█████████▏| 204/221 [01:47<00:08,  1.89it/s][A
 93%|█████████▎| 205/221 [01:48<00:08,  1.89it/s][A
 93%|█████████▎| 206/221 [01:48<00:07,  1.89it/s][A
 94%|█████████▎| 207/221 [01:49<00:07,  1.89it/s][A
 94%|█████████▍| 208/221 [01:49<00:06,  1.89it/s][A
 95%|█████████▍| 209/221 [01:50<00:06,  1.89it/s][A
 95%|█████████▌| 210/221 [01:50<00:05,  1.89it/s][A
 95%|█████████▌| 211/221 [01:51<00:05,  1.89it/s][A
 96%|█████████▌| 212/221 [01:52<00:04,  1.89it/s][A
 96%|█████████▋| 213/221 [01:52<00:04,  1.89it/s][A
 97%|█████████▋| 214/221 [01:53<00:03,  1.89it/s][A
 97%|█████████▋| 215/221 [01:53<00:03,  1.89it/s][A
 98%|█████████▊| 216/221 [01:54<00:02,  1.89it/s][A
 98%|█████████▊| 217/221 [01:54<00:02,  1.89it/s][A
 99%|█████████▊| 218/221 [01:55<00:01,  1.89it/s][A
 99%|█████████▉| 219/221 [01:55<00:01,  1.89it/s][A
100%|█████████▉| 220/221 [01:56<00:00,  1.89it/s][A
100%|██████████| 221/221 [01:56<00:00,  1.89it/s][A100%|██████████| 221/221 [01:56<00:00,  1.89it/s]
09/20/2024 02:52:52 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_forward=====step 999--===========

09/20/2024 02:52:52 - INFO - __main__ -   {'area_r1': 43.2, 'area_recall': '43.2/70.9/79.8', 'area_ravg': 64.6}
09/20/2024 02:52:52 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_backard=====step 999--===========

09/20/2024 02:52:52 - INFO - __main__ -   {'forward_r1': 48.3, 'forward_recall': '48.3/77.6/85.3', 'forward_ravg': 70.4}
09/20/2024 02:52:52 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video=====step 999--===========

09/20/2024 02:52:52 - INFO - __main__ -   {'area_video_r1': 47.7, 'area_video_recall': '47.7/76.9/85.5', 'area_video_ravg': 70.1}
09/20/2024 02:52:52 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video====history best step: 999=======

09/20/2024 02:52:52 - INFO - __main__ -   {'area_video_r1': 47.7, 'area_video_recall': '47.7/76.9/85.5', 'area_video_ravg': 70.1}
09/20/2024 02:52:52 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itm_area=====step 999--===========

09/20/2024 02:52:52 - INFO - __main__ -   {'area_video_r1': 57.5, 'area_video_recall': '57.5/80.4/86.4', 'area_video_ravg': 74.8, 'area_video_back_r1': 58.0, 'area_video_back_recall': '58.0/82.4/89.0', 'area_video_back_ravg': 76.5}
09/20/2024 02:52:52 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itm_area====history best step: 999=======

09/20/2024 02:52:52 - INFO - __main__ -   {'area_video_r1': 57.5, 'area_video_recall': '57.5/80.4/86.4', 'area_video_ravg': 74.8, 'area_video_back_r1': 58.0, 'area_video_back_recall': '58.0/82.4/89.0', 'area_video_back_ravg': 76.5}
09/20/2024 02:52:52 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas=====step 999--===========

09/20/2024 02:52:52 - INFO - __main__ -   {'video_r1': 31.3, 'video_recall': '31.3/53.5/63.5', 'video_ravg': 49.4}
09/20/2024 02:52:52 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas====history best step: 999=======

09/20/2024 02:52:52 - INFO - __main__ -   {'video_r1': 31.3, 'video_recall': '31.3/53.5/63.5', 'video_ravg': 49.4}
09/20/2024 02:53:28 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.028032293543219566, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.3557225465774536, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.383754849433899}
 10%|█         | 1000/9908 [1:16:57<347:18:37, 140.36s/it] 10%|█         | 1001/9908 [1:17:00<245:27:00, 99.21s/it]  10%|█         | 1002/9908 [1:17:04<174:25:44, 70.51s/it] 10%|█         | 1003/9908 [1:17:08<124:53:02, 50.49s/it] 10%|█         | 1004/9908 [1:17:11<90:10:37, 36.46s/it]  10%|█         | 1005/9908 [1:17:15<65:39:17, 26.55s/it] 10%|█         | 1006/9908 [1:17:19<48:46:50, 19.73s/it] 10%|█         | 1007/9908 [1:17:22<36:58:12, 14.95s/it] 10%|█         | 1008/9908 [1:17:26<28:38:04, 11.58s/it] 10%|█         | 1009/9908 [1:17:30<22:40:33,  9.17s/it] 10%|█         | 1010/9908 [1:17:34<18:45:07,  7.59s/it] 10%|█         | 1011/9908 [1:17:37<15:40:22,  6.34s/it] 10%|█         | 1012/9908 [1:17:41<13:40:08,  5.53s/it] 10%|█         | 1013/9908 [1:17:44<12:07:43,  4.91s/it] 10%|█         | 1014/9908 [1:17:48<11:05:14,  4.49s/it] 10%|█         | 1015/9908 [1:17:51<10:18:15,  4.17s/it] 10%|█         | 1016/9908 [1:17:56<10:30:08,  4.25s/it] 10%|█         | 1017/9908 [1:17:59<9:53:41,  4.01s/it]  10%|█         | 1018/9908 [1:18:03<9:49:10,  3.98s/it] 10%|█         | 1019/9908 [1:18:07<9:39:59,  3.91s/it] 10%|█         | 1020/9908 [1:18:10<9:32:09,  3.86s/it] 10%|█         | 1021/9908 [1:18:14<9:21:56,  3.79s/it] 10%|█         | 1022/9908 [1:18:18<9:10:10,  3.71s/it] 10%|█         | 1023/9908 [1:18:21<9:15:48,  3.75s/it] 10%|█         | 1024/9908 [1:18:25<8:58:07,  3.63s/it] 10%|█         | 1025/9908 [1:18:28<9:00:20,  3.65s/it] 10%|█         | 1026/9908 [1:18:32<9:05:33,  3.69s/it] 10%|█         | 1027/9908 [1:18:36<9:04:11,  3.68s/it] 10%|█         | 1028/9908 [1:18:40<9:05:37,  3.69s/it] 10%|█         | 1029/9908 [1:18:43<9:02:31,  3.67s/it] 10%|█         | 1030/9908 [1:18:47<8:57:25,  3.63s/it] 10%|█         | 1031/9908 [1:18:50<9:02:00,  3.66s/it] 10%|█         | 1032/9908 [1:18:54<9:13:16,  3.74s/it] 10%|█         | 1033/9908 [1:18:58<9:05:27,  3.69s/it] 10%|█         | 1034/9908 [1:19:02<9:19:49,  3.79s/it] 10%|█         | 1035/9908 [1:19:05<8:58:56,  3.64s/it] 10%|█         | 1036/9908 [1:19:09<9:07:43,  3.70s/it] 10%|█         | 1037/9908 [1:19:13<9:30:37,  3.86s/it] 10%|█         | 1038/9908 [1:19:17<9:19:46,  3.79s/it] 10%|█         | 1039/9908 [1:19:21<9:23:33,  3.81s/it] 10%|█         | 1040/9908 [1:19:24<9:10:33,  3.73s/it] 11%|█         | 1041/9908 [1:19:28<9:04:49,  3.69s/it] 11%|█         | 1042/9908 [1:19:32<9:28:48,  3.85s/it] 11%|█         | 1043/9908 [1:19:36<9:06:27,  3.70s/it] 11%|█         | 1044/9908 [1:19:39<8:55:04,  3.62s/it] 11%|█         | 1045/9908 [1:19:42<8:51:31,  3.60s/it] 11%|█         | 1046/9908 [1:19:46<8:48:29,  3.58s/it] 11%|█         | 1047/9908 [1:19:50<9:05:54,  3.70s/it] 11%|█         | 1048/9908 [1:19:54<8:59:04,  3.65s/it] 11%|█         | 1049/9908 [1:19:57<9:03:12,  3.68s/it]09/20/2024 02:56:32 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03779635578393936, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.588150143623352, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.6259465217590332}
 11%|█         | 1050/9908 [1:20:01<9:09:36,  3.72s/it] 11%|█         | 1051/9908 [1:20:05<8:56:06,  3.63s/it] 11%|█         | 1052/9908 [1:20:08<8:58:25,  3.65s/it] 11%|█         | 1053/9908 [1:20:12<9:14:53,  3.76s/it] 11%|█         | 1054/9908 [1:20:16<9:12:15,  3.74s/it] 11%|█         | 1055/9908 [1:20:20<9:06:50,  3.71s/it] 11%|█         | 1056/9908 [1:20:23<9:17:04,  3.78s/it] 11%|█         | 1057/9908 [1:20:27<9:08:20,  3.72s/it] 11%|█         | 1058/9908 [1:20:31<9:04:49,  3.69s/it] 11%|█         | 1059/9908 [1:20:34<8:59:01,  3.65s/it] 11%|█         | 1060/9908 [1:20:38<8:54:53,  3.63s/it] 11%|█         | 1061/9908 [1:20:41<8:53:24,  3.62s/it] 11%|█         | 1062/9908 [1:20:45<9:02:04,  3.68s/it] 11%|█         | 1063/9908 [1:20:49<9:07:32,  3.71s/it] 11%|█         | 1064/9908 [1:20:53<9:10:09,  3.73s/it] 11%|█         | 1065/9908 [1:20:56<9:02:41,  3.68s/it] 11%|█         | 1066/9908 [1:21:00<8:57:32,  3.65s/it] 11%|█         | 1067/9908 [1:21:04<9:18:02,  3.79s/it] 11%|█         | 1068/9908 [1:21:08<9:22:20,  3.82s/it] 11%|█         | 1069/9908 [1:21:12<9:24:51,  3.83s/it] 11%|█         | 1070/9908 [1:21:15<9:01:33,  3.68s/it] 11%|█         | 1071/9908 [1:21:19<9:07:18,  3.72s/it] 11%|█         | 1072/9908 [1:21:22<8:49:43,  3.60s/it] 11%|█         | 1073/9908 [1:21:26<9:01:21,  3.68s/it] 11%|█         | 1074/9908 [1:21:30<8:55:11,  3.63s/it] 11%|█         | 1075/9908 [1:21:34<9:11:19,  3.74s/it] 11%|█         | 1076/9908 [1:21:37<9:10:42,  3.74s/it] 11%|█         | 1077/9908 [1:21:41<9:25:50,  3.84s/it] 11%|█         | 1078/9908 [1:21:45<9:27:44,  3.86s/it] 11%|█         | 1079/9908 [1:21:49<9:32:26,  3.89s/it] 11%|█         | 1080/9908 [1:21:53<9:17:56,  3.79s/it] 11%|█         | 1081/9908 [1:21:56<8:58:17,  3.66s/it] 11%|█         | 1082/9908 [1:22:00<9:03:38,  3.70s/it] 11%|█         | 1083/9908 [1:22:04<9:08:01,  3.73s/it] 11%|█         | 1084/9908 [1:22:08<9:19:09,  3.80s/it] 11%|█         | 1085/9908 [1:22:11<9:08:35,  3.73s/it] 11%|█         | 1086/9908 [1:22:15<9:02:47,  3.69s/it] 11%|█         | 1087/9908 [1:22:19<9:09:56,  3.74s/it] 11%|█         | 1088/9908 [1:22:23<9:14:41,  3.77s/it] 11%|█         | 1089/9908 [1:22:26<9:15:25,  3.78s/it] 11%|█         | 1090/9908 [1:22:30<9:10:30,  3.75s/it] 11%|█         | 1091/9908 [1:22:34<9:05:14,  3.71s/it] 11%|█         | 1092/9908 [1:22:38<9:17:28,  3.79s/it] 11%|█         | 1093/9908 [1:22:41<9:13:43,  3.77s/it] 11%|█         | 1094/9908 [1:22:45<9:03:03,  3.70s/it] 11%|█         | 1095/9908 [1:22:49<9:03:19,  3.70s/it] 11%|█         | 1096/9908 [1:22:53<9:18:01,  3.80s/it] 11%|█         | 1097/9908 [1:22:56<9:08:57,  3.74s/it] 11%|█         | 1098/9908 [1:23:00<9:01:27,  3.69s/it] 11%|█         | 1099/9908 [1:23:04<9:00:16,  3.68s/it]09/20/2024 02:59:38 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03836334869265556, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.7601274251937866, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.7984907627105713}
 11%|█         | 1100/9908 [1:23:08<9:21:46,  3.83s/it] 11%|█         | 1101/9908 [1:23:11<9:17:28,  3.80s/it] 11%|█         | 1102/9908 [1:23:15<9:20:58,  3.82s/it] 11%|█         | 1103/9908 [1:23:19<9:13:24,  3.77s/it] 11%|█         | 1104/9908 [1:23:23<9:11:29,  3.76s/it] 11%|█         | 1105/9908 [1:23:26<9:05:14,  3.72s/it] 11%|█         | 1106/9908 [1:23:30<9:07:11,  3.73s/it] 11%|█         | 1107/9908 [1:23:34<9:09:42,  3.75s/it] 11%|█         | 1108/9908 [1:23:38<9:19:21,  3.81s/it] 11%|█         | 1109/9908 [1:23:41<9:09:14,  3.75s/it] 11%|█         | 1110/9908 [1:23:45<9:03:59,  3.71s/it] 11%|█         | 1111/9908 [1:23:49<9:08:13,  3.74s/it] 11%|█         | 1112/9908 [1:23:53<9:10:17,  3.75s/it] 11%|█         | 1113/9908 [1:23:56<9:08:08,  3.74s/it] 11%|█         | 1114/9908 [1:24:00<9:05:32,  3.72s/it] 11%|█▏        | 1115/9908 [1:24:04<9:03:42,  3.71s/it] 11%|█▏        | 1116/9908 [1:24:08<9:09:12,  3.75s/it] 11%|█▏        | 1117/9908 [1:24:11<9:03:47,  3.71s/it] 11%|█▏        | 1118/9908 [1:24:15<9:07:09,  3.73s/it] 11%|█▏        | 1119/9908 [1:24:19<9:04:07,  3.71s/it] 11%|█▏        | 1120/9908 [1:24:22<9:06:36,  3.73s/it] 11%|█▏        | 1121/9908 [1:24:26<9:07:51,  3.74s/it] 11%|█▏        | 1122/9908 [1:24:30<9:05:20,  3.72s/it] 11%|█▏        | 1123/9908 [1:24:34<9:03:27,  3.71s/it] 11%|█▏        | 1124/9908 [1:24:37<9:01:47,  3.70s/it] 11%|█▏        | 1125/9908 [1:24:41<9:14:43,  3.79s/it] 11%|█▏        | 1126/9908 [1:24:45<9:23:28,  3.85s/it] 11%|█▏        | 1127/9908 [1:24:49<9:06:26,  3.73s/it] 11%|█▏        | 1128/9908 [1:24:52<9:03:46,  3.72s/it] 11%|█▏        | 1129/9908 [1:24:56<9:06:18,  3.73s/it] 11%|█▏        | 1130/9908 [1:25:00<8:56:10,  3.66s/it] 11%|█▏        | 1131/9908 [1:25:03<8:58:48,  3.68s/it] 11%|█▏        | 1132/9908 [1:25:07<9:04:52,  3.73s/it] 11%|█▏        | 1133/9908 [1:25:12<9:30:53,  3.90s/it] 11%|█▏        | 1134/9908 [1:25:15<9:03:19,  3.72s/it] 11%|█▏        | 1135/9908 [1:25:18<8:53:44,  3.65s/it] 11%|█▏        | 1136/9908 [1:25:22<8:45:56,  3.60s/it] 11%|█▏        | 1137/9908 [1:25:25<8:51:01,  3.63s/it] 11%|█▏        | 1138/9908 [1:25:29<9:04:05,  3.72s/it] 11%|█▏        | 1139/9908 [1:25:34<9:22:52,  3.85s/it] 12%|█▏        | 1140/9908 [1:25:37<9:17:33,  3.82s/it] 12%|█▏        | 1141/9908 [1:25:41<9:12:25,  3.78s/it] 12%|█▏        | 1142/9908 [1:25:45<9:11:46,  3.78s/it] 12%|█▏        | 1143/9908 [1:25:48<9:07:13,  3.75s/it] 12%|█▏        | 1144/9908 [1:25:52<9:15:55,  3.81s/it] 12%|█▏        | 1145/9908 [1:25:56<9:19:51,  3.83s/it] 12%|█▏        | 1146/9908 [1:26:00<9:13:17,  3.79s/it] 12%|█▏        | 1147/9908 [1:26:04<9:20:10,  3.84s/it] 12%|█▏        | 1148/9908 [1:26:08<9:27:41,  3.89s/it] 12%|█▏        | 1149/9908 [1:26:11<8:56:49,  3.68s/it]09/20/2024 03:02:46 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03861431032419205, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.4281375408172607, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.4667518138885498}
 12%|█▏        | 1150/9908 [1:26:15<8:47:54,  3.62s/it] 12%|█▏        | 1151/9908 [1:26:18<8:47:12,  3.61s/it] 12%|█▏        | 1152/9908 [1:26:22<8:59:52,  3.70s/it] 12%|█▏        | 1153/9908 [1:26:26<8:50:18,  3.63s/it] 12%|█▏        | 1154/9908 [1:26:29<8:39:17,  3.56s/it] 12%|█▏        | 1155/9908 [1:26:33<9:06:14,  3.74s/it] 12%|█▏        | 1156/9908 [1:26:37<9:07:18,  3.75s/it] 12%|█▏        | 1157/9908 [1:26:41<9:09:29,  3.77s/it] 12%|█▏        | 1158/9908 [1:26:44<9:06:57,  3.75s/it] 12%|█▏        | 1159/9908 [1:26:48<8:48:42,  3.63s/it] 12%|█▏        | 1160/9908 [1:26:52<8:58:21,  3.69s/it] 12%|█▏        | 1161/9908 [1:26:55<8:59:44,  3.70s/it] 12%|█▏        | 1162/9908 [1:26:59<9:05:48,  3.74s/it] 12%|█▏        | 1163/9908 [1:27:03<9:15:21,  3.81s/it] 12%|█▏        | 1164/9908 [1:27:07<9:13:35,  3.80s/it] 12%|█▏        | 1165/9908 [1:27:10<8:59:10,  3.70s/it] 12%|█▏        | 1166/9908 [1:27:14<8:53:25,  3.66s/it] 12%|█▏        | 1167/9908 [1:27:18<8:54:54,  3.67s/it] 12%|█▏        | 1168/9908 [1:27:22<9:10:00,  3.78s/it] 12%|█▏        | 1169/9908 [1:27:25<9:01:20,  3.72s/it] 12%|█▏        | 1170/9908 [1:27:29<9:12:55,  3.80s/it] 12%|█▏        | 1171/9908 [1:27:33<9:17:18,  3.83s/it] 12%|█▏        | 1172/9908 [1:27:37<9:11:55,  3.79s/it] 12%|█▏        | 1173/9908 [1:27:41<9:12:54,  3.80s/it] 12%|█▏        | 1174/9908 [1:27:44<8:49:33,  3.64s/it] 12%|█▏        | 1175/9908 [1:27:48<8:51:55,  3.65s/it] 12%|█▏        | 1176/9908 [1:27:51<8:57:02,  3.69s/it] 12%|█▏        | 1177/9908 [1:27:55<9:12:37,  3.80s/it] 12%|█▏        | 1178/9908 [1:27:59<9:08:30,  3.77s/it] 12%|█▏        | 1179/9908 [1:28:03<8:52:17,  3.66s/it] 12%|█▏        | 1180/9908 [1:28:06<8:52:09,  3.66s/it] 12%|█▏        | 1181/9908 [1:28:10<8:37:52,  3.56s/it] 12%|█▏        | 1182/9908 [1:28:13<8:43:16,  3.60s/it] 12%|█▏        | 1183/9908 [1:28:17<9:01:08,  3.72s/it] 12%|█▏        | 1184/9908 [1:28:21<9:00:01,  3.71s/it] 12%|█▏        | 1185/9908 [1:28:25<9:10:43,  3.79s/it] 12%|█▏        | 1186/9908 [1:28:29<9:06:47,  3.76s/it] 12%|█▏        | 1187/9908 [1:28:33<9:16:26,  3.83s/it] 12%|█▏        | 1188/9908 [1:28:36<9:14:58,  3.82s/it] 12%|█▏        | 1189/9908 [1:28:40<9:22:28,  3.87s/it] 12%|█▏        | 1190/9908 [1:28:44<9:25:57,  3.90s/it] 12%|█▏        | 1191/9908 [1:28:48<9:12:31,  3.80s/it] 12%|█▏        | 1192/9908 [1:28:52<9:12:08,  3.80s/it] 12%|█▏        | 1193/9908 [1:28:55<8:59:54,  3.72s/it] 12%|█▏        | 1194/9908 [1:28:59<8:58:16,  3.71s/it] 12%|█▏        | 1195/9908 [1:29:02<8:42:03,  3.59s/it] 12%|█▏        | 1196/9908 [1:29:06<8:53:29,  3.67s/it] 12%|█▏        | 1197/9908 [1:29:10<8:49:37,  3.65s/it] 12%|█▏        | 1198/9908 [1:29:14<9:03:42,  3.75s/it] 12%|█▏        | 1199/9908 [1:29:18<9:14:42,  3.82s/it]09/20/2024 03:05:53 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.021301930770277977, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2658782005310059, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.2871801853179932}
 12%|█▏        | 1200/9908 [1:29:22<9:18:30,  3.85s/it] 12%|█▏        | 1201/9908 [1:29:25<9:03:18,  3.74s/it] 12%|█▏        | 1202/9908 [1:29:29<8:58:55,  3.71s/it] 12%|█▏        | 1203/9908 [1:29:32<8:51:22,  3.66s/it] 12%|█▏        | 1204/9908 [1:29:36<8:51:18,  3.66s/it] 12%|█▏        | 1205/9908 [1:29:39<8:47:54,  3.64s/it] 12%|█▏        | 1206/9908 [1:29:43<8:55:01,  3.69s/it] 12%|█▏        | 1207/9908 [1:29:47<8:52:10,  3.67s/it] 12%|█▏        | 1208/9908 [1:29:51<9:08:20,  3.78s/it] 12%|█▏        | 1209/9908 [1:29:55<9:15:36,  3.83s/it] 12%|█▏        | 1210/9908 [1:29:58<9:04:58,  3.76s/it] 12%|█▏        | 1211/9908 [1:30:02<9:12:06,  3.81s/it] 12%|█▏        | 1212/9908 [1:30:06<9:08:18,  3.78s/it] 12%|█▏        | 1213/9908 [1:30:10<9:04:50,  3.76s/it] 12%|█▏        | 1214/9908 [1:30:13<8:52:52,  3.68s/it] 12%|█▏        | 1215/9908 [1:30:17<8:47:46,  3.64s/it] 12%|█▏        | 1216/9908 [1:30:21<9:09:59,  3.80s/it] 12%|█▏        | 1217/9908 [1:30:24<8:52:00,  3.67s/it] 12%|█▏        | 1218/9908 [1:30:28<8:52:02,  3.67s/it] 12%|█▏        | 1219/9908 [1:30:32<8:50:04,  3.66s/it] 12%|█▏        | 1220/9908 [1:30:35<8:44:13,  3.62s/it] 12%|█▏        | 1221/9908 [1:30:39<8:48:52,  3.65s/it] 12%|█▏        | 1222/9908 [1:30:43<8:52:26,  3.68s/it] 12%|█▏        | 1223/9908 [1:30:46<8:55:24,  3.70s/it] 12%|█▏        | 1224/9908 [1:30:50<9:00:10,  3.73s/it] 12%|█▏        | 1225/9908 [1:30:54<8:51:45,  3.67s/it] 12%|█▏        | 1226/9908 [1:30:58<8:56:10,  3.71s/it] 12%|█▏        | 1227/9908 [1:31:02<9:06:21,  3.78s/it] 12%|█▏        | 1228/9908 [1:31:05<8:50:11,  3.66s/it] 12%|█▏        | 1229/9908 [1:31:09<8:47:53,  3.65s/it] 12%|█▏        | 1230/9908 [1:31:12<8:47:49,  3.65s/it] 12%|█▏        | 1231/9908 [1:31:16<8:36:15,  3.57s/it] 12%|█▏        | 1232/9908 [1:31:19<8:47:54,  3.65s/it] 12%|█▏        | 1233/9908 [1:31:23<8:57:35,  3.72s/it] 12%|█▏        | 1234/9908 [1:31:27<9:04:43,  3.77s/it] 12%|█▏        | 1235/9908 [1:31:31<9:06:10,  3.78s/it] 12%|█▏        | 1236/9908 [1:31:35<9:05:15,  3.77s/it] 12%|█▏        | 1237/9908 [1:31:38<9:02:29,  3.75s/it] 12%|█▏        | 1238/9908 [1:31:42<9:08:36,  3.80s/it] 13%|█▎        | 1239/9908 [1:31:46<9:00:25,  3.74s/it] 13%|█▎        | 1240/9908 [1:31:50<8:53:56,  3.70s/it] 13%|█▎        | 1241/9908 [1:31:53<8:49:42,  3.67s/it] 13%|█▎        | 1242/9908 [1:31:57<8:45:05,  3.64s/it] 13%|█▎        | 1243/9908 [1:32:01<8:57:40,  3.72s/it] 13%|█▎        | 1244/9908 [1:32:04<8:50:34,  3.67s/it] 13%|█▎        | 1245/9908 [1:32:08<8:49:26,  3.67s/it] 13%|█▎        | 1246/9908 [1:32:12<9:11:34,  3.82s/it] 13%|█▎        | 1247/9908 [1:32:16<9:11:03,  3.82s/it] 13%|█▎        | 1248/9908 [1:32:19<8:59:53,  3.74s/it] 13%|█▎        | 1249/9908 [1:32:23<8:55:17,  3.71s/it]09/20/2024 03:08:58 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.027745962142944336, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2476603984832764, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.2754063606262207}
 13%|█▎        | 1250/9908 [1:32:27<8:51:14,  3.68s/it] 13%|█▎        | 1251/9908 [1:32:31<9:06:06,  3.78s/it] 13%|█▎        | 1252/9908 [1:32:35<9:10:26,  3.82s/it] 13%|█▎        | 1253/9908 [1:32:38<9:02:40,  3.76s/it] 13%|█▎        | 1254/9908 [1:32:42<8:45:43,  3.65s/it] 13%|█▎        | 1255/9908 [1:32:46<9:15:22,  3.85s/it] 13%|█▎        | 1256/9908 [1:32:50<9:14:10,  3.84s/it] 13%|█▎        | 1257/9908 [1:32:53<8:59:25,  3.74s/it] 13%|█▎        | 1258/9908 [1:32:57<8:56:07,  3.72s/it] 13%|█▎        | 1259/9908 [1:33:01<9:02:21,  3.76s/it] 13%|█▎        | 1260/9908 [1:33:04<8:55:00,  3.71s/it] 13%|█▎        | 1261/9908 [1:33:08<9:05:49,  3.79s/it] 13%|█▎        | 1262/9908 [1:33:12<9:04:12,  3.78s/it] 13%|█▎        | 1263/9908 [1:33:16<9:05:01,  3.78s/it] 13%|█▎        | 1264/9908 [1:33:20<9:17:18,  3.87s/it] 13%|█▎        | 1265/9908 [1:33:24<9:09:54,  3.82s/it] 13%|█▎        | 1266/9908 [1:33:27<8:57:43,  3.73s/it] 13%|█▎        | 1267/9908 [1:33:31<9:06:29,  3.79s/it] 13%|█▎        | 1268/9908 [1:33:35<9:00:38,  3.75s/it] 13%|█▎        | 1269/9908 [1:33:39<9:07:45,  3.80s/it] 13%|█▎        | 1270/9908 [1:33:42<8:58:57,  3.74s/it] 13%|█▎        | 1271/9908 [1:33:46<8:44:13,  3.64s/it] 13%|█▎        | 1272/9908 [1:33:49<8:35:39,  3.58s/it] 13%|█▎        | 1273/9908 [1:33:53<8:34:35,  3.58s/it] 13%|█▎        | 1274/9908 [1:33:56<8:39:32,  3.61s/it] 13%|█▎        | 1275/9908 [1:34:00<8:52:09,  3.70s/it] 13%|█▎        | 1276/9908 [1:34:04<8:47:41,  3.67s/it] 13%|█▎        | 1277/9908 [1:34:08<8:50:19,  3.69s/it] 13%|█▎        | 1278/9908 [1:34:12<8:58:54,  3.75s/it] 13%|█▎        | 1279/9908 [1:34:15<8:57:35,  3.74s/it] 13%|█▎        | 1280/9908 [1:34:19<8:54:35,  3.72s/it] 13%|█▎        | 1281/9908 [1:34:23<8:56:59,  3.73s/it] 13%|█▎        | 1282/9908 [1:34:27<9:06:05,  3.80s/it] 13%|█▎        | 1283/9908 [1:34:30<8:55:19,  3.72s/it] 13%|█▎        | 1284/9908 [1:34:34<8:51:56,  3.70s/it] 13%|█▎        | 1285/9908 [1:34:38<8:56:06,  3.73s/it] 13%|█▎        | 1286/9908 [1:34:41<8:43:42,  3.64s/it] 13%|█▎        | 1287/9908 [1:34:45<8:52:40,  3.71s/it] 13%|█▎        | 1288/9908 [1:34:49<8:58:54,  3.75s/it] 13%|█▎        | 1289/9908 [1:34:52<8:51:10,  3.70s/it] 13%|█▎        | 1290/9908 [1:34:56<8:38:56,  3.61s/it] 13%|█▎        | 1291/9908 [1:35:00<8:44:48,  3.65s/it] 13%|█▎        | 1292/9908 [1:35:03<8:45:29,  3.66s/it] 13%|█▎        | 1293/9908 [1:35:07<8:51:22,  3.70s/it] 13%|█▎        | 1294/9908 [1:35:10<8:40:50,  3.63s/it] 13%|█▎        | 1295/9908 [1:35:14<8:49:29,  3.69s/it] 13%|█▎        | 1296/9908 [1:35:18<9:00:43,  3.77s/it] 13%|█▎        | 1297/9908 [1:35:22<8:57:04,  3.74s/it] 13%|█▎        | 1298/9908 [1:35:25<8:48:48,  3.69s/it] 13%|█▎        | 1299/9908 [1:35:29<8:58:13,  3.75s/it]09/20/2024 03:12:04 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04512679576873779, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.6542106866836548, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.6993374824523926}
 13%|█▎        | 1300/9908 [1:35:33<9:02:35,  3.78s/it] 13%|█▎        | 1301/9908 [1:35:37<8:58:32,  3.75s/it] 13%|█▎        | 1302/9908 [1:35:41<8:55:19,  3.73s/it] 13%|█▎        | 1303/9908 [1:35:44<9:00:33,  3.77s/it] 13%|█▎        | 1304/9908 [1:35:48<8:59:29,  3.76s/it] 13%|█▎        | 1305/9908 [1:35:52<9:05:15,  3.80s/it] 13%|█▎        | 1306/9908 [1:35:56<8:52:04,  3.71s/it] 13%|█▎        | 1307/9908 [1:35:59<8:48:36,  3.69s/it] 13%|█▎        | 1308/9908 [1:36:03<8:58:46,  3.76s/it] 13%|█▎        | 1309/9908 [1:36:07<8:48:45,  3.69s/it] 13%|█▎        | 1310/9908 [1:36:11<9:00:03,  3.77s/it] 13%|█▎        | 1311/9908 [1:36:15<9:27:24,  3.96s/it] 13%|█▎        | 1312/9908 [1:36:18<8:58:26,  3.76s/it] 13%|█▎        | 1313/9908 [1:36:22<9:01:32,  3.78s/it] 13%|█▎        | 1314/9908 [1:36:26<8:44:30,  3.66s/it] 13%|█▎        | 1315/9908 [1:36:29<8:42:23,  3.65s/it] 13%|█▎        | 1316/9908 [1:36:33<9:06:40,  3.82s/it] 13%|█▎        | 1317/9908 [1:36:37<9:01:48,  3.78s/it] 13%|█▎        | 1318/9908 [1:36:41<9:03:45,  3.80s/it] 13%|█▎        | 1319/9908 [1:36:44<8:45:13,  3.67s/it] 13%|█▎        | 1320/9908 [1:36:48<8:44:17,  3.66s/it] 13%|█▎        | 1321/9908 [1:36:52<8:54:21,  3.73s/it] 13%|█▎        | 1322/9908 [1:36:55<8:43:01,  3.66s/it] 13%|█▎        | 1323/9908 [1:36:59<8:37:08,  3.61s/it] 13%|█▎        | 1324/9908 [1:37:03<8:44:24,  3.67s/it] 13%|█▎        | 1325/9908 [1:37:06<8:37:23,  3.62s/it] 13%|█▎        | 1326/9908 [1:37:10<9:00:16,  3.78s/it] 13%|█▎        | 1327/9908 [1:37:14<8:56:27,  3.75s/it] 13%|█▎        | 1328/9908 [1:37:18<8:57:21,  3.76s/it] 13%|█▎        | 1329/9908 [1:37:22<9:02:58,  3.80s/it] 13%|█▎        | 1330/9908 [1:37:25<8:57:08,  3.76s/it] 13%|█▎        | 1331/9908 [1:37:29<8:52:17,  3.72s/it] 13%|█▎        | 1332/9908 [1:37:33<8:47:33,  3.69s/it] 13%|█▎        | 1333/9908 [1:37:36<8:46:34,  3.68s/it] 13%|█▎        | 1334/9908 [1:37:40<8:49:11,  3.70s/it] 13%|█▎        | 1335/9908 [1:37:44<8:54:32,  3.74s/it] 13%|█▎        | 1336/9908 [1:37:47<8:48:37,  3.70s/it] 13%|█▎        | 1337/9908 [1:37:51<8:59:39,  3.78s/it] 14%|█▎        | 1338/9908 [1:37:55<9:01:24,  3.79s/it] 14%|█▎        | 1339/9908 [1:37:59<8:43:30,  3.67s/it] 14%|█▎        | 1340/9908 [1:38:02<8:38:07,  3.63s/it] 14%|█▎        | 1341/9908 [1:38:06<8:54:18,  3.74s/it] 14%|█▎        | 1342/9908 [1:38:10<8:54:23,  3.74s/it] 14%|█▎        | 1343/9908 [1:38:14<8:53:06,  3.73s/it] 14%|█▎        | 1344/9908 [1:38:18<9:03:23,  3.81s/it] 14%|█▎        | 1345/9908 [1:38:21<8:59:15,  3.78s/it] 14%|█▎        | 1346/9908 [1:38:25<8:57:26,  3.77s/it] 14%|█▎        | 1347/9908 [1:38:29<8:49:13,  3.71s/it] 14%|█▎        | 1348/9908 [1:38:32<8:52:49,  3.73s/it] 14%|█▎        | 1349/9908 [1:38:36<8:36:50,  3.62s/it]09/20/2024 03:15:10 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.025496801361441612, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.668702483177185, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.6941993236541748}
 14%|█▎        | 1350/9908 [1:38:39<8:34:29,  3.61s/it] 14%|█▎        | 1351/9908 [1:38:43<8:47:12,  3.70s/it] 14%|█▎        | 1352/9908 [1:38:47<9:05:03,  3.82s/it] 14%|█▎        | 1353/9908 [1:38:51<8:53:43,  3.74s/it] 14%|█▎        | 1354/9908 [1:38:54<8:43:23,  3.67s/it] 14%|█▎        | 1355/9908 [1:38:58<8:48:01,  3.70s/it] 14%|█▎        | 1356/9908 [1:39:02<8:52:25,  3.74s/it] 14%|█▎        | 1357/9908 [1:39:06<8:57:07,  3.77s/it] 14%|█▎        | 1358/9908 [1:39:10<8:58:00,  3.78s/it] 14%|█▎        | 1359/9908 [1:39:14<9:08:31,  3.85s/it] 14%|█▎        | 1360/9908 [1:39:17<8:55:31,  3.76s/it] 14%|█▎        | 1361/9908 [1:39:21<8:52:09,  3.74s/it] 14%|█▎        | 1362/9908 [1:39:24<8:48:40,  3.71s/it] 14%|█▍        | 1363/9908 [1:39:28<8:48:50,  3.71s/it] 14%|█▍        | 1364/9908 [1:39:32<8:48:22,  3.71s/it] 14%|█▍        | 1365/9908 [1:39:36<8:51:21,  3.73s/it] 14%|█▍        | 1366/9908 [1:39:39<8:45:20,  3.69s/it] 14%|█▍        | 1367/9908 [1:39:43<8:46:38,  3.70s/it] 14%|█▍        | 1368/9908 [1:39:47<9:07:22,  3.85s/it] 14%|█▍        | 1369/9908 [1:39:51<8:57:19,  3.78s/it] 14%|█▍        | 1370/9908 [1:39:54<8:52:21,  3.74s/it] 14%|█▍        | 1371/9908 [1:39:59<9:05:33,  3.83s/it] 14%|█▍        | 1372/9908 [1:40:02<8:59:50,  3.79s/it] 14%|█▍        | 1373/9908 [1:40:06<9:02:51,  3.82s/it] 14%|█▍        | 1374/9908 [1:40:10<9:02:33,  3.81s/it] 14%|█▍        | 1375/9908 [1:40:13<8:43:29,  3.68s/it] 14%|█▍        | 1376/9908 [1:40:17<8:30:59,  3.59s/it] 14%|█▍        | 1377/9908 [1:40:20<8:39:39,  3.65s/it] 14%|█▍        | 1378/9908 [1:40:24<8:38:11,  3.64s/it] 14%|█▍        | 1379/9908 [1:40:28<8:41:57,  3.67s/it] 14%|█▍        | 1380/9908 [1:40:31<8:40:50,  3.66s/it] 14%|█▍        | 1381/9908 [1:40:35<8:50:45,  3.73s/it] 14%|█▍        | 1382/9908 [1:40:39<8:49:37,  3.73s/it] 14%|█▍        | 1383/9908 [1:40:43<8:44:55,  3.69s/it] 14%|█▍        | 1384/9908 [1:40:46<8:47:43,  3.71s/it] 14%|█▍        | 1385/9908 [1:40:50<8:45:00,  3.70s/it] 14%|█▍        | 1386/9908 [1:40:54<8:35:31,  3.63s/it] 14%|█▍        | 1387/9908 [1:40:57<8:39:59,  3.66s/it] 14%|█▍        | 1388/9908 [1:41:01<8:43:38,  3.69s/it] 14%|█▍        | 1389/9908 [1:41:05<8:59:00,  3.80s/it] 14%|█▍        | 1390/9908 [1:41:09<8:45:30,  3.70s/it] 14%|█▍        | 1391/9908 [1:41:12<8:46:50,  3.71s/it] 14%|█▍        | 1392/9908 [1:41:16<8:42:32,  3.68s/it] 14%|█▍        | 1393/9908 [1:41:20<8:39:26,  3.66s/it] 14%|█▍        | 1394/9908 [1:41:23<8:45:20,  3.70s/it] 14%|█▍        | 1395/9908 [1:41:27<8:37:05,  3.64s/it] 14%|█▍        | 1396/9908 [1:41:31<8:50:24,  3.74s/it] 14%|█▍        | 1397/9908 [1:41:34<8:46:45,  3.71s/it] 14%|█▍        | 1398/9908 [1:41:38<8:48:00,  3.72s/it] 14%|█▍        | 1399/9908 [1:41:42<8:53:28,  3.76s/it]09/20/2024 03:18:16 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.038272108882665634, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.5755302906036377, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.613802433013916}
 14%|█▍        | 1400/9908 [1:41:45<8:35:12,  3.63s/it] 14%|█▍        | 1401/9908 [1:41:49<8:30:57,  3.60s/it] 14%|█▍        | 1402/9908 [1:41:53<8:35:13,  3.63s/it] 14%|█▍        | 1403/9908 [1:41:56<8:20:48,  3.53s/it] 14%|█▍        | 1404/9908 [1:42:00<8:32:04,  3.61s/it] 14%|█▍        | 1405/9908 [1:42:04<8:42:06,  3.68s/it] 14%|█▍        | 1406/9908 [1:42:07<8:40:49,  3.68s/it] 14%|█▍        | 1407/9908 [1:42:11<8:47:36,  3.72s/it] 14%|█▍        | 1408/9908 [1:42:15<8:56:22,  3.79s/it] 14%|█▍        | 1409/9908 [1:42:19<8:49:00,  3.73s/it] 14%|█▍        | 1410/9908 [1:42:23<9:03:48,  3.84s/it] 14%|█▍        | 1411/9908 [1:42:26<8:49:11,  3.74s/it] 14%|█▍        | 1412/9908 [1:42:30<8:57:58,  3.80s/it] 14%|█▍        | 1413/9908 [1:42:34<8:52:38,  3.76s/it] 14%|█▍        | 1414/9908 [1:42:37<8:47:42,  3.73s/it] 14%|█▍        | 1415/9908 [1:42:41<8:35:46,  3.64s/it] 14%|█▍        | 1416/9908 [1:42:44<8:30:25,  3.61s/it] 14%|█▍        | 1417/9908 [1:42:48<8:29:13,  3.60s/it] 14%|█▍        | 1418/9908 [1:42:52<8:45:25,  3.71s/it] 14%|█▍        | 1419/9908 [1:42:56<8:47:11,  3.73s/it] 14%|█▍        | 1420/9908 [1:43:00<8:54:16,  3.78s/it] 14%|█▍        | 1421/9908 [1:43:03<8:51:53,  3.76s/it] 14%|█▍        | 1422/9908 [1:43:07<8:43:13,  3.70s/it] 14%|█▍        | 1423/9908 [1:43:11<8:46:45,  3.72s/it] 14%|█▍        | 1424/9908 [1:43:14<8:36:10,  3.65s/it] 14%|█▍        | 1425/9908 [1:43:18<8:37:37,  3.66s/it] 14%|█▍        | 1426/9908 [1:43:22<8:45:18,  3.72s/it] 14%|█▍        | 1427/9908 [1:43:25<8:44:22,  3.71s/it] 14%|█▍        | 1428/9908 [1:43:30<9:04:43,  3.85s/it] 14%|█▍        | 1429/9908 [1:43:33<9:05:50,  3.86s/it] 14%|█▍        | 1430/9908 [1:43:37<8:50:55,  3.76s/it] 14%|█▍        | 1431/9908 [1:43:41<8:40:52,  3.69s/it] 14%|█▍        | 1432/9908 [1:43:45<8:59:23,  3.82s/it] 14%|█▍        | 1433/9908 [1:43:48<8:48:41,  3.74s/it] 14%|█▍        | 1434/9908 [1:43:52<8:53:39,  3.78s/it] 14%|█▍        | 1435/9908 [1:43:56<8:54:53,  3.79s/it] 14%|█▍        | 1436/9908 [1:43:59<8:42:35,  3.70s/it] 15%|█▍        | 1437/9908 [1:44:03<8:49:00,  3.75s/it] 15%|█▍        | 1438/9908 [1:44:07<8:48:59,  3.75s/it] 15%|█▍        | 1439/9908 [1:44:11<8:44:01,  3.71s/it] 15%|█▍        | 1440/9908 [1:44:14<8:41:08,  3.69s/it] 15%|█▍        | 1441/9908 [1:44:18<8:34:18,  3.64s/it] 15%|█▍        | 1442/9908 [1:44:21<8:35:54,  3.66s/it] 15%|█▍        | 1443/9908 [1:44:25<8:46:06,  3.73s/it] 15%|█▍        | 1444/9908 [1:44:29<8:42:19,  3.70s/it] 15%|█▍        | 1445/9908 [1:44:33<8:37:54,  3.67s/it] 15%|█▍        | 1446/9908 [1:44:36<8:45:11,  3.72s/it] 15%|█▍        | 1447/9908 [1:44:40<8:41:00,  3.69s/it] 15%|█▍        | 1448/9908 [1:44:44<8:47:57,  3.74s/it] 15%|█▍        | 1449/9908 [1:44:48<8:41:26,  3.70s/it]09/20/2024 03:21:22 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.020372780039906502, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.287799596786499, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.308172345161438}
 15%|█▍        | 1450/9908 [1:44:51<8:48:52,  3.75s/it] 15%|█▍        | 1451/9908 [1:44:55<8:50:20,  3.76s/it] 15%|█▍        | 1452/9908 [1:44:59<8:55:14,  3.80s/it] 15%|█▍        | 1453/9908 [1:45:03<8:53:59,  3.79s/it] 15%|█▍        | 1454/9908 [1:45:06<8:37:07,  3.67s/it] 15%|█▍        | 1455/9908 [1:45:10<8:31:23,  3.63s/it] 15%|█▍        | 1456/9908 [1:45:14<8:38:56,  3.68s/it] 15%|█▍        | 1457/9908 [1:45:17<8:38:36,  3.68s/it] 15%|█▍        | 1458/9908 [1:45:21<8:26:54,  3.60s/it] 15%|█▍        | 1459/9908 [1:45:25<8:37:18,  3.67s/it] 15%|█▍        | 1460/9908 [1:45:28<8:43:00,  3.71s/it] 15%|█▍        | 1461/9908 [1:45:33<9:08:00,  3.89s/it] 15%|█▍        | 1462/9908 [1:45:36<8:38:56,  3.69s/it] 15%|█▍        | 1463/9908 [1:45:40<8:39:17,  3.69s/it] 15%|█▍        | 1464/9908 [1:45:43<8:49:21,  3.76s/it] 15%|█▍        | 1465/9908 [1:45:47<8:53:24,  3.79s/it] 15%|█▍        | 1466/9908 [1:45:51<8:42:09,  3.71s/it] 15%|█▍        | 1467/9908 [1:45:54<8:39:11,  3.69s/it] 15%|█▍        | 1468/9908 [1:45:58<8:46:28,  3.74s/it] 15%|█▍        | 1469/9908 [1:46:02<8:41:25,  3.71s/it] 15%|█▍        | 1470/9908 [1:46:06<8:42:19,  3.71s/it] 15%|█▍        | 1471/9908 [1:46:10<8:46:00,  3.74s/it] 15%|█▍        | 1472/9908 [1:46:14<8:59:43,  3.84s/it] 15%|█▍        | 1473/9908 [1:46:17<8:45:21,  3.74s/it] 15%|█▍        | 1474/9908 [1:46:21<9:00:24,  3.84s/it] 15%|█▍        | 1475/9908 [1:46:25<8:48:37,  3.76s/it] 15%|█▍        | 1476/9908 [1:46:28<8:39:32,  3.70s/it] 15%|█▍        | 1477/9908 [1:46:32<8:36:44,  3.68s/it] 15%|█▍        | 1478/9908 [1:46:36<8:51:31,  3.78s/it] 15%|█▍        | 1479/9908 [1:46:40<8:54:44,  3.81s/it] 15%|█▍        | 1480/9908 [1:46:43<8:33:53,  3.66s/it] 15%|█▍        | 1481/9908 [1:46:47<8:48:38,  3.76s/it] 15%|█▍        | 1482/9908 [1:46:51<8:44:28,  3.73s/it] 15%|█▍        | 1483/9908 [1:46:54<8:38:13,  3.69s/it] 15%|█▍        | 1484/9908 [1:46:58<8:45:29,  3.74s/it] 15%|█▍        | 1485/9908 [1:47:02<8:47:01,  3.75s/it] 15%|█▍        | 1486/9908 [1:47:06<8:34:42,  3.67s/it] 15%|█▌        | 1487/9908 [1:47:09<8:33:45,  3.66s/it] 15%|█▌        | 1488/9908 [1:47:13<8:55:17,  3.81s/it] 15%|█▌        | 1489/9908 [1:47:17<8:53:54,  3.81s/it] 15%|█▌        | 1490/9908 [1:47:21<8:54:41,  3.81s/it] 15%|█▌        | 1491/9908 [1:47:24<8:37:40,  3.69s/it] 15%|█▌        | 1492/9908 [1:47:28<8:46:29,  3.75s/it] 15%|█▌        | 1493/9908 [1:47:32<8:37:34,  3.69s/it] 15%|█▌        | 1494/9908 [1:47:36<8:45:44,  3.75s/it] 15%|█▌        | 1495/9908 [1:47:39<8:30:06,  3.64s/it] 15%|█▌        | 1496/9908 [1:47:43<8:37:02,  3.69s/it] 15%|█▌        | 1497/9908 [1:47:46<8:33:27,  3.66s/it] 15%|█▌        | 1498/9908 [1:47:50<8:32:31,  3.66s/it] 15%|█▌        | 1499/9908 [1:47:54<8:33:16,  3.66s/it]09/20/2024 03:24:27 - INFO - __main__ -   evaluate on ret%tvas--msrvtt_ret task
09/20/2024 03:24:27 - INFO - __main__ -   start running ret%tvas validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:00<00:56,  3.88it/s][A
  1%|          | 2/221 [00:00<00:54,  4.05it/s][A
  1%|▏         | 3/221 [00:01<01:44,  2.09it/s][A
  2%|▏         | 4/221 [00:01<01:14,  2.90it/s][A
  3%|▎         | 6/221 [00:01<00:48,  4.42it/s][A
  3%|▎         | 7/221 [00:01<00:44,  4.83it/s][A
  4%|▎         | 8/221 [00:02<00:50,  4.23it/s][A
  4%|▍         | 9/221 [00:02<00:55,  3.85it/s][A
  5%|▍         | 10/221 [00:02<00:59,  3.57it/s][A
  5%|▌         | 12/221 [00:03<01:13,  2.83it/s][A
  6%|▌         | 13/221 [00:03<01:02,  3.30it/s][A
  6%|▋         | 14/221 [00:03<00:56,  3.64it/s][A
  7%|▋         | 15/221 [00:04<01:01,  3.34it/s][A
  7%|▋         | 16/221 [00:04<01:19,  2.56it/s][A
  8%|▊         | 17/221 [00:06<01:59,  1.71it/s][A
  8%|▊         | 18/221 [00:06<01:53,  1.79it/s][A
  9%|▊         | 19/221 [00:06<01:40,  2.00it/s][A
  9%|▉         | 20/221 [00:06<01:16,  2.61it/s][A
 10%|▉         | 21/221 [00:07<01:11,  2.82it/s][A
 10%|▉         | 22/221 [00:07<01:13,  2.71it/s][A
 11%|█         | 24/221 [00:07<00:50,  3.88it/s][A
 11%|█▏        | 25/221 [00:08<00:52,  3.73it/s][A
 12%|█▏        | 26/221 [00:08<00:52,  3.73it/s][A
 13%|█▎        | 28/221 [00:09<00:50,  3.79it/s][A
 13%|█▎        | 29/221 [00:10<01:24,  2.27it/s][A
 14%|█▎        | 30/221 [00:10<01:25,  2.25it/s][A
 14%|█▍        | 31/221 [00:11<01:44,  1.82it/s][A
 15%|█▍        | 33/221 [00:11<01:18,  2.39it/s][A
 16%|█▌        | 35/221 [00:12<01:00,  3.09it/s][A
 16%|█▋        | 36/221 [00:12<00:53,  3.45it/s][A
 17%|█▋        | 37/221 [00:12<01:02,  2.97it/s][A
 17%|█▋        | 38/221 [00:14<01:47,  1.70it/s][A
 18%|█▊        | 39/221 [00:14<01:24,  2.16it/s][A
 18%|█▊        | 40/221 [00:14<01:19,  2.29it/s][A
 19%|█▊        | 41/221 [00:14<01:04,  2.77it/s][A
 19%|█▉        | 42/221 [00:15<00:59,  2.99it/s][A
 20%|█▉        | 44/221 [00:15<00:39,  4.46it/s][A
 20%|██        | 45/221 [00:18<02:34,  1.14it/s][A
 21%|██        | 46/221 [00:18<02:10,  1.34it/s][A
 21%|██▏       | 47/221 [00:19<02:32,  1.14it/s][A
 22%|██▏       | 48/221 [00:19<01:57,  1.48it/s][A
 22%|██▏       | 49/221 [00:20<01:34,  1.82it/s][A
 23%|██▎       | 50/221 [00:20<01:27,  1.95it/s][A
 23%|██▎       | 51/221 [00:20<01:14,  2.27it/s][A
 24%|██▍       | 53/221 [00:21<00:47,  3.56it/s][A
 24%|██▍       | 54/221 [00:21<01:05,  2.56it/s][A
 25%|██▍       | 55/221 [00:23<02:04,  1.33it/s][A
 25%|██▌       | 56/221 [00:23<01:39,  1.66it/s][A
 26%|██▌       | 57/221 [00:23<01:21,  2.00it/s][A
 27%|██▋       | 59/221 [00:24<00:50,  3.19it/s][A
 27%|██▋       | 60/221 [00:26<01:53,  1.42it/s][A
 28%|██▊       | 61/221 [00:26<01:33,  1.70it/s][A
 28%|██▊       | 62/221 [00:26<01:26,  1.85it/s][A
 29%|██▊       | 63/221 [00:26<01:13,  2.15it/s][A
 29%|██▉       | 64/221 [00:27<01:30,  1.73it/s][A
 29%|██▉       | 65/221 [00:27<01:09,  2.23it/s][A
 30%|██▉       | 66/221 [00:28<01:08,  2.28it/s][A
 30%|███       | 67/221 [00:28<01:03,  2.41it/s][A
 31%|███       | 68/221 [00:28<00:49,  3.10it/s][A
 31%|███       | 69/221 [00:29<01:18,  1.93it/s][A
 32%|███▏      | 71/221 [00:30<00:52,  2.85it/s][A
 33%|███▎      | 72/221 [00:30<00:50,  2.93it/s][A
 33%|███▎      | 73/221 [00:31<01:09,  2.12it/s][A
 33%|███▎      | 74/221 [00:31<00:56,  2.59it/s][A
 34%|███▍      | 75/221 [00:31<01:03,  2.32it/s][A
 34%|███▍      | 76/221 [00:32<01:00,  2.38it/s][A
 35%|███▍      | 77/221 [00:33<01:28,  1.62it/s][A
 36%|███▌      | 79/221 [00:34<01:18,  1.80it/s][A
 37%|███▋      | 81/221 [00:35<01:04,  2.16it/s][A
 37%|███▋      | 82/221 [00:38<02:28,  1.07s/it][A
 38%|███▊      | 83/221 [00:38<02:14,  1.03it/s][A
 38%|███▊      | 84/221 [00:39<01:46,  1.29it/s][A
 39%|███▉      | 86/221 [00:39<01:13,  1.83it/s][A
 39%|███▉      | 87/221 [00:42<02:19,  1.04s/it][A
 40%|███▉      | 88/221 [00:42<01:55,  1.15it/s][A
 40%|████      | 89/221 [00:43<01:44,  1.26it/s][A
 41%|████      | 90/221 [00:43<01:36,  1.36it/s][A
 42%|████▏     | 92/221 [00:44<01:02,  2.05it/s][A
 42%|████▏     | 93/221 [00:44<01:04,  1.98it/s][A
 43%|████▎     | 94/221 [00:45<01:23,  1.52it/s][A
 43%|████▎     | 95/221 [00:46<01:12,  1.74it/s][A
 43%|████▎     | 96/221 [00:47<01:29,  1.40it/s][A
 44%|████▍     | 97/221 [00:47<01:09,  1.78it/s][A
 44%|████▍     | 98/221 [00:48<01:16,  1.60it/s][A
 45%|████▍     | 99/221 [00:48<00:59,  2.05it/s][A
 45%|████▌     | 100/221 [00:48<00:58,  2.08it/s][A
 46%|████▌     | 101/221 [00:49<00:46,  2.59it/s][A
 46%|████▌     | 102/221 [00:50<01:25,  1.39it/s][A
 47%|████▋     | 103/221 [00:50<01:03,  1.85it/s][A
 47%|████▋     | 104/221 [00:50<00:51,  2.26it/s][A
 48%|████▊     | 105/221 [00:51<00:49,  2.34it/s][A
 48%|████▊     | 106/221 [00:52<01:18,  1.47it/s][A
 48%|████▊     | 107/221 [00:52<01:06,  1.71it/s][A
 49%|████▉     | 108/221 [00:53<00:55,  2.05it/s][A
 49%|████▉     | 109/221 [00:53<00:48,  2.31it/s][A
 50%|████▉     | 110/221 [00:53<00:41,  2.69it/s][A
 50%|█████     | 111/221 [00:54<00:40,  2.69it/s][A
 51%|█████     | 112/221 [00:54<00:42,  2.56it/s][A
 51%|█████     | 113/221 [00:54<00:36,  2.99it/s][A
 52%|█████▏    | 115/221 [00:55<00:31,  3.40it/s][A
 52%|█████▏    | 116/221 [00:55<00:35,  2.95it/s][A
 53%|█████▎    | 117/221 [00:56<00:42,  2.47it/s][A
 53%|█████▎    | 118/221 [00:56<00:42,  2.45it/s][A
 54%|█████▍    | 119/221 [00:57<00:44,  2.29it/s][A
 54%|█████▍    | 120/221 [00:57<00:38,  2.61it/s][A
 55%|█████▍    | 121/221 [00:57<00:37,  2.69it/s][A
 55%|█████▌    | 122/221 [00:58<00:34,  2.87it/s][A
 56%|█████▌    | 123/221 [00:58<00:46,  2.13it/s][A
 56%|█████▌    | 124/221 [00:59<00:42,  2.31it/s][A
 57%|█████▋    | 125/221 [01:00<00:55,  1.74it/s][A
 57%|█████▋    | 126/221 [01:02<01:56,  1.22s/it][A
 57%|█████▋    | 127/221 [01:04<01:54,  1.22s/it][A
 58%|█████▊    | 128/221 [01:04<01:35,  1.03s/it][A
 58%|█████▊    | 129/221 [01:04<01:09,  1.32it/s][A
 59%|█████▉    | 130/221 [01:05<00:59,  1.54it/s][A
 59%|█████▉    | 131/221 [01:06<01:07,  1.33it/s][A
 60%|█████▉    | 132/221 [01:07<01:25,  1.04it/s][A
 60%|██████    | 133/221 [01:07<01:09,  1.26it/s][A
 61%|██████    | 134/221 [01:09<01:38,  1.13s/it][A
 61%|██████    | 135/221 [01:11<01:52,  1.31s/it][A
 62%|██████▏   | 136/221 [01:11<01:27,  1.03s/it][A
 62%|██████▏   | 137/221 [01:12<01:05,  1.29it/s][A
 62%|██████▏   | 138/221 [01:14<01:31,  1.11s/it][A
 63%|██████▎   | 139/221 [01:14<01:15,  1.09it/s][A
 63%|██████▎   | 140/221 [01:15<01:05,  1.24it/s][A
 64%|██████▍   | 141/221 [01:15<00:57,  1.40it/s][A
 64%|██████▍   | 142/221 [01:16<00:50,  1.58it/s][A
 65%|██████▍   | 143/221 [01:16<00:45,  1.71it/s][A
 65%|██████▌   | 144/221 [01:16<00:39,  1.97it/s][A
 66%|██████▌   | 146/221 [01:16<00:23,  3.24it/s][A
 67%|██████▋   | 147/221 [01:17<00:19,  3.88it/s][A
 67%|██████▋   | 148/221 [01:17<00:28,  2.58it/s][A
 67%|██████▋   | 149/221 [01:18<00:35,  2.03it/s][A
 68%|██████▊   | 150/221 [01:19<00:34,  2.03it/s][A
 68%|██████▊   | 151/221 [01:19<00:34,  2.05it/s][A
 69%|██████▉   | 152/221 [01:20<00:32,  2.10it/s][A
 69%|██████▉   | 153/221 [01:20<00:25,  2.65it/s][A
 70%|██████▉   | 154/221 [01:20<00:27,  2.48it/s][A
 70%|███████   | 155/221 [01:20<00:23,  2.78it/s][A
 71%|███████   | 156/221 [01:21<00:20,  3.24it/s][A
 71%|███████   | 157/221 [01:30<03:05,  2.90s/it][A
 71%|███████▏  | 158/221 [01:30<02:17,  2.19s/it][A
 72%|███████▏  | 159/221 [01:30<01:37,  1.58s/it][A
 72%|███████▏  | 160/221 [01:30<01:11,  1.17s/it][A
 73%|███████▎  | 161/221 [01:31<00:53,  1.13it/s][A
 74%|███████▍  | 163/221 [01:31<00:33,  1.73it/s][A
 74%|███████▍  | 164/221 [01:32<00:31,  1.81it/s][A
 75%|███████▍  | 165/221 [01:32<00:31,  1.79it/s][A
 75%|███████▌  | 166/221 [01:34<00:42,  1.28it/s][A
 76%|███████▌  | 167/221 [01:34<00:32,  1.64it/s][A
 76%|███████▌  | 168/221 [01:41<02:11,  2.49s/it][A
 76%|███████▋  | 169/221 [01:41<01:36,  1.86s/it][A
 77%|███████▋  | 170/221 [01:42<01:13,  1.43s/it][A
 77%|███████▋  | 171/221 [01:42<00:59,  1.18s/it][A
 78%|███████▊  | 172/221 [01:42<00:44,  1.10it/s][A
 78%|███████▊  | 173/221 [01:43<00:38,  1.24it/s][A
 79%|███████▊  | 174/221 [01:43<00:29,  1.57it/s][A
 79%|███████▉  | 175/221 [01:44<00:25,  1.80it/s][A
 80%|███████▉  | 176/221 [01:44<00:24,  1.85it/s][A
 80%|████████  | 177/221 [01:44<00:20,  2.15it/s][A
 81%|████████  | 178/221 [01:45<00:23,  1.85it/s][A
 81%|████████  | 179/221 [01:46<00:22,  1.88it/s][A
 81%|████████▏ | 180/221 [01:46<00:17,  2.39it/s][A
 82%|████████▏ | 182/221 [01:46<00:13,  2.89it/s][A
 83%|████████▎ | 183/221 [01:47<00:14,  2.69it/s][A
 83%|████████▎ | 184/221 [01:47<00:17,  2.16it/s][A
 84%|████████▎ | 185/221 [01:48<00:13,  2.73it/s][A
 84%|████████▍ | 186/221 [01:48<00:15,  2.32it/s][A
 85%|████████▍ | 187/221 [01:48<00:13,  2.56it/s][A
 85%|████████▌ | 188/221 [01:49<00:10,  3.07it/s][A
 86%|████████▌ | 189/221 [01:49<00:09,  3.55it/s][A
 86%|████████▌ | 190/221 [01:49<00:11,  2.61it/s][A
 86%|████████▋ | 191/221 [01:50<00:09,  3.17it/s][A
 87%|████████▋ | 192/221 [01:50<00:08,  3.41it/s][A
 88%|████████▊ | 194/221 [01:52<00:17,  1.56it/s][A
 88%|████████▊ | 195/221 [01:52<00:13,  1.86it/s][A
 89%|████████▊ | 196/221 [01:52<00:10,  2.27it/s][A
 89%|████████▉ | 197/221 [01:53<00:09,  2.58it/s][A
 90%|████████▉ | 198/221 [01:53<00:08,  2.82it/s][A
 90%|█████████ | 199/221 [01:53<00:06,  3.21it/s][A
 90%|█████████ | 200/221 [01:53<00:07,  2.85it/s][A
 91%|█████████ | 201/221 [01:54<00:07,  2.50it/s][A
 91%|█████████▏| 202/221 [01:54<00:06,  2.90it/s][A
 92%|█████████▏| 203/221 [01:56<00:11,  1.57it/s][A
 92%|█████████▏| 204/221 [01:56<00:08,  1.98it/s][A
 93%|█████████▎| 205/221 [01:56<00:06,  2.48it/s][A
 93%|█████████▎| 206/221 [01:57<00:07,  2.02it/s][A
 94%|█████████▎| 207/221 [01:57<00:05,  2.56it/s][A
 94%|█████████▍| 208/221 [01:57<00:04,  2.91it/s][A
 95%|█████████▌| 210/221 [01:57<00:02,  4.76it/s][A
 95%|█████████▌| 211/221 [01:58<00:03,  2.78it/s][A
 96%|█████████▌| 212/221 [01:59<00:04,  2.24it/s][A
 96%|█████████▋| 213/221 [01:59<00:03,  2.45it/s][A
 97%|█████████▋| 214/221 [02:00<00:03,  2.16it/s][A
 97%|█████████▋| 215/221 [02:00<00:02,  2.24it/s][A
 98%|█████████▊| 216/221 [02:01<00:02,  2.03it/s][A
 98%|█████████▊| 217/221 [02:06<00:08,  2.01s/it][A
 99%|█████████▊| 218/221 [02:07<00:04,  1.61s/it][A
 99%|█████████▉| 219/221 [02:07<00:02,  1.20s/it][A
100%|█████████▉| 220/221 [02:12<00:02,  2.24s/it][A
100%|██████████| 221/221 [02:12<00:00,  1.65s/it][A100%|██████████| 221/221 [02:12<00:00,  1.67it/s]

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:00<01:56,  1.89it/s][A
  1%|          | 2/221 [00:01<01:55,  1.89it/s][A
  1%|▏         | 3/221 [00:01<01:55,  1.89it/s][A
  2%|▏         | 4/221 [00:02<01:54,  1.89it/s][A
  2%|▏         | 5/221 [00:02<01:54,  1.89it/s][A
  3%|▎         | 6/221 [00:03<01:53,  1.89it/s][A
  3%|▎         | 7/221 [00:03<01:53,  1.89it/s][A
  4%|▎         | 8/221 [00:04<01:52,  1.89it/s][A
  4%|▍         | 9/221 [00:04<01:52,  1.89it/s][A
  5%|▍         | 10/221 [00:05<01:51,  1.89it/s][A
  5%|▍         | 11/221 [00:05<01:51,  1.89it/s][A
  5%|▌         | 12/221 [00:06<01:50,  1.89it/s][A
  6%|▌         | 13/221 [00:06<01:49,  1.89it/s][A
  6%|▋         | 14/221 [00:07<01:49,  1.89it/s][A
  7%|▋         | 15/221 [00:07<01:48,  1.89it/s][A
  7%|▋         | 16/221 [00:08<01:48,  1.89it/s][A
  8%|▊         | 17/221 [00:08<01:47,  1.89it/s][A
  8%|▊         | 18/221 [00:09<01:47,  1.89it/s][A
  9%|▊         | 19/221 [00:10<01:46,  1.89it/s][A
  9%|▉         | 20/221 [00:10<01:46,  1.89it/s][A
 10%|▉         | 21/221 [00:11<01:45,  1.89it/s][A
 10%|▉         | 22/221 [00:11<01:45,  1.89it/s][A
 10%|█         | 23/221 [00:12<01:44,  1.89it/s][A
 11%|█         | 24/221 [00:12<01:44,  1.89it/s][A
 11%|█▏        | 25/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 26/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 27/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 28/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 29/221 [00:15<01:41,  1.89it/s][A
 14%|█▎        | 30/221 [00:15<01:40,  1.89it/s][A
 14%|█▍        | 31/221 [00:16<01:40,  1.89it/s][A
 14%|█▍        | 32/221 [00:16<01:39,  1.89it/s][A
 15%|█▍        | 33/221 [00:17<01:39,  1.89it/s][A
 15%|█▌        | 34/221 [00:17<01:38,  1.89it/s][A
 16%|█▌        | 35/221 [00:18<01:38,  1.89it/s][A
 16%|█▋        | 36/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 37/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 38/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 39/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 40/221 [00:21<01:35,  1.89it/s][A
 19%|█▊        | 41/221 [00:21<01:35,  1.89it/s][A
 19%|█▉        | 42/221 [00:22<01:34,  1.89it/s][A
 19%|█▉        | 43/221 [00:22<01:34,  1.89it/s][A
 20%|█▉        | 44/221 [00:23<01:33,  1.89it/s][A
 20%|██        | 45/221 [00:23<01:33,  1.89it/s][A
 21%|██        | 46/221 [00:24<01:32,  1.89it/s][A
 21%|██▏       | 47/221 [00:24<01:31,  1.89it/s][A
 22%|██▏       | 48/221 [00:25<01:31,  1.89it/s][A
 22%|██▏       | 49/221 [00:25<01:30,  1.89it/s][A
 23%|██▎       | 50/221 [00:26<01:30,  1.89it/s][A
 23%|██▎       | 51/221 [00:26<01:29,  1.89it/s][A
 24%|██▎       | 52/221 [00:27<01:29,  1.89it/s][A
 24%|██▍       | 53/221 [00:28<01:28,  1.89it/s][A
 24%|██▍       | 54/221 [00:28<01:28,  1.89it/s][A
 25%|██▍       | 55/221 [00:29<01:27,  1.89it/s][A
 25%|██▌       | 56/221 [00:29<01:27,  1.89it/s][A
 26%|██▌       | 57/221 [00:30<01:26,  1.89it/s][A
 26%|██▌       | 58/221 [00:30<01:26,  1.89it/s][A
 27%|██▋       | 59/221 [00:31<01:25,  1.89it/s][A
 27%|██▋       | 60/221 [00:31<01:25,  1.89it/s][A
 28%|██▊       | 61/221 [00:32<01:24,  1.89it/s][A
 28%|██▊       | 62/221 [00:32<01:24,  1.89it/s][A
 29%|██▊       | 63/221 [00:33<01:23,  1.89it/s][A
 29%|██▉       | 64/221 [00:33<01:23,  1.89it/s][A
 29%|██▉       | 65/221 [00:34<01:22,  1.89it/s][A
 30%|██▉       | 66/221 [00:34<01:21,  1.89it/s][A
 30%|███       | 67/221 [00:35<01:21,  1.89it/s][A
 31%|███       | 68/221 [00:35<01:20,  1.89it/s][A
 31%|███       | 69/221 [00:36<01:20,  1.89it/s][A
 32%|███▏      | 70/221 [00:37<01:19,  1.89it/s][A
 32%|███▏      | 71/221 [00:37<01:19,  1.89it/s][A
 33%|███▎      | 72/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 73/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 74/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 75/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 76/221 [00:40<01:16,  1.89it/s][A
 35%|███▍      | 77/221 [00:40<01:16,  1.89it/s][A
 35%|███▌      | 78/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 79/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 80/221 [00:42<01:14,  1.89it/s][A
 37%|███▋      | 81/221 [00:42<01:14,  1.89it/s][A
 37%|███▋      | 82/221 [00:43<01:13,  1.89it/s][A
 38%|███▊      | 83/221 [00:43<01:12,  1.89it/s][A
 38%|███▊      | 84/221 [00:44<01:12,  1.89it/s][A
 38%|███▊      | 85/221 [00:44<01:11,  1.89it/s][A
 39%|███▉      | 86/221 [00:45<01:11,  1.89it/s][A
 39%|███▉      | 87/221 [00:45<01:10,  1.89it/s][A
 40%|███▉      | 88/221 [00:46<01:10,  1.89it/s][A
 40%|████      | 89/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 90/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 91/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 92/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 93/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 94/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 95/221 [00:50<01:06,  1.89it/s][A
 43%|████▎     | 96/221 [00:50<01:06,  1.89it/s][A
 44%|████▍     | 97/221 [00:51<01:05,  1.89it/s][A
 44%|████▍     | 98/221 [00:51<01:05,  1.89it/s][A
 45%|████▍     | 99/221 [00:52<01:04,  1.89it/s][A
 45%|████▌     | 100/221 [00:52<01:03,  1.89it/s][A
 46%|████▌     | 101/221 [00:53<01:03,  1.89it/s][A
 46%|████▌     | 102/221 [00:53<01:02,  1.89it/s][A
 47%|████▋     | 103/221 [00:54<01:02,  1.89it/s][A
 47%|████▋     | 104/221 [00:54<01:01,  1.89it/s][A
 48%|████▊     | 105/221 [00:55<01:01,  1.89it/s][A
 48%|████▊     | 106/221 [00:56<01:00,  1.89it/s][A
 48%|████▊     | 107/221 [00:56<01:00,  1.89it/s][A
 49%|████▉     | 108/221 [00:57<00:59,  1.89it/s][A
 49%|████▉     | 109/221 [00:57<00:59,  1.89it/s][A
 50%|████▉     | 110/221 [00:58<00:58,  1.89it/s][A
 50%|█████     | 111/221 [00:58<00:58,  1.89it/s][A
 51%|█████     | 112/221 [00:59<00:57,  1.89it/s][A
 51%|█████     | 113/221 [00:59<00:57,  1.89it/s][A
 52%|█████▏    | 114/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 115/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 116/221 [01:01<00:55,  1.89it/s][A
 53%|█████▎    | 117/221 [01:01<00:54,  1.89it/s][A
 53%|█████▎    | 118/221 [01:02<00:54,  1.89it/s][A
 54%|█████▍    | 119/221 [01:02<00:53,  1.89it/s][A
 54%|█████▍    | 120/221 [01:03<00:53,  1.89it/s][A
 55%|█████▍    | 121/221 [01:03<00:52,  1.89it/s][A
 55%|█████▌    | 122/221 [01:04<00:52,  1.89it/s][A
 56%|█████▌    | 123/221 [01:05<00:51,  1.89it/s][A
 56%|█████▌    | 124/221 [01:05<00:51,  1.89it/s][A
 57%|█████▋    | 125/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 126/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 127/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 128/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 129/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 130/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 131/221 [01:09<00:47,  1.89it/s][A
 60%|█████▉    | 132/221 [01:09<00:47,  1.89it/s][A
 60%|██████    | 133/221 [01:10<00:46,  1.89it/s][A
 61%|██████    | 134/221 [01:10<00:45,  1.89it/s][A
 61%|██████    | 135/221 [01:11<00:45,  1.89it/s][A
 62%|██████▏   | 136/221 [01:11<00:44,  1.89it/s][A
 62%|██████▏   | 137/221 [01:12<00:44,  1.89it/s][A
 62%|██████▏   | 138/221 [01:12<00:43,  1.89it/s][A
 63%|██████▎   | 139/221 [01:13<00:43,  1.89it/s][A
 63%|██████▎   | 140/221 [01:14<00:42,  1.89it/s][A
 64%|██████▍   | 141/221 [01:14<00:42,  1.89it/s][A
 64%|██████▍   | 142/221 [01:15<00:41,  1.89it/s][A
 65%|██████▍   | 143/221 [01:15<00:41,  1.89it/s][A
 65%|██████▌   | 144/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 145/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 146/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 147/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 148/221 [01:18<00:38,  1.89it/s][A
 67%|██████▋   | 149/221 [01:18<00:38,  1.89it/s][A
 68%|██████▊   | 150/221 [01:19<00:37,  1.89it/s][A
 68%|██████▊   | 151/221 [01:19<00:36,  1.89it/s][A
 69%|██████▉   | 152/221 [01:20<00:36,  1.89it/s][A
 69%|██████▉   | 153/221 [01:20<00:35,  1.89it/s][A
 70%|██████▉   | 154/221 [01:21<00:35,  1.89it/s][A
 70%|███████   | 155/221 [01:21<00:34,  1.89it/s][A
 71%|███████   | 156/221 [01:22<00:34,  1.89it/s][A
 71%|███████   | 157/221 [01:22<00:33,  1.89it/s][A
 71%|███████▏  | 158/221 [01:23<00:33,  1.89it/s][A
 72%|███████▏  | 159/221 [01:24<00:32,  1.89it/s][A
 72%|███████▏  | 160/221 [01:24<00:32,  1.89it/s][A
 73%|███████▎  | 161/221 [01:25<00:31,  1.89it/s][A
 73%|███████▎  | 162/221 [01:25<00:31,  1.89it/s][A
 74%|███████▍  | 163/221 [01:26<00:30,  1.89it/s][A
 74%|███████▍  | 164/221 [01:26<00:30,  1.89it/s][A
 75%|███████▍  | 165/221 [01:27<00:29,  1.89it/s][A
 75%|███████▌  | 166/221 [01:27<00:29,  1.89it/s][A
 76%|███████▌  | 167/221 [01:28<00:28,  1.89it/s][A
 76%|███████▌  | 168/221 [01:28<00:28,  1.89it/s][A
 76%|███████▋  | 169/221 [01:29<00:27,  1.89it/s][A
 77%|███████▋  | 170/221 [01:29<00:26,  1.89it/s][A
 77%|███████▋  | 171/221 [01:30<00:26,  1.89it/s][A
 78%|███████▊  | 172/221 [01:30<00:25,  1.89it/s][A
 78%|███████▊  | 173/221 [01:31<00:25,  1.89it/s][A
 79%|███████▊  | 174/221 [01:31<00:24,  1.89it/s][A
 79%|███████▉  | 175/221 [01:32<00:24,  1.89it/s][A
 80%|███████▉  | 176/221 [01:33<00:23,  1.89it/s][A
 80%|████████  | 177/221 [01:33<00:23,  1.89it/s][A
 81%|████████  | 178/221 [01:34<00:22,  1.89it/s][A
 81%|████████  | 179/221 [01:34<00:22,  1.89it/s][A
 81%|████████▏ | 180/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 181/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 182/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 183/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 184/221 [01:37<00:19,  1.89it/s][A
 84%|████████▎ | 185/221 [01:37<00:19,  1.89it/s][A
 84%|████████▍ | 186/221 [01:38<00:18,  1.89it/s][A
 85%|████████▍ | 187/221 [01:38<00:17,  1.89it/s][A
 85%|████████▌ | 188/221 [01:39<00:17,  1.89it/s][A
 86%|████████▌ | 189/221 [01:39<00:16,  1.89it/s][A
 86%|████████▌ | 190/221 [01:40<00:16,  1.89it/s][A
 86%|████████▋ | 191/221 [01:40<00:15,  1.89it/s][A
 87%|████████▋ | 192/221 [01:41<00:15,  1.89it/s][A
 87%|████████▋ | 193/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 194/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 195/221 [01:43<00:13,  1.89it/s][A
 89%|████████▊ | 196/221 [01:43<00:13,  1.89it/s][A
 89%|████████▉ | 197/221 [01:44<00:12,  1.89it/s][A
 90%|████████▉ | 198/221 [01:44<00:12,  1.89it/s][A
 90%|█████████ | 199/221 [01:45<00:11,  1.89it/s][A
 90%|█████████ | 200/221 [01:45<00:11,  1.89it/s][A
 91%|█████████ | 201/221 [01:46<00:10,  1.89it/s][A
 91%|█████████▏| 202/221 [01:46<00:10,  1.89it/s][A
 92%|█████████▏| 203/221 [01:47<00:09,  1.89it/s][A
 92%|█████████▏| 204/221 [01:47<00:08,  1.89it/s][A
 93%|█████████▎| 205/221 [01:48<00:08,  1.89it/s][A
 93%|█████████▎| 206/221 [01:48<00:07,  1.89it/s][A
 94%|█████████▎| 207/221 [01:49<00:07,  1.89it/s][A
 94%|█████████▍| 208/221 [01:49<00:06,  1.89it/s][A
 95%|█████████▍| 209/221 [01:50<00:06,  1.89it/s][A
 95%|█████████▌| 210/221 [01:51<00:05,  1.89it/s][A
 95%|█████████▌| 211/221 [01:51<00:05,  1.89it/s][A
 96%|█████████▌| 212/221 [01:52<00:04,  1.89it/s][A
 96%|█████████▋| 213/221 [01:52<00:04,  1.89it/s][A
 97%|█████████▋| 214/221 [01:53<00:03,  1.89it/s][A
 97%|█████████▋| 215/221 [01:53<00:03,  1.89it/s][A
 98%|█████████▊| 216/221 [01:54<00:02,  1.89it/s][A
 98%|█████████▊| 217/221 [01:54<00:02,  1.89it/s][A
 99%|█████████▊| 218/221 [01:55<00:01,  1.89it/s][A
 99%|█████████▉| 219/221 [01:55<00:01,  1.89it/s][A
100%|█████████▉| 220/221 [01:56<00:00,  1.89it/s][A
100%|██████████| 221/221 [01:56<00:00,  1.89it/s][A100%|██████████| 221/221 [01:56<00:00,  1.89it/s]
09/20/2024 03:31:21 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_forward=====step 1499--===========

09/20/2024 03:31:21 - INFO - __main__ -   {'area_r1': 43.6, 'area_recall': '43.6/70.4/80.2', 'area_ravg': 64.7}
09/20/2024 03:31:21 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_backard=====step 1499--===========

09/20/2024 03:31:21 - INFO - __main__ -   {'forward_r1': 48.8, 'forward_recall': '48.8/76.4/87.1', 'forward_ravg': 70.7}
09/20/2024 03:31:21 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video=====step 1499--===========

09/20/2024 03:31:21 - INFO - __main__ -   {'area_video_r1': 49.2, 'area_video_recall': '49.2/76.9/87.1', 'area_video_ravg': 71.1}
09/20/2024 03:31:21 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video====history best step: 1499=======

09/20/2024 03:31:21 - INFO - __main__ -   {'area_video_r1': 49.2, 'area_video_recall': '49.2/76.9/87.1', 'area_video_ravg': 71.1}
09/20/2024 03:31:21 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itm_area=====step 1499--===========

09/20/2024 03:31:21 - INFO - __main__ -   {'area_video_r1': 58.6, 'area_video_recall': '58.6/79.6/85.5', 'area_video_ravg': 74.6, 'area_video_back_r1': 56.3, 'area_video_back_recall': '56.3/81.9/89.5', 'area_video_back_ravg': 75.9}
09/20/2024 03:31:21 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itm_area====history best step: 1499=======

09/20/2024 03:31:21 - INFO - __main__ -   {'area_video_r1': 58.6, 'area_video_recall': '58.6/79.6/85.5', 'area_video_ravg': 74.6, 'area_video_back_r1': 56.3, 'area_video_back_recall': '56.3/81.9/89.5', 'area_video_back_ravg': 75.9}
09/20/2024 03:31:21 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas=====step 1499--===========

09/20/2024 03:31:21 - INFO - __main__ -   {'video_r1': 34.7, 'video_recall': '34.7/60.5/72.3', 'video_ravg': 55.8}
09/20/2024 03:31:21 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas====history best step: 1499=======

09/20/2024 03:31:21 - INFO - __main__ -   {'video_r1': 34.7, 'video_recall': '34.7/60.5/72.3', 'video_ravg': 55.8}
09/20/2024 03:31:58 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.037049587815999985, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.740866780281067, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.7779163122177124}
 15%|█▌        | 1500/9908 [1:55:27<323:22:21, 138.46s/it] 15%|█▌        | 1501/9908 [1:55:30<228:46:17, 97.96s/it]  15%|█▌        | 1502/9908 [1:55:34<162:36:26, 69.64s/it] 15%|█▌        | 1503/9908 [1:55:37<116:10:16, 49.76s/it] 15%|█▌        | 1504/9908 [1:55:41<84:07:15, 36.03s/it]  15%|█▌        | 1505/9908 [1:55:45<61:28:25, 26.34s/it] 15%|█▌        | 1506/9908 [1:55:49<45:48:36, 19.63s/it] 15%|█▌        | 1507/9908 [1:55:53<34:43:54, 14.88s/it] 15%|█▌        | 1508/9908 [1:55:56<26:42:23, 11.45s/it] 15%|█▌        | 1509/9908 [1:56:00<21:23:40,  9.17s/it] 15%|█▌        | 1510/9908 [1:56:04<17:32:42,  7.52s/it] 15%|█▌        | 1511/9908 [1:56:07<14:36:43,  6.26s/it] 15%|█▌        | 1512/9908 [1:56:11<12:45:23,  5.47s/it] 15%|█▌        | 1513/9908 [1:56:14<11:29:20,  4.93s/it] 15%|█▌        | 1514/9908 [1:56:18<10:42:26,  4.59s/it] 15%|█▌        | 1515/9908 [1:56:22<10:26:25,  4.48s/it] 15%|█▌        | 1516/9908 [1:56:26<9:53:05,  4.24s/it]  15%|█▌        | 1517/9908 [1:56:30<9:42:25,  4.16s/it] 15%|█▌        | 1518/9908 [1:56:34<9:22:38,  4.02s/it] 15%|█▌        | 1519/9908 [1:56:38<9:20:16,  4.01s/it] 15%|█▌        | 1520/9908 [1:56:41<9:05:01,  3.90s/it] 15%|█▌        | 1521/9908 [1:56:45<9:01:41,  3.88s/it] 15%|█▌        | 1522/9908 [1:56:49<8:48:18,  3.78s/it] 15%|█▌        | 1523/9908 [1:56:52<8:37:53,  3.71s/it] 15%|█▌        | 1524/9908 [1:56:56<8:30:03,  3.65s/it] 15%|█▌        | 1525/9908 [1:57:00<8:45:41,  3.76s/it] 15%|█▌        | 1526/9908 [1:57:03<8:40:10,  3.72s/it] 15%|█▌        | 1527/9908 [1:57:07<8:47:01,  3.77s/it] 15%|█▌        | 1528/9908 [1:57:11<8:41:07,  3.73s/it] 15%|█▌        | 1529/9908 [1:57:15<8:49:26,  3.79s/it] 15%|█▌        | 1530/9908 [1:57:19<8:59:56,  3.87s/it] 15%|█▌        | 1531/9908 [1:57:22<8:50:49,  3.80s/it] 15%|█▌        | 1532/9908 [1:57:26<8:56:53,  3.85s/it] 15%|█▌        | 1533/9908 [1:57:30<8:43:31,  3.75s/it] 15%|█▌        | 1534/9908 [1:57:34<8:54:13,  3.83s/it] 15%|█▌        | 1535/9908 [1:57:38<9:02:06,  3.88s/it] 16%|█▌        | 1536/9908 [1:57:42<8:52:08,  3.81s/it] 16%|█▌        | 1537/9908 [1:57:45<8:49:09,  3.79s/it] 16%|█▌        | 1538/9908 [1:57:49<8:44:04,  3.76s/it] 16%|█▌        | 1539/9908 [1:57:53<8:33:07,  3.68s/it] 16%|█▌        | 1540/9908 [1:57:57<8:59:33,  3.87s/it] 16%|█▌        | 1541/9908 [1:58:00<8:45:50,  3.77s/it] 16%|█▌        | 1542/9908 [1:58:04<8:41:14,  3.74s/it] 16%|█▌        | 1543/9908 [1:58:08<8:34:56,  3.69s/it] 16%|█▌        | 1544/9908 [1:58:12<8:43:54,  3.76s/it] 16%|█▌        | 1545/9908 [1:58:15<8:49:19,  3.80s/it] 16%|█▌        | 1546/9908 [1:58:19<8:42:31,  3.75s/it] 16%|█▌        | 1547/9908 [1:58:23<8:35:59,  3.70s/it] 16%|█▌        | 1548/9908 [1:58:27<8:44:08,  3.76s/it] 16%|█▌        | 1549/9908 [1:58:30<8:44:41,  3.77s/it]09/20/2024 03:35:05 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.029993483796715736, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.4769697189331055, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.5069632530212402}
 16%|█▌        | 1550/9908 [1:58:34<8:47:10,  3.78s/it] 16%|█▌        | 1551/9908 [1:58:38<8:29:20,  3.66s/it] 16%|█▌        | 1552/9908 [1:58:41<8:26:36,  3.64s/it] 16%|█▌        | 1553/9908 [1:58:45<8:25:29,  3.63s/it] 16%|█▌        | 1554/9908 [1:58:48<8:18:55,  3.58s/it] 16%|█▌        | 1555/9908 [1:58:52<8:29:19,  3.66s/it] 16%|█▌        | 1556/9908 [1:58:56<8:42:33,  3.75s/it] 16%|█▌        | 1557/9908 [1:59:00<8:36:40,  3.71s/it] 16%|█▌        | 1558/9908 [1:59:03<8:41:06,  3.74s/it] 16%|█▌        | 1559/9908 [1:59:07<8:46:29,  3.78s/it] 16%|█▌        | 1560/9908 [1:59:11<8:38:12,  3.72s/it] 16%|█▌        | 1561/9908 [1:59:15<8:32:58,  3.69s/it] 16%|█▌        | 1562/9908 [1:59:18<8:28:00,  3.65s/it] 16%|█▌        | 1563/9908 [1:59:22<8:42:15,  3.75s/it] 16%|█▌        | 1564/9908 [1:59:26<8:37:24,  3.72s/it] 16%|█▌        | 1565/9908 [1:59:29<8:38:26,  3.73s/it] 16%|█▌        | 1566/9908 [1:59:33<8:42:39,  3.76s/it] 16%|█▌        | 1567/9908 [1:59:37<8:36:38,  3.72s/it] 16%|█▌        | 1568/9908 [1:59:41<8:51:31,  3.82s/it] 16%|█▌        | 1569/9908 [1:59:45<8:50:33,  3.82s/it] 16%|█▌        | 1570/9908 [1:59:48<8:31:13,  3.68s/it] 16%|█▌        | 1571/9908 [1:59:52<8:32:22,  3.69s/it] 16%|█▌        | 1572/9908 [1:59:55<8:26:40,  3.65s/it] 16%|█▌        | 1573/9908 [1:59:59<8:34:07,  3.70s/it] 16%|█▌        | 1574/9908 [2:00:03<8:38:44,  3.73s/it] 16%|█▌        | 1575/9908 [2:00:07<8:42:42,  3.76s/it] 16%|█▌        | 1576/9908 [2:00:10<8:32:21,  3.69s/it] 16%|█▌        | 1577/9908 [2:00:14<8:37:07,  3.72s/it] 16%|█▌        | 1578/9908 [2:00:18<8:28:30,  3.66s/it] 16%|█▌        | 1579/9908 [2:00:22<8:34:06,  3.70s/it] 16%|█▌        | 1580/9908 [2:00:25<8:33:37,  3.70s/it] 16%|█▌        | 1581/9908 [2:00:29<8:28:03,  3.66s/it] 16%|█▌        | 1582/9908 [2:00:33<8:37:01,  3.73s/it] 16%|█▌        | 1583/9908 [2:00:36<8:33:36,  3.70s/it] 16%|█▌        | 1584/9908 [2:00:40<8:24:09,  3.63s/it] 16%|█▌        | 1585/9908 [2:00:44<8:34:34,  3.71s/it] 16%|█▌        | 1586/9908 [2:00:47<8:31:20,  3.69s/it] 16%|█▌        | 1587/9908 [2:00:51<8:16:16,  3.58s/it] 16%|█▌        | 1588/9908 [2:00:54<8:20:27,  3.61s/it] 16%|█▌        | 1589/9908 [2:00:58<8:23:28,  3.63s/it] 16%|█▌        | 1590/9908 [2:01:02<8:31:44,  3.69s/it] 16%|█▌        | 1591/9908 [2:01:06<8:31:41,  3.69s/it] 16%|█▌        | 1592/9908 [2:01:09<8:35:20,  3.72s/it] 16%|█▌        | 1593/9908 [2:01:13<8:32:58,  3.70s/it] 16%|█▌        | 1594/9908 [2:01:16<8:24:28,  3.64s/it] 16%|█▌        | 1595/9908 [2:01:21<8:43:03,  3.78s/it] 16%|█▌        | 1596/9908 [2:01:24<8:45:21,  3.79s/it] 16%|█▌        | 1597/9908 [2:01:28<8:50:29,  3.83s/it] 16%|█▌        | 1598/9908 [2:01:32<8:30:53,  3.69s/it] 16%|█▌        | 1599/9908 [2:01:35<8:24:23,  3.64s/it]09/20/2024 03:38:10 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.030659804120659828, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.326765537261963, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.357425332069397}
 16%|█▌        | 1600/9908 [2:01:39<8:19:22,  3.61s/it] 16%|█▌        | 1601/9908 [2:01:43<8:31:56,  3.70s/it] 16%|█▌        | 1602/9908 [2:01:46<8:25:17,  3.65s/it] 16%|█▌        | 1603/9908 [2:01:50<8:32:56,  3.71s/it] 16%|█▌        | 1604/9908 [2:01:54<8:28:21,  3.67s/it] 16%|█▌        | 1605/9908 [2:01:57<8:30:20,  3.69s/it] 16%|█▌        | 1606/9908 [2:02:01<8:44:37,  3.79s/it] 16%|█▌        | 1607/9908 [2:02:05<8:38:17,  3.75s/it] 16%|█▌        | 1608/9908 [2:02:08<8:26:16,  3.66s/it] 16%|█▌        | 1609/9908 [2:02:12<8:23:46,  3.64s/it] 16%|█▌        | 1610/9908 [2:02:16<8:41:00,  3.77s/it] 16%|█▋        | 1611/9908 [2:02:20<8:36:02,  3.73s/it] 16%|█▋        | 1612/9908 [2:02:24<8:42:37,  3.78s/it] 16%|█▋        | 1613/9908 [2:02:28<8:46:19,  3.81s/it] 16%|█▋        | 1614/9908 [2:02:31<8:38:26,  3.75s/it] 16%|█▋        | 1615/9908 [2:02:35<8:26:10,  3.66s/it] 16%|█▋        | 1616/9908 [2:02:38<8:33:23,  3.71s/it] 16%|█▋        | 1617/9908 [2:02:42<8:37:03,  3.74s/it] 16%|█▋        | 1618/9908 [2:02:46<8:45:03,  3.80s/it] 16%|█▋        | 1619/9908 [2:02:50<8:43:31,  3.79s/it] 16%|█▋        | 1620/9908 [2:02:54<8:39:46,  3.76s/it] 16%|█▋        | 1621/9908 [2:02:57<8:23:14,  3.64s/it] 16%|█▋        | 1622/9908 [2:03:01<8:23:41,  3.65s/it] 16%|█▋        | 1623/9908 [2:03:05<8:34:49,  3.73s/it] 16%|█▋        | 1624/9908 [2:03:08<8:18:39,  3.61s/it] 16%|█▋        | 1625/9908 [2:03:12<8:37:31,  3.75s/it] 16%|█▋        | 1626/9908 [2:03:16<8:35:04,  3.73s/it] 16%|█▋        | 1627/9908 [2:03:19<8:25:05,  3.66s/it] 16%|█▋        | 1628/9908 [2:03:23<8:14:46,  3.59s/it] 16%|█▋        | 1629/9908 [2:03:26<8:08:15,  3.54s/it] 16%|█▋        | 1630/9908 [2:03:30<8:16:13,  3.60s/it] 16%|█▋        | 1631/9908 [2:03:34<8:32:50,  3.72s/it] 16%|█▋        | 1632/9908 [2:03:38<8:41:10,  3.78s/it] 16%|█▋        | 1633/9908 [2:03:41<8:33:21,  3.72s/it] 16%|█▋        | 1634/9908 [2:03:45<8:40:42,  3.78s/it] 17%|█▋        | 1635/9908 [2:03:49<8:47:58,  3.83s/it] 17%|█▋        | 1636/9908 [2:03:53<8:40:01,  3.77s/it] 17%|█▋        | 1637/9908 [2:03:56<8:28:02,  3.69s/it] 17%|█▋        | 1638/9908 [2:04:00<8:31:35,  3.71s/it] 17%|█▋        | 1639/9908 [2:04:04<8:31:48,  3.71s/it] 17%|█▋        | 1640/9908 [2:04:08<8:43:59,  3.80s/it] 17%|█▋        | 1641/9908 [2:04:11<8:34:12,  3.73s/it] 17%|█▋        | 1642/9908 [2:04:15<8:35:51,  3.74s/it] 17%|█▋        | 1643/9908 [2:04:19<8:28:50,  3.69s/it] 17%|█▋        | 1644/9908 [2:04:22<8:20:08,  3.63s/it] 17%|█▋        | 1645/9908 [2:04:26<8:20:33,  3.63s/it] 17%|█▋        | 1646/9908 [2:04:30<8:30:51,  3.71s/it] 17%|█▋        | 1647/9908 [2:04:33<8:28:51,  3.70s/it] 17%|█▋        | 1648/9908 [2:04:37<8:17:15,  3.61s/it] 17%|█▋        | 1649/9908 [2:04:41<8:26:41,  3.68s/it]09/20/2024 03:41:15 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.045693885535001755, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.752856969833374, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.7985508441925049}
 17%|█▋        | 1650/9908 [2:04:44<8:21:25,  3.64s/it] 17%|█▋        | 1651/9908 [2:04:48<8:21:37,  3.65s/it] 17%|█▋        | 1652/9908 [2:04:51<8:22:53,  3.65s/it] 17%|█▋        | 1653/9908 [2:04:55<8:37:49,  3.76s/it] 17%|█▋        | 1654/9908 [2:04:59<8:37:09,  3.76s/it] 17%|█▋        | 1655/9908 [2:05:03<8:44:22,  3.81s/it] 17%|█▋        | 1656/9908 [2:05:06<8:20:45,  3.64s/it] 17%|█▋        | 1657/9908 [2:05:10<8:29:39,  3.71s/it] 17%|█▋        | 1658/9908 [2:05:14<8:34:44,  3.74s/it] 17%|█▋        | 1659/9908 [2:05:18<8:27:49,  3.69s/it] 17%|█▋        | 1660/9908 [2:05:22<8:34:17,  3.74s/it] 17%|█▋        | 1661/9908 [2:05:25<8:20:19,  3.64s/it] 17%|█▋        | 1662/9908 [2:05:29<8:31:50,  3.72s/it] 17%|█▋        | 1663/9908 [2:05:32<8:26:21,  3.68s/it] 17%|█▋        | 1664/9908 [2:05:36<8:26:02,  3.68s/it] 17%|█▋        | 1665/9908 [2:05:40<8:25:38,  3.68s/it] 17%|█▋        | 1666/9908 [2:05:44<8:31:08,  3.72s/it] 17%|█▋        | 1667/9908 [2:05:47<8:35:11,  3.75s/it] 17%|█▋        | 1668/9908 [2:05:51<8:33:54,  3.74s/it] 17%|█▋        | 1669/9908 [2:05:55<8:48:34,  3.85s/it] 17%|█▋        | 1670/9908 [2:05:59<8:54:56,  3.90s/it] 17%|█▋        | 1671/9908 [2:06:03<8:36:42,  3.76s/it] 17%|█▋        | 1672/9908 [2:06:06<8:35:15,  3.75s/it] 17%|█▋        | 1673/9908 [2:06:10<8:43:18,  3.81s/it] 17%|█▋        | 1674/9908 [2:06:15<8:56:32,  3.91s/it] 17%|█▋        | 1675/9908 [2:06:19<8:59:19,  3.93s/it] 17%|█▋        | 1676/9908 [2:06:22<8:37:18,  3.77s/it] 17%|█▋        | 1677/9908 [2:06:25<8:23:43,  3.67s/it] 17%|█▋        | 1678/9908 [2:06:29<8:33:37,  3.74s/it] 17%|█▋        | 1679/9908 [2:06:33<8:24:57,  3.68s/it] 17%|█▋        | 1680/9908 [2:06:36<8:15:31,  3.61s/it] 17%|█▋        | 1681/9908 [2:06:40<8:19:13,  3.64s/it] 17%|█▋        | 1682/9908 [2:06:44<8:24:15,  3.68s/it] 17%|█▋        | 1683/9908 [2:06:47<8:22:11,  3.66s/it] 17%|█▋        | 1684/9908 [2:06:51<8:21:32,  3.66s/it] 17%|█▋        | 1685/9908 [2:06:55<8:24:14,  3.68s/it] 17%|█▋        | 1686/9908 [2:06:58<8:17:57,  3.63s/it] 17%|█▋        | 1687/9908 [2:07:02<8:32:04,  3.74s/it] 17%|█▋        | 1688/9908 [2:07:06<8:28:04,  3.71s/it] 17%|█▋        | 1689/9908 [2:07:10<8:28:17,  3.71s/it] 17%|█▋        | 1690/9908 [2:07:13<8:27:53,  3.71s/it] 17%|█▋        | 1691/9908 [2:07:17<8:25:03,  3.69s/it] 17%|█▋        | 1692/9908 [2:07:21<8:20:34,  3.66s/it] 17%|█▋        | 1693/9908 [2:07:24<8:16:07,  3.62s/it] 17%|█▋        | 1694/9908 [2:07:28<8:14:08,  3.61s/it] 17%|█▋        | 1695/9908 [2:07:31<8:08:27,  3.57s/it] 17%|█▋        | 1696/9908 [2:07:35<8:18:20,  3.64s/it] 17%|█▋        | 1697/9908 [2:07:39<8:36:54,  3.78s/it] 17%|█▋        | 1698/9908 [2:07:43<8:35:20,  3.77s/it] 17%|█▋        | 1699/9908 [2:07:46<8:27:29,  3.71s/it]09/20/2024 03:44:21 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.0336330346763134, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2816307544708252, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.3152637481689453}
 17%|█▋        | 1700/9908 [2:07:50<8:26:52,  3.71s/it] 17%|█▋        | 1701/9908 [2:07:54<8:33:10,  3.75s/it] 17%|█▋        | 1702/9908 [2:07:57<8:17:16,  3.64s/it] 17%|█▋        | 1703/9908 [2:08:01<8:25:58,  3.70s/it] 17%|█▋        | 1704/9908 [2:08:05<8:21:39,  3.67s/it] 17%|█▋        | 1705/9908 [2:08:08<8:17:22,  3.64s/it] 17%|█▋        | 1706/9908 [2:08:12<8:36:50,  3.78s/it] 17%|█▋        | 1707/9908 [2:08:16<8:33:09,  3.75s/it] 17%|█▋        | 1708/9908 [2:08:20<8:26:49,  3.71s/it] 17%|█▋        | 1709/9908 [2:08:23<8:21:40,  3.67s/it] 17%|█▋        | 1710/9908 [2:08:27<8:39:19,  3.80s/it] 17%|█▋        | 1711/9908 [2:08:31<8:35:37,  3.77s/it] 17%|█▋        | 1712/9908 [2:08:35<8:36:46,  3.78s/it] 17%|█▋        | 1713/9908 [2:08:39<8:40:06,  3.81s/it] 17%|█▋        | 1714/9908 [2:08:42<8:33:41,  3.76s/it] 17%|█▋        | 1715/9908 [2:08:46<8:36:55,  3.79s/it] 17%|█▋        | 1716/9908 [2:08:50<8:31:53,  3.75s/it] 17%|█▋        | 1717/9908 [2:08:54<8:26:27,  3.71s/it] 17%|█▋        | 1718/9908 [2:08:57<8:30:05,  3.74s/it] 17%|█▋        | 1719/9908 [2:09:01<8:29:04,  3.73s/it] 17%|█▋        | 1720/9908 [2:09:05<8:25:13,  3.70s/it] 17%|█▋        | 1721/9908 [2:09:09<8:32:54,  3.76s/it] 17%|█▋        | 1722/9908 [2:09:13<8:43:52,  3.84s/it] 17%|█▋        | 1723/9908 [2:09:17<8:56:35,  3.93s/it] 17%|█▋        | 1724/9908 [2:09:20<8:42:51,  3.83s/it] 17%|█▋        | 1725/9908 [2:09:24<8:42:57,  3.83s/it] 17%|█▋        | 1726/9908 [2:09:28<8:41:22,  3.82s/it] 17%|█▋        | 1727/9908 [2:09:31<8:26:42,  3.72s/it] 17%|█▋        | 1728/9908 [2:09:35<8:21:08,  3.68s/it] 17%|█▋        | 1729/9908 [2:09:39<8:26:51,  3.72s/it] 17%|█▋        | 1730/9908 [2:09:43<8:30:27,  3.75s/it] 17%|█▋        | 1731/9908 [2:09:47<8:35:06,  3.78s/it] 17%|█▋        | 1732/9908 [2:09:50<8:19:23,  3.66s/it] 17%|█▋        | 1733/9908 [2:09:54<8:17:30,  3.65s/it] 18%|█▊        | 1734/9908 [2:09:57<8:30:35,  3.75s/it] 18%|█▊        | 1735/9908 [2:10:02<8:48:23,  3.88s/it] 18%|█▊        | 1736/9908 [2:10:06<8:46:43,  3.87s/it] 18%|█▊        | 1737/9908 [2:10:09<8:34:52,  3.78s/it] 18%|█▊        | 1738/9908 [2:10:13<8:23:34,  3.70s/it] 18%|█▊        | 1739/9908 [2:10:16<8:27:02,  3.72s/it] 18%|█▊        | 1740/9908 [2:10:20<8:23:03,  3.70s/it] 18%|█▊        | 1741/9908 [2:10:24<8:24:43,  3.71s/it] 18%|█▊        | 1742/9908 [2:10:27<8:23:19,  3.70s/it] 18%|█▊        | 1743/9908 [2:10:31<8:24:44,  3.71s/it] 18%|█▊        | 1744/9908 [2:10:35<8:37:02,  3.80s/it] 18%|█▊        | 1745/9908 [2:10:39<8:33:22,  3.77s/it] 18%|█▊        | 1746/9908 [2:10:43<8:47:12,  3.88s/it] 18%|█▊        | 1747/9908 [2:10:47<8:42:53,  3.84s/it] 18%|█▊        | 1748/9908 [2:10:50<8:31:22,  3.76s/it] 18%|█▊        | 1749/9908 [2:10:54<8:24:35,  3.71s/it]09/20/2024 03:47:28 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.036635663360357285, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.6815319061279297, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.7181675434112549}
 18%|█▊        | 1750/9908 [2:10:58<8:22:02,  3.69s/it] 18%|█▊        | 1751/9908 [2:11:01<8:24:31,  3.71s/it] 18%|█▊        | 1752/9908 [2:11:05<8:30:46,  3.76s/it] 18%|█▊        | 1753/9908 [2:11:09<8:29:29,  3.75s/it] 18%|█▊        | 1754/9908 [2:11:13<8:31:17,  3.76s/it] 18%|█▊        | 1755/9908 [2:11:17<8:46:55,  3.88s/it] 18%|█▊        | 1756/9908 [2:11:21<8:45:21,  3.87s/it] 18%|█▊        | 1757/9908 [2:11:25<8:42:53,  3.85s/it] 18%|█▊        | 1758/9908 [2:11:28<8:39:26,  3.82s/it] 18%|█▊        | 1759/9908 [2:11:32<8:30:02,  3.76s/it] 18%|█▊        | 1760/9908 [2:11:35<8:23:25,  3.71s/it] 18%|█▊        | 1761/9908 [2:11:39<8:18:31,  3.67s/it] 18%|█▊        | 1762/9908 [2:11:43<8:28:55,  3.75s/it] 18%|█▊        | 1763/9908 [2:11:47<8:42:11,  3.85s/it] 18%|█▊        | 1764/9908 [2:11:51<8:32:27,  3.78s/it] 18%|█▊        | 1765/9908 [2:11:54<8:13:22,  3.64s/it] 18%|█▊        | 1766/9908 [2:11:58<8:35:27,  3.80s/it] 18%|█▊        | 1767/9908 [2:12:02<8:26:44,  3.73s/it] 18%|█▊        | 1768/9908 [2:12:05<8:11:51,  3.63s/it] 18%|█▊        | 1769/9908 [2:12:09<8:17:45,  3.67s/it] 18%|█▊        | 1770/9908 [2:12:13<8:20:57,  3.69s/it] 18%|█▊        | 1771/9908 [2:12:16<8:24:33,  3.72s/it] 18%|█▊        | 1772/9908 [2:12:20<8:16:47,  3.66s/it] 18%|█▊        | 1773/9908 [2:12:24<8:20:07,  3.69s/it] 18%|█▊        | 1774/9908 [2:12:27<8:17:20,  3.67s/it] 18%|█▊        | 1775/9908 [2:12:32<8:39:14,  3.83s/it] 18%|█▊        | 1776/9908 [2:12:35<8:32:34,  3.78s/it] 18%|█▊        | 1777/9908 [2:12:39<8:32:54,  3.78s/it] 18%|█▊        | 1778/9908 [2:12:43<8:23:58,  3.72s/it] 18%|█▊        | 1779/9908 [2:12:46<8:17:05,  3.67s/it] 18%|█▊        | 1780/9908 [2:12:50<8:18:41,  3.68s/it] 18%|█▊        | 1781/9908 [2:12:53<8:16:12,  3.66s/it] 18%|█▊        | 1782/9908 [2:12:57<8:11:35,  3.63s/it] 18%|█▊        | 1783/9908 [2:13:01<8:18:30,  3.68s/it] 18%|█▊        | 1784/9908 [2:13:05<8:36:21,  3.81s/it] 18%|█▊        | 1785/9908 [2:13:08<8:11:20,  3.63s/it] 18%|█▊        | 1786/9908 [2:13:12<8:16:26,  3.67s/it] 18%|█▊        | 1787/9908 [2:13:16<8:38:33,  3.83s/it] 18%|█▊        | 1788/9908 [2:13:20<8:36:41,  3.82s/it] 18%|█▊        | 1789/9908 [2:13:24<8:52:31,  3.94s/it] 18%|█▊        | 1790/9908 [2:13:28<8:44:05,  3.87s/it] 18%|█▊        | 1791/9908 [2:13:31<8:31:51,  3.78s/it] 18%|█▊        | 1792/9908 [2:13:35<8:41:15,  3.85s/it] 18%|█▊        | 1793/9908 [2:13:39<8:26:40,  3.75s/it] 18%|█▊        | 1794/9908 [2:13:43<8:23:20,  3.72s/it] 18%|█▊        | 1795/9908 [2:13:47<8:39:28,  3.84s/it] 18%|█▊        | 1796/9908 [2:13:50<8:27:37,  3.75s/it] 18%|█▊        | 1797/9908 [2:13:54<8:21:21,  3.71s/it] 18%|█▊        | 1798/9908 [2:13:57<8:12:06,  3.64s/it] 18%|█▊        | 1799/9908 [2:14:01<8:24:40,  3.73s/it]09/20/2024 03:50:36 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.025766516104340553, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.154299020767212, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.1800655126571655}
 18%|█▊        | 1800/9908 [2:14:05<8:28:17,  3.76s/it] 18%|█▊        | 1801/9908 [2:14:09<8:35:11,  3.81s/it] 18%|█▊        | 1802/9908 [2:14:13<8:31:37,  3.79s/it] 18%|█▊        | 1803/9908 [2:14:16<8:25:56,  3.75s/it] 18%|█▊        | 1804/9908 [2:14:20<8:19:30,  3.70s/it] 18%|█▊        | 1805/9908 [2:14:24<8:15:42,  3.67s/it] 18%|█▊        | 1806/9908 [2:14:27<8:12:26,  3.65s/it] 18%|█▊        | 1807/9908 [2:14:31<8:02:55,  3.58s/it] 18%|█▊        | 1808/9908 [2:14:35<8:16:09,  3.68s/it] 18%|█▊        | 1809/9908 [2:14:38<8:27:37,  3.76s/it] 18%|█▊        | 1810/9908 [2:14:42<8:18:30,  3.69s/it] 18%|█▊        | 1811/9908 [2:14:46<8:15:45,  3.67s/it] 18%|█▊        | 1812/9908 [2:14:49<8:18:51,  3.70s/it] 18%|█▊        | 1813/9908 [2:14:53<8:10:43,  3.64s/it] 18%|█▊        | 1814/9908 [2:14:56<7:56:50,  3.53s/it] 18%|█▊        | 1815/9908 [2:15:00<8:11:12,  3.64s/it] 18%|█▊        | 1816/9908 [2:15:04<8:28:37,  3.77s/it] 18%|█▊        | 1817/9908 [2:15:08<8:37:07,  3.83s/it] 18%|█▊        | 1818/9908 [2:15:12<8:28:36,  3.77s/it] 18%|█▊        | 1819/9908 [2:15:15<8:26:34,  3.76s/it] 18%|█▊        | 1820/9908 [2:15:19<8:27:33,  3.77s/it] 18%|█▊        | 1821/9908 [2:15:23<8:31:39,  3.80s/it] 18%|█▊        | 1822/9908 [2:15:27<8:29:36,  3.78s/it] 18%|█▊        | 1823/9908 [2:15:30<8:16:37,  3.69s/it] 18%|█▊        | 1824/9908 [2:15:34<8:18:55,  3.70s/it] 18%|█▊        | 1825/9908 [2:15:38<8:18:07,  3.70s/it] 18%|█▊        | 1826/9908 [2:15:42<8:28:43,  3.78s/it] 18%|█▊        | 1827/9908 [2:15:46<8:38:52,  3.85s/it] 18%|█▊        | 1828/9908 [2:15:50<8:34:37,  3.82s/it] 18%|█▊        | 1829/9908 [2:15:53<8:29:03,  3.78s/it] 18%|█▊        | 1830/9908 [2:15:57<8:31:41,  3.80s/it] 18%|█▊        | 1831/9908 [2:16:00<8:17:35,  3.70s/it] 18%|█▊        | 1832/9908 [2:16:04<8:09:07,  3.63s/it] 19%|█▊        | 1833/9908 [2:16:08<8:20:35,  3.72s/it] 19%|█▊        | 1834/9908 [2:16:12<8:28:52,  3.78s/it] 19%|█▊        | 1835/9908 [2:16:15<8:22:16,  3.73s/it] 19%|█▊        | 1836/9908 [2:16:19<8:22:58,  3.74s/it] 19%|█▊        | 1837/9908 [2:16:23<8:13:10,  3.67s/it] 19%|█▊        | 1838/9908 [2:16:26<8:14:11,  3.67s/it] 19%|█▊        | 1839/9908 [2:16:30<8:14:46,  3.68s/it] 19%|█▊        | 1840/9908 [2:16:34<8:23:18,  3.74s/it] 19%|█▊        | 1841/9908 [2:16:38<8:31:30,  3.80s/it] 19%|█▊        | 1842/9908 [2:16:41<8:08:34,  3.63s/it] 19%|█▊        | 1843/9908 [2:16:45<8:13:28,  3.67s/it] 19%|█▊        | 1844/9908 [2:16:48<7:59:18,  3.57s/it] 19%|█▊        | 1845/9908 [2:16:52<8:00:20,  3.57s/it] 19%|█▊        | 1846/9908 [2:16:55<7:59:58,  3.57s/it] 19%|█▊        | 1847/9908 [2:17:00<8:32:27,  3.81s/it] 19%|█▊        | 1848/9908 [2:17:03<8:23:18,  3.75s/it] 19%|█▊        | 1849/9908 [2:17:07<8:19:57,  3.72s/it]09/20/2024 03:53:42 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.024814670905470848, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.239237904548645, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.2640526294708252}
 19%|█▊        | 1850/9908 [2:17:11<8:29:32,  3.79s/it] 19%|█▊        | 1851/9908 [2:17:15<8:26:24,  3.77s/it] 19%|█▊        | 1852/9908 [2:17:18<8:19:34,  3.72s/it] 19%|█▊        | 1853/9908 [2:17:22<8:08:05,  3.64s/it] 19%|█▊        | 1854/9908 [2:17:26<8:18:11,  3.71s/it] 19%|█▊        | 1855/9908 [2:17:30<8:31:53,  3.81s/it] 19%|█▊        | 1856/9908 [2:17:33<8:18:25,  3.71s/it] 19%|█▊        | 1857/9908 [2:17:37<8:21:39,  3.74s/it] 19%|█▉        | 1858/9908 [2:17:41<8:35:35,  3.84s/it] 19%|█▉        | 1859/9908 [2:17:45<8:40:23,  3.88s/it] 19%|█▉        | 1860/9908 [2:17:48<8:21:43,  3.74s/it] 19%|█▉        | 1861/9908 [2:17:52<8:26:19,  3.78s/it] 19%|█▉        | 1862/9908 [2:17:56<8:26:45,  3.78s/it] 19%|█▉        | 1863/9908 [2:18:00<8:32:19,  3.82s/it] 19%|█▉        | 1864/9908 [2:18:04<8:23:55,  3.76s/it] 19%|█▉        | 1865/9908 [2:18:07<8:13:21,  3.68s/it] 19%|█▉        | 1866/9908 [2:18:11<8:18:29,  3.72s/it] 19%|█▉        | 1867/9908 [2:18:15<8:36:20,  3.85s/it] 19%|█▉        | 1868/9908 [2:18:19<8:26:34,  3.78s/it] 19%|█▉        | 1869/9908 [2:18:22<8:13:22,  3.68s/it] 19%|█▉        | 1870/9908 [2:18:26<8:11:43,  3.67s/it] 19%|█▉        | 1871/9908 [2:18:29<8:10:30,  3.66s/it] 19%|█▉        | 1872/9908 [2:18:34<8:29:04,  3.80s/it] 19%|█▉        | 1873/9908 [2:18:38<8:37:29,  3.86s/it] 19%|█▉        | 1874/9908 [2:18:42<8:42:42,  3.90s/it] 19%|█▉        | 1875/9908 [2:18:45<8:30:37,  3.81s/it] 19%|█▉        | 1876/9908 [2:18:49<8:38:30,  3.87s/it] 19%|█▉        | 1877/9908 [2:18:53<8:38:24,  3.87s/it] 19%|█▉        | 1878/9908 [2:18:56<8:13:08,  3.68s/it] 19%|█▉        | 1879/9908 [2:19:00<8:04:01,  3.62s/it] 19%|█▉        | 1880/9908 [2:19:03<7:58:25,  3.58s/it] 19%|█▉        | 1881/9908 [2:19:07<8:02:12,  3.60s/it] 19%|█▉        | 1882/9908 [2:19:11<8:04:47,  3.62s/it] 19%|█▉        | 1883/9908 [2:19:14<8:12:48,  3.68s/it] 19%|█▉        | 1884/9908 [2:19:18<8:24:26,  3.77s/it] 19%|█▉        | 1885/9908 [2:19:22<8:24:20,  3.77s/it] 19%|█▉        | 1886/9908 [2:19:26<8:26:04,  3.79s/it] 19%|█▉        | 1887/9908 [2:19:30<8:21:24,  3.75s/it] 19%|█▉        | 1888/9908 [2:19:33<8:14:11,  3.70s/it] 19%|█▉        | 1889/9908 [2:19:37<8:10:18,  3.67s/it] 19%|█▉        | 1890/9908 [2:19:41<8:23:14,  3.77s/it] 19%|█▉        | 1891/9908 [2:19:45<8:37:44,  3.87s/it] 19%|█▉        | 1892/9908 [2:19:49<8:31:05,  3.83s/it] 19%|█▉        | 1893/9908 [2:19:53<8:36:49,  3.87s/it] 19%|█▉        | 1894/9908 [2:19:56<8:16:46,  3.72s/it] 19%|█▉        | 1895/9908 [2:20:00<8:13:45,  3.70s/it] 19%|█▉        | 1896/9908 [2:20:03<8:16:19,  3.72s/it] 19%|█▉        | 1897/9908 [2:20:07<8:16:01,  3.72s/it] 19%|█▉        | 1898/9908 [2:20:11<8:12:18,  3.69s/it] 19%|█▉        | 1899/9908 [2:20:14<8:09:29,  3.67s/it]09/20/2024 03:56:49 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04531542584300041, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.6052238941192627, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.6505392789840698}
 19%|█▉        | 1900/9908 [2:20:18<8:08:31,  3.66s/it] 19%|█▉        | 1901/9908 [2:20:22<8:14:31,  3.71s/it] 19%|█▉        | 1902/9908 [2:20:26<8:36:36,  3.87s/it] 19%|█▉        | 1903/9908 [2:20:30<8:35:09,  3.86s/it] 19%|█▉        | 1904/9908 [2:20:33<8:17:18,  3.73s/it] 19%|█▉        | 1905/9908 [2:20:37<8:16:34,  3.72s/it] 19%|█▉        | 1906/9908 [2:20:41<8:16:42,  3.72s/it] 19%|█▉        | 1907/9908 [2:20:44<8:10:22,  3.68s/it] 19%|█▉        | 1908/9908 [2:20:48<8:11:03,  3.68s/it] 19%|█▉        | 1909/9908 [2:20:52<8:11:04,  3.68s/it] 19%|█▉        | 1910/9908 [2:20:55<8:00:28,  3.60s/it] 19%|█▉        | 1911/9908 [2:20:59<8:03:00,  3.62s/it] 19%|█▉        | 1912/9908 [2:21:03<8:11:04,  3.68s/it] 19%|█▉        | 1913/9908 [2:21:06<8:18:11,  3.74s/it] 19%|█▉        | 1914/9908 [2:21:10<8:22:01,  3.77s/it] 19%|█▉        | 1915/9908 [2:21:14<8:08:44,  3.67s/it] 19%|█▉        | 1916/9908 [2:21:17<8:09:22,  3.67s/it] 19%|█▉        | 1917/9908 [2:21:21<8:06:53,  3.66s/it] 19%|█▉        | 1918/9908 [2:21:25<8:19:05,  3.75s/it] 19%|█▉        | 1919/9908 [2:21:29<8:12:45,  3.70s/it] 19%|█▉        | 1920/9908 [2:21:32<8:15:39,  3.72s/it] 19%|█▉        | 1921/9908 [2:21:36<8:08:58,  3.67s/it] 19%|█▉        | 1922/9908 [2:21:40<8:05:25,  3.65s/it] 19%|█▉        | 1923/9908 [2:21:44<8:20:09,  3.76s/it] 19%|█▉        | 1924/9908 [2:21:47<8:13:22,  3.71s/it] 19%|█▉        | 1925/9908 [2:21:51<8:04:21,  3.64s/it] 19%|█▉        | 1926/9908 [2:21:54<8:05:29,  3.65s/it] 19%|█▉        | 1927/9908 [2:21:58<8:15:38,  3.73s/it] 19%|█▉        | 1928/9908 [2:22:02<8:15:28,  3.73s/it] 19%|█▉        | 1929/9908 [2:22:05<8:08:13,  3.67s/it] 19%|█▉        | 1930/9908 [2:22:09<8:20:42,  3.77s/it] 19%|█▉        | 1931/9908 [2:22:13<8:08:26,  3.67s/it] 19%|█▉        | 1932/9908 [2:22:16<8:01:44,  3.62s/it] 20%|█▉        | 1933/9908 [2:22:20<8:14:47,  3.72s/it] 20%|█▉        | 1934/9908 [2:22:24<8:11:31,  3.70s/it] 20%|█▉        | 1935/9908 [2:22:28<8:18:01,  3.75s/it] 20%|█▉        | 1936/9908 [2:22:32<8:13:03,  3.71s/it] 20%|█▉        | 1937/9908 [2:22:35<8:23:44,  3.79s/it] 20%|█▉        | 1938/9908 [2:22:39<8:15:36,  3.73s/it] 20%|█▉        | 1939/9908 [2:22:43<8:18:15,  3.75s/it] 20%|█▉        | 1940/9908 [2:22:46<8:11:07,  3.70s/it] 20%|█▉        | 1941/9908 [2:22:50<8:17:29,  3.75s/it] 20%|█▉        | 1942/9908 [2:22:54<8:05:31,  3.66s/it] 20%|█▉        | 1943/9908 [2:22:57<8:09:03,  3.68s/it] 20%|█▉        | 1944/9908 [2:23:01<8:12:54,  3.71s/it] 20%|█▉        | 1945/9908 [2:23:05<8:15:39,  3.73s/it] 20%|█▉        | 1946/9908 [2:23:09<8:20:45,  3.77s/it] 20%|█▉        | 1947/9908 [2:23:12<8:07:31,  3.67s/it] 20%|█▉        | 1948/9908 [2:23:16<8:09:05,  3.69s/it] 20%|█▉        | 1949/9908 [2:23:20<8:10:44,  3.70s/it]09/20/2024 03:59:55 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03059542551636696, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.4466859102249146, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.4772813320159912}
 20%|█▉        | 1950/9908 [2:23:24<8:14:19,  3.73s/it] 20%|█▉        | 1951/9908 [2:23:27<8:20:06,  3.77s/it] 20%|█▉        | 1952/9908 [2:23:31<8:20:54,  3.78s/it] 20%|█▉        | 1953/9908 [2:23:35<8:15:40,  3.74s/it] 20%|█▉        | 1954/9908 [2:23:38<8:09:08,  3.69s/it] 20%|█▉        | 1955/9908 [2:23:42<7:58:07,  3.61s/it] 20%|█▉        | 1956/9908 [2:23:45<7:52:40,  3.57s/it] 20%|█▉        | 1957/9908 [2:23:49<7:58:48,  3.61s/it] 20%|█▉        | 1958/9908 [2:23:53<8:12:17,  3.72s/it] 20%|█▉        | 1959/9908 [2:23:57<8:24:16,  3.81s/it] 20%|█▉        | 1960/9908 [2:24:00<8:00:43,  3.63s/it] 20%|█▉        | 1961/9908 [2:24:04<7:50:44,  3.55s/it] 20%|█▉        | 1962/9908 [2:24:07<7:56:34,  3.60s/it] 20%|█▉        | 1963/9908 [2:24:11<7:59:49,  3.62s/it] 20%|█▉        | 1964/9908 [2:24:15<8:04:41,  3.66s/it] 20%|█▉        | 1965/9908 [2:24:19<8:08:20,  3.69s/it] 20%|█▉        | 1966/9908 [2:24:23<8:20:25,  3.78s/it] 20%|█▉        | 1967/9908 [2:24:26<8:04:50,  3.66s/it] 20%|█▉        | 1968/9908 [2:24:30<8:14:32,  3.74s/it] 20%|█▉        | 1969/9908 [2:24:34<8:15:46,  3.75s/it] 20%|█▉        | 1970/9908 [2:24:37<8:10:19,  3.71s/it] 20%|█▉        | 1971/9908 [2:24:41<8:21:57,  3.79s/it] 20%|█▉        | 1972/9908 [2:24:45<8:11:00,  3.71s/it] 20%|█▉        | 1973/9908 [2:24:49<8:21:49,  3.79s/it] 20%|█▉        | 1974/9908 [2:24:53<8:24:16,  3.81s/it] 20%|█▉        | 1975/9908 [2:24:56<8:16:30,  3.76s/it] 20%|█▉        | 1976/9908 [2:25:00<8:17:30,  3.76s/it] 20%|█▉        | 1977/9908 [2:25:04<8:21:41,  3.80s/it] 20%|█▉        | 1978/9908 [2:25:08<8:45:59,  3.98s/it] 20%|█▉        | 1979/9908 [2:25:12<8:20:53,  3.79s/it] 20%|█▉        | 1980/9908 [2:25:15<8:06:41,  3.68s/it] 20%|█▉        | 1981/9908 [2:25:19<8:02:05,  3.65s/it] 20%|██        | 1982/9908 [2:25:22<8:10:09,  3.71s/it] 20%|██        | 1983/9908 [2:25:26<8:21:15,  3.79s/it] 20%|██        | 1984/9908 [2:25:30<8:10:14,  3.71s/it] 20%|██        | 1985/9908 [2:25:34<8:10:17,  3.71s/it] 20%|██        | 1986/9908 [2:25:37<8:01:05,  3.64s/it] 20%|██        | 1987/9908 [2:25:41<8:01:51,  3.65s/it] 20%|██        | 1988/9908 [2:25:45<8:16:45,  3.76s/it] 20%|██        | 1989/9908 [2:25:49<8:11:51,  3.73s/it] 20%|██        | 1990/9908 [2:25:52<8:03:22,  3.66s/it] 20%|██        | 1991/9908 [2:25:56<8:12:02,  3.73s/it] 20%|██        | 1992/9908 [2:25:59<8:02:57,  3.66s/it] 20%|██        | 1993/9908 [2:26:03<7:57:13,  3.62s/it] 20%|██        | 1994/9908 [2:26:07<7:58:30,  3.63s/it] 20%|██        | 1995/9908 [2:26:10<7:58:56,  3.63s/it] 20%|██        | 1996/9908 [2:26:14<8:00:49,  3.65s/it] 20%|██        | 1997/9908 [2:26:18<8:17:28,  3.77s/it] 20%|██        | 1998/9908 [2:26:22<8:10:16,  3.72s/it] 20%|██        | 1999/9908 [2:26:25<8:10:59,  3.72s/it]09/20/2024 04:02:59 - INFO - __main__ -   evaluate on ret%tvas--msrvtt_ret task
09/20/2024 04:02:59 - INFO - __main__ -   start running ret%tvas validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:00<01:08,  3.19it/s][A
  1%|          | 2/221 [00:00<01:23,  2.63it/s][A
  1%|▏         | 3/221 [00:01<01:56,  1.87it/s][A
  2%|▏         | 4/221 [00:01<01:32,  2.35it/s][A
  2%|▏         | 5/221 [00:01<01:07,  3.20it/s][A
  3%|▎         | 6/221 [00:02<01:01,  3.48it/s][A
  4%|▎         | 8/221 [00:02<00:53,  4.00it/s][A
  4%|▍         | 9/221 [00:02<01:03,  3.32it/s][A
  5%|▍         | 10/221 [00:03<01:00,  3.51it/s][A
  5%|▌         | 12/221 [00:04<01:21,  2.58it/s][A
  6%|▌         | 13/221 [00:04<01:10,  2.94it/s][A
  7%|▋         | 15/221 [00:04<00:56,  3.65it/s][A
  7%|▋         | 16/221 [00:05<01:17,  2.65it/s][A
  8%|▊         | 17/221 [00:06<01:37,  2.10it/s][A
  8%|▊         | 18/221 [00:07<02:23,  1.42it/s][A
  9%|▊         | 19/221 [00:08<02:09,  1.56it/s][A
 10%|▉         | 21/221 [00:08<01:27,  2.28it/s][A
 10%|▉         | 22/221 [00:08<01:23,  2.37it/s][A
 11%|█         | 24/221 [00:09<01:02,  3.16it/s][A
 11%|█▏        | 25/221 [00:09<00:57,  3.41it/s][A
 12%|█▏        | 26/221 [00:09<00:52,  3.74it/s][A
 12%|█▏        | 27/221 [00:09<00:44,  4.39it/s][A
 13%|█▎        | 28/221 [00:10<01:04,  2.99it/s][A
 13%|█▎        | 29/221 [00:10<01:17,  2.48it/s][A
 14%|█▎        | 30/221 [00:11<01:30,  2.10it/s][A
 14%|█▍        | 31/221 [00:12<01:51,  1.71it/s][A
 15%|█▍        | 33/221 [00:12<01:22,  2.29it/s][A
 16%|█▌        | 35/221 [00:13<00:57,  3.25it/s][A
 16%|█▋        | 36/221 [00:13<00:53,  3.48it/s][A
 17%|█▋        | 37/221 [00:13<01:02,  2.96it/s][A
 17%|█▋        | 38/221 [00:15<01:56,  1.57it/s][A
 18%|█▊        | 40/221 [00:15<01:22,  2.19it/s][A
 19%|█▊        | 41/221 [00:15<01:11,  2.51it/s][A
 19%|█▉        | 42/221 [00:16<01:04,  2.79it/s][A
 19%|█▉        | 43/221 [00:16<00:54,  3.27it/s][A
 20%|█▉        | 44/221 [00:16<00:49,  3.60it/s][A
 20%|██        | 45/221 [00:21<04:38,  1.58s/it][A
 21%|██        | 46/221 [00:21<03:38,  1.25s/it][A
 21%|██▏       | 47/221 [00:22<03:08,  1.08s/it][A
 22%|██▏       | 48/221 [00:22<02:18,  1.25it/s][A
 22%|██▏       | 49/221 [00:22<01:47,  1.60it/s][A
 23%|██▎       | 50/221 [00:23<01:37,  1.75it/s][A
 23%|██▎       | 51/221 [00:23<01:17,  2.20it/s][A
 24%|██▎       | 52/221 [00:23<01:00,  2.80it/s][A
 24%|██▍       | 53/221 [00:23<00:48,  3.46it/s][A
 24%|██▍       | 54/221 [00:25<01:36,  1.74it/s][A
 25%|██▍       | 55/221 [00:27<03:24,  1.23s/it][A
 25%|██▌       | 56/221 [00:28<02:32,  1.08it/s][A
 26%|██▌       | 57/221 [00:28<01:57,  1.40it/s][A
 27%|██▋       | 59/221 [00:28<01:08,  2.38it/s][A
 27%|██▋       | 60/221 [00:29<01:32,  1.73it/s][A
 28%|██▊       | 61/221 [00:29<01:21,  1.95it/s][A
 28%|██▊       | 62/221 [00:30<01:10,  2.26it/s][A
 29%|██▊       | 63/221 [00:30<00:57,  2.74it/s][A
 29%|██▉       | 64/221 [00:31<01:21,  1.92it/s][A
 29%|██▉       | 65/221 [00:31<01:04,  2.43it/s][A
 30%|██▉       | 66/221 [00:31<01:08,  2.26it/s][A
 30%|███       | 67/221 [00:31<00:55,  2.79it/s][A
 31%|███       | 68/221 [00:32<00:44,  3.41it/s][A
 31%|███       | 69/221 [00:33<01:20,  1.89it/s][A
 32%|███▏      | 71/221 [00:33<00:58,  2.56it/s][A
 33%|███▎      | 72/221 [00:33<00:50,  2.98it/s][A
 33%|███▎      | 73/221 [00:34<01:08,  2.16it/s][A
 33%|███▎      | 74/221 [00:34<00:55,  2.67it/s][A
 34%|███▍      | 75/221 [00:35<00:59,  2.45it/s][A
 34%|███▍      | 76/221 [00:35<00:52,  2.78it/s][A
 35%|███▍      | 77/221 [00:36<01:38,  1.47it/s][A
 35%|███▌      | 78/221 [00:37<01:13,  1.95it/s][A
 36%|███▌      | 79/221 [00:37<01:21,  1.75it/s][A
 37%|███▋      | 81/221 [00:38<01:12,  1.92it/s][A
 37%|███▋      | 82/221 [00:41<02:33,  1.10s/it][A
 38%|███▊      | 83/221 [00:42<02:18,  1.00s/it][A
 38%|███▊      | 84/221 [00:42<01:45,  1.30it/s][A
 39%|███▉      | 86/221 [00:43<01:17,  1.74it/s][A
 39%|███▉      | 87/221 [00:45<02:15,  1.01s/it][A
 40%|███▉      | 88/221 [00:45<01:53,  1.17it/s][A
 40%|████      | 89/221 [00:46<01:40,  1.31it/s][A
 41%|████      | 90/221 [00:46<01:20,  1.62it/s][A
 42%|████▏     | 92/221 [00:46<00:52,  2.44it/s][A
 42%|████▏     | 93/221 [00:47<00:47,  2.69it/s][A
 43%|████▎     | 94/221 [00:48<01:13,  1.74it/s][A
 43%|████▎     | 95/221 [00:48<01:03,  1.98it/s][A
 43%|████▎     | 96/221 [00:49<01:23,  1.50it/s][A
 44%|████▍     | 97/221 [00:49<01:07,  1.84it/s][A
 44%|████▍     | 98/221 [00:51<01:31,  1.35it/s][A
 45%|████▍     | 99/221 [00:51<01:11,  1.72it/s][A
 45%|████▌     | 100/221 [00:51<01:10,  1.71it/s][A
 46%|████▌     | 101/221 [00:52<00:53,  2.25it/s][A
 46%|████▌     | 102/221 [00:53<01:41,  1.17it/s][A
 47%|████▋     | 103/221 [00:54<01:15,  1.57it/s][A
 47%|████▋     | 104/221 [00:54<01:05,  1.80it/s][A
 48%|████▊     | 105/221 [00:55<01:09,  1.68it/s][A
 48%|████▊     | 106/221 [00:57<02:04,  1.08s/it][A
 48%|████▊     | 107/221 [00:57<01:34,  1.21it/s][A
 49%|████▉     | 108/221 [00:57<01:18,  1.43it/s][A
 49%|████▉     | 109/221 [00:58<01:04,  1.73it/s][A
 50%|█████     | 111/221 [00:58<00:45,  2.41it/s][A
 51%|█████     | 112/221 [00:59<00:43,  2.51it/s][A
 51%|█████     | 113/221 [00:59<00:37,  2.92it/s][A
 52%|█████▏    | 115/221 [00:59<00:29,  3.58it/s][A
 52%|█████▏    | 116/221 [00:59<00:31,  3.34it/s][A
 53%|█████▎    | 117/221 [01:00<00:38,  2.71it/s][A
 53%|█████▎    | 118/221 [01:00<00:39,  2.59it/s][A
 54%|█████▍    | 119/221 [01:01<00:48,  2.09it/s][A
 54%|█████▍    | 120/221 [01:02<00:44,  2.29it/s][A
 55%|█████▍    | 121/221 [01:02<00:42,  2.36it/s][A
 55%|█████▌    | 122/221 [01:02<00:38,  2.57it/s][A
 56%|█████▌    | 123/221 [01:04<01:08,  1.42it/s][A
 56%|█████▌    | 124/221 [01:04<00:53,  1.81it/s][A
 57%|█████▋    | 125/221 [01:05<01:07,  1.43it/s][A
 57%|█████▋    | 126/221 [01:12<03:55,  2.48s/it][A
 57%|█████▋    | 127/221 [01:12<03:06,  1.98s/it][A
 58%|█████▊    | 128/221 [01:13<02:24,  1.55s/it][A
 58%|█████▊    | 129/221 [01:13<01:45,  1.15s/it][A
 59%|█████▉    | 130/221 [01:14<01:26,  1.05it/s][A
 59%|█████▉    | 131/221 [01:14<01:16,  1.18it/s][A
 60%|█████▉    | 132/221 [01:16<01:32,  1.03s/it][A
 60%|██████    | 133/221 [01:16<01:10,  1.24it/s][A
 61%|██████    | 134/221 [01:18<01:45,  1.21s/it][A
 61%|██████    | 135/221 [01:18<01:20,  1.07it/s][A
 62%|██████▏   | 136/221 [01:19<01:07,  1.26it/s][A
 62%|██████▏   | 137/221 [01:19<00:55,  1.51it/s][A
 62%|██████▏   | 138/221 [01:23<02:00,  1.45s/it][A
 63%|██████▎   | 139/221 [01:23<01:29,  1.09s/it][A
 63%|██████▎   | 140/221 [01:23<01:17,  1.05it/s][A
 64%|██████▍   | 141/221 [01:24<01:08,  1.17it/s][A
 64%|██████▍   | 142/221 [01:25<00:58,  1.36it/s][A
 65%|██████▍   | 143/221 [01:25<00:53,  1.46it/s][A
 65%|██████▌   | 144/221 [01:25<00:45,  1.69it/s][A
 66%|██████▌   | 146/221 [01:26<00:26,  2.85it/s][A
 67%|██████▋   | 148/221 [01:26<00:25,  2.87it/s][A
 67%|██████▋   | 149/221 [01:27<00:28,  2.49it/s][A
 68%|██████▊   | 150/221 [01:27<00:28,  2.47it/s][A
 68%|██████▊   | 151/221 [01:28<00:29,  2.40it/s][A
 69%|██████▉   | 152/221 [01:29<00:44,  1.54it/s][A
 70%|██████▉   | 154/221 [01:30<00:31,  2.11it/s][A
 70%|███████   | 155/221 [01:30<00:31,  2.13it/s][A
 71%|███████   | 156/221 [01:30<00:29,  2.22it/s][A
 71%|███████   | 157/221 [01:36<01:58,  1.84s/it][A
 71%|███████▏  | 158/221 [01:37<01:32,  1.46s/it][A
 72%|███████▏  | 159/221 [01:37<01:08,  1.11s/it][A
 72%|███████▏  | 160/221 [01:37<00:51,  1.19it/s][A
 73%|███████▎  | 161/221 [01:37<00:38,  1.54it/s][A
 73%|███████▎  | 162/221 [01:37<00:29,  1.99it/s][A
 74%|███████▍  | 163/221 [01:38<00:26,  2.15it/s][A
 74%|███████▍  | 164/221 [01:38<00:28,  2.02it/s][A
 75%|███████▍  | 165/221 [01:39<00:27,  2.07it/s][A
 75%|███████▌  | 166/221 [01:39<00:26,  2.04it/s][A
 76%|███████▌  | 167/221 [01:39<00:22,  2.39it/s][A
 76%|███████▌  | 168/221 [01:47<02:18,  2.61s/it][A
 76%|███████▋  | 169/221 [01:47<01:40,  1.92s/it][A
 77%|███████▋  | 170/221 [01:48<01:15,  1.47s/it][A
 77%|███████▋  | 171/221 [01:48<00:57,  1.15s/it][A
 78%|███████▊  | 172/221 [01:49<00:42,  1.14it/s][A
 78%|███████▊  | 173/221 [01:49<00:42,  1.13it/s][A
 79%|███████▊  | 174/221 [01:50<00:31,  1.49it/s][A
 79%|███████▉  | 175/221 [01:50<00:26,  1.73it/s][A
 80%|███████▉  | 176/221 [01:50<00:20,  2.20it/s][A
 80%|████████  | 177/221 [01:50<00:17,  2.47it/s][A
 81%|████████  | 178/221 [01:51<00:22,  1.95it/s][A
 81%|████████  | 179/221 [01:52<00:20,  2.02it/s][A
 81%|████████▏ | 180/221 [01:52<00:16,  2.51it/s][A
 82%|████████▏ | 182/221 [01:52<00:13,  2.87it/s][A
 83%|████████▎ | 183/221 [01:53<00:18,  2.10it/s][A
 83%|████████▎ | 184/221 [01:54<00:18,  2.01it/s][A
 84%|████████▎ | 185/221 [01:54<00:14,  2.48it/s][A
 84%|████████▍ | 186/221 [01:54<00:15,  2.33it/s][A
 85%|████████▍ | 187/221 [01:55<00:12,  2.78it/s][A
 85%|████████▌ | 188/221 [01:55<00:10,  3.30it/s][A
 86%|████████▌ | 189/221 [01:55<00:10,  2.94it/s][A
 86%|████████▌ | 190/221 [01:56<00:12,  2.42it/s][A
 86%|████████▋ | 191/221 [01:56<00:10,  2.87it/s][A
 87%|████████▋ | 192/221 [01:56<00:11,  2.63it/s][A
 88%|████████▊ | 194/221 [01:58<00:12,  2.12it/s][A
 88%|████████▊ | 195/221 [01:58<00:10,  2.45it/s][A
 89%|████████▊ | 196/221 [01:58<00:08,  2.92it/s][A
 89%|████████▉ | 197/221 [01:58<00:07,  3.18it/s][A
 90%|████████▉ | 198/221 [01:59<00:07,  3.04it/s][A
 90%|█████████ | 199/221 [01:59<00:06,  3.52it/s][A
 90%|█████████ | 200/221 [01:59<00:07,  2.88it/s][A
 91%|█████████ | 201/221 [02:00<00:07,  2.55it/s][A
 91%|█████████▏| 202/221 [02:00<00:06,  2.86it/s][A
 92%|█████████▏| 203/221 [02:01<00:11,  1.60it/s][A
 92%|█████████▏| 204/221 [02:02<00:08,  1.93it/s][A
 93%|█████████▎| 205/221 [02:02<00:06,  2.49it/s][A
 93%|█████████▎| 206/221 [02:02<00:07,  2.13it/s][A
 94%|█████████▍| 208/221 [02:03<00:04,  2.96it/s][A
 95%|█████████▍| 209/221 [02:03<00:03,  3.42it/s][A
 95%|█████████▌| 211/221 [02:04<00:03,  2.67it/s][A
 96%|█████████▌| 212/221 [02:04<00:03,  2.60it/s][A
 96%|█████████▋| 213/221 [02:04<00:02,  2.98it/s][A
 97%|█████████▋| 214/221 [02:05<00:03,  1.94it/s][A
 97%|█████████▋| 215/221 [02:06<00:02,  2.27it/s][A
 98%|█████████▊| 216/221 [02:06<00:02,  1.90it/s][A
 98%|█████████▊| 217/221 [02:14<00:09,  2.47s/it][A
 99%|█████████▊| 218/221 [02:14<00:05,  1.87s/it][A
 99%|█████████▉| 219/221 [02:15<00:02,  1.49s/it][A
100%|█████████▉| 220/221 [02:17<00:01,  1.62s/it][A
100%|██████████| 221/221 [02:17<00:00,  1.17s/it][A100%|██████████| 221/221 [02:17<00:00,  1.61it/s]

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:00<01:56,  1.89it/s][A
  1%|          | 2/221 [00:01<01:55,  1.89it/s][A
  1%|▏         | 3/221 [00:01<01:55,  1.89it/s][A
  2%|▏         | 4/221 [00:02<01:54,  1.89it/s][A
  2%|▏         | 5/221 [00:02<01:54,  1.89it/s][A
  3%|▎         | 6/221 [00:03<01:53,  1.89it/s][A
  3%|▎         | 7/221 [00:03<01:53,  1.89it/s][A
  4%|▎         | 8/221 [00:04<01:52,  1.89it/s][A
  4%|▍         | 9/221 [00:04<01:52,  1.89it/s][A
  5%|▍         | 10/221 [00:05<01:51,  1.89it/s][A
  5%|▍         | 11/221 [00:05<01:51,  1.89it/s][A
  5%|▌         | 12/221 [00:06<01:50,  1.89it/s][A
  6%|▌         | 13/221 [00:06<01:49,  1.89it/s][A
  6%|▋         | 14/221 [00:07<01:49,  1.89it/s][A
  7%|▋         | 15/221 [00:07<01:48,  1.89it/s][A
  7%|▋         | 16/221 [00:08<01:48,  1.89it/s][A
  8%|▊         | 17/221 [00:08<01:47,  1.89it/s][A
  8%|▊         | 18/221 [00:09<01:47,  1.89it/s][A
  9%|▊         | 19/221 [00:10<01:46,  1.89it/s][A
  9%|▉         | 20/221 [00:10<01:46,  1.89it/s][A
 10%|▉         | 21/221 [00:11<01:45,  1.89it/s][A
 10%|▉         | 22/221 [00:11<01:45,  1.89it/s][A
 10%|█         | 23/221 [00:12<01:44,  1.89it/s][A
 11%|█         | 24/221 [00:12<01:44,  1.89it/s][A
 11%|█▏        | 25/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 26/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 27/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 28/221 [00:14<01:41,  1.89it/s][A
 13%|█▎        | 29/221 [00:15<01:41,  1.89it/s][A
 14%|█▎        | 30/221 [00:15<01:40,  1.89it/s][A
 14%|█▍        | 31/221 [00:16<01:40,  1.89it/s][A
 14%|█▍        | 32/221 [00:16<01:39,  1.89it/s][A
 15%|█▍        | 33/221 [00:17<01:39,  1.89it/s][A
 15%|█▌        | 34/221 [00:17<01:38,  1.89it/s][A
 16%|█▌        | 35/221 [00:18<01:38,  1.89it/s][A
 16%|█▋        | 36/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 37/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 38/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 39/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 40/221 [00:21<01:35,  1.89it/s][A
 19%|█▊        | 41/221 [00:21<01:35,  1.89it/s][A
 19%|█▉        | 42/221 [00:22<01:34,  1.89it/s][A
 19%|█▉        | 43/221 [00:22<01:34,  1.89it/s][A
 20%|█▉        | 44/221 [00:23<01:33,  1.89it/s][A
 20%|██        | 45/221 [00:23<01:33,  1.89it/s][A
 21%|██        | 46/221 [00:24<01:32,  1.89it/s][A
 21%|██▏       | 47/221 [00:24<01:31,  1.89it/s][A
 22%|██▏       | 48/221 [00:25<01:31,  1.89it/s][A
 22%|██▏       | 49/221 [00:25<01:30,  1.89it/s][A
 23%|██▎       | 50/221 [00:26<01:30,  1.89it/s][A
 23%|██▎       | 51/221 [00:26<01:29,  1.89it/s][A
 24%|██▎       | 52/221 [00:27<01:29,  1.89it/s][A
 24%|██▍       | 53/221 [00:28<01:28,  1.89it/s][A
 24%|██▍       | 54/221 [00:28<01:28,  1.89it/s][A
 25%|██▍       | 55/221 [00:29<01:27,  1.89it/s][A
 25%|██▌       | 56/221 [00:29<01:27,  1.89it/s][A
 26%|██▌       | 57/221 [00:30<01:26,  1.89it/s][A
 26%|██▌       | 58/221 [00:30<01:26,  1.89it/s][A
 27%|██▋       | 59/221 [00:31<01:25,  1.89it/s][A
 27%|██▋       | 60/221 [00:31<01:25,  1.89it/s][A
 28%|██▊       | 61/221 [00:32<01:24,  1.89it/s][A
 28%|██▊       | 62/221 [00:32<01:24,  1.89it/s][A
 29%|██▊       | 63/221 [00:33<01:23,  1.89it/s][A
 29%|██▉       | 64/221 [00:33<01:22,  1.89it/s][A
 29%|██▉       | 65/221 [00:34<01:22,  1.89it/s][A
 30%|██▉       | 66/221 [00:34<01:21,  1.89it/s][A
 30%|███       | 67/221 [00:35<01:21,  1.89it/s][A
 31%|███       | 68/221 [00:35<01:20,  1.89it/s][A
 31%|███       | 69/221 [00:36<01:20,  1.89it/s][A
 32%|███▏      | 70/221 [00:36<01:19,  1.89it/s][A
 32%|███▏      | 71/221 [00:37<01:19,  1.89it/s][A
 33%|███▎      | 72/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 73/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 74/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 75/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 76/221 [00:40<01:16,  1.89it/s][A
 35%|███▍      | 77/221 [00:40<01:16,  1.89it/s][A
 35%|███▌      | 78/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 79/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 80/221 [00:42<01:14,  1.89it/s][A
 37%|███▋      | 81/221 [00:42<01:13,  1.89it/s][A
 37%|███▋      | 82/221 [00:43<01:13,  1.89it/s][A
 38%|███▊      | 83/221 [00:43<01:12,  1.89it/s][A
 38%|███▊      | 84/221 [00:44<01:12,  1.89it/s][A
 38%|███▊      | 85/221 [00:44<01:11,  1.89it/s][A
 39%|███▉      | 86/221 [00:45<01:11,  1.89it/s][A
 39%|███▉      | 87/221 [00:45<01:10,  1.89it/s][A
 40%|███▉      | 88/221 [00:46<01:10,  1.89it/s][A
 40%|████      | 89/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 90/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 91/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 92/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 93/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 94/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 95/221 [00:50<01:06,  1.89it/s][A
 43%|████▎     | 96/221 [00:50<01:06,  1.89it/s][A
 44%|████▍     | 97/221 [00:51<01:05,  1.89it/s][A
 44%|████▍     | 98/221 [00:51<01:04,  1.89it/s][A
 45%|████▍     | 99/221 [00:52<01:04,  1.89it/s][A
 45%|████▌     | 100/221 [00:52<01:03,  1.89it/s][A
 46%|████▌     | 101/221 [00:53<01:03,  1.89it/s][A
 46%|████▌     | 102/221 [00:53<01:02,  1.89it/s][A
 47%|████▋     | 103/221 [00:54<01:02,  1.89it/s][A
 47%|████▋     | 104/221 [00:54<01:01,  1.89it/s][A
 48%|████▊     | 105/221 [00:55<01:01,  1.89it/s][A
 48%|████▊     | 106/221 [00:56<01:00,  1.89it/s][A
 48%|████▊     | 107/221 [00:56<01:00,  1.89it/s][A
 49%|████▉     | 108/221 [00:57<00:59,  1.89it/s][A
 49%|████▉     | 109/221 [00:57<00:59,  1.89it/s][A
 50%|████▉     | 110/221 [00:58<00:58,  1.89it/s][A
 50%|█████     | 111/221 [00:58<00:58,  1.89it/s][A
 51%|█████     | 112/221 [00:59<00:57,  1.89it/s][A
 51%|█████     | 113/221 [00:59<00:57,  1.89it/s][A
 52%|█████▏    | 114/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 115/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 116/221 [01:01<00:55,  1.89it/s][A
 53%|█████▎    | 117/221 [01:01<00:54,  1.89it/s][A
 53%|█████▎    | 118/221 [01:02<00:54,  1.89it/s][A
 54%|█████▍    | 119/221 [01:02<00:53,  1.89it/s][A
 54%|█████▍    | 120/221 [01:03<00:53,  1.89it/s][A
 55%|█████▍    | 121/221 [01:03<00:52,  1.89it/s][A
 55%|█████▌    | 122/221 [01:04<00:52,  1.89it/s][A
 56%|█████▌    | 123/221 [01:05<00:51,  1.89it/s][A
 56%|█████▌    | 124/221 [01:05<00:51,  1.89it/s][A
 57%|█████▋    | 125/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 126/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 127/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 128/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 129/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 130/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 131/221 [01:09<00:47,  1.89it/s][A
 60%|█████▉    | 132/221 [01:09<00:47,  1.89it/s][A
 60%|██████    | 133/221 [01:10<00:46,  1.89it/s][A
 61%|██████    | 134/221 [01:10<00:45,  1.89it/s][A
 61%|██████    | 135/221 [01:11<00:45,  1.89it/s][A
 62%|██████▏   | 136/221 [01:11<00:44,  1.89it/s][A
 62%|██████▏   | 137/221 [01:12<00:44,  1.89it/s][A
 62%|██████▏   | 138/221 [01:12<00:43,  1.89it/s][A
 63%|██████▎   | 139/221 [01:13<00:43,  1.89it/s][A
 63%|██████▎   | 140/221 [01:13<00:42,  1.89it/s][A
 64%|██████▍   | 141/221 [01:14<00:42,  1.89it/s][A
 64%|██████▍   | 142/221 [01:15<00:41,  1.89it/s][A
 65%|██████▍   | 143/221 [01:15<00:41,  1.89it/s][A
 65%|██████▌   | 144/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 145/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 146/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 147/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 148/221 [01:18<00:38,  1.89it/s][A
 67%|██████▋   | 149/221 [01:18<00:38,  1.89it/s][A
 68%|██████▊   | 150/221 [01:19<00:37,  1.89it/s][A
 68%|██████▊   | 151/221 [01:19<00:36,  1.89it/s][A
 69%|██████▉   | 152/221 [01:20<00:36,  1.89it/s][A
 69%|██████▉   | 153/221 [01:20<00:35,  1.89it/s][A
 70%|██████▉   | 154/221 [01:21<00:35,  1.89it/s][A
 70%|███████   | 155/221 [01:21<00:34,  1.89it/s][A
 71%|███████   | 156/221 [01:22<00:34,  1.89it/s][A
 71%|███████   | 157/221 [01:22<00:33,  1.89it/s][A
 71%|███████▏  | 158/221 [01:23<00:33,  1.89it/s][A
 72%|███████▏  | 159/221 [01:24<00:32,  1.89it/s][A
 72%|███████▏  | 160/221 [01:24<00:32,  1.89it/s][A
 73%|███████▎  | 161/221 [01:25<00:31,  1.89it/s][A
 73%|███████▎  | 162/221 [01:25<00:31,  1.89it/s][A
 74%|███████▍  | 163/221 [01:26<00:30,  1.89it/s][A
 74%|███████▍  | 164/221 [01:26<00:30,  1.89it/s][A
 75%|███████▍  | 165/221 [01:27<00:29,  1.89it/s][A
 75%|███████▌  | 166/221 [01:27<00:29,  1.89it/s][A
 76%|███████▌  | 167/221 [01:28<00:28,  1.89it/s][A
 76%|███████▌  | 168/221 [01:28<00:28,  1.89it/s][A
 76%|███████▋  | 169/221 [01:29<00:27,  1.89it/s][A
 77%|███████▋  | 170/221 [01:29<00:26,  1.89it/s][A
 77%|███████▋  | 171/221 [01:30<00:26,  1.89it/s][A
 78%|███████▊  | 172/221 [01:30<00:25,  1.89it/s][A
 78%|███████▊  | 173/221 [01:31<00:25,  1.89it/s][A
 79%|███████▊  | 174/221 [01:31<00:24,  1.89it/s][A
 79%|███████▉  | 175/221 [01:32<00:24,  1.89it/s][A
 80%|███████▉  | 176/221 [01:33<00:23,  1.89it/s][A
 80%|████████  | 177/221 [01:33<00:23,  1.89it/s][A
 81%|████████  | 178/221 [01:34<00:22,  1.89it/s][A
 81%|████████  | 179/221 [01:34<00:22,  1.89it/s][A
 81%|████████▏ | 180/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 181/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 182/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 183/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 184/221 [01:37<00:19,  1.89it/s][A
 84%|████████▎ | 185/221 [01:37<00:19,  1.89it/s][A
 84%|████████▍ | 186/221 [01:38<00:18,  1.89it/s][A
 85%|████████▍ | 187/221 [01:38<00:17,  1.89it/s][A
 85%|████████▌ | 188/221 [01:39<00:17,  1.89it/s][A
 86%|████████▌ | 189/221 [01:39<00:16,  1.89it/s][A
 86%|████████▌ | 190/221 [01:40<00:16,  1.89it/s][A
 86%|████████▋ | 191/221 [01:40<00:15,  1.89it/s][A
 87%|████████▋ | 192/221 [01:41<00:15,  1.89it/s][A
 87%|████████▋ | 193/221 [01:41<00:14,  1.89it/s][A
 88%|████████▊ | 194/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 195/221 [01:43<00:13,  1.89it/s][A
 89%|████████▊ | 196/221 [01:43<00:13,  1.89it/s][A
 89%|████████▉ | 197/221 [01:44<00:12,  1.89it/s][A
 90%|████████▉ | 198/221 [01:44<00:12,  1.89it/s][A
 90%|█████████ | 199/221 [01:45<00:11,  1.89it/s][A
 90%|█████████ | 200/221 [01:45<00:11,  1.89it/s][A
 91%|█████████ | 201/221 [01:46<00:10,  1.89it/s][A
 91%|█████████▏| 202/221 [01:46<00:10,  1.89it/s][A
 92%|█████████▏| 203/221 [01:47<00:09,  1.89it/s][A
 92%|█████████▏| 204/221 [01:47<00:08,  1.89it/s][A
 93%|█████████▎| 205/221 [01:48<00:08,  1.89it/s][A
 93%|█████████▎| 206/221 [01:48<00:07,  1.89it/s][A
 94%|█████████▎| 207/221 [01:49<00:07,  1.89it/s][A
 94%|█████████▍| 208/221 [01:49<00:06,  1.89it/s][A
 95%|█████████▍| 209/221 [01:50<00:06,  1.89it/s][A
 95%|█████████▌| 210/221 [01:50<00:05,  1.89it/s][A
 95%|█████████▌| 211/221 [01:51<00:05,  1.89it/s][A
 96%|█████████▌| 212/221 [01:52<00:04,  1.89it/s][A
 96%|█████████▋| 213/221 [01:52<00:04,  1.89it/s][A
 97%|█████████▋| 214/221 [01:53<00:03,  1.89it/s][A
 97%|█████████▋| 215/221 [01:53<00:03,  1.89it/s][A
 98%|█████████▊| 216/221 [01:54<00:02,  1.89it/s][A
 98%|█████████▊| 217/221 [01:54<00:02,  1.89it/s][A
 99%|█████████▊| 218/221 [01:55<00:01,  1.89it/s][A
 99%|█████████▉| 219/221 [01:55<00:01,  1.89it/s][A
100%|█████████▉| 220/221 [01:56<00:00,  1.89it/s][A
100%|██████████| 221/221 [01:56<00:00,  1.89it/s][A100%|██████████| 221/221 [01:56<00:00,  1.89it/s]
09/20/2024 04:09:58 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_forward=====step 1999--===========

09/20/2024 04:09:58 - INFO - __main__ -   {'area_r1': 43.8, 'area_recall': '43.8/70.7/80.5', 'area_ravg': 65.0}
09/20/2024 04:09:58 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_backard=====step 1999--===========

09/20/2024 04:09:58 - INFO - __main__ -   {'forward_r1': 50.5, 'forward_recall': '50.5/77.3/86.5', 'forward_ravg': 71.4}
09/20/2024 04:09:58 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video=====step 1999--===========

09/20/2024 04:09:58 - INFO - __main__ -   {'area_video_r1': 48.9, 'area_video_recall': '48.9/77.1/86.4', 'area_video_ravg': 70.8}
09/20/2024 04:09:58 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video====history best step: 1499=======

09/20/2024 04:09:58 - INFO - __main__ -   {'area_video_r1': 49.2, 'area_video_recall': '49.2/76.9/87.1', 'area_video_ravg': 71.1}
09/20/2024 04:09:58 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itm_area=====step 1999--===========

09/20/2024 04:09:58 - INFO - __main__ -   {'area_video_r1': 59.0, 'area_video_recall': '59.0/80.5/87.2', 'area_video_ravg': 75.6, 'area_video_back_r1': 58.5, 'area_video_back_recall': '58.5/82.8/90.4', 'area_video_back_ravg': 77.2}
09/20/2024 04:09:58 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itm_area====history best step: 1999=======

09/20/2024 04:09:58 - INFO - __main__ -   {'area_video_r1': 59.0, 'area_video_recall': '59.0/80.5/87.2', 'area_video_ravg': 75.6, 'area_video_back_r1': 58.5, 'area_video_back_recall': '58.5/82.8/90.4', 'area_video_back_ravg': 77.2}
09/20/2024 04:09:58 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas=====step 1999--===========

09/20/2024 04:09:58 - INFO - __main__ -   {'video_r1': 34.5, 'video_recall': '34.5/58.9/69.9', 'video_ravg': 54.4}
09/20/2024 04:09:58 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas====history best step: 1499=======

09/20/2024 04:09:58 - INFO - __main__ -   {'video_r1': 34.7, 'video_recall': '34.7/60.5/72.3', 'video_ravg': 55.8}
09/20/2024 04:10:25 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03409043326973915, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.6621094942092896, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.696199893951416}
 20%|██        | 2000/9908 [2:33:54<301:20:01, 137.18s/it] 20%|██        | 2001/9908 [2:33:57<213:05:31, 97.02s/it]  20%|██        | 2002/9908 [2:34:01<151:20:29, 68.91s/it] 20%|██        | 2003/9908 [2:34:04<108:22:54, 49.36s/it] 20%|██        | 2004/9908 [2:34:08<78:22:53, 35.70s/it]  20%|██        | 2005/9908 [2:34:12<57:17:57, 26.10s/it] 20%|██        | 2006/9908 [2:34:16<42:33:49, 19.39s/it] 20%|██        | 2007/9908 [2:34:19<32:16:05, 14.70s/it] 20%|██        | 2008/9908 [2:34:23<24:56:55, 11.37s/it] 20%|██        | 2009/9908 [2:34:27<20:01:12,  9.12s/it] 20%|██        | 2010/9908 [2:34:31<16:36:09,  7.57s/it] 20%|██        | 2011/9908 [2:34:34<14:02:21,  6.40s/it] 20%|██        | 2012/9908 [2:34:38<12:15:20,  5.59s/it] 20%|██        | 2013/9908 [2:34:42<10:56:53,  4.99s/it] 20%|██        | 2014/9908 [2:34:45<10:06:18,  4.61s/it] 20%|██        | 2015/9908 [2:34:49<9:18:54,  4.25s/it]  20%|██        | 2016/9908 [2:34:53<8:59:12,  4.10s/it] 20%|██        | 2017/9908 [2:34:56<8:48:54,  4.02s/it] 20%|██        | 2018/9908 [2:35:00<8:39:41,  3.95s/it] 20%|██        | 2019/9908 [2:35:04<8:29:07,  3.87s/it] 20%|██        | 2020/9908 [2:35:08<8:21:49,  3.82s/it] 20%|██        | 2021/9908 [2:35:11<8:13:39,  3.76s/it] 20%|██        | 2022/9908 [2:35:15<8:08:03,  3.71s/it] 20%|██        | 2023/9908 [2:35:19<8:12:54,  3.75s/it] 20%|██        | 2024/9908 [2:35:23<8:19:23,  3.80s/it] 20%|██        | 2025/9908 [2:35:27<8:29:47,  3.88s/it] 20%|██        | 2026/9908 [2:35:30<8:19:27,  3.80s/it] 20%|██        | 2027/9908 [2:35:34<8:19:34,  3.80s/it] 20%|██        | 2028/9908 [2:35:38<8:17:48,  3.79s/it] 20%|██        | 2029/9908 [2:35:42<8:17:09,  3.79s/it] 20%|██        | 2030/9908 [2:35:45<8:16:23,  3.78s/it] 20%|██        | 2031/9908 [2:35:49<8:08:43,  3.72s/it] 21%|██        | 2032/9908 [2:35:52<7:55:50,  3.63s/it] 21%|██        | 2033/9908 [2:35:56<8:10:47,  3.74s/it] 21%|██        | 2034/9908 [2:36:00<7:52:19,  3.60s/it] 21%|██        | 2035/9908 [2:36:03<7:54:27,  3.62s/it] 21%|██        | 2036/9908 [2:36:07<7:56:10,  3.63s/it] 21%|██        | 2037/9908 [2:36:11<7:59:43,  3.66s/it] 21%|██        | 2038/9908 [2:36:14<8:02:08,  3.68s/it] 21%|██        | 2039/9908 [2:36:18<7:59:47,  3.66s/it] 21%|██        | 2040/9908 [2:36:22<7:56:31,  3.63s/it] 21%|██        | 2041/9908 [2:36:25<8:00:22,  3.66s/it] 21%|██        | 2042/9908 [2:36:29<7:52:07,  3.60s/it] 21%|██        | 2043/9908 [2:36:33<8:07:10,  3.72s/it] 21%|██        | 2044/9908 [2:36:36<8:01:50,  3.68s/it] 21%|██        | 2045/9908 [2:36:40<8:09:00,  3.73s/it] 21%|██        | 2046/9908 [2:36:44<8:07:34,  3.72s/it] 21%|██        | 2047/9908 [2:36:47<7:58:34,  3.65s/it] 21%|██        | 2048/9908 [2:36:51<7:42:43,  3.53s/it] 21%|██        | 2049/9908 [2:36:54<7:44:49,  3.55s/it]09/20/2024 04:13:29 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03246723860502243, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.4068496227264404, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.4393168687820435}
 21%|██        | 2050/9908 [2:36:58<7:53:51,  3.62s/it] 21%|██        | 2051/9908 [2:37:02<7:53:50,  3.62s/it] 21%|██        | 2052/9908 [2:37:05<7:58:57,  3.66s/it] 21%|██        | 2053/9908 [2:37:09<8:12:07,  3.76s/it] 21%|██        | 2054/9908 [2:37:13<8:17:05,  3.80s/it] 21%|██        | 2055/9908 [2:37:17<8:06:33,  3.72s/it] 21%|██        | 2056/9908 [2:37:20<7:53:53,  3.62s/it] 21%|██        | 2057/9908 [2:37:24<8:12:49,  3.77s/it] 21%|██        | 2058/9908 [2:37:28<8:21:51,  3.84s/it] 21%|██        | 2059/9908 [2:37:32<8:13:00,  3.77s/it] 21%|██        | 2060/9908 [2:37:35<8:05:51,  3.71s/it] 21%|██        | 2061/9908 [2:37:39<8:06:21,  3.72s/it] 21%|██        | 2062/9908 [2:37:43<8:03:40,  3.70s/it] 21%|██        | 2063/9908 [2:37:46<7:56:12,  3.64s/it] 21%|██        | 2064/9908 [2:37:50<8:07:30,  3.73s/it] 21%|██        | 2065/9908 [2:37:54<8:16:56,  3.80s/it] 21%|██        | 2066/9908 [2:37:58<8:04:04,  3.70s/it] 21%|██        | 2067/9908 [2:38:01<8:02:11,  3.69s/it] 21%|██        | 2068/9908 [2:38:05<7:52:32,  3.62s/it] 21%|██        | 2069/9908 [2:38:09<8:01:17,  3.68s/it] 21%|██        | 2070/9908 [2:38:13<8:14:55,  3.79s/it] 21%|██        | 2071/9908 [2:38:16<8:07:36,  3.73s/it] 21%|██        | 2072/9908 [2:38:20<8:18:04,  3.81s/it] 21%|██        | 2073/9908 [2:38:24<8:10:53,  3.76s/it] 21%|██        | 2074/9908 [2:38:28<8:18:14,  3.82s/it] 21%|██        | 2075/9908 [2:38:32<8:23:24,  3.86s/it] 21%|██        | 2076/9908 [2:38:36<8:22:53,  3.85s/it] 21%|██        | 2077/9908 [2:38:39<8:15:17,  3.79s/it] 21%|██        | 2078/9908 [2:38:43<8:16:48,  3.81s/it] 21%|██        | 2079/9908 [2:38:47<8:14:44,  3.79s/it] 21%|██        | 2080/9908 [2:38:50<7:59:32,  3.68s/it] 21%|██        | 2081/9908 [2:38:54<8:06:36,  3.73s/it] 21%|██        | 2082/9908 [2:38:58<8:05:59,  3.73s/it] 21%|██        | 2083/9908 [2:39:02<8:11:06,  3.77s/it] 21%|██        | 2084/9908 [2:39:05<7:58:55,  3.67s/it] 21%|██        | 2085/9908 [2:39:09<7:59:19,  3.68s/it] 21%|██        | 2086/9908 [2:39:13<8:00:30,  3.69s/it] 21%|██        | 2087/9908 [2:39:17<8:10:53,  3.77s/it] 21%|██        | 2088/9908 [2:39:20<8:16:55,  3.81s/it] 21%|██        | 2089/9908 [2:39:24<8:12:37,  3.78s/it] 21%|██        | 2090/9908 [2:39:28<8:00:26,  3.69s/it] 21%|██        | 2091/9908 [2:39:31<8:02:12,  3.70s/it] 21%|██        | 2092/9908 [2:39:35<8:13:05,  3.79s/it] 21%|██        | 2093/9908 [2:39:39<8:13:49,  3.79s/it] 21%|██        | 2094/9908 [2:39:43<8:07:39,  3.74s/it] 21%|██        | 2095/9908 [2:39:47<8:22:26,  3.86s/it] 21%|██        | 2096/9908 [2:39:50<8:06:06,  3.73s/it] 21%|██        | 2097/9908 [2:39:54<8:11:38,  3.78s/it] 21%|██        | 2098/9908 [2:39:58<8:08:03,  3.75s/it] 21%|██        | 2099/9908 [2:40:02<8:16:13,  3.81s/it]09/20/2024 04:16:36 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.01839703507721424, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 0.9667801856994629, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 0.985177218914032}
 21%|██        | 2100/9908 [2:40:06<8:15:15,  3.81s/it] 21%|██        | 2101/9908 [2:40:09<8:14:40,  3.80s/it] 21%|██        | 2102/9908 [2:40:13<8:15:14,  3.81s/it] 21%|██        | 2103/9908 [2:40:17<8:06:52,  3.74s/it] 21%|██        | 2104/9908 [2:40:21<8:04:07,  3.72s/it] 21%|██        | 2105/9908 [2:40:24<8:02:28,  3.71s/it] 21%|██▏       | 2106/9908 [2:40:28<8:00:12,  3.69s/it] 21%|██▏       | 2107/9908 [2:40:32<7:58:01,  3.68s/it] 21%|██▏       | 2108/9908 [2:40:35<7:43:49,  3.57s/it] 21%|██▏       | 2109/9908 [2:40:39<7:57:50,  3.68s/it] 21%|██▏       | 2110/9908 [2:40:43<8:11:55,  3.79s/it] 21%|██▏       | 2111/9908 [2:40:47<8:10:41,  3.78s/it] 21%|██▏       | 2112/9908 [2:40:50<8:08:51,  3.76s/it] 21%|██▏       | 2113/9908 [2:40:54<8:09:29,  3.77s/it] 21%|██▏       | 2114/9908 [2:40:58<8:18:15,  3.84s/it] 21%|██▏       | 2115/9908 [2:41:02<8:09:17,  3.77s/it] 21%|██▏       | 2116/9908 [2:41:05<8:03:31,  3.72s/it] 21%|██▏       | 2117/9908 [2:41:09<8:08:48,  3.76s/it] 21%|██▏       | 2118/9908 [2:41:13<8:02:21,  3.72s/it] 21%|██▏       | 2119/9908 [2:41:16<7:56:20,  3.67s/it] 21%|██▏       | 2120/9908 [2:41:20<8:00:36,  3.70s/it] 21%|██▏       | 2121/9908 [2:41:24<8:08:00,  3.76s/it] 21%|██▏       | 2122/9908 [2:41:28<8:11:58,  3.79s/it] 21%|██▏       | 2123/9908 [2:41:32<8:21:04,  3.86s/it] 21%|██▏       | 2124/9908 [2:41:36<8:20:50,  3.86s/it] 21%|██▏       | 2125/9908 [2:41:39<8:11:42,  3.79s/it] 21%|██▏       | 2126/9908 [2:41:43<8:06:12,  3.75s/it] 21%|██▏       | 2127/9908 [2:41:47<8:01:47,  3.72s/it] 21%|██▏       | 2128/9908 [2:41:50<8:03:00,  3.72s/it] 21%|██▏       | 2129/9908 [2:41:54<8:02:31,  3.72s/it] 21%|██▏       | 2130/9908 [2:41:58<8:03:12,  3.73s/it] 22%|██▏       | 2131/9908 [2:42:02<8:01:39,  3.72s/it] 22%|██▏       | 2132/9908 [2:42:05<7:55:34,  3.67s/it] 22%|██▏       | 2133/9908 [2:42:09<7:55:16,  3.67s/it] 22%|██▏       | 2134/9908 [2:42:13<8:08:21,  3.77s/it] 22%|██▏       | 2135/9908 [2:42:16<8:00:01,  3.71s/it] 22%|██▏       | 2136/9908 [2:42:20<7:57:06,  3.68s/it] 22%|██▏       | 2137/9908 [2:42:24<8:06:01,  3.75s/it] 22%|██▏       | 2138/9908 [2:42:28<8:00:52,  3.71s/it] 22%|██▏       | 2139/9908 [2:42:31<7:57:23,  3.69s/it] 22%|██▏       | 2140/9908 [2:42:35<7:52:01,  3.65s/it] 22%|██▏       | 2141/9908 [2:42:39<8:10:22,  3.79s/it] 22%|██▏       | 2142/9908 [2:42:42<8:03:27,  3.74s/it] 22%|██▏       | 2143/9908 [2:42:46<8:12:36,  3.81s/it] 22%|██▏       | 2144/9908 [2:42:50<7:59:04,  3.70s/it] 22%|██▏       | 2145/9908 [2:42:53<7:53:47,  3.66s/it] 22%|██▏       | 2146/9908 [2:42:57<7:53:59,  3.66s/it] 22%|██▏       | 2147/9908 [2:43:01<7:56:55,  3.69s/it] 22%|██▏       | 2148/9908 [2:43:05<8:04:31,  3.75s/it] 22%|██▏       | 2149/9908 [2:43:09<8:10:32,  3.79s/it]09/20/2024 04:19:43 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.02717641368508339, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.5178214311599731, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.5449978113174438}
 22%|██▏       | 2150/9908 [2:43:12<8:01:24,  3.72s/it] 22%|██▏       | 2151/9908 [2:43:16<8:01:01,  3.72s/it] 22%|██▏       | 2152/9908 [2:43:19<7:51:28,  3.65s/it] 22%|██▏       | 2153/9908 [2:43:23<7:58:11,  3.70s/it] 22%|██▏       | 2154/9908 [2:43:27<8:00:46,  3.72s/it] 22%|██▏       | 2155/9908 [2:43:30<7:51:03,  3.65s/it] 22%|██▏       | 2156/9908 [2:43:34<8:01:49,  3.73s/it] 22%|██▏       | 2157/9908 [2:43:38<8:08:49,  3.78s/it] 22%|██▏       | 2158/9908 [2:43:42<8:05:42,  3.76s/it] 22%|██▏       | 2159/9908 [2:43:46<8:01:29,  3.73s/it] 22%|██▏       | 2160/9908 [2:43:49<7:59:06,  3.71s/it] 22%|██▏       | 2161/9908 [2:43:53<7:50:47,  3.65s/it] 22%|██▏       | 2162/9908 [2:43:56<7:51:08,  3.65s/it] 22%|██▏       | 2163/9908 [2:44:00<7:51:36,  3.65s/it] 22%|██▏       | 2164/9908 [2:44:04<8:08:34,  3.79s/it] 22%|██▏       | 2165/9908 [2:44:08<7:53:04,  3.67s/it] 22%|██▏       | 2166/9908 [2:44:11<7:49:50,  3.64s/it] 22%|██▏       | 2167/9908 [2:44:15<8:04:49,  3.76s/it] 22%|██▏       | 2168/9908 [2:44:19<8:00:24,  3.72s/it] 22%|██▏       | 2169/9908 [2:44:23<8:10:12,  3.80s/it] 22%|██▏       | 2170/9908 [2:44:26<7:57:02,  3.70s/it] 22%|██▏       | 2171/9908 [2:44:30<7:43:11,  3.59s/it] 22%|██▏       | 2172/9908 [2:44:33<7:48:06,  3.63s/it] 22%|██▏       | 2173/9908 [2:44:37<7:56:39,  3.70s/it] 22%|██▏       | 2174/9908 [2:44:41<8:01:11,  3.73s/it] 22%|██▏       | 2175/9908 [2:44:45<7:51:52,  3.66s/it] 22%|██▏       | 2176/9908 [2:44:48<7:53:49,  3.68s/it] 22%|██▏       | 2177/9908 [2:44:52<7:45:25,  3.61s/it] 22%|██▏       | 2178/9908 [2:44:55<7:50:41,  3.65s/it] 22%|██▏       | 2179/9908 [2:45:00<8:11:06,  3.81s/it] 22%|██▏       | 2180/9908 [2:45:03<7:54:23,  3.68s/it] 22%|██▏       | 2181/9908 [2:45:07<8:08:48,  3.80s/it] 22%|██▏       | 2182/9908 [2:45:11<7:56:48,  3.70s/it] 22%|██▏       | 2183/9908 [2:45:15<8:07:30,  3.79s/it] 22%|██▏       | 2184/9908 [2:45:18<7:58:18,  3.72s/it] 22%|██▏       | 2185/9908 [2:45:22<8:02:09,  3.75s/it] 22%|██▏       | 2186/9908 [2:45:25<7:52:51,  3.67s/it] 22%|██▏       | 2187/9908 [2:45:29<7:43:34,  3.60s/it] 22%|██▏       | 2188/9908 [2:45:33<7:48:37,  3.64s/it] 22%|██▏       | 2189/9908 [2:45:36<7:58:11,  3.72s/it] 22%|██▏       | 2190/9908 [2:45:40<8:08:50,  3.80s/it] 22%|██▏       | 2191/9908 [2:45:44<8:02:57,  3.76s/it] 22%|██▏       | 2192/9908 [2:45:48<7:49:53,  3.65s/it] 22%|██▏       | 2193/9908 [2:45:51<7:58:57,  3.72s/it] 22%|██▏       | 2194/9908 [2:45:55<8:08:38,  3.80s/it] 22%|██▏       | 2195/9908 [2:45:59<7:54:00,  3.69s/it] 22%|██▏       | 2196/9908 [2:46:03<8:01:44,  3.75s/it] 22%|██▏       | 2197/9908 [2:46:06<7:57:27,  3.72s/it] 22%|██▏       | 2198/9908 [2:46:10<7:45:08,  3.62s/it] 22%|██▏       | 2199/9908 [2:46:13<7:41:39,  3.59s/it]09/20/2024 04:22:48 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03046952188014984, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.4829835891723633, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.5134531259536743}
 22%|██▏       | 2200/9908 [2:46:17<7:33:26,  3.53s/it] 22%|██▏       | 2201/9908 [2:46:20<7:39:20,  3.58s/it] 22%|██▏       | 2202/9908 [2:46:24<7:41:25,  3.59s/it] 22%|██▏       | 2203/9908 [2:46:28<7:52:11,  3.68s/it] 22%|██▏       | 2204/9908 [2:46:32<8:00:12,  3.74s/it] 22%|██▏       | 2205/9908 [2:46:35<7:55:01,  3.70s/it] 22%|██▏       | 2206/9908 [2:46:39<7:44:18,  3.62s/it] 22%|██▏       | 2207/9908 [2:46:43<8:04:23,  3.77s/it] 22%|██▏       | 2208/9908 [2:46:47<8:02:16,  3.76s/it] 22%|██▏       | 2209/9908 [2:46:50<7:55:39,  3.71s/it] 22%|██▏       | 2210/9908 [2:46:54<7:51:01,  3.67s/it] 22%|██▏       | 2211/9908 [2:46:58<7:59:50,  3.74s/it] 22%|██▏       | 2212/9908 [2:47:01<7:56:56,  3.72s/it] 22%|██▏       | 2213/9908 [2:47:05<7:59:17,  3.74s/it] 22%|██▏       | 2214/9908 [2:47:09<7:48:19,  3.65s/it] 22%|██▏       | 2215/9908 [2:47:12<7:50:16,  3.67s/it] 22%|██▏       | 2216/9908 [2:47:16<7:59:02,  3.74s/it] 22%|██▏       | 2217/9908 [2:47:20<8:11:02,  3.83s/it] 22%|██▏       | 2218/9908 [2:47:24<7:50:44,  3.67s/it] 22%|██▏       | 2219/9908 [2:47:27<7:56:47,  3.72s/it] 22%|██▏       | 2220/9908 [2:47:31<7:43:14,  3.62s/it] 22%|██▏       | 2221/9908 [2:47:35<8:01:17,  3.76s/it] 22%|██▏       | 2222/9908 [2:47:39<7:56:58,  3.72s/it] 22%|██▏       | 2223/9908 [2:47:43<8:07:04,  3.80s/it] 22%|██▏       | 2224/9908 [2:47:47<8:18:36,  3.89s/it] 22%|██▏       | 2225/9908 [2:47:50<8:14:49,  3.86s/it] 22%|██▏       | 2226/9908 [2:47:54<8:16:15,  3.88s/it] 22%|██▏       | 2227/9908 [2:47:58<8:04:27,  3.78s/it] 22%|██▏       | 2228/9908 [2:48:02<8:05:26,  3.79s/it] 22%|██▏       | 2229/9908 [2:48:05<7:57:16,  3.73s/it] 23%|██▎       | 2230/9908 [2:48:09<8:05:38,  3.80s/it] 23%|██▎       | 2231/9908 [2:48:13<7:56:51,  3.73s/it] 23%|██▎       | 2232/9908 [2:48:17<8:02:28,  3.77s/it] 23%|██▎       | 2233/9908 [2:48:20<7:54:36,  3.71s/it] 23%|██▎       | 2234/9908 [2:48:24<7:50:26,  3.68s/it] 23%|██▎       | 2235/9908 [2:48:28<7:56:50,  3.73s/it] 23%|██▎       | 2236/9908 [2:48:32<8:01:12,  3.76s/it] 23%|██▎       | 2237/9908 [2:48:35<7:44:42,  3.63s/it] 23%|██▎       | 2238/9908 [2:48:38<7:39:04,  3.59s/it] 23%|██▎       | 2239/9908 [2:48:42<7:31:33,  3.53s/it] 23%|██▎       | 2240/9908 [2:48:45<7:34:40,  3.56s/it] 23%|██▎       | 2241/9908 [2:48:49<7:48:24,  3.67s/it] 23%|██▎       | 2242/9908 [2:48:53<7:48:43,  3.67s/it] 23%|██▎       | 2243/9908 [2:48:57<7:50:08,  3.68s/it] 23%|██▎       | 2244/9908 [2:49:00<7:56:04,  3.73s/it] 23%|██▎       | 2245/9908 [2:49:04<7:58:05,  3.74s/it] 23%|██▎       | 2246/9908 [2:49:08<7:49:23,  3.68s/it] 23%|██▎       | 2247/9908 [2:49:12<7:54:24,  3.72s/it] 23%|██▎       | 2248/9908 [2:49:15<7:51:57,  3.70s/it] 23%|██▎       | 2249/9908 [2:49:19<7:52:35,  3.70s/it]09/20/2024 04:25:54 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.02878381684422493, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.170506238937378, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.1992900371551514}
 23%|██▎       | 2250/9908 [2:49:23<8:01:12,  3.77s/it] 23%|██▎       | 2251/9908 [2:49:27<8:03:38,  3.79s/it] 23%|██▎       | 2252/9908 [2:49:30<8:01:06,  3.77s/it] 23%|██▎       | 2253/9908 [2:49:34<8:00:52,  3.77s/it] 23%|██▎       | 2254/9908 [2:49:38<7:57:41,  3.74s/it] 23%|██▎       | 2255/9908 [2:49:42<8:12:50,  3.86s/it] 23%|██▎       | 2256/9908 [2:49:46<7:58:13,  3.75s/it] 23%|██▎       | 2257/9908 [2:49:49<7:47:58,  3.67s/it] 23%|██▎       | 2258/9908 [2:49:53<7:50:32,  3.69s/it] 23%|██▎       | 2259/9908 [2:49:57<8:06:39,  3.82s/it] 23%|██▎       | 2260/9908 [2:50:00<7:56:40,  3.74s/it] 23%|██▎       | 2261/9908 [2:50:04<8:07:36,  3.83s/it] 23%|██▎       | 2262/9908 [2:50:08<7:58:03,  3.75s/it] 23%|██▎       | 2263/9908 [2:50:11<7:45:16,  3.65s/it] 23%|██▎       | 2264/9908 [2:50:15<7:56:02,  3.74s/it] 23%|██▎       | 2265/9908 [2:50:19<8:02:32,  3.79s/it] 23%|██▎       | 2266/9908 [2:50:23<7:57:38,  3.75s/it] 23%|██▎       | 2267/9908 [2:50:27<8:01:28,  3.78s/it] 23%|██▎       | 2268/9908 [2:50:30<7:53:01,  3.71s/it] 23%|██▎       | 2269/9908 [2:50:34<7:42:48,  3.64s/it] 23%|██▎       | 2270/9908 [2:50:38<7:48:53,  3.68s/it] 23%|██▎       | 2271/9908 [2:50:41<7:55:44,  3.74s/it] 23%|██▎       | 2272/9908 [2:50:45<7:52:22,  3.71s/it] 23%|██▎       | 2273/9908 [2:50:49<7:48:48,  3.68s/it] 23%|██▎       | 2274/9908 [2:50:52<7:44:26,  3.65s/it] 23%|██▎       | 2275/9908 [2:50:56<7:42:37,  3.64s/it] 23%|██▎       | 2276/9908 [2:50:59<7:34:02,  3.57s/it] 23%|██▎       | 2277/9908 [2:51:03<7:44:00,  3.65s/it] 23%|██▎       | 2278/9908 [2:51:07<7:57:37,  3.76s/it] 23%|██▎       | 2279/9908 [2:51:11<7:55:31,  3.74s/it] 23%|██▎       | 2280/9908 [2:51:14<7:45:31,  3.66s/it] 23%|██▎       | 2281/9908 [2:51:18<7:38:57,  3.61s/it] 23%|██▎       | 2282/9908 [2:51:22<7:43:08,  3.64s/it] 23%|██▎       | 2283/9908 [2:51:25<7:52:01,  3.71s/it] 23%|██▎       | 2284/9908 [2:51:29<7:48:55,  3.69s/it] 23%|██▎       | 2285/9908 [2:51:33<7:58:17,  3.76s/it] 23%|██▎       | 2286/9908 [2:51:36<7:44:18,  3.66s/it] 23%|██▎       | 2287/9908 [2:51:41<8:03:48,  3.81s/it] 23%|██▎       | 2288/9908 [2:51:44<7:58:15,  3.77s/it] 23%|██▎       | 2289/9908 [2:51:48<7:48:07,  3.69s/it] 23%|██▎       | 2290/9908 [2:51:52<7:58:48,  3.77s/it] 23%|██▎       | 2291/9908 [2:51:55<7:52:04,  3.72s/it] 23%|██▎       | 2292/9908 [2:51:59<8:03:51,  3.81s/it] 23%|██▎       | 2293/9908 [2:52:03<7:58:26,  3.77s/it] 23%|██▎       | 2294/9908 [2:52:07<8:04:14,  3.82s/it] 23%|██▎       | 2295/9908 [2:52:11<8:08:28,  3.85s/it] 23%|██▎       | 2296/9908 [2:52:15<8:08:04,  3.85s/it] 23%|██▎       | 2297/9908 [2:52:18<7:52:15,  3.72s/it] 23%|██▎       | 2298/9908 [2:52:22<7:43:32,  3.65s/it] 23%|██▎       | 2299/9908 [2:52:25<7:48:46,  3.70s/it]09/20/2024 04:29:00 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.028673982247710228, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.388926386833191, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.417600393295288}
 23%|██▎       | 2300/9908 [2:52:30<8:06:01,  3.83s/it] 23%|██▎       | 2301/9908 [2:52:33<7:58:59,  3.78s/it] 23%|██▎       | 2302/9908 [2:52:37<7:55:16,  3.75s/it] 23%|██▎       | 2303/9908 [2:52:41<7:54:15,  3.74s/it] 23%|██▎       | 2304/9908 [2:52:44<7:47:30,  3.69s/it] 23%|██▎       | 2305/9908 [2:52:48<7:46:29,  3.68s/it] 23%|██▎       | 2306/9908 [2:52:52<7:56:16,  3.76s/it] 23%|██▎       | 2307/9908 [2:52:56<7:59:06,  3.78s/it] 23%|██▎       | 2308/9908 [2:52:59<7:51:21,  3.72s/it] 23%|██▎       | 2309/9908 [2:53:03<7:50:08,  3.71s/it] 23%|██▎       | 2310/9908 [2:53:07<7:47:35,  3.69s/it] 23%|██▎       | 2311/9908 [2:53:10<7:43:53,  3.66s/it] 23%|██▎       | 2312/9908 [2:53:14<7:41:30,  3.65s/it] 23%|██▎       | 2313/9908 [2:53:17<7:42:46,  3.66s/it] 23%|██▎       | 2314/9908 [2:53:21<7:47:00,  3.69s/it] 23%|██▎       | 2315/9908 [2:53:25<7:49:52,  3.71s/it] 23%|██▎       | 2316/9908 [2:53:29<7:43:47,  3.67s/it] 23%|██▎       | 2317/9908 [2:53:32<7:47:47,  3.70s/it] 23%|██▎       | 2318/9908 [2:53:36<7:56:14,  3.76s/it] 23%|██▎       | 2319/9908 [2:53:40<7:54:59,  3.76s/it] 23%|██▎       | 2320/9908 [2:53:44<7:49:11,  3.71s/it] 23%|██▎       | 2321/9908 [2:53:47<7:47:50,  3.70s/it] 23%|██▎       | 2322/9908 [2:53:51<7:44:54,  3.68s/it] 23%|██▎       | 2323/9908 [2:53:55<7:54:06,  3.75s/it] 23%|██▎       | 2324/9908 [2:53:59<8:12:40,  3.90s/it] 23%|██▎       | 2325/9908 [2:54:03<8:01:25,  3.81s/it] 23%|██▎       | 2326/9908 [2:54:06<7:52:15,  3.74s/it] 23%|██▎       | 2327/9908 [2:54:10<7:47:17,  3.70s/it] 23%|██▎       | 2328/9908 [2:54:13<7:43:51,  3.67s/it] 24%|██▎       | 2329/9908 [2:54:17<7:38:17,  3.63s/it] 24%|██▎       | 2330/9908 [2:54:21<7:58:37,  3.79s/it] 24%|██▎       | 2331/9908 [2:54:25<7:44:15,  3.68s/it] 24%|██▎       | 2332/9908 [2:54:28<7:36:01,  3.61s/it] 24%|██▎       | 2333/9908 [2:54:32<7:40:35,  3.65s/it] 24%|██▎       | 2334/9908 [2:54:36<7:48:56,  3.71s/it] 24%|██▎       | 2335/9908 [2:54:39<7:53:01,  3.75s/it] 24%|██▎       | 2336/9908 [2:54:43<7:45:42,  3.69s/it] 24%|██▎       | 2337/9908 [2:54:47<7:58:22,  3.79s/it] 24%|██▎       | 2338/9908 [2:54:51<7:50:21,  3.73s/it] 24%|██▎       | 2339/9908 [2:54:54<7:37:25,  3.63s/it] 24%|██▎       | 2340/9908 [2:54:58<7:47:53,  3.71s/it] 24%|██▎       | 2341/9908 [2:55:02<7:52:37,  3.75s/it] 24%|██▎       | 2342/9908 [2:55:06<7:55:53,  3.77s/it] 24%|██▎       | 2343/9908 [2:55:09<8:02:00,  3.82s/it] 24%|██▎       | 2344/9908 [2:55:13<7:56:04,  3.78s/it] 24%|██▎       | 2345/9908 [2:55:17<7:52:27,  3.75s/it] 24%|██▎       | 2346/9908 [2:55:20<7:40:56,  3.66s/it] 24%|██▎       | 2347/9908 [2:55:24<7:44:22,  3.69s/it] 24%|██▎       | 2348/9908 [2:55:28<7:46:30,  3.70s/it] 24%|██▎       | 2349/9908 [2:55:32<7:56:13,  3.78s/it]09/20/2024 04:32:06 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.026768883690238, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2937378883361816, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.3205068111419678}
 24%|██▎       | 2350/9908 [2:55:35<7:45:01,  3.69s/it] 24%|██▎       | 2351/9908 [2:55:39<7:49:55,  3.73s/it] 24%|██▎       | 2352/9908 [2:55:43<7:47:21,  3.71s/it] 24%|██▎       | 2353/9908 [2:55:46<7:32:36,  3.59s/it] 24%|██▍       | 2354/9908 [2:55:50<7:33:10,  3.60s/it] 24%|██▍       | 2355/9908 [2:55:53<7:40:17,  3.66s/it] 24%|██▍       | 2356/9908 [2:55:57<7:53:27,  3.76s/it] 24%|██▍       | 2357/9908 [2:56:01<7:46:40,  3.71s/it] 24%|██▍       | 2358/9908 [2:56:05<7:45:00,  3.70s/it] 24%|██▍       | 2359/9908 [2:56:08<7:46:55,  3.71s/it] 24%|██▍       | 2360/9908 [2:56:12<7:45:36,  3.70s/it] 24%|██▍       | 2361/9908 [2:56:16<7:41:38,  3.67s/it] 24%|██▍       | 2362/9908 [2:56:19<7:39:22,  3.65s/it] 24%|██▍       | 2363/9908 [2:56:23<7:36:16,  3.63s/it] 24%|██▍       | 2364/9908 [2:56:26<7:31:08,  3.59s/it] 24%|██▍       | 2365/9908 [2:56:30<7:32:24,  3.60s/it] 24%|██▍       | 2366/9908 [2:56:34<7:47:04,  3.72s/it] 24%|██▍       | 2367/9908 [2:56:38<7:40:22,  3.66s/it] 24%|██▍       | 2368/9908 [2:56:41<7:34:08,  3.61s/it] 24%|██▍       | 2369/9908 [2:56:45<7:36:16,  3.63s/it] 24%|██▍       | 2370/9908 [2:56:49<7:44:30,  3.70s/it] 24%|██▍       | 2371/9908 [2:56:52<7:48:19,  3.73s/it] 24%|██▍       | 2372/9908 [2:56:56<7:31:32,  3.60s/it] 24%|██▍       | 2373/9908 [2:56:59<7:25:36,  3.55s/it] 24%|██▍       | 2374/9908 [2:57:03<7:26:03,  3.55s/it] 24%|██▍       | 2375/9908 [2:57:06<7:27:38,  3.57s/it] 24%|██▍       | 2376/9908 [2:57:10<7:35:27,  3.63s/it] 24%|██▍       | 2377/9908 [2:57:14<7:32:58,  3.61s/it] 24%|██▍       | 2378/9908 [2:57:17<7:39:54,  3.66s/it] 24%|██▍       | 2379/9908 [2:57:21<7:40:25,  3.67s/it] 24%|██▍       | 2380/9908 [2:57:25<7:49:10,  3.74s/it] 24%|██▍       | 2381/9908 [2:57:28<7:34:28,  3.62s/it] 24%|██▍       | 2382/9908 [2:57:32<7:48:40,  3.74s/it] 24%|██▍       | 2383/9908 [2:57:36<7:48:18,  3.73s/it] 24%|██▍       | 2384/9908 [2:57:40<7:46:37,  3.72s/it] 24%|██▍       | 2385/9908 [2:57:43<7:38:52,  3.66s/it] 24%|██▍       | 2386/9908 [2:57:47<7:52:03,  3.77s/it] 24%|██▍       | 2387/9908 [2:57:51<7:55:39,  3.79s/it] 24%|██▍       | 2388/9908 [2:57:54<7:36:40,  3.64s/it] 24%|██▍       | 2389/9908 [2:57:58<7:36:27,  3.64s/it] 24%|██▍       | 2390/9908 [2:58:02<7:45:13,  3.71s/it] 24%|██▍       | 2391/9908 [2:58:05<7:38:40,  3.66s/it] 24%|██▍       | 2392/9908 [2:58:09<7:45:13,  3.71s/it] 24%|██▍       | 2393/9908 [2:58:13<7:47:18,  3.73s/it] 24%|██▍       | 2394/9908 [2:58:17<7:37:07,  3.65s/it] 24%|██▍       | 2395/9908 [2:58:20<7:43:13,  3.70s/it] 24%|██▍       | 2396/9908 [2:58:24<7:32:49,  3.62s/it] 24%|██▍       | 2397/9908 [2:58:27<7:33:12,  3.62s/it] 24%|██▍       | 2398/9908 [2:58:31<7:41:50,  3.69s/it] 24%|██▍       | 2399/9908 [2:58:35<7:52:36,  3.78s/it]09/20/2024 04:35:10 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.028902310878038406, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.468927025794983, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.4978293180465698}
 24%|██▍       | 2400/9908 [2:58:39<7:46:27,  3.73s/it] 24%|██▍       | 2401/9908 [2:58:43<7:51:12,  3.77s/it] 24%|██▍       | 2402/9908 [2:58:46<7:42:47,  3.70s/it] 24%|██▍       | 2403/9908 [2:58:50<7:35:06,  3.64s/it] 24%|██▍       | 2404/9908 [2:58:53<7:25:57,  3.57s/it] 24%|██▍       | 2405/9908 [2:58:57<7:26:19,  3.57s/it] 24%|██▍       | 2406/9908 [2:59:01<7:37:51,  3.66s/it] 24%|██▍       | 2407/9908 [2:59:04<7:36:00,  3.65s/it] 24%|██▍       | 2408/9908 [2:59:08<7:44:43,  3.72s/it] 24%|██▍       | 2409/9908 [2:59:12<7:48:01,  3.74s/it] 24%|██▍       | 2410/9908 [2:59:16<7:45:43,  3.73s/it] 24%|██▍       | 2411/9908 [2:59:19<7:43:20,  3.71s/it] 24%|██▍       | 2412/9908 [2:59:23<7:32:27,  3.62s/it] 24%|██▍       | 2413/9908 [2:59:26<7:36:43,  3.66s/it] 24%|██▍       | 2414/9908 [2:59:30<7:50:21,  3.77s/it] 24%|██▍       | 2415/9908 [2:59:34<7:38:33,  3.67s/it] 24%|██▍       | 2416/9908 [2:59:37<7:34:46,  3.64s/it] 24%|██▍       | 2417/9908 [2:59:41<7:31:41,  3.62s/it] 24%|██▍       | 2418/9908 [2:59:45<7:46:33,  3.74s/it] 24%|██▍       | 2419/9908 [2:59:49<7:43:08,  3.71s/it] 24%|██▍       | 2420/9908 [2:59:52<7:39:25,  3.68s/it] 24%|██▍       | 2421/9908 [2:59:56<7:48:30,  3.75s/it] 24%|██▍       | 2422/9908 [3:00:00<7:42:11,  3.70s/it] 24%|██▍       | 2423/9908 [3:00:03<7:30:03,  3.61s/it] 24%|██▍       | 2424/9908 [3:00:07<7:46:05,  3.74s/it] 24%|██▍       | 2425/9908 [3:00:11<7:54:31,  3.80s/it] 24%|██▍       | 2426/9908 [3:00:15<8:02:54,  3.87s/it] 24%|██▍       | 2427/9908 [3:00:19<7:42:48,  3.71s/it] 25%|██▍       | 2428/9908 [3:00:22<7:49:05,  3.76s/it] 25%|██▍       | 2429/9908 [3:00:26<7:44:42,  3.73s/it] 25%|██▍       | 2430/9908 [3:00:30<7:50:09,  3.77s/it] 25%|██▍       | 2431/9908 [3:00:34<7:45:58,  3.74s/it] 25%|██▍       | 2432/9908 [3:00:37<7:40:05,  3.69s/it] 25%|██▍       | 2433/9908 [3:00:41<7:36:06,  3.66s/it] 25%|██▍       | 2434/9908 [3:00:44<7:32:12,  3.63s/it] 25%|██▍       | 2435/9908 [3:00:48<7:39:29,  3.69s/it] 25%|██▍       | 2436/9908 [3:00:52<7:34:25,  3.65s/it] 25%|██▍       | 2437/9908 [3:00:55<7:31:10,  3.62s/it] 25%|██▍       | 2438/9908 [3:00:59<7:35:08,  3.66s/it] 25%|██▍       | 2439/9908 [3:01:03<7:35:15,  3.66s/it] 25%|██▍       | 2440/9908 [3:01:07<7:44:49,  3.73s/it] 25%|██▍       | 2441/9908 [3:01:10<7:49:47,  3.77s/it] 25%|██▍       | 2442/9908 [3:01:15<8:00:11,  3.86s/it] 25%|██▍       | 2443/9908 [3:01:18<7:42:13,  3.72s/it] 25%|██▍       | 2444/9908 [3:01:22<7:48:54,  3.77s/it] 25%|██▍       | 2445/9908 [3:01:26<7:51:07,  3.79s/it] 25%|██▍       | 2446/9908 [3:01:29<7:36:04,  3.67s/it] 25%|██▍       | 2447/9908 [3:01:33<7:39:46,  3.70s/it] 25%|██▍       | 2448/9908 [3:01:37<7:43:22,  3.73s/it] 25%|██▍       | 2449/9908 [3:01:40<7:41:17,  3.71s/it]09/20/2024 04:38:15 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.029907045885920525, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.4379528760910034, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.4678598642349243}
 25%|██▍       | 2450/9908 [3:01:44<7:38:06,  3.69s/it] 25%|██▍       | 2451/9908 [3:01:47<7:24:43,  3.58s/it] 25%|██▍       | 2452/9908 [3:01:51<7:25:35,  3.59s/it] 25%|██▍       | 2453/9908 [3:01:54<7:24:01,  3.57s/it] 25%|██▍       | 2454/9908 [3:01:58<7:30:28,  3.63s/it] 25%|██▍       | 2455/9908 [3:02:02<7:39:32,  3.70s/it] 25%|██▍       | 2456/9908 [3:02:05<7:29:37,  3.62s/it] 25%|██▍       | 2457/9908 [3:02:09<7:44:13,  3.74s/it] 25%|██▍       | 2458/9908 [3:02:13<7:50:32,  3.79s/it] 25%|██▍       | 2459/9908 [3:02:17<7:59:11,  3.86s/it] 25%|██▍       | 2460/9908 [3:02:21<7:43:57,  3.74s/it] 25%|██▍       | 2461/9908 [3:02:24<7:18:20,  3.53s/it] 25%|██▍       | 2462/9908 [3:02:27<6:52:17,  3.32s/it] 25%|██▍       | 2463/9908 [3:02:30<6:33:56,  3.17s/it] 25%|██▍       | 2464/9908 [3:02:32<6:21:31,  3.08s/it] 25%|██▍       | 2465/9908 [3:02:35<6:12:31,  3.00s/it] 25%|██▍       | 2466/9908 [3:02:38<6:06:48,  2.96s/it] 25%|██▍       | 2467/9908 [3:02:41<6:02:50,  2.93s/it] 25%|██▍       | 2468/9908 [3:02:44<5:59:52,  2.90s/it] 25%|██▍       | 2469/9908 [3:02:47<5:57:30,  2.88s/it] 25%|██▍       | 2470/9908 [3:02:49<5:56:16,  2.87s/it] 25%|██▍       | 2471/9908 [3:02:52<5:55:18,  2.87s/it] 25%|██▍       | 2472/9908 [3:02:55<5:54:39,  2.86s/it] 25%|██▍       | 2473/9908 [3:02:58<5:54:10,  2.86s/it] 25%|██▍       | 2474/9908 [3:03:01<5:53:31,  2.85s/it] 25%|██▍       | 2475/9908 [3:03:04<5:53:12,  2.85s/it] 25%|██▍       | 2476/9908 [3:03:07<5:53:09,  2.85s/it]/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
 25%|██▌       | 2477/9908 [3:03:52<32:09:41, 15.58s/it] 25%|██▌       | 2478/9908 [3:03:59<26:42:21, 12.94s/it] 25%|██▌       | 2479/9908 [3:04:06<23:08:26, 11.21s/it] 25%|██▌       | 2480/9908 [3:04:12<19:53:03,  9.64s/it] 25%|██▌       | 2481/9908 [3:04:17<17:04:49,  8.28s/it] 25%|██▌       | 2482/9908 [3:04:22<15:16:27,  7.40s/it] 25%|██▌       | 2483/9908 [3:04:27<13:21:41,  6.48s/it] 25%|██▌       | 2484/9908 [3:04:31<11:51:24,  5.75s/it] 25%|██▌       | 2485/9908 [3:04:34<10:34:00,  5.12s/it] 25%|██▌       | 2486/9908 [3:04:38<9:35:26,  4.65s/it]  25%|██▌       | 2487/9908 [3:04:42<9:12:40,  4.47s/it] 25%|██▌       | 2488/9908 [3:04:46<8:52:33,  4.31s/it] 25%|██▌       | 2489/9908 [3:04:50<8:36:29,  4.18s/it] 25%|██▌       | 2490/9908 [3:04:53<8:04:49,  3.92s/it] 25%|██▌       | 2491/9908 [3:04:56<7:41:30,  3.73s/it] 25%|██▌       | 2492/9908 [3:05:00<7:38:41,  3.71s/it] 25%|██▌       | 2493/9908 [3:05:04<7:55:35,  3.85s/it] 25%|██▌       | 2494/9908 [3:05:08<7:48:16,  3.79s/it] 25%|██▌       | 2495/9908 [3:05:11<7:38:36,  3.71s/it] 25%|██▌       | 2496/9908 [3:05:15<7:52:08,  3.82s/it] 25%|██▌       | 2497/9908 [3:05:19<7:44:27,  3.76s/it] 25%|██▌       | 2498/9908 [3:05:23<7:43:48,  3.76s/it] 25%|██▌       | 2499/9908 [3:05:26<7:31:05,  3.65s/it]09/20/2024 04:41:59 - INFO - __main__ -   evaluate on ret%tvas--msrvtt_ret task
09/20/2024 04:42:00 - INFO - __main__ -   start running ret%tvas validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:00<03:07,  1.17it/s][A
  1%|          | 2/221 [00:01<02:09,  1.69it/s][A
  1%|▏         | 3/221 [00:02<02:39,  1.37it/s][A
  2%|▏         | 4/221 [00:02<02:07,  1.71it/s][A
  3%|▎         | 6/221 [00:02<01:09,  3.07it/s][A
  3%|▎         | 7/221 [00:02<01:05,  3.26it/s][A
  4%|▎         | 8/221 [00:03<01:05,  3.28it/s][A
  4%|▍         | 9/221 [00:03<01:22,  2.58it/s][A
  5%|▍         | 11/221 [00:04<00:51,  4.05it/s][A
  5%|▌         | 12/221 [00:04<01:27,  2.39it/s][A
  6%|▋         | 14/221 [00:05<00:59,  3.51it/s][A
  7%|▋         | 15/221 [00:05<00:59,  3.46it/s][A
  7%|▋         | 16/221 [00:06<01:15,  2.71it/s][A
  8%|▊         | 17/221 [00:06<01:34,  2.17it/s][A
  8%|▊         | 18/221 [00:07<01:34,  2.15it/s][A
  9%|▊         | 19/221 [00:07<01:34,  2.14it/s][A
 10%|▉         | 21/221 [00:08<01:08,  2.94it/s][A
 10%|▉         | 22/221 [00:08<01:33,  2.13it/s][A
 11%|█         | 24/221 [00:09<01:07,  2.90it/s][A
 11%|█▏        | 25/221 [00:09<01:02,  3.13it/s][A
 12%|█▏        | 26/221 [00:09<01:02,  3.11it/s][A
 13%|█▎        | 28/221 [00:10<00:46,  4.17it/s][A
 13%|█▎        | 29/221 [00:10<00:46,  4.10it/s][A
 14%|█▎        | 30/221 [00:11<01:13,  2.61it/s][A
 14%|█▍        | 31/221 [00:11<01:13,  2.58it/s][A
 15%|█▍        | 33/221 [00:11<00:57,  3.28it/s][A
 16%|█▌        | 35/221 [00:12<00:48,  3.81it/s][A
 16%|█▋        | 36/221 [00:12<00:52,  3.50it/s][A
 17%|█▋        | 37/221 [00:13<01:03,  2.92it/s][A
 17%|█▋        | 38/221 [00:15<02:31,  1.21it/s][A
 18%|█▊        | 39/221 [00:15<01:58,  1.54it/s][A
 18%|█▊        | 40/221 [00:16<01:47,  1.69it/s][A
 19%|█▊        | 41/221 [00:16<01:24,  2.14it/s][A
 19%|█▉        | 42/221 [00:16<01:11,  2.49it/s][A
 20%|█▉        | 44/221 [00:16<00:48,  3.65it/s][A
 20%|██        | 45/221 [00:23<05:27,  1.86s/it][A
 21%|██        | 46/221 [00:23<04:15,  1.46s/it][A
 21%|██▏       | 47/221 [00:24<03:34,  1.24s/it][A
 22%|██▏       | 48/221 [00:24<02:39,  1.08it/s][A
 22%|██▏       | 49/221 [00:24<02:11,  1.30it/s][A
 23%|██▎       | 50/221 [00:25<01:54,  1.49it/s][A
 23%|██▎       | 51/221 [00:25<01:28,  1.93it/s][A
 24%|██▍       | 53/221 [00:25<00:56,  2.97it/s][A
 24%|██▍       | 54/221 [00:26<01:06,  2.51it/s][A
 25%|██▍       | 55/221 [00:29<02:52,  1.04s/it][A
 25%|██▌       | 56/221 [00:29<02:13,  1.23it/s][A
 26%|██▌       | 57/221 [00:29<01:44,  1.56it/s][A
 27%|██▋       | 59/221 [00:29<01:03,  2.56it/s][A
 27%|██▋       | 60/221 [00:30<01:06,  2.44it/s][A
 28%|██▊       | 61/221 [00:30<01:01,  2.61it/s][A
 28%|██▊       | 62/221 [00:30<00:56,  2.80it/s][A
 29%|██▊       | 63/221 [00:30<00:46,  3.36it/s][A
 29%|██▉       | 64/221 [00:31<01:14,  2.12it/s][A
 30%|██▉       | 66/221 [00:32<00:55,  2.80it/s][A
 30%|███       | 67/221 [00:32<00:48,  3.19it/s][A
 31%|███       | 68/221 [00:32<00:41,  3.69it/s][A
 31%|███       | 69/221 [00:33<01:03,  2.40it/s][A
 32%|███▏      | 70/221 [00:33<00:50,  2.97it/s][A
 32%|███▏      | 71/221 [00:33<00:48,  3.09it/s][A
 33%|███▎      | 72/221 [00:34<00:44,  3.31it/s][A
 33%|███▎      | 73/221 [00:34<01:00,  2.43it/s][A
 33%|███▎      | 74/221 [00:34<00:49,  2.97it/s][A
 34%|███▍      | 75/221 [00:35<00:53,  2.73it/s][A
 34%|███▍      | 76/221 [00:35<00:51,  2.82it/s][A
 35%|███▍      | 77/221 [00:37<01:54,  1.26it/s][A
 36%|███▌      | 79/221 [00:38<01:44,  1.36it/s][A
 37%|███▋      | 81/221 [00:40<01:36,  1.44it/s][A
 37%|███▋      | 82/221 [00:43<03:03,  1.32s/it][A
 38%|███▊      | 83/221 [00:44<02:38,  1.15s/it][A
 38%|███▊      | 84/221 [00:44<02:03,  1.10it/s][A
 39%|███▉      | 86/221 [00:45<01:31,  1.48it/s][A
 39%|███▉      | 87/221 [00:46<01:41,  1.32it/s][A
 40%|███▉      | 88/221 [00:46<01:33,  1.42it/s][A
 40%|████      | 89/221 [00:47<01:34,  1.40it/s][A
 41%|████      | 90/221 [00:47<01:18,  1.66it/s][A
 42%|████▏     | 92/221 [00:48<00:50,  2.54it/s][A
 42%|████▏     | 93/221 [00:48<00:45,  2.79it/s][A
 43%|████▎     | 94/221 [00:49<01:05,  1.95it/s][A
 43%|████▎     | 95/221 [00:49<00:55,  2.25it/s][A
 43%|████▎     | 96/221 [00:50<01:14,  1.68it/s][A
 44%|████▍     | 97/221 [00:50<00:57,  2.15it/s][A
 44%|████▍     | 98/221 [00:51<01:11,  1.72it/s][A
 45%|████▍     | 99/221 [00:51<00:55,  2.20it/s][A
 45%|████▌     | 100/221 [00:52<01:01,  1.97it/s][A
 46%|████▌     | 102/221 [00:53<01:12,  1.64it/s][A
 47%|████▋     | 104/221 [00:54<00:53,  2.20it/s][A
 48%|████▊     | 105/221 [00:54<00:54,  2.14it/s][A
 48%|████▊     | 106/221 [00:57<01:54,  1.01it/s][A
 48%|████▊     | 107/221 [00:57<01:31,  1.25it/s][A
 49%|████▉     | 108/221 [00:57<01:14,  1.51it/s][A
 49%|████▉     | 109/221 [00:58<01:02,  1.78it/s][A
 50%|█████     | 111/221 [00:58<00:46,  2.38it/s][A
 51%|█████     | 112/221 [00:59<00:45,  2.40it/s][A
 51%|█████     | 113/221 [00:59<00:37,  2.87it/s][A
 52%|█████▏    | 115/221 [00:59<00:28,  3.72it/s][A
 52%|█████▏    | 116/221 [01:00<00:35,  2.94it/s][A
 53%|█████▎    | 117/221 [01:00<00:38,  2.69it/s][A
 53%|█████▎    | 118/221 [01:01<00:39,  2.64it/s][A
 54%|█████▍    | 119/221 [01:01<00:34,  2.95it/s][A
 54%|█████▍    | 120/221 [01:01<00:29,  3.38it/s][A
 55%|█████▍    | 121/221 [01:02<00:37,  2.65it/s][A
 55%|█████▌    | 122/221 [01:02<00:36,  2.72it/s][A
 56%|█████▌    | 123/221 [01:04<01:12,  1.34it/s][A
 56%|█████▌    | 124/221 [01:04<00:54,  1.79it/s][A
 57%|█████▋    | 125/221 [01:05<01:16,  1.26it/s][A
 57%|█████▋    | 126/221 [01:10<03:20,  2.11s/it][A
 57%|█████▋    | 127/221 [01:11<02:49,  1.80s/it][A
 58%|█████▊    | 128/221 [01:12<02:08,  1.38s/it][A
 58%|█████▊    | 129/221 [01:12<01:37,  1.05s/it][A
 59%|█████▉    | 130/221 [01:12<01:18,  1.16it/s][A
 59%|█████▉    | 131/221 [01:13<01:05,  1.37it/s][A
 60%|█████▉    | 132/221 [01:14<01:22,  1.08it/s][A
 60%|██████    | 133/221 [01:14<01:02,  1.41it/s][A
 61%|██████    | 134/221 [01:16<01:26,  1.00it/s][A
 61%|██████    | 135/221 [01:17<01:36,  1.12s/it][A
 62%|██████▏   | 136/221 [01:18<01:14,  1.14it/s][A
 62%|██████▏   | 137/221 [01:18<01:00,  1.38it/s][A
 62%|██████▏   | 138/221 [01:19<01:01,  1.34it/s][A
 63%|██████▎   | 139/221 [01:19<00:46,  1.77it/s][A
 63%|██████▎   | 140/221 [01:20<00:47,  1.69it/s][A
 64%|██████▍   | 141/221 [01:20<00:45,  1.76it/s][A
 64%|██████▍   | 142/221 [01:21<00:40,  1.94it/s][A
 65%|██████▍   | 143/221 [01:21<00:39,  1.96it/s][A
 65%|██████▌   | 144/221 [01:21<00:32,  2.34it/s][A
 66%|██████▌   | 146/221 [01:21<00:19,  3.77it/s][A
 67%|██████▋   | 148/221 [01:23<00:26,  2.77it/s][A
 67%|██████▋   | 149/221 [01:23<00:27,  2.59it/s][A
 68%|██████▊   | 150/221 [01:23<00:28,  2.49it/s][A
 68%|██████▊   | 151/221 [01:24<00:27,  2.55it/s][A
 69%|██████▉   | 152/221 [01:24<00:25,  2.67it/s][A
 70%|██████▉   | 154/221 [01:25<00:19,  3.35it/s][A
 70%|███████   | 155/221 [01:25<00:17,  3.78it/s][A
 71%|███████   | 156/221 [01:25<00:15,  4.29it/s][A
 71%|███████   | 157/221 [01:34<02:39,  2.49s/it][A
 71%|███████▏  | 158/221 [01:34<02:03,  1.97s/it][A
 72%|███████▏  | 159/221 [01:34<01:30,  1.45s/it][A
 72%|███████▏  | 160/221 [01:35<01:07,  1.11s/it][A
 73%|███████▎  | 162/221 [01:35<00:37,  1.56it/s][A
 74%|███████▍  | 163/221 [01:35<00:31,  1.83it/s][A
 74%|███████▍  | 164/221 [01:35<00:27,  2.06it/s][A
 75%|███████▍  | 165/221 [01:36<00:29,  1.93it/s][A
 75%|███████▌  | 166/221 [01:36<00:28,  1.94it/s][A
 76%|███████▌  | 167/221 [01:37<00:22,  2.35it/s][A
 76%|███████▌  | 168/221 [01:43<01:55,  2.18s/it][A
 76%|███████▋  | 169/221 [01:44<01:27,  1.69s/it][A
 77%|███████▋  | 170/221 [01:44<01:06,  1.30s/it][A
 77%|███████▋  | 171/221 [01:44<00:50,  1.01s/it][A
 78%|███████▊  | 172/221 [01:44<00:37,  1.31it/s][A
 78%|███████▊  | 173/221 [01:45<00:33,  1.44it/s][A
 79%|███████▊  | 174/221 [01:45<00:24,  1.90it/s][A
 79%|███████▉  | 175/221 [01:45<00:20,  2.25it/s][A
 80%|███████▉  | 176/221 [01:46<00:16,  2.79it/s][A
 80%|████████  | 177/221 [01:46<00:15,  2.82it/s][A
 81%|████████  | 178/221 [01:46<00:15,  2.82it/s][A
 81%|████████  | 179/221 [01:47<00:14,  2.84it/s][A
 81%|████████▏ | 180/221 [01:47<00:12,  3.37it/s][A
 82%|████████▏ | 182/221 [01:47<00:10,  3.83it/s][A
 83%|████████▎ | 183/221 [01:48<00:13,  2.86it/s][A
 83%|████████▎ | 184/221 [01:48<00:13,  2.72it/s][A
 84%|████████▎ | 185/221 [01:48<00:11,  3.20it/s][A
 84%|████████▍ | 186/221 [01:49<00:11,  2.97it/s][A
 85%|████████▍ | 187/221 [01:49<00:10,  3.26it/s][A
 85%|████████▌ | 188/221 [01:49<00:08,  4.00it/s][A
 86%|████████▌ | 189/221 [01:50<00:09,  3.40it/s][A
 86%|████████▌ | 190/221 [01:50<00:10,  2.92it/s][A
 86%|████████▋ | 191/221 [01:50<00:08,  3.55it/s][A
 87%|████████▋ | 192/221 [01:50<00:08,  3.26it/s][A
 87%|████████▋ | 193/221 [01:51<00:07,  3.63it/s][A
 88%|████████▊ | 194/221 [01:52<00:16,  1.65it/s][A
 88%|████████▊ | 195/221 [01:52<00:12,  2.10it/s][A
 89%|████████▊ | 196/221 [01:52<00:10,  2.41it/s][A
 89%|████████▉ | 197/221 [01:53<00:08,  2.78it/s][A
 90%|████████▉ | 198/221 [01:53<00:08,  2.81it/s][A
 90%|█████████ | 199/221 [01:53<00:06,  3.57it/s][A
 90%|█████████ | 200/221 [01:54<00:06,  3.06it/s][A
 91%|█████████ | 201/221 [01:54<00:08,  2.44it/s][A
 91%|█████████▏| 202/221 [01:54<00:06,  3.14it/s][A
 92%|█████████▏| 203/221 [01:56<00:11,  1.57it/s][A
 92%|█████████▏| 204/221 [01:56<00:08,  2.05it/s][A
 93%|█████████▎| 206/221 [01:56<00:05,  2.82it/s][A
 94%|█████████▍| 208/221 [01:57<00:04,  3.19it/s][A
 95%|█████████▌| 210/221 [01:57<00:02,  4.45it/s][A
 95%|█████████▌| 211/221 [01:58<00:03,  3.24it/s][A
 96%|█████████▌| 212/221 [01:58<00:02,  3.41it/s][A
 96%|█████████▋| 213/221 [01:58<00:02,  3.05it/s][A
 97%|█████████▋| 214/221 [01:58<00:02,  3.47it/s][A
 97%|█████████▋| 215/221 [01:59<00:01,  3.17it/s][A
 98%|█████████▊| 216/221 [01:59<00:01,  3.02it/s][A
 98%|█████████▊| 217/221 [02:06<00:08,  2.10s/it][A
 99%|█████████▊| 218/221 [02:06<00:04,  1.63s/it][A
 99%|█████████▉| 219/221 [02:07<00:02,  1.27s/it][A
100%|█████████▉| 220/221 [02:09<00:01,  1.53s/it][A
100%|██████████| 221/221 [02:09<00:00,  1.14s/it][A100%|██████████| 221/221 [02:09<00:00,  1.71it/s]

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:00<01:56,  1.89it/s][A
  1%|          | 2/221 [00:01<01:55,  1.89it/s][A
  1%|▏         | 3/221 [00:01<01:55,  1.89it/s][A
  2%|▏         | 4/221 [00:02<01:54,  1.89it/s][A
  2%|▏         | 5/221 [00:02<01:54,  1.89it/s][A
  3%|▎         | 6/221 [00:03<01:53,  1.89it/s][A
  3%|▎         | 7/221 [00:03<01:53,  1.89it/s][A
  4%|▎         | 8/221 [00:04<01:52,  1.89it/s][A
  4%|▍         | 9/221 [00:04<01:52,  1.89it/s][A
  5%|▍         | 10/221 [00:05<01:51,  1.89it/s][A
  5%|▍         | 11/221 [00:05<01:50,  1.89it/s][A
  5%|▌         | 12/221 [00:06<01:50,  1.89it/s][A
  6%|▌         | 13/221 [00:06<01:49,  1.89it/s][A
  6%|▋         | 14/221 [00:07<01:49,  1.89it/s][A
  7%|▋         | 15/221 [00:07<01:48,  1.89it/s][A
  7%|▋         | 16/221 [00:08<01:48,  1.89it/s][A
  8%|▊         | 17/221 [00:08<01:47,  1.89it/s][A
  8%|▊         | 18/221 [00:09<01:47,  1.89it/s][A
  9%|▊         | 19/221 [00:10<01:46,  1.89it/s][A
  9%|▉         | 20/221 [00:10<01:46,  1.89it/s][A
 10%|▉         | 21/221 [00:11<01:45,  1.89it/s][A
 10%|▉         | 22/221 [00:11<01:45,  1.89it/s][A
 10%|█         | 23/221 [00:12<01:44,  1.89it/s][A
 11%|█         | 24/221 [00:12<01:44,  1.89it/s][A
 11%|█▏        | 25/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 26/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 27/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 28/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 29/221 [00:15<01:41,  1.89it/s][A
 14%|█▎        | 30/221 [00:15<01:40,  1.89it/s][A
 14%|█▍        | 31/221 [00:16<01:40,  1.89it/s][A
 14%|█▍        | 32/221 [00:16<01:39,  1.89it/s][A
 15%|█▍        | 33/221 [00:17<01:39,  1.89it/s][A
 15%|█▌        | 34/221 [00:17<01:38,  1.89it/s][A
 16%|█▌        | 35/221 [00:18<01:38,  1.89it/s][A
 16%|█▋        | 36/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 37/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 38/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 39/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 40/221 [00:21<01:35,  1.89it/s][A
 19%|█▊        | 41/221 [00:21<01:35,  1.89it/s][A
 19%|█▉        | 42/221 [00:22<01:34,  1.89it/s][A
 19%|█▉        | 43/221 [00:22<01:34,  1.89it/s][A
 20%|█▉        | 44/221 [00:23<01:33,  1.89it/s][A
 20%|██        | 45/221 [00:23<01:33,  1.89it/s][A
 21%|██        | 46/221 [00:24<01:32,  1.89it/s][A
 21%|██▏       | 47/221 [00:24<01:31,  1.89it/s][A
 22%|██▏       | 48/221 [00:25<01:31,  1.89it/s][A
 22%|██▏       | 49/221 [00:25<01:30,  1.89it/s][A
 23%|██▎       | 50/221 [00:26<01:30,  1.89it/s][A
 23%|██▎       | 51/221 [00:26<01:29,  1.89it/s][A
 24%|██▎       | 52/221 [00:27<01:29,  1.89it/s][A
 24%|██▍       | 53/221 [00:28<01:28,  1.89it/s][A
 24%|██▍       | 54/221 [00:28<01:28,  1.89it/s][A
 25%|██▍       | 55/221 [00:29<01:27,  1.89it/s][A
 25%|██▌       | 56/221 [00:29<01:27,  1.89it/s][A
 26%|██▌       | 57/221 [00:30<01:26,  1.89it/s][A
 26%|██▌       | 58/221 [00:30<01:26,  1.89it/s][A
 27%|██▋       | 59/221 [00:31<01:25,  1.89it/s][A
 27%|██▋       | 60/221 [00:31<01:25,  1.89it/s][A
 28%|██▊       | 61/221 [00:32<01:24,  1.89it/s][A
 28%|██▊       | 62/221 [00:32<01:24,  1.89it/s][A
 29%|██▊       | 63/221 [00:33<01:23,  1.89it/s][A
 29%|██▉       | 64/221 [00:33<01:22,  1.89it/s][A
 29%|██▉       | 65/221 [00:34<01:22,  1.89it/s][A
 30%|██▉       | 66/221 [00:34<01:21,  1.89it/s][A
 30%|███       | 67/221 [00:35<01:21,  1.89it/s][A
 31%|███       | 68/221 [00:35<01:20,  1.89it/s][A
 31%|███       | 69/221 [00:36<01:20,  1.89it/s][A
 32%|███▏      | 70/221 [00:36<01:19,  1.89it/s][A
 32%|███▏      | 71/221 [00:37<01:19,  1.89it/s][A
 33%|███▎      | 72/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 73/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 74/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 75/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 76/221 [00:40<01:16,  1.89it/s][A
 35%|███▍      | 77/221 [00:40<01:16,  1.89it/s][A
 35%|███▌      | 78/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 79/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 80/221 [00:42<01:14,  1.89it/s][A
 37%|███▋      | 81/221 [00:42<01:13,  1.89it/s][A
 37%|███▋      | 82/221 [00:43<01:13,  1.89it/s][A
 38%|███▊      | 83/221 [00:43<01:12,  1.89it/s][A
 38%|███▊      | 84/221 [00:44<01:12,  1.89it/s][A
 38%|███▊      | 85/221 [00:44<01:11,  1.89it/s][A
 39%|███▉      | 86/221 [00:45<01:11,  1.89it/s][A
 39%|███▉      | 87/221 [00:45<01:10,  1.89it/s][A
 40%|███▉      | 88/221 [00:46<01:10,  1.89it/s][A
 40%|████      | 89/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 90/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 91/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 92/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 93/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 94/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 95/221 [00:50<01:06,  1.89it/s][A
 43%|████▎     | 96/221 [00:50<01:06,  1.89it/s][A
 44%|████▍     | 97/221 [00:51<01:05,  1.89it/s][A
 44%|████▍     | 98/221 [00:51<01:04,  1.89it/s][A
 45%|████▍     | 99/221 [00:52<01:04,  1.89it/s][A
 45%|████▌     | 100/221 [00:52<01:03,  1.89it/s][A
 46%|████▌     | 101/221 [00:53<01:03,  1.89it/s][A
 46%|████▌     | 102/221 [00:53<01:02,  1.89it/s][A
 47%|████▋     | 103/221 [00:54<01:02,  1.89it/s][A
 47%|████▋     | 104/221 [00:54<01:01,  1.89it/s][A
 48%|████▊     | 105/221 [00:55<01:01,  1.89it/s][A
 48%|████▊     | 106/221 [00:56<01:00,  1.89it/s][A
 48%|████▊     | 107/221 [00:56<01:00,  1.89it/s][A
 49%|████▉     | 108/221 [00:57<00:59,  1.89it/s][A
 49%|████▉     | 109/221 [00:57<00:59,  1.89it/s][A
 50%|████▉     | 110/221 [00:58<00:58,  1.89it/s][A
 50%|█████     | 111/221 [00:58<00:58,  1.89it/s][A
 51%|█████     | 112/221 [00:59<00:57,  1.89it/s][A
 51%|█████     | 113/221 [00:59<00:57,  1.89it/s][A
 52%|█████▏    | 114/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 115/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 116/221 [01:01<00:55,  1.89it/s][A
 53%|█████▎    | 117/221 [01:01<00:54,  1.89it/s][A
 53%|█████▎    | 118/221 [01:02<00:54,  1.89it/s][A
 54%|█████▍    | 119/221 [01:02<00:53,  1.89it/s][A
 54%|█████▍    | 120/221 [01:03<00:53,  1.89it/s][A
 55%|█████▍    | 121/221 [01:03<00:52,  1.89it/s][A
 55%|█████▌    | 122/221 [01:04<00:52,  1.89it/s][A
 56%|█████▌    | 123/221 [01:05<00:51,  1.89it/s][A
 56%|█████▌    | 124/221 [01:05<00:51,  1.89it/s][A
 57%|█████▋    | 125/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 126/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 127/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 128/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 129/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 130/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 131/221 [01:09<00:47,  1.89it/s][A
 60%|█████▉    | 132/221 [01:09<00:47,  1.89it/s][A
 60%|██████    | 133/221 [01:10<00:46,  1.89it/s][A
 61%|██████    | 134/221 [01:10<00:45,  1.89it/s][A
 61%|██████    | 135/221 [01:11<00:45,  1.89it/s][A
 62%|██████▏   | 136/221 [01:11<00:44,  1.89it/s][A
 62%|██████▏   | 137/221 [01:12<00:44,  1.89it/s][A
 62%|██████▏   | 138/221 [01:12<00:43,  1.89it/s][A
 63%|██████▎   | 139/221 [01:13<00:43,  1.89it/s][A
 63%|██████▎   | 140/221 [01:13<00:42,  1.89it/s][A
 64%|██████▍   | 141/221 [01:14<00:42,  1.89it/s][A
 64%|██████▍   | 142/221 [01:15<00:41,  1.89it/s][A
 65%|██████▍   | 143/221 [01:15<00:41,  1.89it/s][A
 65%|██████▌   | 144/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 145/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 146/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 147/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 148/221 [01:18<00:38,  1.89it/s][A
 67%|██████▋   | 149/221 [01:18<00:38,  1.89it/s][A
 68%|██████▊   | 150/221 [01:19<00:37,  1.89it/s][A
 68%|██████▊   | 151/221 [01:19<00:36,  1.89it/s][A
 69%|██████▉   | 152/221 [01:20<00:36,  1.89it/s][A
 69%|██████▉   | 153/221 [01:20<00:35,  1.89it/s][A
 70%|██████▉   | 154/221 [01:21<00:35,  1.89it/s][A
 70%|███████   | 155/221 [01:21<00:34,  1.89it/s][A
 71%|███████   | 156/221 [01:22<00:34,  1.89it/s][A
 71%|███████   | 157/221 [01:22<00:33,  1.89it/s][A
 71%|███████▏  | 158/221 [01:23<00:33,  1.89it/s][A
 72%|███████▏  | 159/221 [01:24<00:32,  1.89it/s][A
 72%|███████▏  | 160/221 [01:24<00:32,  1.89it/s][A
 73%|███████▎  | 161/221 [01:25<00:31,  1.89it/s][A
 73%|███████▎  | 162/221 [01:25<00:31,  1.89it/s][A
 74%|███████▍  | 163/221 [01:26<00:30,  1.89it/s][A
 74%|███████▍  | 164/221 [01:26<00:30,  1.89it/s][A
 75%|███████▍  | 165/221 [01:27<00:29,  1.89it/s][A
 75%|███████▌  | 166/221 [01:27<00:29,  1.89it/s][A
 76%|███████▌  | 167/221 [01:28<00:28,  1.89it/s][A
 76%|███████▌  | 168/221 [01:28<00:28,  1.89it/s][A
 76%|███████▋  | 169/221 [01:29<00:27,  1.89it/s][A
 77%|███████▋  | 170/221 [01:29<00:26,  1.89it/s][A
 77%|███████▋  | 171/221 [01:30<00:26,  1.89it/s][A
 78%|███████▊  | 172/221 [01:30<00:25,  1.89it/s][A
 78%|███████▊  | 173/221 [01:31<00:25,  1.89it/s][A
 79%|███████▊  | 174/221 [01:31<00:24,  1.89it/s][A
 79%|███████▉  | 175/221 [01:32<00:24,  1.89it/s][A
 80%|███████▉  | 176/221 [01:33<00:23,  1.89it/s][A
 80%|████████  | 177/221 [01:33<00:23,  1.89it/s][A
 81%|████████  | 178/221 [01:34<00:22,  1.89it/s][A
 81%|████████  | 179/221 [01:34<00:22,  1.89it/s][A
 81%|████████▏ | 180/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 181/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 182/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 183/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 184/221 [01:37<00:19,  1.89it/s][A
 84%|████████▎ | 185/221 [01:37<00:19,  1.89it/s][A
 84%|████████▍ | 186/221 [01:38<00:18,  1.89it/s][A
 85%|████████▍ | 187/221 [01:38<00:17,  1.89it/s][A
 85%|████████▌ | 188/221 [01:39<00:17,  1.89it/s][A
 86%|████████▌ | 189/221 [01:39<00:16,  1.89it/s][A
 86%|████████▌ | 190/221 [01:40<00:16,  1.89it/s][A
 86%|████████▋ | 191/221 [01:40<00:15,  1.89it/s][A
 87%|████████▋ | 192/221 [01:41<00:15,  1.89it/s][A
 87%|████████▋ | 193/221 [01:41<00:14,  1.89it/s][A
 88%|████████▊ | 194/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 195/221 [01:43<00:13,  1.89it/s][A
 89%|████████▊ | 196/221 [01:43<00:13,  1.89it/s][A
 89%|████████▉ | 197/221 [01:44<00:12,  1.89it/s][A
 90%|████████▉ | 198/221 [01:44<00:12,  1.89it/s][A
 90%|█████████ | 199/221 [01:45<00:11,  1.89it/s][A
 90%|█████████ | 200/221 [01:45<00:11,  1.89it/s][A
 91%|█████████ | 201/221 [01:46<00:10,  1.89it/s][A
 91%|█████████▏| 202/221 [01:46<00:10,  1.89it/s][A
 92%|█████████▏| 203/221 [01:47<00:09,  1.89it/s][A
 92%|█████████▏| 204/221 [01:47<00:08,  1.89it/s][A
 93%|█████████▎| 205/221 [01:48<00:08,  1.89it/s][A
 93%|█████████▎| 206/221 [01:48<00:07,  1.89it/s][A
 94%|█████████▎| 207/221 [01:49<00:07,  1.89it/s][A
 94%|█████████▍| 208/221 [01:49<00:06,  1.89it/s][A
 95%|█████████▍| 209/221 [01:50<00:06,  1.89it/s][A
 95%|█████████▌| 210/221 [01:50<00:05,  1.89it/s][A
 95%|█████████▌| 211/221 [01:51<00:05,  1.89it/s][A
 96%|█████████▌| 212/221 [01:52<00:04,  1.89it/s][A
 96%|█████████▋| 213/221 [01:52<00:04,  1.89it/s][A
 97%|█████████▋| 214/221 [01:53<00:03,  1.89it/s][A
 97%|█████████▋| 215/221 [01:53<00:03,  1.89it/s][A
 98%|█████████▊| 216/221 [01:54<00:02,  1.89it/s][A
 98%|█████████▊| 217/221 [01:54<00:02,  1.89it/s][A
 99%|█████████▊| 218/221 [01:55<00:01,  1.89it/s][A
 99%|█████████▉| 219/221 [01:55<00:01,  1.89it/s][A
100%|█████████▉| 220/221 [01:56<00:00,  1.89it/s][A
100%|██████████| 221/221 [01:56<00:00,  1.89it/s][A100%|██████████| 221/221 [01:56<00:00,  1.89it/s]
09/20/2024 04:48:49 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_forward=====step 2499--===========

09/20/2024 04:48:49 - INFO - __main__ -   {'area_r1': 44.1, 'area_recall': '44.1/71.5/81.9', 'area_ravg': 65.8}
09/20/2024 04:48:49 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_backard=====step 2499--===========

09/20/2024 04:48:49 - INFO - __main__ -   {'forward_r1': 50.1, 'forward_recall': '50.1/78.8/87.3', 'forward_ravg': 72.1}
09/20/2024 04:48:49 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video=====step 2499--===========

09/20/2024 04:48:49 - INFO - __main__ -   {'area_video_r1': 50.0, 'area_video_recall': '50.0/78.5/87.2', 'area_video_ravg': 71.9}
09/20/2024 04:48:49 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video====history best step: 2499=======

09/20/2024 04:48:49 - INFO - __main__ -   {'area_video_r1': 50.0, 'area_video_recall': '50.0/78.5/87.2', 'area_video_ravg': 71.9}
09/20/2024 04:48:49 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itm_area=====step 2499--===========

09/20/2024 04:48:49 - INFO - __main__ -   {'area_video_r1': 60.4, 'area_video_recall': '60.4/81.2/87.1', 'area_video_ravg': 76.2, 'area_video_back_r1': 59.2, 'area_video_back_recall': '59.2/83.4/89.8', 'area_video_back_ravg': 77.5}
09/20/2024 04:48:49 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itm_area====history best step: 2499=======

09/20/2024 04:48:49 - INFO - __main__ -   {'area_video_r1': 60.4, 'area_video_recall': '60.4/81.2/87.1', 'area_video_ravg': 76.2, 'area_video_back_r1': 59.2, 'area_video_back_recall': '59.2/83.4/89.8', 'area_video_back_ravg': 77.5}
09/20/2024 04:48:49 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas=====step 2499--===========

09/20/2024 04:48:49 - INFO - __main__ -   {'video_r1': 32.2, 'video_recall': '32.2/57.7/69.5', 'video_ravg': 53.1}
09/20/2024 04:48:49 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas====history best step: 1499=======

09/20/2024 04:48:49 - INFO - __main__ -   {'video_r1': 34.7, 'video_recall': '34.7/60.5/72.3', 'video_ravg': 55.8}
09/20/2024 04:49:24 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03709820657968521, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.1846580505371094, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.2217562198638916}
 25%|██▌       | 2500/9908 [3:12:53<280:56:03, 136.52s/it] 25%|██▌       | 2501/9908 [3:12:56<198:50:05, 96.64s/it]  25%|██▌       | 2502/9908 [3:13:00<141:10:43, 68.63s/it] 25%|██▌       | 2503/9908 [3:13:03<101:00:09, 49.10s/it] 25%|██▌       | 2504/9908 [3:13:07<72:53:35, 35.44s/it]  25%|██▌       | 2505/9908 [3:13:10<53:07:49, 25.84s/it] 25%|██▌       | 2506/9908 [3:13:14<39:33:33, 19.24s/it] 25%|██▌       | 2507/9908 [3:13:18<29:54:57, 14.55s/it] 25%|██▌       | 2508/9908 [3:13:21<23:17:47, 11.33s/it] 25%|██▌       | 2509/9908 [3:13:25<18:27:03,  8.98s/it] 25%|██▌       | 2510/9908 [3:13:28<15:04:28,  7.34s/it] 25%|██▌       | 2511/9908 [3:13:32<12:54:17,  6.28s/it] 25%|██▌       | 2512/9908 [3:13:36<11:33:39,  5.63s/it] 25%|██▌       | 2513/9908 [3:13:40<10:16:58,  5.01s/it] 25%|██▌       | 2514/9908 [3:13:44<9:40:19,  4.71s/it]  25%|██▌       | 2515/9908 [3:13:47<8:56:58,  4.36s/it] 25%|██▌       | 2516/9908 [3:13:51<8:40:51,  4.23s/it] 25%|██▌       | 2517/9908 [3:13:55<8:19:59,  4.06s/it] 25%|██▌       | 2518/9908 [3:13:59<8:05:33,  3.94s/it] 25%|██▌       | 2519/9908 [3:14:03<8:03:19,  3.92s/it] 25%|██▌       | 2520/9908 [3:14:06<7:53:45,  3.85s/it] 25%|██▌       | 2521/9908 [3:14:10<7:45:58,  3.78s/it] 25%|██▌       | 2522/9908 [3:14:14<7:49:03,  3.81s/it] 25%|██▌       | 2523/9908 [3:14:17<7:48:22,  3.81s/it] 25%|██▌       | 2524/9908 [3:14:21<7:35:02,  3.70s/it] 25%|██▌       | 2525/9908 [3:14:25<7:49:09,  3.81s/it] 25%|██▌       | 2526/9908 [3:14:29<7:40:03,  3.74s/it] 26%|██▌       | 2527/9908 [3:14:32<7:22:59,  3.60s/it] 26%|██▌       | 2528/9908 [3:14:35<7:19:58,  3.58s/it] 26%|██▌       | 2529/9908 [3:14:39<7:36:45,  3.71s/it] 26%|██▌       | 2530/9908 [3:14:43<7:37:51,  3.72s/it] 26%|██▌       | 2531/9908 [3:14:47<7:43:55,  3.77s/it] 26%|██▌       | 2532/9908 [3:14:51<7:38:27,  3.73s/it] 26%|██▌       | 2533/9908 [3:14:55<7:42:49,  3.77s/it] 26%|██▌       | 2534/9908 [3:14:59<7:58:42,  3.90s/it] 26%|██▌       | 2535/9908 [3:15:02<7:39:46,  3.74s/it] 26%|██▌       | 2536/9908 [3:15:06<7:32:58,  3.69s/it] 26%|██▌       | 2537/9908 [3:15:10<7:39:38,  3.74s/it] 26%|██▌       | 2538/9908 [3:15:13<7:30:28,  3.67s/it] 26%|██▌       | 2539/9908 [3:15:17<7:39:49,  3.74s/it] 26%|██▌       | 2540/9908 [3:15:20<7:31:08,  3.67s/it] 26%|██▌       | 2541/9908 [3:15:24<7:32:01,  3.68s/it] 26%|██▌       | 2542/9908 [3:15:28<7:29:50,  3.66s/it] 26%|██▌       | 2543/9908 [3:15:31<7:30:35,  3.67s/it] 26%|██▌       | 2544/9908 [3:15:35<7:18:06,  3.57s/it] 26%|██▌       | 2545/9908 [3:15:39<7:32:30,  3.69s/it] 26%|██▌       | 2546/9908 [3:15:43<7:37:20,  3.73s/it] 26%|██▌       | 2547/9908 [3:15:46<7:35:09,  3.71s/it] 26%|██▌       | 2548/9908 [3:15:50<7:46:26,  3.80s/it] 26%|██▌       | 2549/9908 [3:15:54<7:36:49,  3.72s/it]09/20/2024 04:52:28 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04060988500714302, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.5165897607803345, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.5571995973587036}
 26%|██▌       | 2550/9908 [3:15:58<7:37:43,  3.73s/it] 26%|██▌       | 2551/9908 [3:16:01<7:38:35,  3.74s/it] 26%|██▌       | 2552/9908 [3:16:05<7:44:42,  3.79s/it] 26%|██▌       | 2553/9908 [3:16:09<7:40:19,  3.76s/it] 26%|██▌       | 2554/9908 [3:16:13<7:47:10,  3.81s/it] 26%|██▌       | 2555/9908 [3:16:17<7:54:47,  3.87s/it] 26%|██▌       | 2556/9908 [3:16:20<7:43:23,  3.78s/it] 26%|██▌       | 2557/9908 [3:16:24<7:33:53,  3.70s/it] 26%|██▌       | 2558/9908 [3:16:27<7:24:33,  3.63s/it] 26%|██▌       | 2559/9908 [3:16:31<7:33:22,  3.70s/it] 26%|██▌       | 2560/9908 [3:16:35<7:30:55,  3.68s/it] 26%|██▌       | 2561/9908 [3:16:39<7:47:48,  3.82s/it] 26%|██▌       | 2562/9908 [3:16:43<7:44:41,  3.80s/it] 26%|██▌       | 2563/9908 [3:16:47<7:46:53,  3.81s/it] 26%|██▌       | 2564/9908 [3:16:50<7:36:27,  3.73s/it] 26%|██▌       | 2565/9908 [3:16:54<7:30:30,  3.68s/it] 26%|██▌       | 2566/9908 [3:16:57<7:21:00,  3.60s/it] 26%|██▌       | 2567/9908 [3:17:01<7:27:38,  3.66s/it] 26%|██▌       | 2568/9908 [3:17:05<7:35:43,  3.73s/it] 26%|██▌       | 2569/9908 [3:17:09<7:36:49,  3.73s/it] 26%|██▌       | 2570/9908 [3:17:12<7:35:09,  3.72s/it] 26%|██▌       | 2571/9908 [3:17:16<7:29:50,  3.68s/it] 26%|██▌       | 2572/9908 [3:17:20<7:32:25,  3.70s/it] 26%|██▌       | 2573/9908 [3:17:23<7:23:51,  3.63s/it] 26%|██▌       | 2574/9908 [3:17:27<7:26:45,  3.65s/it] 26%|██▌       | 2575/9908 [3:17:31<7:30:37,  3.69s/it] 26%|██▌       | 2576/9908 [3:17:34<7:27:24,  3.66s/it] 26%|██▌       | 2577/9908 [3:17:38<7:37:29,  3.74s/it] 26%|██▌       | 2578/9908 [3:17:42<7:39:27,  3.76s/it] 26%|██▌       | 2579/9908 [3:17:46<7:34:54,  3.72s/it] 26%|██▌       | 2580/9908 [3:17:49<7:29:40,  3.68s/it] 26%|██▌       | 2581/9908 [3:17:53<7:24:19,  3.64s/it] 26%|██▌       | 2582/9908 [3:17:57<7:32:03,  3.70s/it] 26%|██▌       | 2583/9908 [3:18:00<7:28:57,  3.68s/it] 26%|██▌       | 2584/9908 [3:18:04<7:27:16,  3.66s/it] 26%|██▌       | 2585/9908 [3:18:08<7:35:38,  3.73s/it] 26%|██▌       | 2586/9908 [3:18:11<7:33:39,  3.72s/it] 26%|██▌       | 2587/9908 [3:18:15<7:29:49,  3.69s/it] 26%|██▌       | 2588/9908 [3:18:19<7:34:17,  3.72s/it] 26%|██▌       | 2589/9908 [3:18:23<7:39:21,  3.77s/it] 26%|██▌       | 2590/9908 [3:18:26<7:35:12,  3.73s/it] 26%|██▌       | 2591/9908 [3:18:30<7:36:37,  3.74s/it] 26%|██▌       | 2592/9908 [3:18:34<7:41:38,  3.79s/it] 26%|██▌       | 2593/9908 [3:18:38<7:41:20,  3.78s/it] 26%|██▌       | 2594/9908 [3:18:41<7:34:30,  3.73s/it] 26%|██▌       | 2595/9908 [3:18:45<7:22:32,  3.63s/it] 26%|██▌       | 2596/9908 [3:18:49<7:43:58,  3.81s/it] 26%|██▌       | 2597/9908 [3:18:53<7:41:12,  3.79s/it] 26%|██▌       | 2598/9908 [3:18:56<7:31:25,  3.71s/it] 26%|██▌       | 2599/9908 [3:19:00<7:21:42,  3.63s/it]09/20/2024 04:55:34 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03771698474884033, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.4580037593841553, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.4957207441329956}
 26%|██▌       | 2600/9908 [3:19:03<7:10:39,  3.54s/it] 26%|██▋       | 2601/9908 [3:19:07<7:23:38,  3.64s/it] 26%|██▋       | 2602/9908 [3:19:11<7:31:57,  3.71s/it] 26%|██▋       | 2603/9908 [3:19:15<7:39:43,  3.78s/it] 26%|██▋       | 2604/9908 [3:19:18<7:30:25,  3.70s/it] 26%|██▋       | 2605/9908 [3:19:22<7:36:33,  3.75s/it] 26%|██▋       | 2606/9908 [3:19:25<7:25:20,  3.66s/it] 26%|██▋       | 2607/9908 [3:19:29<7:28:02,  3.68s/it] 26%|██▋       | 2608/9908 [3:19:33<7:29:57,  3.70s/it] 26%|██▋       | 2609/9908 [3:19:37<7:25:25,  3.66s/it] 26%|██▋       | 2610/9908 [3:19:41<7:42:30,  3.80s/it] 26%|██▋       | 2611/9908 [3:19:44<7:39:15,  3.78s/it] 26%|██▋       | 2612/9908 [3:19:48<7:39:39,  3.78s/it] 26%|██▋       | 2613/9908 [3:19:52<7:38:42,  3.77s/it] 26%|██▋       | 2614/9908 [3:19:55<7:26:07,  3.67s/it] 26%|██▋       | 2615/9908 [3:19:59<7:19:50,  3.62s/it] 26%|██▋       | 2616/9908 [3:20:03<7:34:27,  3.74s/it] 26%|██▋       | 2617/9908 [3:20:06<7:26:20,  3.67s/it] 26%|██▋       | 2618/9908 [3:20:10<7:23:31,  3.65s/it] 26%|██▋       | 2619/9908 [3:20:14<7:24:18,  3.66s/it] 26%|██▋       | 2620/9908 [3:20:17<7:18:02,  3.61s/it] 26%|██▋       | 2621/9908 [3:20:21<7:19:42,  3.62s/it] 26%|██▋       | 2622/9908 [3:20:25<7:25:19,  3.67s/it] 26%|██▋       | 2623/9908 [3:20:28<7:21:47,  3.64s/it] 26%|██▋       | 2624/9908 [3:20:32<7:18:39,  3.61s/it] 26%|██▋       | 2625/9908 [3:20:36<7:32:59,  3.73s/it] 27%|██▋       | 2626/9908 [3:20:40<7:46:39,  3.85s/it] 27%|██▋       | 2627/9908 [3:20:43<7:40:20,  3.79s/it] 27%|██▋       | 2628/9908 [3:20:47<7:36:13,  3.76s/it] 27%|██▋       | 2629/9908 [3:20:51<7:30:13,  3.71s/it] 27%|██▋       | 2630/9908 [3:20:55<7:34:14,  3.74s/it] 27%|██▋       | 2631/9908 [3:20:58<7:35:59,  3.76s/it] 27%|██▋       | 2632/9908 [3:21:02<7:36:23,  3.76s/it] 27%|██▋       | 2633/9908 [3:21:06<7:33:06,  3.74s/it] 27%|██▋       | 2634/9908 [3:21:09<7:29:39,  3.71s/it] 27%|██▋       | 2635/9908 [3:21:13<7:22:04,  3.65s/it] 27%|██▋       | 2636/9908 [3:21:17<7:22:18,  3.65s/it] 27%|██▋       | 2637/9908 [3:21:20<7:19:21,  3.63s/it] 27%|██▋       | 2638/9908 [3:21:24<7:31:36,  3.73s/it] 27%|██▋       | 2639/9908 [3:21:28<7:38:03,  3.78s/it] 27%|██▋       | 2640/9908 [3:21:32<7:43:19,  3.82s/it] 27%|██▋       | 2641/9908 [3:21:36<7:39:02,  3.79s/it] 27%|██▋       | 2642/9908 [3:21:40<7:42:56,  3.82s/it] 27%|██▋       | 2643/9908 [3:21:43<7:43:45,  3.83s/it] 27%|██▋       | 2644/9908 [3:21:47<7:35:01,  3.76s/it] 27%|██▋       | 2645/9908 [3:21:51<7:30:53,  3.72s/it] 27%|██▋       | 2646/9908 [3:21:54<7:12:56,  3.58s/it] 27%|██▋       | 2647/9908 [3:21:58<7:19:49,  3.63s/it] 27%|██▋       | 2648/9908 [3:22:01<7:24:47,  3.68s/it] 27%|██▋       | 2649/9908 [3:22:05<7:31:07,  3.73s/it]09/20/2024 04:58:40 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04679251089692116, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.3336317539215088, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.3804242610931396}
 27%|██▋       | 2650/9908 [3:22:09<7:24:49,  3.68s/it] 27%|██▋       | 2651/9908 [3:22:13<7:44:46,  3.84s/it] 27%|██▋       | 2652/9908 [3:22:17<7:44:03,  3.84s/it] 27%|██▋       | 2653/9908 [3:22:20<7:30:38,  3.73s/it] 27%|██▋       | 2654/9908 [3:22:24<7:41:26,  3.82s/it] 27%|██▋       | 2655/9908 [3:22:28<7:30:10,  3.72s/it] 27%|██▋       | 2656/9908 [3:22:32<7:26:45,  3.70s/it] 27%|██▋       | 2657/9908 [3:22:35<7:28:42,  3.71s/it] 27%|██▋       | 2658/9908 [3:22:39<7:19:52,  3.64s/it] 27%|██▋       | 2659/9908 [3:22:42<7:18:45,  3.63s/it] 27%|██▋       | 2660/9908 [3:22:46<7:20:15,  3.64s/it] 27%|██▋       | 2661/9908 [3:22:50<7:21:22,  3.65s/it] 27%|██▋       | 2662/9908 [3:22:54<7:36:51,  3.78s/it] 27%|██▋       | 2663/9908 [3:22:58<7:48:17,  3.88s/it] 27%|██▋       | 2664/9908 [3:23:02<7:41:52,  3.83s/it] 27%|██▋       | 2665/9908 [3:23:05<7:25:38,  3.69s/it] 27%|██▋       | 2666/9908 [3:23:09<7:26:23,  3.70s/it] 27%|██▋       | 2667/9908 [3:23:13<7:36:01,  3.78s/it] 27%|██▋       | 2668/9908 [3:23:16<7:25:33,  3.69s/it] 27%|██▋       | 2669/9908 [3:23:20<7:25:06,  3.69s/it] 27%|██▋       | 2670/9908 [3:23:23<7:21:44,  3.66s/it] 27%|██▋       | 2671/9908 [3:23:28<7:46:50,  3.87s/it] 27%|██▋       | 2672/9908 [3:23:31<7:36:27,  3.78s/it] 27%|██▋       | 2673/9908 [3:23:35<7:24:59,  3.69s/it] 27%|██▋       | 2674/9908 [3:23:39<7:29:53,  3.73s/it] 27%|██▋       | 2675/9908 [3:23:42<7:22:17,  3.67s/it] 27%|██▋       | 2676/9908 [3:23:46<7:17:58,  3.63s/it] 27%|██▋       | 2677/9908 [3:23:49<7:11:02,  3.58s/it] 27%|██▋       | 2678/9908 [3:23:53<7:18:03,  3.64s/it] 27%|██▋       | 2679/9908 [3:23:57<7:25:47,  3.70s/it] 27%|██▋       | 2680/9908 [3:24:00<7:16:14,  3.62s/it] 27%|██▋       | 2681/9908 [3:24:04<7:15:41,  3.62s/it] 27%|██▋       | 2682/9908 [3:24:08<7:21:41,  3.67s/it] 27%|██▋       | 2683/9908 [3:24:11<7:24:24,  3.69s/it] 27%|██▋       | 2684/9908 [3:24:15<7:23:12,  3.68s/it] 27%|██▋       | 2685/9908 [3:24:19<7:20:14,  3.66s/it] 27%|██▋       | 2686/9908 [3:24:22<7:10:34,  3.58s/it] 27%|██▋       | 2687/9908 [3:24:26<7:21:53,  3.67s/it] 27%|██▋       | 2688/9908 [3:24:29<7:12:43,  3.60s/it] 27%|██▋       | 2689/9908 [3:24:34<7:37:18,  3.80s/it] 27%|██▋       | 2690/9908 [3:24:37<7:21:36,  3.67s/it] 27%|██▋       | 2691/9908 [3:24:41<7:14:18,  3.61s/it] 27%|██▋       | 2692/9908 [3:24:44<7:15:35,  3.62s/it] 27%|██▋       | 2693/9908 [3:24:48<7:25:18,  3.70s/it] 27%|██▋       | 2694/9908 [3:24:52<7:37:03,  3.80s/it] 27%|██▋       | 2695/9908 [3:24:56<7:42:43,  3.85s/it] 27%|██▋       | 2696/9908 [3:25:00<7:29:17,  3.74s/it] 27%|██▋       | 2697/9908 [3:25:03<7:31:00,  3.75s/it] 27%|██▋       | 2698/9908 [3:25:07<7:28:49,  3.74s/it] 27%|██▋       | 2699/9908 [3:25:11<7:29:19,  3.74s/it]09/20/2024 05:01:45 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04599591717123985, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.3532137870788574, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.39920973777771}
 27%|██▋       | 2700/9908 [3:25:14<7:27:24,  3.72s/it] 27%|██▋       | 2701/9908 [3:25:18<7:38:38,  3.82s/it] 27%|██▋       | 2702/9908 [3:25:22<7:23:51,  3.70s/it] 27%|██▋       | 2703/9908 [3:25:25<7:15:13,  3.62s/it] 27%|██▋       | 2704/9908 [3:25:29<7:27:55,  3.73s/it] 27%|██▋       | 2705/9908 [3:25:33<7:21:57,  3.68s/it] 27%|██▋       | 2706/9908 [3:25:37<7:27:18,  3.73s/it] 27%|██▋       | 2707/9908 [3:25:41<7:30:16,  3.75s/it] 27%|██▋       | 2708/9908 [3:25:44<7:29:51,  3.75s/it] 27%|██▋       | 2709/9908 [3:25:48<7:20:13,  3.67s/it] 27%|██▋       | 2710/9908 [3:25:51<7:10:56,  3.59s/it] 27%|██▋       | 2711/9908 [3:25:55<7:14:05,  3.62s/it] 27%|██▋       | 2712/9908 [3:25:59<7:16:37,  3.64s/it] 27%|██▋       | 2713/9908 [3:26:02<7:21:29,  3.68s/it] 27%|██▋       | 2714/9908 [3:26:06<7:32:54,  3.78s/it] 27%|██▋       | 2715/9908 [3:26:10<7:40:59,  3.85s/it] 27%|██▋       | 2716/9908 [3:26:14<7:27:06,  3.73s/it] 27%|██▋       | 2717/9908 [3:26:17<7:21:19,  3.68s/it] 27%|██▋       | 2718/9908 [3:26:21<7:26:00,  3.72s/it] 27%|██▋       | 2719/9908 [3:26:25<7:31:05,  3.76s/it] 27%|██▋       | 2720/9908 [3:26:29<7:33:21,  3.78s/it] 27%|██▋       | 2721/9908 [3:26:33<7:34:30,  3.79s/it] 27%|██▋       | 2722/9908 [3:26:36<7:30:51,  3.76s/it] 27%|██▋       | 2723/9908 [3:26:40<7:27:19,  3.74s/it] 27%|██▋       | 2724/9908 [3:26:44<7:31:00,  3.77s/it] 28%|██▊       | 2725/9908 [3:26:47<7:22:56,  3.70s/it] 28%|██▊       | 2726/9908 [3:26:51<7:22:58,  3.70s/it] 28%|██▊       | 2727/9908 [3:26:55<7:17:41,  3.66s/it] 28%|██▊       | 2728/9908 [3:26:58<7:18:49,  3.67s/it] 28%|██▊       | 2729/9908 [3:27:02<7:16:37,  3.65s/it] 28%|██▊       | 2730/9908 [3:27:06<7:17:32,  3.66s/it] 28%|██▊       | 2731/9908 [3:27:09<7:15:12,  3.64s/it] 28%|██▊       | 2732/9908 [3:27:13<7:13:05,  3.62s/it] 28%|██▊       | 2733/9908 [3:27:17<7:18:27,  3.67s/it] 28%|██▊       | 2734/9908 [3:27:21<7:29:47,  3.76s/it] 28%|██▊       | 2735/9908 [3:27:25<7:39:49,  3.85s/it] 28%|██▊       | 2736/9908 [3:27:28<7:39:40,  3.85s/it] 28%|██▊       | 2737/9908 [3:27:32<7:30:05,  3.77s/it] 28%|██▊       | 2738/9908 [3:27:36<7:31:26,  3.78s/it] 28%|██▊       | 2739/9908 [3:27:39<7:19:23,  3.68s/it] 28%|██▊       | 2740/9908 [3:27:43<7:16:22,  3.65s/it] 28%|██▊       | 2741/9908 [3:27:47<7:29:34,  3.76s/it] 28%|██▊       | 2742/9908 [3:27:51<7:29:37,  3.76s/it] 28%|██▊       | 2743/9908 [3:27:54<7:30:07,  3.77s/it] 28%|██▊       | 2744/9908 [3:27:58<7:24:51,  3.73s/it] 28%|██▊       | 2745/9908 [3:28:02<7:36:58,  3.83s/it] 28%|██▊       | 2746/9908 [3:28:06<7:32:07,  3.79s/it] 28%|██▊       | 2747/9908 [3:28:10<7:34:29,  3.81s/it] 28%|██▊       | 2748/9908 [3:28:14<7:48:48,  3.93s/it] 28%|██▊       | 2749/9908 [3:28:17<7:29:30,  3.77s/it]09/20/2024 05:04:52 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.028883814811706543, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.1635122299194336, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.1923960447311401}
 28%|██▊       | 2750/9908 [3:28:21<7:26:04,  3.74s/it] 28%|██▊       | 2751/9908 [3:28:24<7:12:12,  3.62s/it] 28%|██▊       | 2752/9908 [3:28:28<7:18:53,  3.68s/it] 28%|██▊       | 2753/9908 [3:28:32<7:22:08,  3.71s/it] 28%|██▊       | 2754/9908 [3:28:35<7:13:30,  3.64s/it] 28%|██▊       | 2755/9908 [3:28:39<7:19:31,  3.69s/it] 28%|██▊       | 2756/9908 [3:28:43<7:25:31,  3.74s/it] 28%|██▊       | 2757/9908 [3:28:47<7:34:31,  3.81s/it] 28%|██▊       | 2758/9908 [3:28:51<7:29:20,  3.77s/it] 28%|██▊       | 2759/9908 [3:28:54<7:19:34,  3.69s/it] 28%|██▊       | 2760/9908 [3:28:58<7:23:09,  3.72s/it] 28%|██▊       | 2761/9908 [3:29:02<7:34:33,  3.82s/it] 28%|██▊       | 2762/9908 [3:29:06<7:28:09,  3.76s/it] 28%|██▊       | 2763/9908 [3:29:09<7:20:06,  3.70s/it] 28%|██▊       | 2764/9908 [3:29:13<7:23:41,  3.73s/it] 28%|██▊       | 2765/9908 [3:29:17<7:25:51,  3.75s/it] 28%|██▊       | 2766/9908 [3:29:20<7:15:29,  3.66s/it] 28%|██▊       | 2767/9908 [3:29:24<7:22:08,  3.72s/it] 28%|██▊       | 2768/9908 [3:29:28<7:24:40,  3.74s/it] 28%|██▊       | 2769/9908 [3:29:32<7:22:14,  3.72s/it] 28%|██▊       | 2770/9908 [3:29:35<7:15:03,  3.66s/it] 28%|██▊       | 2771/9908 [3:29:39<7:18:21,  3.69s/it] 28%|██▊       | 2772/9908 [3:29:43<7:22:33,  3.72s/it] 28%|██▊       | 2773/9908 [3:29:46<7:25:04,  3.74s/it] 28%|██▊       | 2774/9908 [3:29:50<7:23:47,  3.73s/it] 28%|██▊       | 2775/9908 [3:29:54<7:27:10,  3.76s/it] 28%|██▊       | 2776/9908 [3:29:58<7:34:30,  3.82s/it] 28%|██▊       | 2777/9908 [3:30:02<7:28:44,  3.78s/it] 28%|██▊       | 2778/9908 [3:30:05<7:17:27,  3.68s/it] 28%|██▊       | 2779/9908 [3:30:09<7:11:33,  3.63s/it] 28%|██▊       | 2780/9908 [3:30:13<7:23:58,  3.74s/it] 28%|██▊       | 2781/9908 [3:30:16<7:24:47,  3.74s/it] 28%|██▊       | 2782/9908 [3:30:20<7:21:04,  3.71s/it] 28%|██▊       | 2783/9908 [3:30:24<7:31:00,  3.80s/it] 28%|██▊       | 2784/9908 [3:30:27<7:19:52,  3.70s/it] 28%|██▊       | 2785/9908 [3:30:31<7:14:41,  3.66s/it] 28%|██▊       | 2786/9908 [3:30:34<7:06:38,  3.59s/it] 28%|██▊       | 2787/9908 [3:30:38<7:06:48,  3.60s/it] 28%|██▊       | 2788/9908 [3:30:42<7:12:18,  3.64s/it] 28%|██▊       | 2789/9908 [3:30:45<7:04:50,  3.58s/it] 28%|██▊       | 2790/9908 [3:30:49<7:17:05,  3.68s/it] 28%|██▊       | 2791/9908 [3:30:53<7:14:19,  3.66s/it] 28%|██▊       | 2792/9908 [3:30:57<7:29:59,  3.79s/it] 28%|██▊       | 2793/9908 [3:31:01<7:38:20,  3.87s/it] 28%|██▊       | 2794/9908 [3:31:05<7:30:15,  3.80s/it] 28%|██▊       | 2795/9908 [3:31:08<7:21:24,  3.72s/it] 28%|██▊       | 2796/9908 [3:31:12<7:16:25,  3.68s/it] 28%|██▊       | 2797/9908 [3:31:15<7:09:59,  3.63s/it] 28%|██▊       | 2798/9908 [3:31:19<7:19:27,  3.71s/it] 28%|██▊       | 2799/9908 [3:31:23<7:16:16,  3.68s/it]09/20/2024 05:07:57 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.02028637006878853, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.448061466217041, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.4683477878570557}
 28%|██▊       | 2800/9908 [3:31:26<7:09:02,  3.62s/it] 28%|██▊       | 2801/9908 [3:31:30<7:05:03,  3.59s/it] 28%|██▊       | 2802/9908 [3:31:34<7:16:15,  3.68s/it] 28%|██▊       | 2803/9908 [3:31:38<7:26:32,  3.77s/it] 28%|██▊       | 2804/9908 [3:31:41<7:26:06,  3.77s/it] 28%|██▊       | 2805/9908 [3:31:45<7:22:48,  3.74s/it] 28%|██▊       | 2806/9908 [3:31:48<7:11:31,  3.65s/it] 28%|██▊       | 2807/9908 [3:31:52<7:11:53,  3.65s/it] 28%|██▊       | 2808/9908 [3:31:56<7:23:44,  3.75s/it] 28%|██▊       | 2809/9908 [3:32:00<7:22:24,  3.74s/it] 28%|██▊       | 2810/9908 [3:32:03<7:14:35,  3.67s/it] 28%|██▊       | 2811/9908 [3:32:07<7:17:16,  3.70s/it] 28%|██▊       | 2812/9908 [3:32:11<7:13:08,  3.66s/it] 28%|██▊       | 2813/9908 [3:32:14<7:15:10,  3.68s/it] 28%|██▊       | 2814/9908 [3:32:18<7:21:35,  3.73s/it] 28%|██▊       | 2815/9908 [3:32:22<7:14:29,  3.68s/it] 28%|██▊       | 2816/9908 [3:32:26<7:17:02,  3.70s/it] 28%|██▊       | 2817/9908 [3:32:29<7:25:43,  3.77s/it] 28%|██▊       | 2818/9908 [3:32:33<7:26:41,  3.78s/it] 28%|██▊       | 2819/9908 [3:32:37<7:27:43,  3.79s/it] 28%|██▊       | 2820/9908 [3:32:41<7:28:08,  3.79s/it] 28%|██▊       | 2821/9908 [3:32:44<7:20:38,  3.73s/it] 28%|██▊       | 2822/9908 [3:32:48<7:20:29,  3.73s/it] 28%|██▊       | 2823/9908 [3:32:52<7:34:29,  3.85s/it] 29%|██▊       | 2824/9908 [3:32:56<7:31:54,  3.83s/it] 29%|██▊       | 2825/9908 [3:32:59<7:15:53,  3.69s/it] 29%|██▊       | 2826/9908 [3:33:03<7:21:52,  3.74s/it] 29%|██▊       | 2827/9908 [3:33:07<7:21:10,  3.74s/it] 29%|██▊       | 2828/9908 [3:33:11<7:15:30,  3.69s/it] 29%|██▊       | 2829/9908 [3:33:14<7:18:19,  3.72s/it] 29%|██▊       | 2830/9908 [3:33:18<7:03:52,  3.59s/it] 29%|██▊       | 2831/9908 [3:33:22<7:15:49,  3.69s/it] 29%|██▊       | 2832/9908 [3:33:26<7:23:28,  3.76s/it] 29%|██▊       | 2833/9908 [3:33:29<7:10:30,  3.65s/it] 29%|██▊       | 2834/9908 [3:33:33<7:14:52,  3.69s/it] 29%|██▊       | 2835/9908 [3:33:36<7:09:05,  3.64s/it] 29%|██▊       | 2836/9908 [3:33:40<7:16:22,  3.70s/it] 29%|██▊       | 2837/9908 [3:33:44<7:28:09,  3.80s/it] 29%|██▊       | 2838/9908 [3:33:48<7:19:44,  3.73s/it] 29%|██▊       | 2839/9908 [3:33:51<7:15:41,  3.70s/it] 29%|██▊       | 2840/9908 [3:33:55<7:19:28,  3.73s/it] 29%|██▊       | 2841/9908 [3:33:59<7:24:44,  3.78s/it] 29%|██▊       | 2842/9908 [3:34:03<7:18:10,  3.72s/it] 29%|██▊       | 2843/9908 [3:34:06<7:07:40,  3.63s/it] 29%|██▊       | 2844/9908 [3:34:09<7:00:50,  3.57s/it] 29%|██▊       | 2845/9908 [3:34:13<7:09:19,  3.65s/it] 29%|██▊       | 2846/9908 [3:34:17<7:21:10,  3.75s/it] 29%|██▊       | 2847/9908 [3:34:21<7:27:10,  3.80s/it] 29%|██▊       | 2848/9908 [3:34:25<7:27:07,  3.80s/it] 29%|██▉       | 2849/9908 [3:34:29<7:31:20,  3.84s/it]09/20/2024 05:11:03 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.023847831413149834, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.483274221420288, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.5071220397949219}
 29%|██▉       | 2850/9908 [3:34:32<7:21:24,  3.75s/it] 29%|██▉       | 2851/9908 [3:34:36<7:20:25,  3.74s/it] 29%|██▉       | 2852/9908 [3:34:40<7:28:28,  3.81s/it] 29%|██▉       | 2853/9908 [3:34:44<7:24:56,  3.78s/it] 29%|██▉       | 2854/9908 [3:34:47<7:17:28,  3.72s/it] 29%|██▉       | 2855/9908 [3:34:51<7:09:42,  3.66s/it] 29%|██▉       | 2856/9908 [3:34:54<6:59:49,  3.57s/it] 29%|██▉       | 2857/9908 [3:34:58<6:52:40,  3.51s/it] 29%|██▉       | 2858/9908 [3:35:01<6:54:24,  3.53s/it] 29%|██▉       | 2859/9908 [3:35:06<7:20:34,  3.75s/it] 29%|██▉       | 2860/9908 [3:35:10<7:30:48,  3.84s/it] 29%|██▉       | 2861/9908 [3:35:13<7:24:40,  3.79s/it] 29%|██▉       | 2862/9908 [3:35:17<7:20:20,  3.75s/it] 29%|██▉       | 2863/9908 [3:35:21<7:20:23,  3.75s/it] 29%|██▉       | 2864/9908 [3:35:25<7:25:32,  3.80s/it] 29%|██▉       | 2865/9908 [3:35:29<7:31:43,  3.85s/it] 29%|██▉       | 2866/9908 [3:35:32<7:18:38,  3.74s/it] 29%|██▉       | 2867/9908 [3:35:36<7:13:01,  3.69s/it] 29%|██▉       | 2868/9908 [3:35:39<7:15:36,  3.71s/it] 29%|██▉       | 2869/9908 [3:35:43<7:12:58,  3.69s/it] 29%|██▉       | 2870/9908 [3:35:47<7:21:40,  3.77s/it] 29%|██▉       | 2871/9908 [3:35:51<7:20:05,  3.75s/it] 29%|██▉       | 2872/9908 [3:35:54<7:15:00,  3.71s/it] 29%|██▉       | 2873/9908 [3:35:58<7:04:43,  3.62s/it] 29%|██▉       | 2874/9908 [3:36:01<7:03:24,  3.61s/it] 29%|██▉       | 2875/9908 [3:36:05<7:10:02,  3.67s/it] 29%|██▉       | 2876/9908 [3:36:09<7:08:07,  3.65s/it] 29%|██▉       | 2877/9908 [3:36:12<7:09:11,  3.66s/it] 29%|██▉       | 2878/9908 [3:36:16<7:05:30,  3.63s/it] 29%|██▉       | 2879/9908 [3:36:20<7:02:15,  3.60s/it] 29%|██▉       | 2880/9908 [3:36:23<7:13:46,  3.70s/it] 29%|██▉       | 2881/9908 [3:36:27<7:13:41,  3.70s/it] 29%|██▉       | 2882/9908 [3:36:31<7:20:02,  3.76s/it] 29%|██▉       | 2883/9908 [3:36:34<7:05:25,  3.63s/it] 29%|██▉       | 2884/9908 [3:36:38<7:09:42,  3.67s/it] 29%|██▉       | 2885/9908 [3:36:42<7:17:05,  3.73s/it] 29%|██▉       | 2886/9908 [3:36:45<7:07:51,  3.66s/it] 29%|██▉       | 2887/9908 [3:36:49<7:07:01,  3.65s/it] 29%|██▉       | 2888/9908 [3:36:53<7:08:57,  3.67s/it] 29%|██▉       | 2889/9908 [3:36:57<7:09:38,  3.67s/it] 29%|██▉       | 2890/9908 [3:37:00<7:12:04,  3.69s/it] 29%|██▉       | 2891/9908 [3:37:04<7:11:20,  3.69s/it] 29%|██▉       | 2892/9908 [3:37:08<7:33:03,  3.87s/it] 29%|██▉       | 2893/9908 [3:37:12<7:19:16,  3.76s/it] 29%|██▉       | 2894/9908 [3:37:16<7:25:21,  3.81s/it] 29%|██▉       | 2895/9908 [3:37:20<7:32:52,  3.87s/it] 29%|██▉       | 2896/9908 [3:37:24<7:32:57,  3.88s/it] 29%|██▉       | 2897/9908 [3:37:27<7:22:24,  3.79s/it] 29%|██▉       | 2898/9908 [3:37:31<7:28:04,  3.84s/it] 29%|██▉       | 2899/9908 [3:37:35<7:14:20,  3.72s/it]09/20/2024 05:14:09 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.030789706856012344, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.3318876028060913, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.3626773357391357}
 29%|██▉       | 2900/9908 [3:37:38<7:09:57,  3.68s/it] 29%|██▉       | 2901/9908 [3:37:41<6:54:49,  3.55s/it] 29%|██▉       | 2902/9908 [3:37:45<7:06:34,  3.65s/it] 29%|██▉       | 2903/9908 [3:37:49<7:15:37,  3.73s/it] 29%|██▉       | 2904/9908 [3:37:53<7:06:38,  3.65s/it] 29%|██▉       | 2905/9908 [3:37:56<7:12:08,  3.70s/it] 29%|██▉       | 2906/9908 [3:38:00<7:13:46,  3.72s/it] 29%|██▉       | 2907/9908 [3:38:04<7:18:34,  3.76s/it] 29%|██▉       | 2908/9908 [3:38:08<7:22:45,  3.80s/it] 29%|██▉       | 2909/9908 [3:38:12<7:21:15,  3.78s/it] 29%|██▉       | 2910/9908 [3:38:16<7:24:39,  3.81s/it] 29%|██▉       | 2911/9908 [3:38:19<7:25:28,  3.82s/it] 29%|██▉       | 2912/9908 [3:38:23<7:18:17,  3.76s/it] 29%|██▉       | 2913/9908 [3:38:27<7:19:50,  3.77s/it] 29%|██▉       | 2914/9908 [3:38:30<7:06:26,  3.66s/it] 29%|██▉       | 2915/9908 [3:38:34<7:20:15,  3.78s/it] 29%|██▉       | 2916/9908 [3:38:38<7:22:26,  3.80s/it] 29%|██▉       | 2917/9908 [3:38:41<7:04:33,  3.64s/it] 29%|██▉       | 2918/9908 [3:38:45<7:01:11,  3.62s/it] 29%|██▉       | 2919/9908 [3:38:49<7:11:49,  3.71s/it] 29%|██▉       | 2920/9908 [3:38:53<7:13:23,  3.72s/it] 29%|██▉       | 2921/9908 [3:38:56<7:04:31,  3.65s/it] 29%|██▉       | 2922/9908 [3:39:00<7:01:15,  3.62s/it] 30%|██▉       | 2923/9908 [3:39:03<7:03:51,  3.64s/it] 30%|██▉       | 2924/9908 [3:39:07<7:06:53,  3.67s/it] 30%|██▉       | 2925/9908 [3:39:11<7:05:04,  3.65s/it] 30%|██▉       | 2926/9908 [3:39:14<7:06:15,  3.66s/it] 30%|██▉       | 2927/9908 [3:39:18<7:10:54,  3.70s/it] 30%|██▉       | 2928/9908 [3:39:22<7:11:35,  3.71s/it] 30%|██▉       | 2929/9908 [3:39:26<7:08:17,  3.68s/it] 30%|██▉       | 2930/9908 [3:39:29<7:08:50,  3.69s/it] 30%|██▉       | 2931/9908 [3:39:33<7:12:29,  3.72s/it] 30%|██▉       | 2932/9908 [3:39:37<7:14:18,  3.74s/it] 30%|██▉       | 2933/9908 [3:39:41<7:16:35,  3.76s/it] 30%|██▉       | 2934/9908 [3:39:44<7:11:07,  3.71s/it] 30%|██▉       | 2935/9908 [3:39:48<7:14:38,  3.74s/it] 30%|██▉       | 2936/9908 [3:39:52<7:20:51,  3.79s/it] 30%|██▉       | 2937/9908 [3:39:56<7:13:30,  3.73s/it] 30%|██▉       | 2938/9908 [3:39:59<7:18:12,  3.77s/it] 30%|██▉       | 2939/9908 [3:40:03<7:12:31,  3.72s/it] 30%|██▉       | 2940/9908 [3:40:07<7:16:13,  3.76s/it] 30%|██▉       | 2941/9908 [3:40:11<7:26:48,  3.85s/it] 30%|██▉       | 2942/9908 [3:40:15<7:23:26,  3.82s/it] 30%|██▉       | 2943/9908 [3:40:18<7:13:41,  3.74s/it] 30%|██▉       | 2944/9908 [3:40:22<7:12:53,  3.73s/it] 30%|██▉       | 2945/9908 [3:40:26<7:21:33,  3.80s/it] 30%|██▉       | 2946/9908 [3:40:29<7:09:13,  3.70s/it] 30%|██▉       | 2947/9908 [3:40:33<7:14:41,  3.75s/it] 30%|██▉       | 2948/9908 [3:40:37<7:18:50,  3.78s/it] 30%|██▉       | 2949/9908 [3:40:41<7:15:09,  3.75s/it]09/20/2024 05:17:15 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.026363933458924294, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2808696031570435, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.3072335720062256}
 30%|██▉       | 2950/9908 [3:40:45<7:17:32,  3.77s/it] 30%|██▉       | 2951/9908 [3:40:48<7:00:58,  3.63s/it] 30%|██▉       | 2952/9908 [3:40:52<7:10:32,  3.71s/it] 30%|██▉       | 2953/9908 [3:40:56<7:19:30,  3.79s/it] 30%|██▉       | 2954/9908 [3:41:00<7:28:53,  3.87s/it] 30%|██▉       | 2955/9908 [3:41:04<7:23:54,  3.83s/it] 30%|██▉       | 2956/9908 [3:41:07<7:07:42,  3.69s/it] 30%|██▉       | 2957/9908 [3:41:11<7:08:10,  3.70s/it] 30%|██▉       | 2958/9908 [3:41:14<7:05:00,  3.67s/it] 30%|██▉       | 2959/9908 [3:41:18<6:54:21,  3.58s/it] 30%|██▉       | 2960/9908 [3:41:22<7:19:08,  3.79s/it] 30%|██▉       | 2961/9908 [3:41:26<7:14:25,  3.75s/it] 30%|██▉       | 2962/9908 [3:41:29<7:17:11,  3.78s/it] 30%|██▉       | 2963/9908 [3:41:33<7:14:44,  3.76s/it] 30%|██▉       | 2964/9908 [3:41:37<7:11:26,  3.73s/it] 30%|██▉       | 2965/9908 [3:41:40<7:04:36,  3.67s/it] 30%|██▉       | 2966/9908 [3:41:44<7:00:50,  3.64s/it] 30%|██▉       | 2967/9908 [3:41:48<7:11:29,  3.73s/it] 30%|██▉       | 2968/9908 [3:41:52<7:14:22,  3.76s/it] 30%|██▉       | 2969/9908 [3:41:55<7:16:30,  3.77s/it] 30%|██▉       | 2970/9908 [3:41:59<7:06:53,  3.69s/it] 30%|██▉       | 2971/9908 [3:42:03<7:09:43,  3.72s/it] 30%|██▉       | 2972/9908 [3:42:06<7:07:41,  3.70s/it] 30%|███       | 2973/9908 [3:42:10<7:17:41,  3.79s/it] 30%|███       | 2974/9908 [3:42:14<7:14:11,  3.76s/it] 30%|███       | 2975/9908 [3:42:18<7:07:53,  3.70s/it] 30%|███       | 2976/9908 [3:42:21<7:11:04,  3.73s/it] 30%|███       | 2977/9908 [3:42:25<7:09:48,  3.72s/it] 30%|███       | 2978/9908 [3:42:29<7:11:34,  3.74s/it] 30%|███       | 2979/9908 [3:42:33<7:14:19,  3.76s/it] 30%|███       | 2980/9908 [3:42:36<7:01:36,  3.65s/it] 30%|███       | 2981/9908 [3:42:40<7:09:00,  3.72s/it] 30%|███       | 2982/9908 [3:42:44<7:12:01,  3.74s/it] 30%|███       | 2983/9908 [3:42:48<7:26:54,  3.87s/it] 30%|███       | 2984/9908 [3:42:52<7:28:41,  3.89s/it] 30%|███       | 2985/9908 [3:42:55<7:13:52,  3.76s/it] 30%|███       | 2986/9908 [3:42:59<7:03:33,  3.67s/it] 30%|███       | 2987/9908 [3:43:02<7:02:23,  3.66s/it] 30%|███       | 2988/9908 [3:43:06<6:57:53,  3.62s/it] 30%|███       | 2989/9908 [3:43:10<6:59:50,  3.64s/it] 30%|███       | 2990/9908 [3:43:13<7:05:58,  3.69s/it] 30%|███       | 2991/9908 [3:43:17<7:07:24,  3.71s/it] 30%|███       | 2992/9908 [3:43:21<7:03:47,  3.68s/it] 30%|███       | 2993/9908 [3:43:25<7:08:38,  3.72s/it] 30%|███       | 2994/9908 [3:43:28<7:03:23,  3.67s/it] 30%|███       | 2995/9908 [3:43:32<7:01:53,  3.66s/it] 30%|███       | 2996/9908 [3:43:36<7:14:38,  3.77s/it] 30%|███       | 2997/9908 [3:43:39<6:58:14,  3.63s/it] 30%|███       | 2998/9908 [3:43:43<7:16:14,  3.79s/it] 30%|███       | 2999/9908 [3:43:47<7:09:56,  3.73s/it]09/20/2024 05:20:20 - INFO - __main__ -   evaluate on ret%tvas--msrvtt_ret task
09/20/2024 05:20:20 - INFO - __main__ -   start running ret%tvas validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:01<05:23,  1.47s/it][A
  1%|          | 2/221 [00:01<02:45,  1.32it/s][A
  1%|▏         | 3/221 [00:02<03:12,  1.13it/s][A
  2%|▏         | 4/221 [00:03<02:17,  1.58it/s][A
  3%|▎         | 6/221 [00:03<01:12,  2.96it/s][A
  3%|▎         | 7/221 [00:03<01:04,  3.29it/s][A
  4%|▎         | 8/221 [00:03<01:07,  3.14it/s][A
  4%|▍         | 9/221 [00:04<01:08,  3.11it/s][A
  5%|▍         | 10/221 [00:04<01:00,  3.48it/s][A
  5%|▌         | 12/221 [00:05<01:38,  2.13it/s][A
  6%|▌         | 13/221 [00:05<01:21,  2.54it/s][A
  7%|▋         | 15/221 [00:06<01:05,  3.16it/s][A
  7%|▋         | 16/221 [00:06<01:18,  2.60it/s][A
  8%|▊         | 17/221 [00:07<01:42,  1.99it/s][A
  8%|▊         | 18/221 [00:08<01:47,  1.89it/s][A
  9%|▊         | 19/221 [00:08<01:55,  1.75it/s][A
 10%|▉         | 21/221 [00:09<01:22,  2.42it/s][A
 10%|▉         | 22/221 [00:09<01:30,  2.20it/s][A
 11%|█         | 24/221 [00:10<01:11,  2.76it/s][A
 11%|█▏        | 25/221 [00:10<01:06,  2.94it/s][A
 12%|█▏        | 26/221 [00:11<01:04,  3.00it/s][A
 13%|█▎        | 28/221 [00:11<01:01,  3.16it/s][A
 13%|█▎        | 29/221 [00:11<01:00,  3.17it/s][A
 14%|█▎        | 30/221 [00:12<01:13,  2.61it/s][A
 14%|█▍        | 31/221 [00:13<01:21,  2.33it/s][A
 15%|█▍        | 33/221 [00:13<01:05,  2.87it/s][A
 16%|█▌        | 35/221 [00:13<00:50,  3.66it/s][A
 16%|█▋        | 36/221 [00:14<00:49,  3.71it/s][A
 17%|█▋        | 37/221 [00:14<01:11,  2.59it/s][A
 17%|█▋        | 38/221 [00:15<01:32,  1.97it/s][A
 18%|█▊        | 39/221 [00:15<01:19,  2.28it/s][A
 18%|█▊        | 40/221 [00:16<01:19,  2.26it/s][A
 19%|█▊        | 41/221 [00:16<01:04,  2.78it/s][A
 19%|█▉        | 42/221 [00:16<00:55,  3.20it/s][A
 19%|█▉        | 43/221 [00:16<00:45,  3.93it/s][A
 20%|█▉        | 44/221 [00:17<00:38,  4.59it/s][A
 20%|██        | 45/221 [00:25<07:24,  2.52s/it][A
 21%|██        | 46/221 [00:25<05:32,  1.90s/it][A
 21%|██▏       | 47/221 [00:26<04:26,  1.53s/it][A
 22%|██▏       | 48/221 [00:26<03:11,  1.11s/it][A
 22%|██▏       | 49/221 [00:26<02:24,  1.19it/s][A
 23%|██▎       | 50/221 [00:26<01:58,  1.44it/s][A
 23%|██▎       | 51/221 [00:27<01:32,  1.83it/s][A
 24%|██▍       | 53/221 [00:27<00:59,  2.80it/s][A
 24%|██▍       | 54/221 [00:28<01:15,  2.22it/s][A
 25%|██▍       | 55/221 [00:31<03:21,  1.21s/it][A
 25%|██▌       | 56/221 [00:31<02:32,  1.08it/s][A
 26%|██▌       | 57/221 [00:31<02:00,  1.36it/s][A
 27%|██▋       | 59/221 [00:31<01:13,  2.22it/s][A
 27%|██▋       | 60/221 [00:32<01:25,  1.89it/s][A
 28%|██▊       | 61/221 [00:32<01:09,  2.30it/s][A
 28%|██▊       | 62/221 [00:33<01:05,  2.41it/s][A
 29%|██▊       | 63/221 [00:33<00:57,  2.75it/s][A
 29%|██▉       | 64/221 [00:34<01:24,  1.85it/s][A
 30%|██▉       | 66/221 [00:34<01:03,  2.45it/s][A
 30%|███       | 67/221 [00:35<00:56,  2.73it/s][A
 31%|███       | 68/221 [00:35<00:47,  3.25it/s][A
 31%|███       | 69/221 [00:36<01:11,  2.11it/s][A
 32%|███▏      | 70/221 [00:36<00:57,  2.65it/s][A
 32%|███▏      | 71/221 [00:36<00:54,  2.75it/s][A
 33%|███▎      | 72/221 [00:37<00:56,  2.65it/s][A
 33%|███▎      | 73/221 [00:37<01:09,  2.14it/s][A
 33%|███▎      | 74/221 [00:37<00:54,  2.71it/s][A
 34%|███▍      | 75/221 [00:38<00:55,  2.65it/s][A
 34%|███▍      | 76/221 [00:38<00:49,  2.94it/s][A
 35%|███▍      | 77/221 [00:40<01:59,  1.20it/s][A
 35%|███▌      | 78/221 [00:40<01:27,  1.63it/s][A
 36%|███▌      | 79/221 [00:41<01:38,  1.45it/s][A
 37%|███▋      | 81/221 [00:42<01:17,  1.82it/s][A
 37%|███▋      | 82/221 [00:45<02:51,  1.23s/it][A
 38%|███▊      | 83/221 [00:46<02:29,  1.08s/it][A
 38%|███▊      | 84/221 [00:46<01:52,  1.22it/s][A
 39%|███▉      | 86/221 [00:47<01:20,  1.69it/s][A
 39%|███▉      | 87/221 [00:47<01:20,  1.66it/s][A
 40%|███▉      | 88/221 [00:47<01:11,  1.87it/s][A
 40%|████      | 89/221 [00:48<01:11,  1.85it/s][A
 41%|████      | 90/221 [00:48<01:02,  2.09it/s][A
 42%|████▏     | 92/221 [00:49<00:43,  2.98it/s][A
 42%|████▏     | 93/221 [00:49<00:45,  2.82it/s][A
 43%|████▎     | 94/221 [00:50<01:01,  2.08it/s][A
 43%|████▎     | 95/221 [00:50<00:55,  2.26it/s][A
 43%|████▎     | 96/221 [00:51<01:17,  1.61it/s][A
 44%|████▍     | 97/221 [00:52<01:01,  2.02it/s][A
 44%|████▍     | 98/221 [00:53<01:17,  1.58it/s][A
 45%|████▍     | 99/221 [00:53<01:01,  1.99it/s][A
 45%|████▌     | 100/221 [00:54<01:12,  1.67it/s][A
 46%|████▌     | 101/221 [00:54<00:55,  2.17it/s][A
 46%|████▌     | 102/221 [00:55<01:43,  1.16it/s][A
 47%|████▋     | 103/221 [00:56<01:15,  1.57it/s][A
 47%|████▋     | 104/221 [00:56<01:06,  1.75it/s][A
 48%|████▊     | 105/221 [00:57<01:05,  1.77it/s][A
 48%|████▊     | 106/221 [00:58<01:38,  1.17it/s][A
 48%|████▊     | 107/221 [00:58<01:20,  1.42it/s][A
 49%|████▉     | 108/221 [00:59<01:04,  1.76it/s][A
 49%|████▉     | 109/221 [00:59<00:52,  2.13it/s][A
 50%|█████     | 111/221 [00:59<00:40,  2.74it/s][A
 51%|█████     | 112/221 [01:00<00:39,  2.73it/s][A
 51%|█████     | 113/221 [01:00<00:34,  3.13it/s][A
 52%|█████▏    | 114/221 [01:00<00:27,  3.83it/s][A
 52%|█████▏    | 115/221 [01:01<00:34,  3.07it/s][A
 52%|█████▏    | 116/221 [01:01<00:42,  2.46it/s][A
 53%|█████▎    | 117/221 [01:02<00:42,  2.44it/s][A
 53%|█████▎    | 118/221 [01:02<00:40,  2.56it/s][A
 54%|█████▍    | 119/221 [01:02<00:38,  2.67it/s][A
 54%|█████▍    | 120/221 [01:02<00:31,  3.19it/s][A
 55%|█████▍    | 121/221 [01:03<00:33,  3.02it/s][A
 55%|█████▌    | 122/221 [01:03<00:36,  2.73it/s][A
 56%|█████▌    | 123/221 [01:05<01:06,  1.48it/s][A
 56%|█████▌    | 124/221 [01:05<00:51,  1.87it/s][A
 57%|█████▋    | 125/221 [01:06<01:06,  1.45it/s][A
 57%|█████▋    | 126/221 [01:09<02:14,  1.42s/it][A
 57%|█████▋    | 127/221 [01:10<01:55,  1.23s/it][A
 58%|█████▊    | 128/221 [01:10<01:33,  1.00s/it][A
 58%|█████▊    | 129/221 [01:11<01:15,  1.21it/s][A
 59%|█████▉    | 130/221 [01:11<01:05,  1.38it/s][A
 59%|█████▉    | 131/221 [01:12<01:03,  1.42it/s][A
 60%|█████▉    | 132/221 [01:13<01:19,  1.11it/s][A
 60%|██████    | 133/221 [01:14<01:04,  1.37it/s][A
 61%|██████    | 134/221 [01:16<01:52,  1.29s/it][A
 61%|██████    | 135/221 [01:17<01:42,  1.19s/it][A
 62%|██████▏   | 136/221 [01:17<01:20,  1.06it/s][A
 62%|██████▏   | 137/221 [01:18<01:06,  1.27it/s][A
 62%|██████▏   | 138/221 [01:19<01:02,  1.33it/s][A
 63%|██████▎   | 139/221 [01:19<00:47,  1.73it/s][A
 63%|██████▎   | 140/221 [01:19<00:49,  1.65it/s][A
 64%|██████▍   | 141/221 [01:20<00:44,  1.79it/s][A
 64%|██████▍   | 142/221 [01:20<00:41,  1.93it/s][A
 65%|██████▍   | 143/221 [01:21<00:37,  2.06it/s][A
 65%|██████▌   | 144/221 [01:21<00:30,  2.55it/s][A
 66%|██████▌   | 145/221 [01:21<00:23,  3.27it/s][A
 66%|██████▌   | 146/221 [01:21<00:18,  4.04it/s][A
 67%|██████▋   | 147/221 [01:21<00:15,  4.84it/s][A
 67%|██████▋   | 148/221 [01:22<00:26,  2.80it/s][A
 67%|██████▋   | 149/221 [01:23<00:32,  2.20it/s][A
 68%|██████▊   | 150/221 [01:23<00:33,  2.12it/s][A
 68%|██████▊   | 151/221 [01:23<00:30,  2.28it/s][A
 69%|██████▉   | 152/221 [01:24<00:30,  2.24it/s][A
 69%|██████▉   | 153/221 [01:24<00:23,  2.89it/s][A
 70%|██████▉   | 154/221 [01:25<00:26,  2.53it/s][A
 70%|███████   | 155/221 [01:25<00:26,  2.49it/s][A
 71%|███████   | 156/221 [01:25<00:21,  3.07it/s][A
 71%|███████   | 157/221 [01:30<01:49,  1.72s/it][A
 71%|███████▏  | 158/221 [01:31<01:26,  1.37s/it][A
 72%|███████▏  | 159/221 [01:31<01:01,  1.00it/s][A
 72%|███████▏  | 160/221 [01:31<00:46,  1.32it/s][A
 73%|███████▎  | 162/221 [01:31<00:25,  2.29it/s][A
 74%|███████▍  | 163/221 [01:31<00:23,  2.44it/s][A
 74%|███████▍  | 164/221 [01:32<00:23,  2.40it/s][A
 75%|███████▍  | 165/221 [01:33<00:27,  2.01it/s][A
 75%|███████▌  | 166/221 [01:33<00:28,  1.94it/s][A
 76%|███████▌  | 167/221 [01:33<00:21,  2.50it/s][A
 76%|███████▌  | 168/221 [01:40<02:00,  2.28s/it][A
 76%|███████▋  | 169/221 [01:41<01:29,  1.73s/it][A
 77%|███████▋  | 170/221 [01:41<01:08,  1.34s/it][A
 77%|███████▋  | 171/221 [01:42<00:55,  1.12s/it][A
 78%|███████▊  | 172/221 [01:42<00:42,  1.16it/s][A
 78%|███████▊  | 173/221 [01:42<00:36,  1.31it/s][A
 79%|███████▊  | 174/221 [01:43<00:28,  1.65it/s][A
 79%|███████▉  | 175/221 [01:43<00:22,  2.03it/s][A
 80%|███████▉  | 176/221 [01:43<00:18,  2.40it/s][A
 80%|████████  | 177/221 [01:43<00:16,  2.71it/s][A
 81%|████████  | 178/221 [01:44<00:16,  2.62it/s][A
 81%|████████  | 179/221 [01:44<00:16,  2.57it/s][A
 81%|████████▏ | 180/221 [01:44<00:13,  2.97it/s][A
 82%|████████▏ | 181/221 [01:44<00:11,  3.54it/s][A
 82%|████████▏ | 182/221 [01:45<00:13,  2.81it/s][A
 83%|████████▎ | 183/221 [01:46<00:18,  2.08it/s][A
 83%|████████▎ | 184/221 [01:46<00:16,  2.18it/s][A
 84%|████████▎ | 185/221 [01:46<00:13,  2.71it/s][A
 84%|████████▍ | 186/221 [01:47<00:13,  2.67it/s][A
 85%|████████▍ | 187/221 [01:47<00:11,  2.86it/s][A
 85%|████████▌ | 188/221 [01:47<00:09,  3.53it/s][A
 86%|████████▌ | 189/221 [01:48<00:10,  2.96it/s][A
 86%|████████▌ | 190/221 [01:48<00:11,  2.77it/s][A
 86%|████████▋ | 191/221 [01:48<00:09,  3.27it/s][A
 87%|████████▋ | 192/221 [01:48<00:08,  3.40it/s][A
 88%|████████▊ | 194/221 [01:50<00:13,  1.98it/s][A
 88%|████████▊ | 195/221 [01:50<00:11,  2.26it/s][A
 89%|████████▊ | 196/221 [01:50<00:09,  2.57it/s][A
 89%|████████▉ | 197/221 [01:51<00:08,  2.87it/s][A
 90%|████████▉ | 198/221 [01:51<00:07,  3.01it/s][A
 90%|█████████ | 199/221 [01:51<00:06,  3.44it/s][A
 90%|█████████ | 200/221 [01:52<00:07,  2.85it/s][A
 91%|█████████ | 201/221 [01:52<00:09,  2.08it/s][A
 92%|█████████▏| 203/221 [01:54<00:09,  1.84it/s][A
 92%|█████████▏| 204/221 [01:54<00:08,  2.03it/s][A
 93%|█████████▎| 206/221 [01:54<00:05,  2.84it/s][A
 94%|█████████▎| 207/221 [01:55<00:04,  3.28it/s][A
 94%|█████████▍| 208/221 [01:55<00:04,  3.17it/s][A
 95%|█████████▍| 209/221 [01:55<00:03,  3.74it/s][A
 95%|█████████▌| 211/221 [01:56<00:03,  3.19it/s][A
 96%|█████████▌| 212/221 [01:56<00:02,  3.05it/s][A
 96%|█████████▋| 213/221 [01:56<00:02,  3.66it/s][A
 97%|█████████▋| 214/221 [01:57<00:02,  3.11it/s][A
 97%|█████████▋| 215/221 [01:57<00:01,  3.14it/s][A
 98%|█████████▊| 216/221 [01:58<00:02,  2.41it/s][A
 98%|█████████▊| 217/221 [02:02<00:05,  1.43s/it][A
 99%|█████████▊| 218/221 [02:02<00:03,  1.13s/it][A
 99%|█████████▉| 219/221 [02:02<00:01,  1.07it/s][A
100%|█████████▉| 220/221 [02:04<00:00,  1.01it/s][A
100%|██████████| 221/221 [02:04<00:00,  1.33it/s][A100%|██████████| 221/221 [02:04<00:00,  1.78it/s]

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:00<01:56,  1.89it/s][A
  1%|          | 2/221 [00:01<01:55,  1.89it/s][A
  1%|▏         | 3/221 [00:01<01:55,  1.89it/s][A
  2%|▏         | 4/221 [00:02<01:54,  1.89it/s][A
  2%|▏         | 5/221 [00:02<01:54,  1.89it/s][A
  3%|▎         | 6/221 [00:03<01:53,  1.89it/s][A
  3%|▎         | 7/221 [00:03<01:53,  1.89it/s][A
  4%|▎         | 8/221 [00:04<01:52,  1.89it/s][A
  4%|▍         | 9/221 [00:04<01:52,  1.89it/s][A
  5%|▍         | 10/221 [00:05<01:51,  1.89it/s][A
  5%|▍         | 11/221 [00:05<01:50,  1.89it/s][A
  5%|▌         | 12/221 [00:06<01:50,  1.89it/s][A
  6%|▌         | 13/221 [00:06<01:49,  1.89it/s][A
  6%|▋         | 14/221 [00:07<01:49,  1.89it/s][A
  7%|▋         | 15/221 [00:07<01:48,  1.89it/s][A
  7%|▋         | 16/221 [00:08<01:48,  1.89it/s][A
  8%|▊         | 17/221 [00:08<01:47,  1.89it/s][A
  8%|▊         | 18/221 [00:09<01:47,  1.89it/s][A
  9%|▊         | 19/221 [00:10<01:46,  1.89it/s][A
  9%|▉         | 20/221 [00:10<01:46,  1.89it/s][A
 10%|▉         | 21/221 [00:11<01:45,  1.89it/s][A
 10%|▉         | 22/221 [00:11<01:45,  1.89it/s][A
 10%|█         | 23/221 [00:12<01:44,  1.89it/s][A
 11%|█         | 24/221 [00:12<01:44,  1.89it/s][A
 11%|█▏        | 25/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 26/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 27/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 28/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 29/221 [00:15<01:41,  1.89it/s][A
 14%|█▎        | 30/221 [00:15<01:40,  1.89it/s][A
 14%|█▍        | 31/221 [00:16<01:40,  1.89it/s][A
 14%|█▍        | 32/221 [00:16<01:39,  1.89it/s][A
 15%|█▍        | 33/221 [00:17<01:39,  1.89it/s][A
 15%|█▌        | 34/221 [00:17<01:38,  1.89it/s][A
 16%|█▌        | 35/221 [00:18<01:38,  1.89it/s][A
 16%|█▋        | 36/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 37/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 38/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 39/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 40/221 [00:21<01:35,  1.89it/s][A
 19%|█▊        | 41/221 [00:21<01:35,  1.89it/s][A
 19%|█▉        | 42/221 [00:22<01:34,  1.89it/s][A
 19%|█▉        | 43/221 [00:22<01:34,  1.89it/s][A
 20%|█▉        | 44/221 [00:23<01:33,  1.89it/s][A
 20%|██        | 45/221 [00:23<01:33,  1.89it/s][A
 21%|██        | 46/221 [00:24<01:32,  1.89it/s][A
 21%|██▏       | 47/221 [00:24<01:31,  1.89it/s][A
 22%|██▏       | 48/221 [00:25<01:31,  1.89it/s][A
 22%|██▏       | 49/221 [00:25<01:30,  1.89it/s][A
 23%|██▎       | 50/221 [00:26<01:30,  1.89it/s][A
 23%|██▎       | 51/221 [00:26<01:29,  1.89it/s][A
 24%|██▎       | 52/221 [00:27<01:29,  1.89it/s][A
 24%|██▍       | 53/221 [00:28<01:28,  1.89it/s][A
 24%|██▍       | 54/221 [00:28<01:28,  1.89it/s][A
 25%|██▍       | 55/221 [00:29<01:27,  1.89it/s][A
 25%|██▌       | 56/221 [00:29<01:27,  1.89it/s][A
 26%|██▌       | 57/221 [00:30<01:26,  1.89it/s][A
 26%|██▌       | 58/221 [00:30<01:26,  1.89it/s][A
 27%|██▋       | 59/221 [00:31<01:25,  1.89it/s][A
 27%|██▋       | 60/221 [00:31<01:25,  1.89it/s][A
 28%|██▊       | 61/221 [00:32<01:24,  1.89it/s][A
 28%|██▊       | 62/221 [00:32<01:24,  1.89it/s][A
 29%|██▊       | 63/221 [00:33<01:23,  1.89it/s][A
 29%|██▉       | 64/221 [00:33<01:22,  1.89it/s][A
 29%|██▉       | 65/221 [00:34<01:22,  1.89it/s][A
 30%|██▉       | 66/221 [00:34<01:21,  1.89it/s][A
 30%|███       | 67/221 [00:35<01:21,  1.89it/s][A
 31%|███       | 68/221 [00:35<01:20,  1.89it/s][A
 31%|███       | 69/221 [00:36<01:20,  1.89it/s][A
 32%|███▏      | 70/221 [00:36<01:19,  1.89it/s][A
 32%|███▏      | 71/221 [00:37<01:19,  1.89it/s][A
 33%|███▎      | 72/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 73/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 74/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 75/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 76/221 [00:40<01:16,  1.89it/s][A
 35%|███▍      | 77/221 [00:40<01:16,  1.89it/s][A
 35%|███▌      | 78/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 79/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 80/221 [00:42<01:14,  1.89it/s][A
 37%|███▋      | 81/221 [00:42<01:13,  1.89it/s][A
 37%|███▋      | 82/221 [00:43<01:13,  1.89it/s][A
 38%|███▊      | 83/221 [00:43<01:12,  1.89it/s][A
 38%|███▊      | 84/221 [00:44<01:12,  1.89it/s][A
 38%|███▊      | 85/221 [00:44<01:11,  1.89it/s][A
 39%|███▉      | 86/221 [00:45<01:11,  1.89it/s][A
 39%|███▉      | 87/221 [00:45<01:10,  1.89it/s][A
 40%|███▉      | 88/221 [00:46<01:10,  1.89it/s][A
 40%|████      | 89/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 90/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 91/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 92/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 93/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 94/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 95/221 [00:50<01:06,  1.89it/s][A
 43%|████▎     | 96/221 [00:50<01:06,  1.89it/s][A
 44%|████▍     | 97/221 [00:51<01:05,  1.89it/s][A
 44%|████▍     | 98/221 [00:51<01:05,  1.89it/s][A
 45%|████▍     | 99/221 [00:52<01:04,  1.89it/s][A
 45%|████▌     | 100/221 [00:52<01:03,  1.89it/s][A
 46%|████▌     | 101/221 [00:53<01:03,  1.89it/s][A
 46%|████▌     | 102/221 [00:53<01:02,  1.89it/s][A
 47%|████▋     | 103/221 [00:54<01:02,  1.89it/s][A
 47%|████▋     | 104/221 [00:54<01:01,  1.89it/s][A
 48%|████▊     | 105/221 [00:55<01:01,  1.89it/s][A
 48%|████▊     | 106/221 [00:56<01:00,  1.89it/s][A
 48%|████▊     | 107/221 [00:56<01:00,  1.89it/s][A
 49%|████▉     | 108/221 [00:57<00:59,  1.89it/s][A
 49%|████▉     | 109/221 [00:57<00:59,  1.89it/s][A
 50%|████▉     | 110/221 [00:58<00:58,  1.89it/s][A
 50%|█████     | 111/221 [00:58<00:58,  1.89it/s][A
 51%|█████     | 112/221 [00:59<00:57,  1.89it/s][A
 51%|█████     | 113/221 [00:59<00:57,  1.89it/s][A
 52%|█████▏    | 114/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 115/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 116/221 [01:01<00:55,  1.89it/s][A
 53%|█████▎    | 117/221 [01:01<00:54,  1.89it/s][A
 53%|█████▎    | 118/221 [01:02<00:54,  1.89it/s][A
 54%|█████▍    | 119/221 [01:02<00:53,  1.89it/s][A
 54%|█████▍    | 120/221 [01:03<00:53,  1.89it/s][A
 55%|█████▍    | 121/221 [01:03<00:52,  1.89it/s][A
 55%|█████▌    | 122/221 [01:04<00:52,  1.89it/s][A
 56%|█████▌    | 123/221 [01:05<00:51,  1.89it/s][A
 56%|█████▌    | 124/221 [01:05<00:51,  1.89it/s][A
 57%|█████▋    | 125/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 126/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 127/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 128/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 129/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 130/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 131/221 [01:09<00:47,  1.89it/s][A
 60%|█████▉    | 132/221 [01:09<00:47,  1.89it/s][A
 60%|██████    | 133/221 [01:10<00:46,  1.89it/s][A
 61%|██████    | 134/221 [01:10<00:45,  1.89it/s][A
 61%|██████    | 135/221 [01:11<00:45,  1.89it/s][A
 62%|██████▏   | 136/221 [01:11<00:44,  1.89it/s][A
 62%|██████▏   | 137/221 [01:12<00:44,  1.89it/s][A
 62%|██████▏   | 138/221 [01:12<00:43,  1.89it/s][A
 63%|██████▎   | 139/221 [01:13<00:43,  1.89it/s][A
 63%|██████▎   | 140/221 [01:13<00:42,  1.89it/s][A
 64%|██████▍   | 141/221 [01:14<00:42,  1.89it/s][A
 64%|██████▍   | 142/221 [01:15<00:41,  1.89it/s][A
 65%|██████▍   | 143/221 [01:15<00:41,  1.89it/s][A
 65%|██████▌   | 144/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 145/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 146/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 147/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 148/221 [01:18<00:38,  1.89it/s][A
 67%|██████▋   | 149/221 [01:18<00:38,  1.89it/s][A
 68%|██████▊   | 150/221 [01:19<00:37,  1.89it/s][A
 68%|██████▊   | 151/221 [01:19<00:36,  1.89it/s][A
 69%|██████▉   | 152/221 [01:20<00:36,  1.89it/s][A
 69%|██████▉   | 153/221 [01:20<00:35,  1.89it/s][A
 70%|██████▉   | 154/221 [01:21<00:35,  1.89it/s][A
 70%|███████   | 155/221 [01:21<00:34,  1.89it/s][A
 71%|███████   | 156/221 [01:22<00:34,  1.89it/s][A
 71%|███████   | 157/221 [01:22<00:33,  1.89it/s][A
 71%|███████▏  | 158/221 [01:23<00:33,  1.89it/s][A
 72%|███████▏  | 159/221 [01:24<00:32,  1.89it/s][A
 72%|███████▏  | 160/221 [01:24<00:32,  1.89it/s][A
 73%|███████▎  | 161/221 [01:25<00:31,  1.89it/s][A
 73%|███████▎  | 162/221 [01:25<00:31,  1.89it/s][A
 74%|███████▍  | 163/221 [01:26<00:30,  1.89it/s][A
 74%|███████▍  | 164/221 [01:26<00:30,  1.89it/s][A
 75%|███████▍  | 165/221 [01:27<00:29,  1.89it/s][A
 75%|███████▌  | 166/221 [01:27<00:29,  1.89it/s][A
 76%|███████▌  | 167/221 [01:28<00:28,  1.89it/s][A
 76%|███████▌  | 168/221 [01:28<00:28,  1.89it/s][A
 76%|███████▋  | 169/221 [01:29<00:27,  1.89it/s][A
 77%|███████▋  | 170/221 [01:29<00:26,  1.89it/s][A
 77%|███████▋  | 171/221 [01:30<00:26,  1.89it/s][A
 78%|███████▊  | 172/221 [01:30<00:25,  1.89it/s][A
 78%|███████▊  | 173/221 [01:31<00:25,  1.89it/s][A
 79%|███████▊  | 174/221 [01:31<00:24,  1.89it/s][A
 79%|███████▉  | 175/221 [01:32<00:24,  1.89it/s][A
 80%|███████▉  | 176/221 [01:33<00:23,  1.89it/s][A
 80%|████████  | 177/221 [01:33<00:23,  1.89it/s][A
 81%|████████  | 178/221 [01:34<00:22,  1.89it/s][A
 81%|████████  | 179/221 [01:34<00:22,  1.89it/s][A
 81%|████████▏ | 180/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 181/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 182/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 183/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 184/221 [01:37<00:19,  1.89it/s][A
 84%|████████▎ | 185/221 [01:37<00:19,  1.89it/s][A
 84%|████████▍ | 186/221 [01:38<00:18,  1.89it/s][A
 85%|████████▍ | 187/221 [01:38<00:17,  1.89it/s][A
 85%|████████▌ | 188/221 [01:39<00:17,  1.89it/s][A
 86%|████████▌ | 189/221 [01:39<00:16,  1.89it/s][A
 86%|████████▌ | 190/221 [01:40<00:16,  1.89it/s][A
 86%|████████▋ | 191/221 [01:40<00:15,  1.89it/s][A
 87%|████████▋ | 192/221 [01:41<00:15,  1.89it/s][A
 87%|████████▋ | 193/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 194/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 195/221 [01:43<00:13,  1.89it/s][A
 89%|████████▊ | 196/221 [01:43<00:13,  1.89it/s][A
 89%|████████▉ | 197/221 [01:44<00:12,  1.89it/s][A
 90%|████████▉ | 198/221 [01:44<00:12,  1.89it/s][A
 90%|█████████ | 199/221 [01:45<00:11,  1.89it/s][A
 90%|█████████ | 200/221 [01:45<00:11,  1.89it/s][A
 91%|█████████ | 201/221 [01:46<00:10,  1.89it/s][A
 91%|█████████▏| 202/221 [01:46<00:10,  1.89it/s][A
 92%|█████████▏| 203/221 [01:47<00:09,  1.89it/s][A
 92%|█████████▏| 204/221 [01:47<00:08,  1.89it/s][A
 93%|█████████▎| 205/221 [01:48<00:08,  1.89it/s][A
 93%|█████████▎| 206/221 [01:48<00:07,  1.89it/s][A
 94%|█████████▎| 207/221 [01:49<00:07,  1.89it/s][A
 94%|█████████▍| 208/221 [01:49<00:06,  1.89it/s][A
 95%|█████████▍| 209/221 [01:50<00:06,  1.89it/s][A
 95%|█████████▌| 210/221 [01:50<00:05,  1.89it/s][A
 95%|█████████▌| 211/221 [01:51<00:05,  1.89it/s][A
 96%|█████████▌| 212/221 [01:52<00:04,  1.89it/s][A
 96%|█████████▋| 213/221 [01:52<00:04,  1.89it/s][A
 97%|█████████▋| 214/221 [01:53<00:03,  1.89it/s][A
 97%|█████████▋| 215/221 [01:53<00:03,  1.89it/s][A
 98%|█████████▊| 216/221 [01:54<00:02,  1.89it/s][A
 98%|█████████▊| 217/221 [01:54<00:02,  1.89it/s][A
 99%|█████████▊| 218/221 [01:55<00:01,  1.89it/s][A
 99%|█████████▉| 219/221 [01:55<00:01,  1.89it/s][A
100%|█████████▉| 220/221 [01:56<00:00,  1.89it/s][A
100%|██████████| 221/221 [01:56<00:00,  1.89it/s][A100%|██████████| 221/221 [01:56<00:00,  1.89it/s]
09/20/2024 05:27:06 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_forward=====step 2999--===========

09/20/2024 05:27:06 - INFO - __main__ -   {'area_r1': 45.1, 'area_recall': '45.1/72.9/82.8', 'area_ravg': 66.9}
09/20/2024 05:27:06 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_backard=====step 2999--===========

09/20/2024 05:27:06 - INFO - __main__ -   {'forward_r1': 49.5, 'forward_recall': '49.5/79.2/87.0', 'forward_ravg': 71.9}
09/20/2024 05:27:06 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video=====step 2999--===========

09/20/2024 05:27:06 - INFO - __main__ -   {'area_video_r1': 48.3, 'area_video_recall': '48.3/79.2/87.1', 'area_video_ravg': 71.5}
09/20/2024 05:27:06 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video====history best step: 2499=======

09/20/2024 05:27:06 - INFO - __main__ -   {'area_video_r1': 50.0, 'area_video_recall': '50.0/78.5/87.2', 'area_video_ravg': 71.9}
09/20/2024 05:27:06 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itm_area=====step 2999--===========

09/20/2024 05:27:06 - INFO - __main__ -   {'area_video_r1': 60.1, 'area_video_recall': '60.1/81.9/87.2', 'area_video_ravg': 76.4, 'area_video_back_r1': 59.5, 'area_video_back_recall': '59.5/83.8/91.4', 'area_video_back_ravg': 78.2}
09/20/2024 05:27:06 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itm_area====history best step: 2499=======

09/20/2024 05:27:06 - INFO - __main__ -   {'area_video_r1': 60.4, 'area_video_recall': '60.4/81.2/87.1', 'area_video_ravg': 76.2, 'area_video_back_r1': 59.2, 'area_video_back_recall': '59.2/83.4/89.8', 'area_video_back_ravg': 77.5}
09/20/2024 05:27:06 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas=====step 2999--===========

09/20/2024 05:27:06 - INFO - __main__ -   {'video_r1': 31.9, 'video_recall': '31.9/55.4/68.2', 'video_ravg': 51.8}
09/20/2024 05:27:06 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas====history best step: 1499=======

09/20/2024 05:27:06 - INFO - __main__ -   {'video_r1': 34.7, 'video_recall': '34.7/60.5/72.3', 'video_ravg': 55.8}
09/20/2024 05:27:29 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.01681348867714405, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.1535422801971436, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.1703557968139648}
 30%|███       | 3000/9908 [3:50:58<253:11:16, 131.95s/it] 30%|███       | 3001/9908 [3:51:01<178:59:16, 93.29s/it]  30%|███       | 3002/9908 [3:51:05<127:13:23, 66.32s/it] 30%|███       | 3003/9908 [3:51:08<91:15:42, 47.58s/it]  30%|███       | 3004/9908 [3:51:12<66:07:03, 34.48s/it] 30%|███       | 3005/9908 [3:51:16<48:28:26, 25.28s/it] 30%|███       | 3006/9908 [3:51:19<35:52:32, 18.71s/it] 30%|███       | 3007/9908 [3:51:23<27:15:54, 14.22s/it] 30%|███       | 3008/9908 [3:51:27<21:10:29, 11.05s/it] 30%|███       | 3009/9908 [3:51:30<16:49:21,  8.78s/it] 30%|███       | 3010/9908 [3:51:34<13:56:11,  7.27s/it] 30%|███       | 3011/9908 [3:51:38<12:04:36,  6.30s/it] 30%|███       | 3012/9908 [3:51:41<10:22:31,  5.42s/it] 30%|███       | 3013/9908 [3:51:45<9:24:23,  4.91s/it]  30%|███       | 3014/9908 [3:51:49<8:51:07,  4.62s/it] 30%|███       | 3015/9908 [3:51:53<8:30:32,  4.44s/it] 30%|███       | 3016/9908 [3:51:57<7:59:55,  4.18s/it] 30%|███       | 3017/9908 [3:52:01<7:57:35,  4.16s/it] 30%|███       | 3018/9908 [3:52:05<7:43:28,  4.04s/it] 30%|███       | 3019/9908 [3:52:08<7:36:56,  3.98s/it] 30%|███       | 3020/9908 [3:52:12<7:35:59,  3.97s/it] 30%|███       | 3021/9908 [3:52:16<7:28:29,  3.91s/it] 31%|███       | 3022/9908 [3:52:20<7:36:27,  3.98s/it] 31%|███       | 3023/9908 [3:52:24<7:33:26,  3.95s/it] 31%|███       | 3024/9908 [3:52:27<7:04:05,  3.70s/it] 31%|███       | 3025/9908 [3:52:31<6:58:33,  3.65s/it] 31%|███       | 3026/9908 [3:52:35<6:59:29,  3.66s/it] 31%|███       | 3027/9908 [3:52:38<7:07:32,  3.73s/it] 31%|███       | 3028/9908 [3:52:42<7:05:33,  3.71s/it] 31%|███       | 3029/9908 [3:52:46<7:15:54,  3.80s/it] 31%|███       | 3030/9908 [3:52:50<7:02:28,  3.69s/it] 31%|███       | 3031/9908 [3:52:53<7:09:03,  3.74s/it] 31%|███       | 3032/9908 [3:52:57<6:59:32,  3.66s/it] 31%|███       | 3033/9908 [3:53:01<7:01:13,  3.68s/it] 31%|███       | 3034/9908 [3:53:04<7:02:10,  3.69s/it] 31%|███       | 3035/9908 [3:53:08<7:07:22,  3.73s/it] 31%|███       | 3036/9908 [3:53:12<7:09:07,  3.75s/it] 31%|███       | 3037/9908 [3:53:16<7:07:41,  3.73s/it] 31%|███       | 3038/9908 [3:53:19<6:52:11,  3.60s/it] 31%|███       | 3039/9908 [3:53:23<7:00:53,  3.68s/it] 31%|███       | 3040/9908 [3:53:26<7:03:12,  3.70s/it] 31%|███       | 3041/9908 [3:53:30<6:58:31,  3.66s/it] 31%|███       | 3042/9908 [3:53:34<7:08:26,  3.74s/it] 31%|███       | 3043/9908 [3:53:38<7:01:51,  3.69s/it] 31%|███       | 3044/9908 [3:53:41<7:09:34,  3.76s/it] 31%|███       | 3045/9908 [3:53:45<7:15:25,  3.81s/it] 31%|███       | 3046/9908 [3:53:49<7:04:51,  3.71s/it] 31%|███       | 3047/9908 [3:53:52<6:48:22,  3.57s/it] 31%|███       | 3048/9908 [3:53:56<7:01:58,  3.69s/it] 31%|███       | 3049/9908 [3:54:00<7:06:42,  3.73s/it]09/20/2024 05:30:35 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.029064347967505455, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.3674627542495728, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.3965270519256592}
 31%|███       | 3050/9908 [3:54:04<7:10:20,  3.77s/it] 31%|███       | 3051/9908 [3:54:07<7:06:01,  3.73s/it] 31%|███       | 3052/9908 [3:54:11<6:55:35,  3.64s/it] 31%|███       | 3053/9908 [3:54:14<6:55:56,  3.64s/it] 31%|███       | 3054/9908 [3:54:18<6:59:13,  3.67s/it] 31%|███       | 3055/9908 [3:54:22<7:05:43,  3.73s/it] 31%|███       | 3056/9908 [3:54:26<7:03:55,  3.71s/it] 31%|███       | 3057/9908 [3:54:29<6:50:16,  3.59s/it] 31%|███       | 3058/9908 [3:54:33<6:52:42,  3.61s/it] 31%|███       | 3059/9908 [3:54:36<6:57:09,  3.65s/it] 31%|███       | 3060/9908 [3:54:40<6:57:15,  3.66s/it] 31%|███       | 3061/9908 [3:54:44<7:00:49,  3.69s/it] 31%|███       | 3062/9908 [3:54:48<7:11:23,  3.78s/it] 31%|███       | 3063/9908 [3:54:51<6:57:40,  3.66s/it] 31%|███       | 3064/9908 [3:54:55<6:50:07,  3.60s/it] 31%|███       | 3065/9908 [3:54:59<7:00:54,  3.69s/it] 31%|███       | 3066/9908 [3:55:02<7:03:19,  3.71s/it] 31%|███       | 3067/9908 [3:55:06<7:02:52,  3.71s/it] 31%|███       | 3068/9908 [3:55:10<7:06:16,  3.74s/it] 31%|███       | 3069/9908 [3:55:14<7:10:32,  3.78s/it] 31%|███       | 3070/9908 [3:55:17<6:59:14,  3.68s/it] 31%|███       | 3071/9908 [3:55:21<6:57:30,  3.66s/it] 31%|███       | 3072/9908 [3:55:25<6:56:59,  3.66s/it] 31%|███       | 3073/9908 [3:55:28<6:57:20,  3.66s/it] 31%|███       | 3074/9908 [3:55:32<7:03:10,  3.72s/it] 31%|███       | 3075/9908 [3:55:36<7:14:32,  3.82s/it] 31%|███       | 3076/9908 [3:55:40<7:08:04,  3.76s/it] 31%|███       | 3077/9908 [3:55:43<7:02:47,  3.71s/it] 31%|███       | 3078/9908 [3:55:47<7:00:54,  3.70s/it] 31%|███       | 3079/9908 [3:55:50<6:52:39,  3.63s/it] 31%|███       | 3080/9908 [3:55:54<6:58:35,  3.68s/it] 31%|███       | 3081/9908 [3:55:58<7:01:49,  3.71s/it] 31%|███       | 3082/9908 [3:56:02<7:07:24,  3.76s/it] 31%|███       | 3083/9908 [3:56:06<7:04:54,  3.74s/it] 31%|███       | 3084/9908 [3:56:09<7:09:43,  3.78s/it] 31%|███       | 3085/9908 [3:56:13<7:07:12,  3.76s/it] 31%|███       | 3086/9908 [3:56:17<7:03:48,  3.73s/it] 31%|███       | 3087/9908 [3:56:20<6:56:27,  3.66s/it] 31%|███       | 3088/9908 [3:56:24<7:00:13,  3.70s/it] 31%|███       | 3089/9908 [3:56:28<6:58:43,  3.68s/it] 31%|███       | 3090/9908 [3:56:31<6:58:39,  3.68s/it] 31%|███       | 3091/9908 [3:56:35<6:54:14,  3.65s/it] 31%|███       | 3092/9908 [3:56:39<6:54:23,  3.65s/it] 31%|███       | 3093/9908 [3:56:42<6:50:44,  3.62s/it] 31%|███       | 3094/9908 [3:56:47<7:14:33,  3.83s/it] 31%|███       | 3095/9908 [3:56:50<7:06:48,  3.76s/it] 31%|███       | 3096/9908 [3:56:54<6:56:40,  3.67s/it] 31%|███▏      | 3097/9908 [3:56:57<6:49:03,  3.60s/it] 31%|███▏      | 3098/9908 [3:57:01<6:50:10,  3.61s/it] 31%|███▏      | 3099/9908 [3:57:04<6:35:07,  3.48s/it]09/20/2024 05:33:38 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.0296916700899601, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.3163411617279053, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.3460328578948975}
 31%|███▏      | 3100/9908 [3:57:08<6:55:04,  3.66s/it] 31%|███▏      | 3101/9908 [3:57:12<7:01:09,  3.71s/it] 31%|███▏      | 3102/9908 [3:57:15<6:52:04,  3.63s/it] 31%|███▏      | 3103/9908 [3:57:19<6:48:19,  3.60s/it] 31%|███▏      | 3104/9908 [3:57:23<7:02:48,  3.73s/it] 31%|███▏      | 3105/9908 [3:57:26<7:02:18,  3.72s/it] 31%|███▏      | 3106/9908 [3:57:30<7:11:53,  3.81s/it] 31%|███▏      | 3107/9908 [3:57:34<7:07:58,  3.78s/it] 31%|███▏      | 3108/9908 [3:57:38<7:13:18,  3.82s/it] 31%|███▏      | 3109/9908 [3:57:42<7:07:58,  3.78s/it] 31%|███▏      | 3110/9908 [3:57:45<7:04:10,  3.74s/it] 31%|███▏      | 3111/9908 [3:57:49<6:59:43,  3.71s/it] 31%|███▏      | 3112/9908 [3:57:53<7:06:17,  3.76s/it] 31%|███▏      | 3113/9908 [3:57:57<7:03:44,  3.74s/it] 31%|███▏      | 3114/9908 [3:58:00<7:01:48,  3.73s/it] 31%|███▏      | 3115/9908 [3:58:04<7:03:38,  3.74s/it] 31%|███▏      | 3116/9908 [3:58:07<6:51:53,  3.64s/it] 31%|███▏      | 3117/9908 [3:58:11<6:49:43,  3.62s/it] 31%|███▏      | 3118/9908 [3:58:15<7:07:35,  3.78s/it] 31%|███▏      | 3119/9908 [3:58:19<7:02:42,  3.74s/it] 31%|███▏      | 3120/9908 [3:58:22<6:56:47,  3.68s/it] 31%|███▏      | 3121/9908 [3:58:26<7:01:17,  3.72s/it] 32%|███▏      | 3122/9908 [3:58:30<6:51:42,  3.64s/it] 32%|███▏      | 3123/9908 [3:58:33<6:48:41,  3.61s/it] 32%|███▏      | 3124/9908 [3:58:37<6:53:53,  3.66s/it] 32%|███▏      | 3125/9908 [3:58:41<6:51:13,  3.64s/it] 32%|███▏      | 3126/9908 [3:58:44<6:47:19,  3.60s/it] 32%|███▏      | 3127/9908 [3:58:48<6:50:46,  3.63s/it] 32%|███▏      | 3128/9908 [3:58:51<6:44:25,  3.58s/it] 32%|███▏      | 3129/9908 [3:58:55<6:47:56,  3.61s/it] 32%|███▏      | 3130/9908 [3:58:58<6:42:31,  3.56s/it] 32%|███▏      | 3131/9908 [3:59:02<6:56:31,  3.69s/it] 32%|███▏      | 3132/9908 [3:59:06<6:56:34,  3.69s/it] 32%|███▏      | 3133/9908 [3:59:10<7:00:38,  3.73s/it] 32%|███▏      | 3134/9908 [3:59:13<6:55:50,  3.68s/it] 32%|███▏      | 3135/9908 [3:59:17<6:59:55,  3.72s/it] 32%|███▏      | 3136/9908 [3:59:21<7:07:36,  3.79s/it] 32%|███▏      | 3137/9908 [3:59:25<6:56:49,  3.69s/it] 32%|███▏      | 3138/9908 [3:59:28<6:56:46,  3.69s/it] 32%|███▏      | 3139/9908 [3:59:32<6:56:07,  3.69s/it] 32%|███▏      | 3140/9908 [3:59:35<6:43:42,  3.58s/it] 32%|███▏      | 3141/9908 [3:59:39<6:57:44,  3.70s/it] 32%|███▏      | 3142/9908 [3:59:43<6:57:13,  3.70s/it] 32%|███▏      | 3143/9908 [3:59:47<7:03:50,  3.76s/it] 32%|███▏      | 3144/9908 [3:59:51<7:03:11,  3.75s/it] 32%|███▏      | 3145/9908 [3:59:55<7:08:12,  3.80s/it] 32%|███▏      | 3146/9908 [3:59:58<7:07:59,  3.80s/it] 32%|███▏      | 3147/9908 [4:00:02<7:02:04,  3.75s/it] 32%|███▏      | 3148/9908 [4:00:06<7:02:10,  3.75s/it] 32%|███▏      | 3149/9908 [4:00:09<7:00:24,  3.73s/it]09/20/2024 05:36:44 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.035933949053287506, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.3031456470489502, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.3390796184539795}
 32%|███▏      | 3150/9908 [4:00:13<6:47:33,  3.62s/it] 32%|███▏      | 3151/9908 [4:00:17<7:04:01,  3.77s/it] 32%|███▏      | 3152/9908 [4:00:20<6:56:14,  3.70s/it] 32%|███▏      | 3153/9908 [4:00:24<6:49:25,  3.64s/it] 32%|███▏      | 3154/9908 [4:00:27<6:44:35,  3.59s/it] 32%|███▏      | 3155/9908 [4:00:31<6:49:13,  3.64s/it] 32%|███▏      | 3156/9908 [4:00:35<6:53:03,  3.67s/it] 32%|███▏      | 3157/9908 [4:00:39<6:50:57,  3.65s/it] 32%|███▏      | 3158/9908 [4:00:42<6:59:42,  3.73s/it] 32%|███▏      | 3159/9908 [4:00:46<6:48:28,  3.63s/it] 32%|███▏      | 3160/9908 [4:00:49<6:45:10,  3.60s/it] 32%|███▏      | 3161/9908 [4:00:54<7:02:12,  3.75s/it] 32%|███▏      | 3162/9908 [4:00:58<7:11:00,  3.83s/it] 32%|███▏      | 3163/9908 [4:01:01<7:01:46,  3.75s/it] 32%|███▏      | 3164/9908 [4:01:05<6:50:14,  3.65s/it] 32%|███▏      | 3165/9908 [4:01:08<6:38:34,  3.55s/it] 32%|███▏      | 3166/9908 [4:01:12<6:47:26,  3.63s/it] 32%|███▏      | 3167/9908 [4:01:15<6:39:54,  3.56s/it] 32%|███▏      | 3168/9908 [4:01:19<6:45:08,  3.61s/it] 32%|███▏      | 3169/9908 [4:01:23<6:53:57,  3.69s/it] 32%|███▏      | 3170/9908 [4:01:26<6:52:26,  3.67s/it] 32%|███▏      | 3171/9908 [4:01:30<6:41:30,  3.58s/it] 32%|███▏      | 3172/9908 [4:01:33<6:51:02,  3.66s/it] 32%|███▏      | 3173/9908 [4:01:37<6:52:01,  3.67s/it] 32%|███▏      | 3174/9908 [4:01:41<6:45:24,  3.61s/it] 32%|███▏      | 3175/9908 [4:01:45<6:57:32,  3.72s/it] 32%|███▏      | 3176/9908 [4:01:48<6:45:38,  3.62s/it] 32%|███▏      | 3177/9908 [4:01:52<6:47:33,  3.63s/it] 32%|███▏      | 3178/9908 [4:01:55<6:44:40,  3.61s/it] 32%|███▏      | 3179/9908 [4:01:59<6:57:16,  3.72s/it] 32%|███▏      | 3180/9908 [4:02:03<6:45:43,  3.62s/it] 32%|███▏      | 3181/9908 [4:02:07<6:57:32,  3.72s/it] 32%|███▏      | 3182/9908 [4:02:10<6:55:52,  3.71s/it] 32%|███▏      | 3183/9908 [4:02:14<6:58:51,  3.74s/it] 32%|███▏      | 3184/9908 [4:02:18<7:06:24,  3.81s/it] 32%|███▏      | 3185/9908 [4:02:22<7:00:44,  3.75s/it] 32%|███▏      | 3186/9908 [4:02:25<6:55:29,  3.71s/it] 32%|███▏      | 3187/9908 [4:02:29<6:59:47,  3.75s/it] 32%|███▏      | 3188/9908 [4:02:33<6:57:56,  3.73s/it] 32%|███▏      | 3189/9908 [4:02:36<6:55:30,  3.71s/it] 32%|███▏      | 3190/9908 [4:02:40<7:01:02,  3.76s/it] 32%|███▏      | 3191/9908 [4:02:44<6:59:39,  3.75s/it] 32%|███▏      | 3192/9908 [4:02:47<6:44:43,  3.62s/it] 32%|███▏      | 3193/9908 [4:02:51<6:50:37,  3.67s/it] 32%|███▏      | 3194/9908 [4:02:55<6:58:06,  3.74s/it] 32%|███▏      | 3195/9908 [4:02:59<6:56:22,  3.72s/it] 32%|███▏      | 3196/9908 [4:03:02<6:46:06,  3.63s/it] 32%|███▏      | 3197/9908 [4:03:06<6:42:42,  3.60s/it] 32%|███▏      | 3198/9908 [4:03:09<6:45:38,  3.63s/it] 32%|███▏      | 3199/9908 [4:03:13<6:37:39,  3.56s/it]09/20/2024 05:39:47 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04285871610045433, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.5717589855194092, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.6146177053451538}
 32%|███▏      | 3200/9908 [4:03:16<6:36:26,  3.55s/it] 32%|███▏      | 3201/9908 [4:03:20<6:56:01,  3.72s/it] 32%|███▏      | 3202/9908 [4:03:24<7:02:35,  3.78s/it] 32%|███▏      | 3203/9908 [4:03:28<6:53:32,  3.70s/it] 32%|███▏      | 3204/9908 [4:03:32<7:03:07,  3.79s/it] 32%|███▏      | 3205/9908 [4:03:36<7:02:42,  3.78s/it] 32%|███▏      | 3206/9908 [4:03:39<6:54:56,  3.71s/it] 32%|███▏      | 3207/9908 [4:03:43<6:51:28,  3.68s/it] 32%|███▏      | 3208/9908 [4:03:47<7:02:40,  3.79s/it] 32%|███▏      | 3209/9908 [4:03:51<7:01:03,  3.77s/it] 32%|███▏      | 3210/9908 [4:03:54<6:53:55,  3.71s/it] 32%|███▏      | 3211/9908 [4:03:57<6:43:54,  3.62s/it] 32%|███▏      | 3212/9908 [4:04:01<6:31:09,  3.51s/it] 32%|███▏      | 3213/9908 [4:04:05<6:43:39,  3.62s/it] 32%|███▏      | 3214/9908 [4:04:08<6:52:20,  3.70s/it] 32%|███▏      | 3215/9908 [4:04:12<7:00:41,  3.77s/it] 32%|███▏      | 3216/9908 [4:04:16<7:06:41,  3.83s/it] 32%|███▏      | 3217/9908 [4:04:20<7:01:26,  3.78s/it] 32%|███▏      | 3218/9908 [4:04:24<6:56:59,  3.74s/it] 32%|███▏      | 3219/9908 [4:04:28<6:59:36,  3.76s/it] 32%|███▏      | 3220/9908 [4:04:31<6:55:57,  3.73s/it] 33%|███▎      | 3221/9908 [4:04:35<6:53:08,  3.71s/it] 33%|███▎      | 3222/9908 [4:04:39<6:58:35,  3.76s/it] 33%|███▎      | 3223/9908 [4:04:42<6:53:12,  3.71s/it] 33%|███▎      | 3224/9908 [4:04:46<6:43:53,  3.63s/it] 33%|███▎      | 3225/9908 [4:04:49<6:37:29,  3.57s/it] 33%|███▎      | 3226/9908 [4:04:53<6:38:50,  3.58s/it] 33%|███▎      | 3227/9908 [4:04:56<6:42:47,  3.62s/it] 33%|███▎      | 3228/9908 [4:05:00<6:44:47,  3.64s/it] 33%|███▎      | 3229/9908 [4:05:04<6:52:25,  3.71s/it] 33%|███▎      | 3230/9908 [4:05:08<6:56:06,  3.74s/it] 33%|███▎      | 3231/9908 [4:05:12<6:54:18,  3.72s/it] 33%|███▎      | 3232/9908 [4:05:16<7:09:55,  3.86s/it] 33%|███▎      | 3233/9908 [4:05:20<7:08:35,  3.85s/it] 33%|███▎      | 3234/9908 [4:05:23<6:56:57,  3.75s/it] 33%|███▎      | 3235/9908 [4:05:27<7:05:29,  3.83s/it] 33%|███▎      | 3236/9908 [4:05:31<6:56:50,  3.75s/it] 33%|███▎      | 3237/9908 [4:05:34<6:57:37,  3.76s/it] 33%|███▎      | 3238/9908 [4:05:38<7:05:26,  3.83s/it] 33%|███▎      | 3239/9908 [4:05:42<7:07:58,  3.85s/it] 33%|███▎      | 3240/9908 [4:05:46<7:01:20,  3.79s/it] 33%|███▎      | 3241/9908 [4:05:49<6:52:21,  3.71s/it] 33%|███▎      | 3242/9908 [4:05:53<6:54:25,  3.73s/it] 33%|███▎      | 3243/9908 [4:05:57<7:02:22,  3.80s/it] 33%|███▎      | 3244/9908 [4:06:01<7:01:39,  3.80s/it] 33%|███▎      | 3245/9908 [4:06:05<7:03:09,  3.81s/it] 33%|███▎      | 3246/9908 [4:06:09<7:00:38,  3.79s/it] 33%|███▎      | 3247/9908 [4:06:12<6:56:18,  3.75s/it] 33%|███▎      | 3248/9908 [4:06:16<6:58:05,  3.77s/it] 33%|███▎      | 3249/9908 [4:06:20<6:56:47,  3.76s/it]09/20/2024 05:42:54 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03828852251172066, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.5197094678878784, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.5579979419708252}
 33%|███▎      | 3250/9908 [4:06:23<6:44:44,  3.65s/it] 33%|███▎      | 3251/9908 [4:06:27<6:39:21,  3.60s/it] 33%|███▎      | 3252/9908 [4:06:31<6:57:34,  3.76s/it] 33%|███▎      | 3253/9908 [4:06:35<6:58:47,  3.78s/it] 33%|███▎      | 3254/9908 [4:06:39<7:08:49,  3.87s/it] 33%|███▎      | 3255/9908 [4:06:42<7:02:54,  3.81s/it] 33%|███▎      | 3256/9908 [4:06:46<7:06:41,  3.85s/it] 33%|███▎      | 3257/9908 [4:06:50<6:59:52,  3.79s/it] 33%|███▎      | 3258/9908 [4:06:54<6:59:20,  3.78s/it] 33%|███▎      | 3259/9908 [4:06:57<6:48:32,  3.69s/it] 33%|███▎      | 3260/9908 [4:07:02<7:11:33,  3.89s/it] 33%|███▎      | 3261/9908 [4:07:05<6:58:20,  3.78s/it] 33%|███▎      | 3262/9908 [4:07:08<6:43:17,  3.64s/it] 33%|███▎      | 3263/9908 [4:07:12<6:53:41,  3.74s/it] 33%|███▎      | 3264/9908 [4:07:16<6:49:04,  3.69s/it] 33%|███▎      | 3265/9908 [4:07:20<6:45:05,  3.66s/it] 33%|███▎      | 3266/9908 [4:07:23<6:51:22,  3.72s/it] 33%|███▎      | 3267/9908 [4:07:27<6:45:50,  3.67s/it] 33%|███▎      | 3268/9908 [4:07:31<6:46:22,  3.67s/it] 33%|███▎      | 3269/9908 [4:07:35<6:57:10,  3.77s/it] 33%|███▎      | 3270/9908 [4:07:39<7:05:07,  3.84s/it] 33%|███▎      | 3271/9908 [4:07:42<7:06:22,  3.85s/it] 33%|███▎      | 3272/9908 [4:07:46<6:58:57,  3.79s/it] 33%|███▎      | 3273/9908 [4:07:50<6:59:40,  3.80s/it] 33%|███▎      | 3274/9908 [4:07:54<7:03:14,  3.83s/it] 33%|███▎      | 3275/9908 [4:07:58<6:57:57,  3.78s/it] 33%|███▎      | 3276/9908 [4:08:01<6:51:54,  3.73s/it] 33%|███▎      | 3277/9908 [4:08:05<6:46:57,  3.68s/it] 33%|███▎      | 3278/9908 [4:08:09<7:03:54,  3.84s/it] 33%|███▎      | 3279/9908 [4:08:13<6:57:52,  3.78s/it] 33%|███▎      | 3280/9908 [4:08:16<6:41:53,  3.64s/it] 33%|███▎      | 3281/9908 [4:08:19<6:39:52,  3.62s/it] 33%|███▎      | 3282/9908 [4:08:23<6:41:45,  3.64s/it] 33%|███▎      | 3283/9908 [4:08:27<6:47:35,  3.69s/it] 33%|███▎      | 3284/9908 [4:08:31<6:49:49,  3.71s/it] 33%|███▎      | 3285/9908 [4:08:34<6:49:54,  3.71s/it] 33%|███▎      | 3286/9908 [4:08:38<6:52:20,  3.74s/it] 33%|███▎      | 3287/9908 [4:08:42<6:47:15,  3.69s/it] 33%|███▎      | 3288/9908 [4:08:45<6:45:45,  3.68s/it] 33%|███▎      | 3289/9908 [4:08:49<6:46:12,  3.68s/it] 33%|███▎      | 3290/9908 [4:08:53<6:55:00,  3.76s/it] 33%|███▎      | 3291/9908 [4:08:57<6:51:01,  3.73s/it] 33%|███▎      | 3292/9908 [4:09:00<6:41:17,  3.64s/it] 33%|███▎      | 3293/9908 [4:09:04<6:53:49,  3.75s/it] 33%|███▎      | 3294/9908 [4:09:08<6:51:22,  3.73s/it] 33%|███▎      | 3295/9908 [4:09:12<6:52:09,  3.74s/it] 33%|███▎      | 3296/9908 [4:09:16<7:01:41,  3.83s/it] 33%|███▎      | 3297/9908 [4:09:19<7:00:00,  3.81s/it] 33%|███▎      | 3298/9908 [4:09:23<6:45:50,  3.68s/it] 33%|███▎      | 3299/9908 [4:09:27<6:54:33,  3.76s/it]09/20/2024 05:46:01 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.032911863178014755, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.6092205047607422, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.6421324014663696}
 33%|███▎      | 3300/9908 [4:09:30<6:46:48,  3.69s/it] 33%|███▎      | 3301/9908 [4:09:34<6:42:05,  3.65s/it] 33%|███▎      | 3302/9908 [4:09:38<6:49:16,  3.72s/it] 33%|███▎      | 3303/9908 [4:09:41<6:45:20,  3.68s/it] 33%|███▎      | 3304/9908 [4:09:46<7:06:59,  3.88s/it] 33%|███▎      | 3305/9908 [4:09:49<7:04:15,  3.86s/it] 33%|███▎      | 3306/9908 [4:09:53<6:51:12,  3.74s/it] 33%|███▎      | 3307/9908 [4:09:57<6:58:21,  3.80s/it] 33%|███▎      | 3308/9908 [4:10:01<6:53:40,  3.76s/it] 33%|███▎      | 3309/9908 [4:10:05<7:08:00,  3.89s/it] 33%|███▎      | 3310/9908 [4:10:08<6:58:30,  3.81s/it] 33%|███▎      | 3311/9908 [4:10:12<6:49:48,  3.73s/it] 33%|███▎      | 3312/9908 [4:10:16<6:50:29,  3.73s/it] 33%|███▎      | 3313/9908 [4:10:19<6:43:35,  3.67s/it] 33%|███▎      | 3314/9908 [4:10:23<6:51:45,  3.75s/it] 33%|███▎      | 3315/9908 [4:10:27<6:51:55,  3.75s/it] 33%|███▎      | 3316/9908 [4:10:30<6:48:07,  3.71s/it] 33%|███▎      | 3317/9908 [4:10:34<6:47:21,  3.71s/it] 33%|███▎      | 3318/9908 [4:10:38<6:36:20,  3.61s/it] 33%|███▎      | 3319/9908 [4:10:41<6:40:23,  3.65s/it] 34%|███▎      | 3320/9908 [4:10:45<6:55:55,  3.79s/it] 34%|███▎      | 3321/9908 [4:10:49<6:47:26,  3.71s/it] 34%|███▎      | 3322/9908 [4:10:53<6:54:01,  3.77s/it] 34%|███▎      | 3323/9908 [4:10:56<6:48:22,  3.72s/it] 34%|███▎      | 3324/9908 [4:11:00<6:47:51,  3.72s/it] 34%|███▎      | 3325/9908 [4:11:04<6:40:57,  3.65s/it] 34%|███▎      | 3326/9908 [4:11:07<6:42:25,  3.67s/it] 34%|███▎      | 3327/9908 [4:11:11<6:34:22,  3.60s/it] 34%|███▎      | 3328/9908 [4:11:15<6:44:07,  3.69s/it] 34%|███▎      | 3329/9908 [4:11:18<6:44:39,  3.69s/it] 34%|███▎      | 3330/9908 [4:11:22<6:52:26,  3.76s/it] 34%|███▎      | 3331/9908 [4:11:26<6:48:40,  3.73s/it] 34%|███▎      | 3332/9908 [4:11:30<6:53:35,  3.77s/it] 34%|███▎      | 3333/9908 [4:11:33<6:47:22,  3.72s/it] 34%|███▎      | 3334/9908 [4:11:37<6:39:22,  3.65s/it] 34%|███▎      | 3335/9908 [4:11:41<6:40:13,  3.65s/it] 34%|███▎      | 3336/9908 [4:11:44<6:44:07,  3.69s/it] 34%|███▎      | 3337/9908 [4:11:48<6:40:45,  3.66s/it] 34%|███▎      | 3338/9908 [4:11:52<6:44:22,  3.69s/it] 34%|███▎      | 3339/9908 [4:11:55<6:42:23,  3.68s/it] 34%|███▎      | 3340/9908 [4:11:59<6:39:48,  3.65s/it] 34%|███▎      | 3341/9908 [4:12:03<6:43:58,  3.69s/it] 34%|███▎      | 3342/9908 [4:12:06<6:36:30,  3.62s/it] 34%|███▎      | 3343/9908 [4:12:10<6:38:12,  3.64s/it] 34%|███▍      | 3344/9908 [4:12:14<6:47:34,  3.73s/it] 34%|███▍      | 3345/9908 [4:12:18<6:50:58,  3.76s/it] 34%|███▍      | 3346/9908 [4:12:21<6:41:48,  3.67s/it] 34%|███▍      | 3347/9908 [4:12:25<6:44:21,  3.70s/it] 34%|███▍      | 3348/9908 [4:12:29<6:49:25,  3.74s/it] 34%|███▍      | 3349/9908 [4:12:33<6:59:42,  3.84s/it]09/20/2024 05:49:07 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.019138451665639877, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.193496823310852, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.2126352787017822}
 34%|███▍      | 3350/9908 [4:12:37<6:58:08,  3.83s/it] 34%|███▍      | 3351/9908 [4:12:40<6:54:47,  3.80s/it] 34%|███▍      | 3352/9908 [4:12:44<6:53:44,  3.79s/it] 34%|███▍      | 3353/9908 [4:12:48<7:00:21,  3.85s/it] 34%|███▍      | 3354/9908 [4:12:52<6:59:47,  3.84s/it] 34%|███▍      | 3355/9908 [4:12:55<6:43:10,  3.69s/it] 34%|███▍      | 3356/9908 [4:12:59<6:43:17,  3.69s/it] 34%|███▍      | 3357/9908 [4:13:02<6:35:49,  3.63s/it] 34%|███▍      | 3358/9908 [4:13:06<6:45:56,  3.72s/it] 34%|███▍      | 3359/9908 [4:13:10<6:53:41,  3.79s/it] 34%|███▍      | 3360/9908 [4:13:14<6:59:25,  3.84s/it] 34%|███▍      | 3361/9908 [4:13:18<6:56:05,  3.81s/it] 34%|███▍      | 3362/9908 [4:13:22<6:49:00,  3.75s/it] 34%|███▍      | 3363/9908 [4:13:26<7:01:48,  3.87s/it] 34%|███▍      | 3364/9908 [4:13:29<6:52:17,  3.78s/it] 34%|███▍      | 3365/9908 [4:13:33<6:55:33,  3.81s/it] 34%|███▍      | 3366/9908 [4:13:37<6:51:24,  3.77s/it] 34%|███▍      | 3367/9908 [4:13:41<6:53:39,  3.79s/it] 34%|███▍      | 3368/9908 [4:13:45<6:57:36,  3.83s/it] 34%|███▍      | 3369/9908 [4:13:48<6:54:16,  3.80s/it] 34%|███▍      | 3370/9908 [4:13:52<6:46:58,  3.73s/it] 34%|███▍      | 3371/9908 [4:13:56<6:44:26,  3.71s/it] 34%|███▍      | 3372/9908 [4:13:59<6:46:33,  3.73s/it] 34%|███▍      | 3373/9908 [4:14:03<6:49:27,  3.76s/it] 34%|███▍      | 3374/9908 [4:14:07<6:45:25,  3.72s/it] 34%|███▍      | 3375/9908 [4:14:11<6:49:11,  3.76s/it] 34%|███▍      | 3376/9908 [4:14:14<6:35:26,  3.63s/it] 34%|███▍      | 3377/9908 [4:14:18<6:47:40,  3.75s/it] 34%|███▍      | 3378/9908 [4:14:22<6:50:49,  3.77s/it] 34%|███▍      | 3379/9908 [4:14:26<6:47:52,  3.75s/it] 34%|███▍      | 3380/9908 [4:14:29<6:34:44,  3.63s/it] 34%|███▍      | 3381/9908 [4:14:33<6:45:36,  3.73s/it] 34%|███▍      | 3382/9908 [4:14:37<6:45:54,  3.73s/it] 34%|███▍      | 3383/9908 [4:14:40<6:45:00,  3.72s/it] 34%|███▍      | 3384/9908 [4:14:44<6:50:14,  3.77s/it] 34%|███▍      | 3385/9908 [4:14:48<6:48:58,  3.76s/it] 34%|███▍      | 3386/9908 [4:14:52<6:52:47,  3.80s/it] 34%|███▍      | 3387/9908 [4:14:55<6:44:13,  3.72s/it] 34%|███▍      | 3388/9908 [4:14:59<6:36:58,  3.65s/it] 34%|███▍      | 3389/9908 [4:15:03<6:37:24,  3.66s/it] 34%|███▍      | 3390/9908 [4:15:06<6:36:22,  3.65s/it] 34%|███▍      | 3391/9908 [4:15:10<6:55:21,  3.82s/it] 34%|███▍      | 3392/9908 [4:15:14<7:02:27,  3.89s/it] 34%|███▍      | 3393/9908 [4:15:18<6:59:15,  3.86s/it] 34%|███▍      | 3394/9908 [4:15:22<6:46:23,  3.74s/it] 34%|███▍      | 3395/9908 [4:15:25<6:40:55,  3.69s/it] 34%|███▍      | 3396/9908 [4:15:29<6:38:43,  3.67s/it] 34%|███▍      | 3397/9908 [4:15:33<6:46:06,  3.74s/it] 34%|███▍      | 3398/9908 [4:15:36<6:41:19,  3.70s/it] 34%|███▍      | 3399/9908 [4:15:40<6:40:05,  3.69s/it]09/20/2024 05:52:15 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03543878719210625, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.409961223602295, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.4453999996185303}
 34%|███▍      | 3400/9908 [4:15:44<6:46:16,  3.75s/it] 34%|███▍      | 3401/9908 [4:15:48<6:47:31,  3.76s/it] 34%|███▍      | 3402/9908 [4:15:52<6:58:13,  3.86s/it] 34%|███▍      | 3403/9908 [4:15:55<6:50:06,  3.78s/it] 34%|███▍      | 3404/9908 [4:15:59<6:44:30,  3.73s/it] 34%|███▍      | 3405/9908 [4:16:03<6:46:21,  3.75s/it] 34%|███▍      | 3406/9908 [4:16:06<6:42:35,  3.72s/it] 34%|███▍      | 3407/9908 [4:16:10<6:41:15,  3.70s/it] 34%|███▍      | 3408/9908 [4:16:14<6:37:44,  3.67s/it] 34%|███▍      | 3409/9908 [4:16:17<6:34:32,  3.64s/it] 34%|███▍      | 3410/9908 [4:16:21<6:37:08,  3.67s/it] 34%|███▍      | 3411/9908 [4:16:25<6:33:25,  3.63s/it] 34%|███▍      | 3412/9908 [4:16:28<6:32:10,  3.62s/it] 34%|███▍      | 3413/9908 [4:16:32<6:46:33,  3.76s/it] 34%|███▍      | 3414/9908 [4:16:36<6:36:01,  3.66s/it] 34%|███▍      | 3415/9908 [4:16:39<6:36:11,  3.66s/it] 34%|███▍      | 3416/9908 [4:16:43<6:50:39,  3.80s/it] 34%|███▍      | 3417/9908 [4:16:47<6:52:36,  3.81s/it] 34%|███▍      | 3418/9908 [4:16:52<7:05:55,  3.94s/it] 35%|███▍      | 3419/9908 [4:16:55<6:43:48,  3.73s/it] 35%|███▍      | 3420/9908 [4:16:58<6:40:06,  3.70s/it] 35%|███▍      | 3421/9908 [4:17:02<6:41:45,  3.72s/it] 35%|███▍      | 3422/9908 [4:17:06<6:44:48,  3.74s/it] 35%|███▍      | 3423/9908 [4:17:10<6:40:16,  3.70s/it] 35%|███▍      | 3424/9908 [4:17:13<6:43:24,  3.73s/it] 35%|███▍      | 3425/9908 [4:17:17<6:42:22,  3.72s/it] 35%|███▍      | 3426/9908 [4:17:21<6:39:54,  3.70s/it] 35%|███▍      | 3427/9908 [4:17:24<6:33:06,  3.64s/it] 35%|███▍      | 3428/9908 [4:17:28<6:35:35,  3.66s/it] 35%|███▍      | 3429/9908 [4:17:32<6:32:20,  3.63s/it] 35%|███▍      | 3430/9908 [4:17:36<6:45:43,  3.76s/it] 35%|███▍      | 3431/9908 [4:17:39<6:51:44,  3.81s/it] 35%|███▍      | 3432/9908 [4:17:43<6:38:35,  3.69s/it] 35%|███▍      | 3433/9908 [4:17:47<6:39:27,  3.70s/it] 35%|███▍      | 3434/9908 [4:17:50<6:43:19,  3.74s/it] 35%|███▍      | 3435/9908 [4:17:54<6:43:47,  3.74s/it] 35%|███▍      | 3436/9908 [4:17:58<6:32:09,  3.64s/it] 35%|███▍      | 3437/9908 [4:18:01<6:34:43,  3.66s/it] 35%|███▍      | 3438/9908 [4:18:05<6:32:29,  3.64s/it] 35%|███▍      | 3439/9908 [4:18:09<6:36:01,  3.67s/it] 35%|███▍      | 3440/9908 [4:18:12<6:40:43,  3.72s/it] 35%|███▍      | 3441/9908 [4:18:16<6:34:02,  3.66s/it] 35%|███▍      | 3442/9908 [4:18:20<6:39:08,  3.70s/it] 35%|███▍      | 3443/9908 [4:18:23<6:32:34,  3.64s/it] 35%|███▍      | 3444/9908 [4:18:27<6:46:15,  3.77s/it] 35%|███▍      | 3445/9908 [4:18:31<6:44:12,  3.75s/it] 35%|███▍      | 3446/9908 [4:18:35<6:37:08,  3.69s/it] 35%|███▍      | 3447/9908 [4:18:39<6:43:50,  3.75s/it] 35%|███▍      | 3448/9908 [4:18:42<6:48:20,  3.79s/it] 35%|███▍      | 3449/9908 [4:18:46<6:44:29,  3.76s/it]09/20/2024 05:55:21 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.025547245517373085, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.409838318824768, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.4353855848312378}
 35%|███▍      | 3450/9908 [4:18:50<6:57:27,  3.88s/it] 35%|███▍      | 3451/9908 [4:18:54<6:48:57,  3.80s/it] 35%|███▍      | 3452/9908 [4:18:57<6:42:48,  3.74s/it] 35%|███▍      | 3453/9908 [4:19:01<6:50:57,  3.82s/it] 35%|███▍      | 3454/9908 [4:19:05<6:55:51,  3.87s/it] 35%|███▍      | 3455/9908 [4:19:09<6:55:17,  3.86s/it] 35%|███▍      | 3456/9908 [4:19:13<6:56:57,  3.88s/it] 35%|███▍      | 3457/9908 [4:19:17<6:46:24,  3.78s/it] 35%|███▍      | 3458/9908 [4:19:20<6:33:48,  3.66s/it] 35%|███▍      | 3459/9908 [4:19:24<6:33:15,  3.66s/it] 35%|███▍      | 3460/9908 [4:19:27<6:26:44,  3.60s/it] 35%|███▍      | 3461/9908 [4:19:31<6:32:14,  3.65s/it] 35%|███▍      | 3462/9908 [4:19:35<6:27:57,  3.61s/it] 35%|███▍      | 3463/9908 [4:19:39<6:43:35,  3.76s/it] 35%|███▍      | 3464/9908 [4:19:43<6:47:28,  3.79s/it] 35%|███▍      | 3465/9908 [4:19:46<6:35:51,  3.69s/it] 35%|███▍      | 3466/9908 [4:19:49<6:25:55,  3.59s/it] 35%|███▍      | 3467/9908 [4:19:53<6:42:12,  3.75s/it] 35%|███▌      | 3468/9908 [4:19:57<6:39:42,  3.72s/it] 35%|███▌      | 3469/9908 [4:20:01<6:43:59,  3.76s/it] 35%|███▌      | 3470/9908 [4:20:05<6:48:31,  3.81s/it] 35%|███▌      | 3471/9908 [4:20:09<6:46:32,  3.79s/it] 35%|███▌      | 3472/9908 [4:20:12<6:34:49,  3.68s/it] 35%|███▌      | 3473/9908 [4:20:16<6:38:53,  3.72s/it] 35%|███▌      | 3474/9908 [4:20:19<6:35:25,  3.69s/it] 35%|███▌      | 3475/9908 [4:20:23<6:33:59,  3.67s/it] 35%|███▌      | 3476/9908 [4:20:27<6:34:51,  3.68s/it] 35%|███▌      | 3477/9908 [4:20:31<6:44:25,  3.77s/it] 35%|███▌      | 3478/9908 [4:20:34<6:41:02,  3.74s/it] 35%|███▌      | 3479/9908 [4:20:38<6:36:13,  3.70s/it] 35%|███▌      | 3480/9908 [4:20:42<6:40:44,  3.74s/it] 35%|███▌      | 3481/9908 [4:20:46<6:42:16,  3.76s/it] 35%|███▌      | 3482/9908 [4:20:50<6:53:42,  3.86s/it] 35%|███▌      | 3483/9908 [4:20:53<6:40:54,  3.74s/it] 35%|███▌      | 3484/9908 [4:20:57<6:45:44,  3.79s/it] 35%|███▌      | 3485/9908 [4:21:01<6:39:47,  3.73s/it] 35%|███▌      | 3486/9908 [4:21:04<6:36:16,  3.70s/it] 35%|███▌      | 3487/9908 [4:21:08<6:38:38,  3.73s/it] 35%|███▌      | 3488/9908 [4:21:12<6:37:45,  3.72s/it] 35%|███▌      | 3489/9908 [4:21:15<6:30:31,  3.65s/it] 35%|███▌      | 3490/9908 [4:21:19<6:23:16,  3.58s/it] 35%|███▌      | 3491/9908 [4:21:23<6:29:41,  3.64s/it] 35%|███▌      | 3492/9908 [4:21:26<6:35:37,  3.70s/it] 35%|███▌      | 3493/9908 [4:21:30<6:27:58,  3.63s/it] 35%|███▌      | 3494/9908 [4:21:34<6:31:52,  3.67s/it] 35%|███▌      | 3495/9908 [4:21:38<6:38:11,  3.73s/it] 35%|███▌      | 3496/9908 [4:21:41<6:33:40,  3.68s/it] 35%|███▌      | 3497/9908 [4:21:45<6:32:15,  3.67s/it] 35%|███▌      | 3498/9908 [4:21:48<6:33:04,  3.68s/it] 35%|███▌      | 3499/9908 [4:21:52<6:27:55,  3.63s/it]09/20/2024 05:58:25 - INFO - __main__ -   evaluate on ret%tvas--msrvtt_ret task
09/20/2024 05:58:25 - INFO - __main__ -   start running ret%tvas validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:01<03:45,  1.02s/it][A
  1%|          | 2/221 [00:01<02:40,  1.37it/s][A
  1%|▏         | 3/221 [00:02<03:26,  1.06it/s][A
  2%|▏         | 4/221 [00:03<02:31,  1.43it/s][A
  3%|▎         | 6/221 [00:03<01:18,  2.73it/s][A
  3%|▎         | 7/221 [00:03<01:12,  2.95it/s][A
  4%|▎         | 8/221 [00:03<01:14,  2.87it/s][A
  4%|▍         | 9/221 [00:04<01:19,  2.68it/s][A
  5%|▍         | 10/221 [00:04<01:10,  3.01it/s][A
  5%|▍         | 11/221 [00:04<00:56,  3.74it/s][A
  5%|▌         | 12/221 [00:11<08:01,  2.30s/it][A
  6%|▌         | 13/221 [00:11<05:45,  1.66s/it][A
  7%|▋         | 15/221 [00:12<03:24,  1.01it/s][A
  7%|▋         | 16/221 [00:12<03:02,  1.12it/s][A
  8%|▊         | 17/221 [00:13<02:52,  1.18it/s][A
  8%|▊         | 18/221 [00:13<02:22,  1.43it/s][A
  9%|▊         | 19/221 [00:14<02:21,  1.43it/s][A
  9%|▉         | 20/221 [00:14<01:46,  1.88it/s][A
 10%|▉         | 21/221 [00:14<01:26,  2.31it/s][A
 10%|▉         | 22/221 [00:15<01:39,  1.99it/s][A
 11%|█         | 24/221 [00:15<01:08,  2.90it/s][A
 11%|█▏        | 25/221 [00:16<01:06,  2.95it/s][A
 12%|█▏        | 26/221 [00:16<00:59,  3.29it/s][A
 13%|█▎        | 28/221 [00:17<00:59,  3.25it/s][A
 13%|█▎        | 29/221 [00:17<00:57,  3.35it/s][A
 14%|█▎        | 30/221 [00:18<01:28,  2.16it/s][A
 14%|█▍        | 31/221 [00:18<01:25,  2.22it/s][A
 15%|█▍        | 33/221 [00:19<01:09,  2.69it/s][A
 16%|█▌        | 35/221 [00:19<01:00,  3.10it/s][A
 16%|█▋        | 36/221 [00:20<00:57,  3.24it/s][A
 17%|█▋        | 37/221 [00:20<01:06,  2.78it/s][A
 17%|█▋        | 38/221 [00:21<01:38,  1.86it/s][A
 18%|█▊        | 39/221 [00:21<01:22,  2.21it/s][A
 18%|█▊        | 40/221 [00:22<01:20,  2.26it/s][A
 19%|█▊        | 41/221 [00:22<01:06,  2.72it/s][A
 19%|█▉        | 42/221 [00:22<00:54,  3.26it/s][A
 19%|█▉        | 43/221 [00:22<00:44,  4.03it/s][A
 20%|█▉        | 44/221 [00:22<00:36,  4.86it/s][A
 20%|██        | 45/221 [00:28<05:26,  1.86s/it][A
 21%|██        | 46/221 [00:28<04:05,  1.40s/it][A
 21%|██▏       | 47/221 [00:29<03:24,  1.17s/it][A
 22%|██▏       | 48/221 [00:29<02:29,  1.16it/s][A
 22%|██▏       | 49/221 [00:29<01:54,  1.51it/s][A
 23%|██▎       | 50/221 [00:30<01:40,  1.71it/s][A
 23%|██▎       | 51/221 [00:30<01:22,  2.06it/s][A
 24%|██▍       | 53/221 [00:30<00:55,  3.01it/s][A
 24%|██▍       | 54/221 [00:31<01:02,  2.66it/s][A
 25%|██▍       | 55/221 [00:35<03:30,  1.27s/it][A
 25%|██▌       | 56/221 [00:35<02:40,  1.03it/s][A
 26%|██▌       | 57/221 [00:35<02:07,  1.29it/s][A
 27%|██▋       | 59/221 [00:35<01:16,  2.11it/s][A
 27%|██▋       | 60/221 [00:36<01:15,  2.14it/s][A
 28%|██▊       | 61/221 [00:36<01:04,  2.48it/s][A
 28%|██▊       | 62/221 [00:36<01:00,  2.63it/s][A
 29%|██▊       | 63/221 [00:37<00:59,  2.64it/s][A
 29%|██▉       | 64/221 [00:37<01:21,  1.92it/s][A
 29%|██▉       | 65/221 [00:38<01:04,  2.42it/s][A
 30%|██▉       | 66/221 [00:38<01:01,  2.52it/s][A
 30%|███       | 67/221 [00:38<00:52,  2.95it/s][A
 31%|███       | 68/221 [00:38<00:43,  3.51it/s][A
 31%|███       | 69/221 [00:40<01:50,  1.38it/s][A
 32%|███▏      | 70/221 [00:40<01:21,  1.86it/s][A
 32%|███▏      | 71/221 [00:41<01:15,  1.99it/s][A
 33%|███▎      | 72/221 [00:41<01:00,  2.45it/s][A
 33%|███▎      | 73/221 [00:41<01:09,  2.14it/s][A
 33%|███▎      | 74/221 [00:42<00:52,  2.79it/s][A
 34%|███▍      | 75/221 [00:42<00:52,  2.76it/s][A
 34%|███▍      | 76/221 [00:42<00:47,  3.04it/s][A
 35%|███▍      | 77/221 [00:44<01:38,  1.46it/s][A
 35%|███▌      | 78/221 [00:44<01:14,  1.91it/s][A
 36%|███▌      | 79/221 [00:45<01:31,  1.55it/s][A
 36%|███▌      | 80/221 [00:45<01:08,  2.07it/s][A
 37%|███▋      | 81/221 [00:45<01:09,  2.01it/s][A
 37%|███▋      | 82/221 [00:48<02:29,  1.08s/it][A
 38%|███▊      | 83/221 [00:48<02:12,  1.05it/s][A
 38%|███▊      | 84/221 [00:49<01:39,  1.37it/s][A
 39%|███▉      | 86/221 [00:49<01:11,  1.89it/s][A
 39%|███▉      | 87/221 [00:50<01:16,  1.76it/s][A
 40%|███▉      | 88/221 [00:50<01:07,  1.96it/s][A
 40%|████      | 89/221 [00:51<01:00,  2.19it/s][A
 41%|████      | 90/221 [00:51<00:56,  2.31it/s][A
 42%|████▏     | 92/221 [00:51<00:40,  3.17it/s][A
 42%|████▏     | 93/221 [00:52<00:44,  2.86it/s][A
 43%|████▎     | 94/221 [00:53<00:58,  2.18it/s][A
 43%|████▎     | 95/221 [00:53<00:53,  2.35it/s][A
 43%|████▎     | 96/221 [00:54<01:10,  1.77it/s][A
 44%|████▍     | 97/221 [00:54<00:55,  2.25it/s][A
 44%|████▍     | 98/221 [00:55<01:07,  1.82it/s][A
 45%|████▍     | 99/221 [00:55<00:59,  2.06it/s][A
 45%|████▌     | 100/221 [00:56<01:07,  1.81it/s][A
 46%|████▌     | 101/221 [00:56<00:52,  2.29it/s][A
 46%|████▌     | 102/221 [00:58<01:40,  1.19it/s][A
 47%|████▋     | 103/221 [00:58<01:13,  1.61it/s][A
 47%|████▋     | 104/221 [00:58<01:06,  1.77it/s][A
 48%|████▊     | 105/221 [00:59<01:03,  1.82it/s][A
 48%|████▊     | 106/221 [01:02<02:37,  1.37s/it][A
 48%|████▊     | 107/221 [01:02<01:59,  1.05s/it][A
 49%|████▉     | 108/221 [01:03<01:32,  1.22it/s][A
 49%|████▉     | 109/221 [01:03<01:10,  1.59it/s][A
 50%|█████     | 111/221 [01:03<00:47,  2.31it/s][A
 51%|█████     | 112/221 [01:04<00:46,  2.33it/s][A
 51%|█████     | 113/221 [01:04<00:37,  2.85it/s][A
 52%|█████▏    | 115/221 [01:05<00:36,  2.93it/s][A
 52%|█████▏    | 116/221 [01:05<00:35,  2.95it/s][A
 53%|█████▎    | 117/221 [01:05<00:40,  2.59it/s][A
 53%|█████▎    | 118/221 [01:06<00:41,  2.51it/s][A
 54%|█████▍    | 119/221 [01:06<00:36,  2.83it/s][A
 54%|█████▍    | 120/221 [01:06<00:31,  3.24it/s][A
 55%|█████▍    | 121/221 [01:07<00:38,  2.62it/s][A
 55%|█████▌    | 122/221 [01:07<00:38,  2.57it/s][A
 56%|█████▌    | 123/221 [01:09<01:06,  1.48it/s][A
 56%|█████▌    | 124/221 [01:09<00:51,  1.90it/s][A
 57%|█████▋    | 125/221 [01:11<01:26,  1.11it/s][A
 57%|█████▋    | 126/221 [01:18<04:21,  2.75s/it][A
 57%|█████▋    | 127/221 [01:19<03:30,  2.24s/it][A
 58%|█████▊    | 128/221 [01:19<02:37,  1.69s/it][A
 58%|█████▊    | 129/221 [01:20<02:02,  1.34s/it][A
 59%|█████▉    | 130/221 [01:20<01:31,  1.01s/it][A
 59%|█████▉    | 131/221 [01:21<01:22,  1.09it/s][A
 60%|█████▉    | 132/221 [01:22<01:28,  1.00it/s][A
 60%|██████    | 133/221 [01:22<01:16,  1.15it/s][A
 61%|██████    | 134/221 [01:23<01:23,  1.04it/s][A
 61%|██████    | 135/221 [01:24<01:15,  1.14it/s][A
 62%|██████▏   | 136/221 [01:25<01:01,  1.38it/s][A
 62%|██████▏   | 137/221 [01:25<00:50,  1.65it/s][A
 62%|██████▏   | 138/221 [01:25<00:51,  1.63it/s][A
 63%|██████▎   | 139/221 [01:26<00:41,  1.98it/s][A
 63%|██████▎   | 140/221 [01:26<00:45,  1.79it/s][A
 64%|██████▍   | 141/221 [01:27<00:38,  2.06it/s][A
 64%|██████▍   | 142/221 [01:27<00:34,  2.31it/s][A
 65%|██████▍   | 143/221 [01:27<00:33,  2.33it/s][A
 65%|██████▌   | 144/221 [01:28<00:30,  2.51it/s][A
 66%|██████▌   | 146/221 [01:28<00:18,  3.97it/s][A
 67%|██████▋   | 147/221 [01:28<00:15,  4.65it/s][A
 67%|██████▋   | 148/221 [01:29<00:28,  2.57it/s][A
 67%|██████▋   | 149/221 [01:29<00:28,  2.51it/s][A
 68%|██████▊   | 150/221 [01:30<00:31,  2.25it/s][A
 68%|██████▊   | 151/221 [01:30<00:32,  2.13it/s][A
 69%|██████▉   | 152/221 [01:31<00:32,  2.14it/s][A
 70%|██████▉   | 154/221 [01:31<00:24,  2.78it/s][A
 70%|███████   | 155/221 [01:32<00:24,  2.68it/s][A
 71%|███████   | 156/221 [01:32<00:21,  3.03it/s][A
 71%|███████   | 157/221 [01:38<02:00,  1.88s/it][A
 71%|███████▏  | 158/221 [01:39<01:37,  1.54s/it][A
 72%|███████▏  | 160/221 [01:39<00:56,  1.08it/s][A
 73%|███████▎  | 161/221 [01:39<00:43,  1.37it/s][A
 74%|███████▍  | 163/221 [01:39<00:29,  1.98it/s][A
 74%|███████▍  | 164/221 [01:40<00:26,  2.17it/s][A
 75%|███████▍  | 165/221 [01:40<00:26,  2.12it/s][A
 75%|███████▌  | 166/221 [01:41<00:28,  1.93it/s][A
 76%|███████▌  | 167/221 [01:41<00:24,  2.25it/s][A
 76%|███████▌  | 168/221 [01:46<01:31,  1.72s/it][A
 76%|███████▋  | 169/221 [01:47<01:11,  1.37s/it][A
 77%|███████▋  | 170/221 [01:47<00:56,  1.11s/it][A
 77%|███████▋  | 171/221 [01:48<00:45,  1.10it/s][A
 78%|███████▊  | 172/221 [01:48<00:34,  1.42it/s][A
 78%|███████▊  | 173/221 [01:48<00:29,  1.63it/s][A
 79%|███████▊  | 174/221 [01:49<00:25,  1.83it/s][A
 79%|███████▉  | 175/221 [01:49<00:20,  2.25it/s][A
 80%|███████▉  | 176/221 [01:49<00:18,  2.38it/s][A
 80%|████████  | 177/221 [01:49<00:16,  2.67it/s][A
 81%|████████  | 178/221 [01:50<00:16,  2.54it/s][A
 81%|████████  | 179/221 [01:50<00:15,  2.73it/s][A
 81%|████████▏ | 180/221 [01:50<00:13,  3.02it/s][A
 82%|████████▏ | 181/221 [01:51<00:10,  3.70it/s][A
 82%|████████▏ | 182/221 [01:51<00:12,  3.20it/s][A
 83%|████████▎ | 183/221 [01:52<00:15,  2.50it/s][A
 83%|████████▎ | 184/221 [01:52<00:15,  2.41it/s][A
 84%|████████▎ | 185/221 [01:52<00:12,  2.85it/s][A
 84%|████████▍ | 186/221 [01:53<00:11,  2.95it/s][A
 85%|████████▍ | 187/221 [01:53<00:10,  3.32it/s][A
 85%|████████▌ | 188/221 [01:53<00:08,  4.09it/s][A
 86%|████████▌ | 189/221 [01:53<00:09,  3.38it/s][A
 86%|████████▌ | 190/221 [01:54<00:12,  2.52it/s][A
 86%|████████▋ | 191/221 [01:54<00:09,  3.08it/s][A
 87%|████████▋ | 192/221 [01:54<00:09,  3.18it/s][A
 87%|████████▋ | 193/221 [01:55<00:07,  3.78it/s][A
 88%|████████▊ | 194/221 [01:55<00:09,  2.94it/s][A
 88%|████████▊ | 195/221 [01:55<00:08,  3.19it/s][A
 89%|████████▊ | 196/221 [01:56<00:07,  3.23it/s][A
 89%|████████▉ | 197/221 [01:56<00:06,  3.56it/s][A
 90%|████████▉ | 198/221 [01:56<00:06,  3.42it/s][A
 90%|█████████ | 199/221 [01:56<00:05,  3.80it/s][A
 90%|█████████ | 200/221 [01:57<00:07,  2.75it/s][A
 91%|█████████ | 201/221 [01:58<00:09,  2.08it/s][A
 91%|█████████▏| 202/221 [01:58<00:07,  2.61it/s][A
 92%|█████████▏| 203/221 [01:59<00:09,  1.80it/s][A
 92%|█████████▏| 204/221 [01:59<00:08,  2.05it/s][A
 93%|█████████▎| 206/221 [01:59<00:04,  3.10it/s][A
 94%|█████████▎| 207/221 [01:59<00:03,  3.70it/s][A
 94%|█████████▍| 208/221 [02:00<00:03,  3.42it/s][A
 95%|█████████▌| 210/221 [02:00<00:02,  5.04it/s][A
 95%|█████████▌| 211/221 [02:01<00:03,  3.03it/s][A
 96%|█████████▌| 212/221 [02:01<00:02,  3.13it/s][A
 96%|█████████▋| 213/221 [02:01<00:02,  3.67it/s][A
 97%|█████████▋| 214/221 [02:02<00:02,  3.36it/s][A
 97%|█████████▋| 215/221 [02:02<00:01,  3.56it/s][A
 98%|█████████▊| 216/221 [02:02<00:01,  3.34it/s][A
 98%|█████████▊| 217/221 [02:04<00:03,  1.26it/s][A
 99%|█████████▊| 218/221 [02:04<00:01,  1.51it/s][A
 99%|█████████▉| 219/221 [02:05<00:01,  1.71it/s][A
100%|█████████▉| 220/221 [02:05<00:00,  1.92it/s][A
100%|██████████| 221/221 [02:05<00:00,  2.39it/s][A100%|██████████| 221/221 [02:05<00:00,  1.76it/s]

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:00<01:56,  1.89it/s][A
  1%|          | 2/221 [00:01<01:55,  1.89it/s][A
  1%|▏         | 3/221 [00:01<01:55,  1.89it/s][A
  2%|▏         | 4/221 [00:02<01:54,  1.89it/s][A
  2%|▏         | 5/221 [00:02<01:54,  1.89it/s][A
  3%|▎         | 6/221 [00:03<01:53,  1.89it/s][A
  3%|▎         | 7/221 [00:03<01:53,  1.89it/s][A
  4%|▎         | 8/221 [00:04<01:52,  1.89it/s][A
  4%|▍         | 9/221 [00:04<01:52,  1.89it/s][A
  5%|▍         | 10/221 [00:05<01:51,  1.89it/s][A
  5%|▍         | 11/221 [00:05<01:50,  1.89it/s][A
  5%|▌         | 12/221 [00:06<01:50,  1.89it/s][A
  6%|▌         | 13/221 [00:06<01:49,  1.89it/s][A
  6%|▋         | 14/221 [00:07<01:49,  1.89it/s][A
  7%|▋         | 15/221 [00:07<01:48,  1.89it/s][A
  7%|▋         | 16/221 [00:08<01:48,  1.89it/s][A
  8%|▊         | 17/221 [00:08<01:47,  1.89it/s][A
  8%|▊         | 18/221 [00:09<01:47,  1.89it/s][A
  9%|▊         | 19/221 [00:10<01:46,  1.89it/s][A
  9%|▉         | 20/221 [00:10<01:46,  1.89it/s][A
 10%|▉         | 21/221 [00:11<01:45,  1.89it/s][A
 10%|▉         | 22/221 [00:11<01:45,  1.89it/s][A
 10%|█         | 23/221 [00:12<01:44,  1.89it/s][A
 11%|█         | 24/221 [00:12<01:44,  1.89it/s][A
 11%|█▏        | 25/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 26/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 27/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 28/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 29/221 [00:15<01:41,  1.89it/s][A
 14%|█▎        | 30/221 [00:15<01:40,  1.89it/s][A
 14%|█▍        | 31/221 [00:16<01:40,  1.89it/s][A
 14%|█▍        | 32/221 [00:16<01:39,  1.89it/s][A
 15%|█▍        | 33/221 [00:17<01:39,  1.89it/s][A
 15%|█▌        | 34/221 [00:17<01:38,  1.89it/s][A
 16%|█▌        | 35/221 [00:18<01:38,  1.89it/s][A
 16%|█▋        | 36/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 37/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 38/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 39/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 40/221 [00:21<01:35,  1.89it/s][A
 19%|█▊        | 41/221 [00:21<01:35,  1.89it/s][A
 19%|█▉        | 42/221 [00:22<01:34,  1.89it/s][A
 19%|█▉        | 43/221 [00:22<01:34,  1.89it/s][A
 20%|█▉        | 44/221 [00:23<01:33,  1.89it/s][A
 20%|██        | 45/221 [00:23<01:33,  1.89it/s][A
 21%|██        | 46/221 [00:24<01:32,  1.89it/s][A
 21%|██▏       | 47/221 [00:24<01:32,  1.89it/s][A
 22%|██▏       | 48/221 [00:25<01:31,  1.89it/s][A
 22%|██▏       | 49/221 [00:25<01:30,  1.89it/s][A
 23%|██▎       | 50/221 [00:26<01:30,  1.89it/s][A
 23%|██▎       | 51/221 [00:26<01:29,  1.89it/s][A
 24%|██▎       | 52/221 [00:27<01:29,  1.89it/s][A
 24%|██▍       | 53/221 [00:28<01:28,  1.89it/s][A
 24%|██▍       | 54/221 [00:28<01:28,  1.89it/s][A
 25%|██▍       | 55/221 [00:29<01:27,  1.89it/s][A
 25%|██▌       | 56/221 [00:29<01:27,  1.89it/s][A
 26%|██▌       | 57/221 [00:30<01:26,  1.89it/s][A
 26%|██▌       | 58/221 [00:30<01:26,  1.89it/s][A
 27%|██▋       | 59/221 [00:31<01:25,  1.89it/s][A
 27%|██▋       | 60/221 [00:31<01:25,  1.89it/s][A
 28%|██▊       | 61/221 [00:32<01:24,  1.89it/s][A
 28%|██▊       | 62/221 [00:32<01:24,  1.89it/s][A
 29%|██▊       | 63/221 [00:33<01:23,  1.89it/s][A
 29%|██▉       | 64/221 [00:33<01:22,  1.89it/s][A
 29%|██▉       | 65/221 [00:34<01:22,  1.89it/s][A
 30%|██▉       | 66/221 [00:34<01:21,  1.89it/s][A
 30%|███       | 67/221 [00:35<01:21,  1.89it/s][A
 31%|███       | 68/221 [00:35<01:20,  1.89it/s][A
 31%|███       | 69/221 [00:36<01:20,  1.89it/s][A
 32%|███▏      | 70/221 [00:36<01:19,  1.89it/s][A
 32%|███▏      | 71/221 [00:37<01:19,  1.89it/s][A
 33%|███▎      | 72/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 73/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 74/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 75/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 76/221 [00:40<01:16,  1.89it/s][A
 35%|███▍      | 77/221 [00:40<01:16,  1.89it/s][A
 35%|███▌      | 78/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 79/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 80/221 [00:42<01:14,  1.89it/s][A
 37%|███▋      | 81/221 [00:42<01:13,  1.89it/s][A
 37%|███▋      | 82/221 [00:43<01:13,  1.89it/s][A
 38%|███▊      | 83/221 [00:43<01:12,  1.89it/s][A
 38%|███▊      | 84/221 [00:44<01:12,  1.89it/s][A
 38%|███▊      | 85/221 [00:44<01:11,  1.89it/s][A
 39%|███▉      | 86/221 [00:45<01:11,  1.89it/s][A
 39%|███▉      | 87/221 [00:45<01:10,  1.89it/s][A
 40%|███▉      | 88/221 [00:46<01:10,  1.89it/s][A
 40%|████      | 89/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 90/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 91/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 92/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 93/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 94/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 95/221 [00:50<01:06,  1.89it/s][A
 43%|████▎     | 96/221 [00:50<01:06,  1.89it/s][A
 44%|████▍     | 97/221 [00:51<01:05,  1.89it/s][A
 44%|████▍     | 98/221 [00:51<01:05,  1.89it/s][A
 45%|████▍     | 99/221 [00:52<01:04,  1.89it/s][A
 45%|████▌     | 100/221 [00:52<01:03,  1.89it/s][A
 46%|████▌     | 101/221 [00:53<01:03,  1.89it/s][A
 46%|████▌     | 102/221 [00:53<01:02,  1.89it/s][A
 47%|████▋     | 103/221 [00:54<01:02,  1.89it/s][A
 47%|████▋     | 104/221 [00:54<01:01,  1.89it/s][A
 48%|████▊     | 105/221 [00:55<01:01,  1.89it/s][A
 48%|████▊     | 106/221 [00:56<01:00,  1.89it/s][A
 48%|████▊     | 107/221 [00:56<01:00,  1.89it/s][A
 49%|████▉     | 108/221 [00:57<00:59,  1.89it/s][A
 49%|████▉     | 109/221 [00:57<00:59,  1.89it/s][A
 50%|████▉     | 110/221 [00:58<00:58,  1.89it/s][A
 50%|█████     | 111/221 [00:58<00:58,  1.89it/s][A
 51%|█████     | 112/221 [00:59<00:57,  1.89it/s][A
 51%|█████     | 113/221 [00:59<00:57,  1.89it/s][A
 52%|█████▏    | 114/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 115/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 116/221 [01:01<00:55,  1.89it/s][A
 53%|█████▎    | 117/221 [01:01<00:54,  1.89it/s][A
 53%|█████▎    | 118/221 [01:02<00:54,  1.89it/s][A
 54%|█████▍    | 119/221 [01:02<00:53,  1.89it/s][A
 54%|█████▍    | 120/221 [01:03<00:53,  1.89it/s][A
 55%|█████▍    | 121/221 [01:03<00:52,  1.89it/s][A
 55%|█████▌    | 122/221 [01:04<00:52,  1.89it/s][A
 56%|█████▌    | 123/221 [01:05<00:51,  1.89it/s][A
 56%|█████▌    | 124/221 [01:05<00:51,  1.89it/s][A
 57%|█████▋    | 125/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 126/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 127/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 128/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 129/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 130/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 131/221 [01:09<00:47,  1.89it/s][A
 60%|█████▉    | 132/221 [01:09<00:47,  1.89it/s][A
 60%|██████    | 133/221 [01:10<00:46,  1.89it/s][A
 61%|██████    | 134/221 [01:10<00:45,  1.89it/s][A
 61%|██████    | 135/221 [01:11<00:45,  1.89it/s][A
 62%|██████▏   | 136/221 [01:11<00:44,  1.89it/s][A
 62%|██████▏   | 137/221 [01:12<00:44,  1.89it/s][A
 62%|██████▏   | 138/221 [01:12<00:43,  1.89it/s][A
 63%|██████▎   | 139/221 [01:13<00:43,  1.89it/s][A
 63%|██████▎   | 140/221 [01:13<00:42,  1.89it/s][A
 64%|██████▍   | 141/221 [01:14<00:42,  1.89it/s][A
 64%|██████▍   | 142/221 [01:15<00:41,  1.89it/s][A
 65%|██████▍   | 143/221 [01:15<00:41,  1.89it/s][A
 65%|██████▌   | 144/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 145/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 146/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 147/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 148/221 [01:18<00:38,  1.89it/s][A
 67%|██████▋   | 149/221 [01:18<00:38,  1.89it/s][A
 68%|██████▊   | 150/221 [01:19<00:37,  1.89it/s][A
 68%|██████▊   | 151/221 [01:19<00:36,  1.89it/s][A
 69%|██████▉   | 152/221 [01:20<00:36,  1.89it/s][A
 69%|██████▉   | 153/221 [01:20<00:35,  1.89it/s][A
 70%|██████▉   | 154/221 [01:21<00:35,  1.89it/s][A
 70%|███████   | 155/221 [01:21<00:34,  1.89it/s][A
 71%|███████   | 156/221 [01:22<00:34,  1.89it/s][A
 71%|███████   | 157/221 [01:22<00:33,  1.89it/s][A
 71%|███████▏  | 158/221 [01:23<00:33,  1.89it/s][A
 72%|███████▏  | 159/221 [01:24<00:32,  1.89it/s][A
 72%|███████▏  | 160/221 [01:24<00:32,  1.89it/s][A
 73%|███████▎  | 161/221 [01:25<00:31,  1.89it/s][A
 73%|███████▎  | 162/221 [01:25<00:31,  1.89it/s][A
 74%|███████▍  | 163/221 [01:26<00:30,  1.89it/s][A
 74%|███████▍  | 164/221 [01:26<00:30,  1.89it/s][A
 75%|███████▍  | 165/221 [01:27<00:29,  1.89it/s][A
 75%|███████▌  | 166/221 [01:27<00:29,  1.89it/s][A
 76%|███████▌  | 167/221 [01:28<00:28,  1.89it/s][A
 76%|███████▌  | 168/221 [01:28<00:28,  1.89it/s][A
 76%|███████▋  | 169/221 [01:29<00:27,  1.89it/s][A
 77%|███████▋  | 170/221 [01:29<00:26,  1.89it/s][A
 77%|███████▋  | 171/221 [01:30<00:26,  1.89it/s][A
 78%|███████▊  | 172/221 [01:30<00:25,  1.89it/s][A
 78%|███████▊  | 173/221 [01:31<00:25,  1.89it/s][A
 79%|███████▊  | 174/221 [01:31<00:24,  1.89it/s][A
 79%|███████▉  | 175/221 [01:32<00:24,  1.89it/s][A
 80%|███████▉  | 176/221 [01:33<00:23,  1.89it/s][A
 80%|████████  | 177/221 [01:33<00:23,  1.89it/s][A
 81%|████████  | 178/221 [01:34<00:22,  1.89it/s][A
 81%|████████  | 179/221 [01:34<00:22,  1.89it/s][A
 81%|████████▏ | 180/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 181/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 182/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 183/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 184/221 [01:37<00:19,  1.89it/s][A
 84%|████████▎ | 185/221 [01:37<00:19,  1.89it/s][A
 84%|████████▍ | 186/221 [01:38<00:18,  1.89it/s][A
 85%|████████▍ | 187/221 [01:38<00:17,  1.89it/s][A
 85%|████████▌ | 188/221 [01:39<00:17,  1.89it/s][A
 86%|████████▌ | 189/221 [01:39<00:16,  1.89it/s][A
 86%|████████▌ | 190/221 [01:40<00:16,  1.89it/s][A
 86%|████████▋ | 191/221 [01:40<00:15,  1.89it/s][A
 87%|████████▋ | 192/221 [01:41<00:15,  1.89it/s][A
 87%|████████▋ | 193/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 194/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 195/221 [01:43<00:13,  1.89it/s][A
 89%|████████▊ | 196/221 [01:43<00:13,  1.89it/s][A
 89%|████████▉ | 197/221 [01:44<00:12,  1.89it/s][A
 90%|████████▉ | 198/221 [01:44<00:12,  1.89it/s][A
 90%|█████████ | 199/221 [01:45<00:11,  1.89it/s][A
 90%|█████████ | 200/221 [01:45<00:11,  1.89it/s][A
 91%|█████████ | 201/221 [01:46<00:10,  1.89it/s][A
 91%|█████████▏| 202/221 [01:46<00:10,  1.89it/s][A
 92%|█████████▏| 203/221 [01:47<00:09,  1.89it/s][A
 92%|█████████▏| 204/221 [01:47<00:08,  1.89it/s][A
 93%|█████████▎| 205/221 [01:48<00:08,  1.89it/s][A
 93%|█████████▎| 206/221 [01:48<00:07,  1.89it/s][A
 94%|█████████▎| 207/221 [01:49<00:07,  1.89it/s][A
 94%|█████████▍| 208/221 [01:49<00:06,  1.89it/s][A
 95%|█████████▍| 209/221 [01:50<00:06,  1.89it/s][A
 95%|█████████▌| 210/221 [01:50<00:05,  1.89it/s][A
 95%|█████████▌| 211/221 [01:51<00:05,  1.89it/s][A
 96%|█████████▌| 212/221 [01:52<00:04,  1.89it/s][A
 96%|█████████▋| 213/221 [01:52<00:04,  1.89it/s][A
 97%|█████████▋| 214/221 [01:53<00:03,  1.89it/s][A
 97%|█████████▋| 215/221 [01:53<00:03,  1.89it/s][A
 98%|█████████▊| 216/221 [01:54<00:02,  1.89it/s][A
 98%|█████████▊| 217/221 [01:54<00:02,  1.89it/s][A
 99%|█████████▊| 218/221 [01:55<00:01,  1.89it/s][A
 99%|█████████▉| 219/221 [01:55<00:01,  1.89it/s][A
100%|█████████▉| 220/221 [01:56<00:00,  1.89it/s][A
100%|██████████| 221/221 [01:56<00:00,  1.89it/s][A100%|██████████| 221/221 [01:56<00:00,  1.89it/s]
09/20/2024 06:05:13 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_forward=====step 3499--===========

09/20/2024 06:05:13 - INFO - __main__ -   {'area_r1': 44.5, 'area_recall': '44.5/73.0/83.1', 'area_ravg': 66.9}
09/20/2024 06:05:13 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_backard=====step 3499--===========

09/20/2024 06:05:13 - INFO - __main__ -   {'forward_r1': 49.9, 'forward_recall': '49.9/79.0/86.7', 'forward_ravg': 71.8}
09/20/2024 06:05:13 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video=====step 3499--===========

09/20/2024 06:05:13 - INFO - __main__ -   {'area_video_r1': 50.3, 'area_video_recall': '50.3/78.1/86.7', 'area_video_ravg': 71.7}
09/20/2024 06:05:13 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video====history best step: 3499=======

09/20/2024 06:05:13 - INFO - __main__ -   {'area_video_r1': 50.3, 'area_video_recall': '50.3/78.1/86.7', 'area_video_ravg': 71.7}
09/20/2024 06:05:13 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itm_area=====step 3499--===========

09/20/2024 06:05:13 - INFO - __main__ -   {'area_video_r1': 60.5, 'area_video_recall': '60.5/81.8/87.1', 'area_video_ravg': 76.5, 'area_video_back_r1': 59.7, 'area_video_back_recall': '59.7/83.0/91.0', 'area_video_back_ravg': 77.9}
09/20/2024 06:05:13 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itm_area====history best step: 3499=======

09/20/2024 06:05:13 - INFO - __main__ -   {'area_video_r1': 60.5, 'area_video_recall': '60.5/81.8/87.1', 'area_video_ravg': 76.5, 'area_video_back_r1': 59.7, 'area_video_back_recall': '59.7/83.0/91.0', 'area_video_back_ravg': 77.9}
09/20/2024 06:05:13 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas=====step 3499--===========

09/20/2024 06:05:13 - INFO - __main__ -   {'video_r1': 31.9, 'video_recall': '31.9/56.4/67.8', 'video_ravg': 52.0}
09/20/2024 06:05:13 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas====history best step: 1499=======

09/20/2024 06:05:13 - INFO - __main__ -   {'video_r1': 34.7, 'video_recall': '34.7/60.5/72.3', 'video_ravg': 55.8}
09/20/2024 06:05:45 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.017187990248203278, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.1483142375946045, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.1655021905899048}
 35%|███▌      | 3500/9908 [4:29:14<240:43:59, 135.24s/it] 35%|███▌      | 3501/9908 [4:29:17<170:11:05, 95.62s/it]  35%|███▌      | 3502/9908 [4:29:21<120:54:16, 67.95s/it] 35%|███▌      | 3503/9908 [4:29:25<86:39:55, 48.71s/it]  35%|███▌      | 3504/9908 [4:29:28<62:40:52, 35.24s/it] 35%|███▌      | 3505/9908 [4:29:32<45:49:55, 25.77s/it] 35%|███▌      | 3506/9908 [4:29:36<34:00:02, 19.12s/it] 35%|███▌      | 3507/9908 [4:29:39<25:40:56, 14.44s/it] 35%|███▌      | 3508/9908 [4:29:43<20:09:40, 11.34s/it] 35%|███▌      | 3509/9908 [4:29:47<16:03:11,  9.03s/it] 35%|███▌      | 3510/9908 [4:29:51<13:19:00,  7.49s/it] 35%|███▌      | 3511/9908 [4:29:55<11:28:10,  6.45s/it] 35%|███▌      | 3512/9908 [4:29:59<10:06:51,  5.69s/it] 35%|███▌      | 3513/9908 [4:30:02<8:55:15,  5.02s/it]  35%|███▌      | 3514/9908 [4:30:06<8:19:13,  4.68s/it] 35%|███▌      | 3515/9908 [4:30:10<7:38:02,  4.30s/it] 35%|███▌      | 3516/9908 [4:30:13<7:17:12,  4.10s/it] 35%|███▌      | 3517/9908 [4:30:17<7:10:21,  4.04s/it] 36%|███▌      | 3518/9908 [4:30:21<7:03:42,  3.98s/it] 36%|███▌      | 3519/9908 [4:30:25<6:51:01,  3.86s/it] 36%|███▌      | 3520/9908 [4:30:29<6:54:09,  3.89s/it] 36%|███▌      | 3521/9908 [4:30:32<6:52:23,  3.87s/it] 36%|███▌      | 3522/9908 [4:30:36<6:49:05,  3.84s/it] 36%|███▌      | 3523/9908 [4:30:40<6:40:15,  3.76s/it] 36%|███▌      | 3524/9908 [4:30:43<6:32:26,  3.69s/it] 36%|███▌      | 3525/9908 [4:30:47<6:23:17,  3.60s/it] 36%|███▌      | 3526/9908 [4:30:50<6:30:55,  3.68s/it] 36%|███▌      | 3527/9908 [4:30:54<6:29:52,  3.67s/it] 36%|███▌      | 3528/9908 [4:30:57<6:18:51,  3.56s/it] 36%|███▌      | 3529/9908 [4:31:01<6:20:15,  3.58s/it] 36%|███▌      | 3530/9908 [4:31:05<6:21:57,  3.59s/it] 36%|███▌      | 3531/9908 [4:31:08<6:25:10,  3.62s/it] 36%|███▌      | 3532/9908 [4:31:12<6:36:43,  3.73s/it] 36%|███▌      | 3533/9908 [4:31:17<6:55:12,  3.91s/it] 36%|███▌      | 3534/9908 [4:31:20<6:43:53,  3.80s/it] 36%|███▌      | 3535/9908 [4:31:24<6:36:07,  3.73s/it] 36%|███▌      | 3536/9908 [4:31:27<6:28:25,  3.66s/it] 36%|███▌      | 3537/9908 [4:31:31<6:30:20,  3.68s/it] 36%|███▌      | 3538/9908 [4:31:35<6:24:57,  3.63s/it] 36%|███▌      | 3539/9908 [4:31:38<6:23:32,  3.61s/it] 36%|███▌      | 3540/9908 [4:31:42<6:22:01,  3.60s/it] 36%|███▌      | 3541/9908 [4:31:46<6:40:56,  3.78s/it] 36%|███▌      | 3542/9908 [4:31:49<6:33:34,  3.71s/it] 36%|███▌      | 3543/9908 [4:31:53<6:31:49,  3.69s/it] 36%|███▌      | 3544/9908 [4:31:57<6:24:10,  3.62s/it] 36%|███▌      | 3545/9908 [4:32:00<6:16:30,  3.55s/it] 36%|███▌      | 3546/9908 [4:32:04<6:21:55,  3.60s/it] 36%|███▌      | 3547/9908 [4:32:07<6:26:52,  3.65s/it] 36%|███▌      | 3548/9908 [4:32:11<6:30:26,  3.68s/it] 36%|███▌      | 3549/9908 [4:32:15<6:46:16,  3.83s/it]09/20/2024 06:08:50 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.0341661311686039, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.101820468902588, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.135986566543579}
 36%|███▌      | 3550/9908 [4:32:19<6:45:22,  3.83s/it] 36%|███▌      | 3551/9908 [4:32:23<6:44:07,  3.81s/it] 36%|███▌      | 3552/9908 [4:32:27<6:41:39,  3.79s/it] 36%|███▌      | 3553/9908 [4:32:30<6:41:47,  3.79s/it] 36%|███▌      | 3554/9908 [4:32:34<6:35:23,  3.73s/it] 36%|███▌      | 3555/9908 [4:32:38<6:43:53,  3.81s/it] 36%|███▌      | 3556/9908 [4:32:42<6:36:29,  3.75s/it] 36%|███▌      | 3557/9908 [4:32:45<6:35:25,  3.74s/it] 36%|███▌      | 3558/9908 [4:32:49<6:30:51,  3.69s/it] 36%|███▌      | 3559/9908 [4:32:53<6:31:50,  3.70s/it] 36%|███▌      | 3560/9908 [4:32:57<6:39:38,  3.78s/it] 36%|███▌      | 3561/9908 [4:33:00<6:26:28,  3.65s/it] 36%|███▌      | 3562/9908 [4:33:04<6:34:53,  3.73s/it] 36%|███▌      | 3563/9908 [4:33:07<6:26:21,  3.65s/it] 36%|███▌      | 3564/9908 [4:33:11<6:31:23,  3.70s/it] 36%|███▌      | 3565/9908 [4:33:15<6:37:45,  3.76s/it] 36%|███▌      | 3566/9908 [4:33:19<6:35:45,  3.74s/it] 36%|███▌      | 3567/9908 [4:33:22<6:31:17,  3.70s/it] 36%|███▌      | 3568/9908 [4:33:26<6:35:02,  3.74s/it] 36%|███▌      | 3569/9908 [4:33:30<6:37:42,  3.76s/it] 36%|███▌      | 3570/9908 [4:33:34<6:34:35,  3.74s/it] 36%|███▌      | 3571/9908 [4:33:38<6:46:35,  3.85s/it] 36%|███▌      | 3572/9908 [4:33:41<6:31:00,  3.70s/it] 36%|███▌      | 3573/9908 [4:33:45<6:38:23,  3.77s/it] 36%|███▌      | 3574/9908 [4:33:49<6:40:53,  3.80s/it] 36%|███▌      | 3575/9908 [4:33:53<6:49:59,  3.88s/it] 36%|███▌      | 3576/9908 [4:33:57<6:38:02,  3.77s/it] 36%|███▌      | 3577/9908 [4:34:00<6:35:31,  3.75s/it] 36%|███▌      | 3578/9908 [4:34:04<6:32:57,  3.72s/it] 36%|███▌      | 3579/9908 [4:34:07<6:26:50,  3.67s/it] 36%|███▌      | 3580/9908 [4:34:11<6:25:13,  3.65s/it] 36%|███▌      | 3581/9908 [4:34:15<6:37:37,  3.77s/it] 36%|███▌      | 3582/9908 [4:34:19<6:35:36,  3.75s/it] 36%|███▌      | 3583/9908 [4:34:23<6:33:09,  3.73s/it] 36%|███▌      | 3584/9908 [4:34:26<6:37:05,  3.77s/it] 36%|███▌      | 3585/9908 [4:34:30<6:30:11,  3.70s/it] 36%|███▌      | 3586/9908 [4:34:34<6:33:51,  3.74s/it] 36%|███▌      | 3587/9908 [4:34:37<6:27:53,  3.68s/it] 36%|███▌      | 3588/9908 [4:34:41<6:29:16,  3.70s/it] 36%|███▌      | 3589/9908 [4:34:45<6:37:31,  3.77s/it] 36%|███▌      | 3590/9908 [4:34:48<6:28:02,  3.69s/it] 36%|███▌      | 3591/9908 [4:34:52<6:36:14,  3.76s/it] 36%|███▋      | 3592/9908 [4:34:56<6:26:31,  3.67s/it] 36%|███▋      | 3593/9908 [4:35:00<6:29:39,  3.70s/it] 36%|███▋      | 3594/9908 [4:35:03<6:30:35,  3.71s/it] 36%|███▋      | 3595/9908 [4:35:07<6:29:47,  3.70s/it] 36%|███▋      | 3596/9908 [4:35:11<6:27:37,  3.68s/it] 36%|███▋      | 3597/9908 [4:35:14<6:20:28,  3.62s/it] 36%|███▋      | 3598/9908 [4:35:18<6:33:10,  3.74s/it] 36%|███▋      | 3599/9908 [4:35:22<6:20:20,  3.62s/it]09/20/2024 06:11:56 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03126071020960808, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.323446273803711, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.3547070026397705}
 36%|███▋      | 3600/9908 [4:35:26<6:33:48,  3.75s/it] 36%|███▋      | 3601/9908 [4:35:29<6:37:27,  3.78s/it] 36%|███▋      | 3602/9908 [4:35:33<6:43:01,  3.83s/it] 36%|███▋      | 3603/9908 [4:35:37<6:28:22,  3.70s/it] 36%|███▋      | 3604/9908 [4:35:40<6:28:27,  3.70s/it] 36%|███▋      | 3605/9908 [4:35:44<6:25:49,  3.67s/it] 36%|███▋      | 3606/9908 [4:35:48<6:31:20,  3.73s/it] 36%|███▋      | 3607/9908 [4:35:52<6:31:19,  3.73s/it] 36%|███▋      | 3608/9908 [4:35:56<6:58:56,  3.99s/it] 36%|███▋      | 3609/9908 [4:36:00<6:41:18,  3.82s/it] 36%|███▋      | 3610/9908 [4:36:03<6:33:48,  3.75s/it] 36%|███▋      | 3611/9908 [4:36:07<6:43:01,  3.84s/it] 36%|███▋      | 3612/9908 [4:36:11<6:35:10,  3.77s/it] 36%|███▋      | 3613/9908 [4:36:15<6:33:01,  3.75s/it] 36%|███▋      | 3614/9908 [4:36:18<6:29:36,  3.71s/it] 36%|███▋      | 3615/9908 [4:36:22<6:35:52,  3.77s/it] 36%|███▋      | 3616/9908 [4:36:26<6:28:57,  3.71s/it] 37%|███▋      | 3617/9908 [4:36:30<6:32:58,  3.75s/it] 37%|███▋      | 3618/9908 [4:36:33<6:29:24,  3.71s/it] 37%|███▋      | 3619/9908 [4:36:37<6:23:01,  3.65s/it] 37%|███▋      | 3620/9908 [4:36:41<6:34:12,  3.76s/it] 37%|███▋      | 3621/9908 [4:36:44<6:22:56,  3.65s/it] 37%|███▋      | 3622/9908 [4:36:48<6:31:38,  3.74s/it] 37%|███▋      | 3623/9908 [4:36:52<6:28:40,  3.71s/it] 37%|███▋      | 3624/9908 [4:36:55<6:30:16,  3.73s/it] 37%|███▋      | 3625/9908 [4:36:59<6:28:19,  3.71s/it] 37%|███▋      | 3626/9908 [4:37:03<6:39:11,  3.81s/it] 37%|███▋      | 3627/9908 [4:37:07<6:24:19,  3.67s/it] 37%|███▋      | 3628/9908 [4:37:10<6:23:43,  3.67s/it] 37%|███▋      | 3629/9908 [4:37:14<6:24:27,  3.67s/it] 37%|███▋      | 3630/9908 [4:37:17<6:20:51,  3.64s/it] 37%|███▋      | 3631/9908 [4:37:21<6:29:47,  3.73s/it] 37%|███▋      | 3632/9908 [4:37:25<6:33:02,  3.76s/it] 37%|███▋      | 3633/9908 [4:37:29<6:28:12,  3.71s/it] 37%|███▋      | 3634/9908 [4:37:33<6:29:58,  3.73s/it] 37%|███▋      | 3635/9908 [4:37:36<6:24:47,  3.68s/it] 37%|███▋      | 3636/9908 [4:37:40<6:27:53,  3.71s/it] 37%|███▋      | 3637/9908 [4:37:44<6:33:35,  3.77s/it] 37%|███▋      | 3638/9908 [4:37:48<6:34:07,  3.77s/it] 37%|███▋      | 3639/9908 [4:37:51<6:27:42,  3.71s/it] 37%|███▋      | 3640/9908 [4:37:55<6:18:17,  3.62s/it] 37%|███▋      | 3641/9908 [4:37:58<6:23:29,  3.67s/it] 37%|███▋      | 3642/9908 [4:38:02<6:29:26,  3.73s/it] 37%|███▋      | 3643/9908 [4:38:06<6:15:57,  3.60s/it] 37%|███▋      | 3644/9908 [4:38:09<6:11:10,  3.56s/it] 37%|███▋      | 3645/9908 [4:38:13<6:19:02,  3.63s/it] 37%|███▋      | 3646/9908 [4:38:16<6:18:31,  3.63s/it] 37%|███▋      | 3647/9908 [4:38:21<6:34:35,  3.78s/it] 37%|███▋      | 3648/9908 [4:38:24<6:39:01,  3.82s/it] 37%|███▋      | 3649/9908 [4:38:28<6:34:47,  3.78s/it]09/20/2024 06:15:03 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.02747582457959652, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.145585060119629, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.1730608940124512}
 37%|███▋      | 3650/9908 [4:38:32<6:28:00,  3.72s/it] 37%|███▋      | 3651/9908 [4:38:36<6:40:28,  3.84s/it] 37%|███▋      | 3652/9908 [4:38:40<6:35:33,  3.79s/it] 37%|███▋      | 3653/9908 [4:38:43<6:29:28,  3.74s/it] 37%|███▋      | 3654/9908 [4:38:47<6:30:05,  3.74s/it] 37%|███▋      | 3655/9908 [4:38:51<6:37:12,  3.81s/it] 37%|███▋      | 3656/9908 [4:38:54<6:29:29,  3.74s/it] 37%|███▋      | 3657/9908 [4:38:59<6:38:59,  3.83s/it] 37%|███▋      | 3658/9908 [4:39:03<6:55:36,  3.99s/it] 37%|███▋      | 3659/9908 [4:39:06<6:38:51,  3.83s/it] 37%|███▋      | 3660/9908 [4:39:10<6:26:37,  3.71s/it] 37%|███▋      | 3661/9908 [4:39:14<6:33:29,  3.78s/it] 37%|███▋      | 3662/9908 [4:39:18<6:35:48,  3.80s/it] 37%|███▋      | 3663/9908 [4:39:21<6:29:16,  3.74s/it] 37%|███▋      | 3664/9908 [4:39:25<6:30:13,  3.75s/it] 37%|███▋      | 3665/9908 [4:39:29<6:29:08,  3.74s/it] 37%|███▋      | 3666/9908 [4:39:32<6:29:16,  3.74s/it] 37%|███▋      | 3667/9908 [4:39:36<6:27:49,  3.73s/it] 37%|███▋      | 3668/9908 [4:39:40<6:46:07,  3.91s/it] 37%|███▋      | 3669/9908 [4:39:44<6:46:11,  3.91s/it] 37%|███▋      | 3670/9908 [4:39:48<6:45:22,  3.90s/it] 37%|███▋      | 3671/9908 [4:39:52<6:41:52,  3.87s/it] 37%|███▋      | 3672/9908 [4:39:56<6:48:41,  3.93s/it] 37%|███▋      | 3673/9908 [4:40:00<6:41:59,  3.87s/it] 37%|███▋      | 3674/9908 [4:40:04<6:43:04,  3.88s/it] 37%|███▋      | 3675/9908 [4:40:07<6:35:56,  3.81s/it] 37%|███▋      | 3676/9908 [4:40:11<6:26:14,  3.72s/it] 37%|███▋      | 3677/9908 [4:40:15<6:30:35,  3.76s/it] 37%|███▋      | 3678/9908 [4:40:19<6:45:25,  3.90s/it] 37%|███▋      | 3679/9908 [4:40:22<6:28:43,  3.74s/it] 37%|███▋      | 3680/9908 [4:40:26<6:28:01,  3.74s/it] 37%|███▋      | 3681/9908 [4:40:30<6:34:01,  3.80s/it] 37%|███▋      | 3682/9908 [4:40:34<6:39:07,  3.85s/it] 37%|███▋      | 3683/9908 [4:40:38<6:31:22,  3.77s/it] 37%|███▋      | 3684/9908 [4:40:41<6:28:32,  3.75s/it] 37%|███▋      | 3685/9908 [4:40:45<6:31:25,  3.77s/it] 37%|███▋      | 3686/9908 [4:40:49<6:26:52,  3.73s/it] 37%|███▋      | 3687/9908 [4:40:53<6:30:38,  3.77s/it] 37%|███▋      | 3688/9908 [4:40:56<6:32:18,  3.78s/it] 37%|███▋      | 3689/9908 [4:41:00<6:17:30,  3.64s/it] 37%|███▋      | 3690/9908 [4:41:03<6:15:22,  3.62s/it] 37%|███▋      | 3691/9908 [4:41:07<6:24:13,  3.71s/it] 37%|███▋      | 3692/9908 [4:41:11<6:14:13,  3.61s/it] 37%|███▋      | 3693/9908 [4:41:14<6:17:32,  3.64s/it] 37%|███▋      | 3694/9908 [4:41:18<6:15:36,  3.63s/it] 37%|███▋      | 3695/9908 [4:41:22<6:22:52,  3.70s/it] 37%|███▋      | 3696/9908 [4:41:25<6:22:52,  3.70s/it] 37%|███▋      | 3697/9908 [4:41:29<6:24:06,  3.71s/it] 37%|███▋      | 3698/9908 [4:41:33<6:14:12,  3.62s/it] 37%|███▋      | 3699/9908 [4:41:36<6:14:48,  3.62s/it]09/20/2024 06:18:11 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.01647774688899517, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.146917700767517, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.1633954048156738}
 37%|███▋      | 3700/9908 [4:41:40<6:16:18,  3.64s/it] 37%|███▋      | 3701/9908 [4:41:44<6:19:42,  3.67s/it] 37%|███▋      | 3702/9908 [4:41:48<6:34:10,  3.81s/it] 37%|███▋      | 3703/9908 [4:41:51<6:24:43,  3.72s/it] 37%|███▋      | 3704/9908 [4:41:55<6:17:55,  3.65s/it] 37%|███▋      | 3705/9908 [4:41:58<6:19:10,  3.67s/it] 37%|███▋      | 3706/9908 [4:42:02<6:24:43,  3.72s/it] 37%|███▋      | 3707/9908 [4:42:06<6:19:40,  3.67s/it] 37%|███▋      | 3708/9908 [4:42:10<6:30:13,  3.78s/it] 37%|███▋      | 3709/9908 [4:42:13<6:16:47,  3.65s/it] 37%|███▋      | 3710/9908 [4:42:17<6:17:43,  3.66s/it] 37%|███▋      | 3711/9908 [4:42:21<6:22:32,  3.70s/it] 37%|███▋      | 3712/9908 [4:42:24<6:23:25,  3.71s/it] 37%|███▋      | 3713/9908 [4:42:28<6:17:16,  3.65s/it] 37%|███▋      | 3714/9908 [4:42:32<6:18:14,  3.66s/it] 37%|███▋      | 3715/9908 [4:42:35<6:18:42,  3.67s/it] 38%|███▊      | 3716/9908 [4:42:39<6:07:23,  3.56s/it] 38%|███▊      | 3717/9908 [4:42:43<6:16:59,  3.65s/it] 38%|███▊      | 3718/9908 [4:42:46<6:19:46,  3.68s/it] 38%|███▊      | 3719/9908 [4:42:50<6:20:00,  3.68s/it] 38%|███▊      | 3720/9908 [4:42:53<6:11:33,  3.60s/it] 38%|███▊      | 3721/9908 [4:42:57<6:20:06,  3.69s/it] 38%|███▊      | 3722/9908 [4:43:01<6:22:56,  3.71s/it] 38%|███▊      | 3723/9908 [4:43:05<6:18:16,  3.67s/it] 38%|███▊      | 3724/9908 [4:43:08<6:15:27,  3.64s/it] 38%|███▊      | 3725/9908 [4:43:12<6:18:14,  3.67s/it] 38%|███▊      | 3726/9908 [4:43:16<6:16:25,  3.65s/it] 38%|███▊      | 3727/9908 [4:43:19<6:23:48,  3.73s/it] 38%|███▊      | 3728/9908 [4:43:23<6:19:32,  3.68s/it] 38%|███▊      | 3729/9908 [4:43:27<6:19:43,  3.69s/it] 38%|███▊      | 3730/9908 [4:43:30<6:14:22,  3.64s/it] 38%|███▊      | 3731/9908 [4:43:34<6:11:30,  3.61s/it] 38%|███▊      | 3732/9908 [4:43:38<6:27:12,  3.76s/it] 38%|███▊      | 3733/9908 [4:43:41<6:22:36,  3.72s/it] 38%|███▊      | 3734/9908 [4:43:45<6:18:06,  3.67s/it] 38%|███▊      | 3735/9908 [4:43:49<6:12:48,  3.62s/it] 38%|███▊      | 3736/9908 [4:43:52<6:02:52,  3.53s/it] 38%|███▊      | 3737/9908 [4:43:56<6:08:11,  3.58s/it] 38%|███▊      | 3738/9908 [4:43:59<6:11:59,  3.62s/it] 38%|███▊      | 3739/9908 [4:44:03<6:12:18,  3.62s/it] 38%|███▊      | 3740/9908 [4:44:06<6:07:29,  3.57s/it] 38%|███▊      | 3741/9908 [4:44:10<6:14:34,  3.64s/it] 38%|███▊      | 3742/9908 [4:44:14<6:14:30,  3.64s/it] 38%|███▊      | 3743/9908 [4:44:18<6:18:27,  3.68s/it] 38%|███▊      | 3744/9908 [4:44:21<6:19:49,  3.70s/it] 38%|███▊      | 3745/9908 [4:44:25<6:10:13,  3.60s/it] 38%|███▊      | 3746/9908 [4:44:28<6:05:15,  3.56s/it] 38%|███▊      | 3747/9908 [4:44:32<6:10:14,  3.61s/it] 38%|███▊      | 3748/9908 [4:44:36<6:22:38,  3.73s/it] 38%|███▊      | 3749/9908 [4:44:40<6:21:30,  3.72s/it]09/20/2024 06:21:14 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03118174336850643, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.7531187534332275, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.784300446510315}
 38%|███▊      | 3750/9908 [4:44:43<6:15:10,  3.66s/it] 38%|███▊      | 3751/9908 [4:44:47<6:20:42,  3.71s/it] 38%|███▊      | 3752/9908 [4:44:51<6:30:54,  3.81s/it] 38%|███▊      | 3753/9908 [4:44:55<6:26:52,  3.77s/it] 38%|███▊      | 3754/9908 [4:44:59<6:31:27,  3.82s/it] 38%|███▊      | 3755/9908 [4:45:02<6:31:14,  3.82s/it] 38%|███▊      | 3756/9908 [4:45:06<6:27:43,  3.78s/it] 38%|███▊      | 3757/9908 [4:45:10<6:23:53,  3.74s/it] 38%|███▊      | 3758/9908 [4:45:13<6:17:32,  3.68s/it] 38%|███▊      | 3759/9908 [4:45:17<6:21:28,  3.72s/it] 38%|███▊      | 3760/9908 [4:45:21<6:26:00,  3.77s/it] 38%|███▊      | 3761/9908 [4:45:24<6:16:35,  3.68s/it] 38%|███▊      | 3762/9908 [4:45:28<6:17:42,  3.69s/it] 38%|███▊      | 3763/9908 [4:45:32<6:17:36,  3.69s/it] 38%|███▊      | 3764/9908 [4:45:36<6:23:55,  3.75s/it] 38%|███▊      | 3765/9908 [4:45:39<6:21:47,  3.73s/it] 38%|███▊      | 3766/9908 [4:45:44<6:38:11,  3.89s/it] 38%|███▊      | 3767/9908 [4:45:47<6:32:56,  3.84s/it] 38%|███▊      | 3768/9908 [4:45:51<6:20:32,  3.72s/it] 38%|███▊      | 3769/9908 [4:45:55<6:24:57,  3.76s/it] 38%|███▊      | 3770/9908 [4:45:58<6:16:37,  3.68s/it] 38%|███▊      | 3771/9908 [4:46:02<6:16:00,  3.68s/it] 38%|███▊      | 3772/9908 [4:46:06<6:33:14,  3.85s/it] 38%|███▊      | 3773/9908 [4:46:10<6:38:02,  3.89s/it] 38%|███▊      | 3774/9908 [4:46:14<6:22:40,  3.74s/it] 38%|███▊      | 3775/9908 [4:46:17<6:16:58,  3.69s/it] 38%|███▊      | 3776/9908 [4:46:21<6:23:09,  3.75s/it] 38%|███▊      | 3777/9908 [4:46:25<6:17:29,  3.69s/it] 38%|███▊      | 3778/9908 [4:46:29<6:26:37,  3.78s/it] 38%|███▊      | 3779/9908 [4:46:32<6:24:55,  3.77s/it] 38%|███▊      | 3780/9908 [4:46:36<6:17:34,  3.70s/it] 38%|███▊      | 3781/9908 [4:46:39<6:12:44,  3.65s/it] 38%|███▊      | 3782/9908 [4:46:43<6:12:40,  3.65s/it] 38%|███▊      | 3783/9908 [4:46:47<6:21:34,  3.74s/it] 38%|███▊      | 3784/9908 [4:46:50<6:13:11,  3.66s/it] 38%|███▊      | 3785/9908 [4:46:54<6:09:32,  3.62s/it] 38%|███▊      | 3786/9908 [4:46:58<6:16:46,  3.69s/it] 38%|███▊      | 3787/9908 [4:47:01<6:16:19,  3.69s/it] 38%|███▊      | 3788/9908 [4:47:05<6:22:51,  3.75s/it] 38%|███▊      | 3789/9908 [4:47:09<6:18:53,  3.72s/it] 38%|███▊      | 3790/9908 [4:47:13<6:18:08,  3.71s/it] 38%|███▊      | 3791/9908 [4:47:17<6:26:28,  3.79s/it] 38%|███▊      | 3792/9908 [4:47:20<6:19:58,  3.73s/it] 38%|███▊      | 3793/9908 [4:47:24<6:09:22,  3.62s/it] 38%|███▊      | 3794/9908 [4:47:28<6:17:10,  3.70s/it] 38%|███▊      | 3795/9908 [4:47:31<6:21:57,  3.75s/it] 38%|███▊      | 3796/9908 [4:47:35<6:12:39,  3.66s/it] 38%|███▊      | 3797/9908 [4:47:38<6:02:25,  3.56s/it] 38%|███▊      | 3798/9908 [4:47:42<6:11:58,  3.65s/it] 38%|███▊      | 3799/9908 [4:47:46<6:23:16,  3.76s/it]09/20/2024 06:24:21 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.017976541072130203, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.4389979839324951, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.4569745063781738}
 38%|███▊      | 3800/9908 [4:47:50<6:34:05,  3.87s/it] 38%|███▊      | 3801/9908 [4:47:54<6:20:45,  3.74s/it] 38%|███▊      | 3802/9908 [4:47:57<6:14:25,  3.68s/it] 38%|███▊      | 3803/9908 [4:48:01<6:24:22,  3.78s/it] 38%|███▊      | 3804/9908 [4:48:05<6:20:49,  3.74s/it] 38%|███▊      | 3805/9908 [4:48:09<6:31:14,  3.85s/it] 38%|███▊      | 3806/9908 [4:48:13<6:31:13,  3.85s/it] 38%|███▊      | 3807/9908 [4:48:17<6:29:41,  3.83s/it] 38%|███▊      | 3808/9908 [4:48:20<6:30:18,  3.84s/it] 38%|███▊      | 3809/9908 [4:48:24<6:17:05,  3.71s/it] 38%|███▊      | 3810/9908 [4:48:27<6:15:07,  3.69s/it] 38%|███▊      | 3811/9908 [4:48:31<6:21:48,  3.76s/it] 38%|███▊      | 3812/9908 [4:48:35<6:33:01,  3.87s/it] 38%|███▊      | 3813/9908 [4:48:39<6:30:26,  3.84s/it] 38%|███▊      | 3814/9908 [4:48:43<6:23:26,  3.78s/it] 39%|███▊      | 3815/9908 [4:48:46<6:16:55,  3.71s/it] 39%|███▊      | 3816/9908 [4:48:50<6:18:17,  3.73s/it] 39%|███▊      | 3817/9908 [4:48:54<6:20:17,  3.75s/it] 39%|███▊      | 3818/9908 [4:48:58<6:19:58,  3.74s/it] 39%|███▊      | 3819/9908 [4:49:01<6:16:23,  3.71s/it] 39%|███▊      | 3820/9908 [4:49:06<6:29:56,  3.84s/it] 39%|███▊      | 3821/9908 [4:49:09<6:24:39,  3.79s/it] 39%|███▊      | 3822/9908 [4:49:13<6:21:21,  3.76s/it] 39%|███▊      | 3823/9908 [4:49:17<6:22:55,  3.78s/it] 39%|███▊      | 3824/9908 [4:49:21<6:33:20,  3.88s/it] 39%|███▊      | 3825/9908 [4:49:25<6:29:40,  3.84s/it] 39%|███▊      | 3826/9908 [4:49:28<6:20:15,  3.75s/it] 39%|███▊      | 3827/9908 [4:49:32<6:18:04,  3.73s/it] 39%|███▊      | 3828/9908 [4:49:36<6:19:17,  3.74s/it] 39%|███▊      | 3829/9908 [4:49:39<6:11:51,  3.67s/it] 39%|███▊      | 3830/9908 [4:49:43<6:07:33,  3.63s/it] 39%|███▊      | 3831/9908 [4:49:46<6:09:11,  3.65s/it] 39%|███▊      | 3832/9908 [4:49:50<6:03:18,  3.59s/it] 39%|███▊      | 3833/9908 [4:49:54<6:16:40,  3.72s/it] 39%|███▊      | 3834/9908 [4:49:58<6:25:58,  3.81s/it] 39%|███▊      | 3835/9908 [4:50:01<6:17:34,  3.73s/it] 39%|███▊      | 3836/9908 [4:50:05<6:27:06,  3.83s/it] 39%|███▊      | 3837/9908 [4:50:09<6:15:59,  3.72s/it] 39%|███▊      | 3838/9908 [4:50:13<6:14:30,  3.70s/it] 39%|███▊      | 3839/9908 [4:50:16<6:22:50,  3.78s/it] 39%|███▉      | 3840/9908 [4:50:20<6:16:56,  3.73s/it] 39%|███▉      | 3841/9908 [4:50:24<6:30:16,  3.86s/it] 39%|███▉      | 3842/9908 [4:50:28<6:24:49,  3.81s/it] 39%|███▉      | 3843/9908 [4:50:32<6:32:44,  3.89s/it] 39%|███▉      | 3844/9908 [4:50:36<6:23:50,  3.80s/it] 39%|███▉      | 3845/9908 [4:50:39<6:16:54,  3.73s/it] 39%|███▉      | 3846/9908 [4:50:43<6:05:06,  3.61s/it] 39%|███▉      | 3847/9908 [4:50:46<6:10:52,  3.67s/it] 39%|███▉      | 3848/9908 [4:50:50<6:13:06,  3.69s/it] 39%|███▉      | 3849/9908 [4:50:54<6:15:45,  3.72s/it]09/20/2024 06:27:28 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.025573719292879105, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.667967438697815, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.693541169166565}
 39%|███▉      | 3850/9908 [4:50:57<6:13:08,  3.70s/it] 39%|███▉      | 3851/9908 [4:51:01<6:16:47,  3.73s/it] 39%|███▉      | 3852/9908 [4:51:06<6:31:05,  3.87s/it] 39%|███▉      | 3853/9908 [4:51:09<6:23:49,  3.80s/it] 39%|███▉      | 3854/9908 [4:51:13<6:23:59,  3.81s/it] 39%|███▉      | 3855/9908 [4:51:17<6:22:40,  3.79s/it] 39%|███▉      | 3856/9908 [4:51:21<6:23:47,  3.81s/it] 39%|███▉      | 3857/9908 [4:51:24<6:12:36,  3.69s/it] 39%|███▉      | 3858/9908 [4:51:27<6:06:42,  3.64s/it] 39%|███▉      | 3859/9908 [4:51:31<6:05:31,  3.63s/it] 39%|███▉      | 3860/9908 [4:51:35<6:08:23,  3.65s/it] 39%|███▉      | 3861/9908 [4:51:38<6:01:30,  3.59s/it] 39%|███▉      | 3862/9908 [4:51:42<6:03:41,  3.61s/it] 39%|███▉      | 3863/9908 [4:51:46<6:19:29,  3.77s/it] 39%|███▉      | 3864/9908 [4:51:50<6:26:30,  3.84s/it] 39%|███▉      | 3865/9908 [4:51:54<6:19:31,  3.77s/it] 39%|███▉      | 3866/9908 [4:51:57<6:15:49,  3.73s/it] 39%|███▉      | 3867/9908 [4:52:01<6:13:46,  3.71s/it] 39%|███▉      | 3868/9908 [4:52:05<6:20:22,  3.78s/it] 39%|███▉      | 3869/9908 [4:52:09<6:22:54,  3.80s/it] 39%|███▉      | 3870/9908 [4:52:13<6:21:55,  3.80s/it] 39%|███▉      | 3871/9908 [4:52:16<6:17:05,  3.75s/it] 39%|███▉      | 3872/9908 [4:52:20<6:17:16,  3.75s/it] 39%|███▉      | 3873/9908 [4:52:24<6:23:54,  3.82s/it] 39%|███▉      | 3874/9908 [4:52:28<6:21:38,  3.79s/it] 39%|███▉      | 3875/9908 [4:52:31<6:17:26,  3.75s/it] 39%|███▉      | 3876/9908 [4:52:35<6:14:36,  3.73s/it] 39%|███▉      | 3877/9908 [4:52:39<6:17:44,  3.76s/it] 39%|███▉      | 3878/9908 [4:52:43<6:27:08,  3.85s/it] 39%|███▉      | 3879/9908 [4:52:46<6:19:10,  3.77s/it] 39%|███▉      | 3880/9908 [4:52:50<6:10:08,  3.68s/it] 39%|███▉      | 3881/9908 [4:52:54<6:09:05,  3.67s/it] 39%|███▉      | 3882/9908 [4:52:57<6:03:49,  3.62s/it] 39%|███▉      | 3883/9908 [4:53:01<6:09:16,  3.68s/it] 39%|███▉      | 3884/9908 [4:53:05<6:21:40,  3.80s/it] 39%|███▉      | 3885/9908 [4:53:09<6:21:54,  3.80s/it] 39%|███▉      | 3886/9908 [4:53:12<6:11:54,  3.71s/it] 39%|███▉      | 3887/9908 [4:53:16<6:12:50,  3.72s/it] 39%|███▉      | 3888/9908 [4:53:20<6:21:59,  3.81s/it] 39%|███▉      | 3889/9908 [4:53:24<6:14:07,  3.73s/it] 39%|███▉      | 3890/9908 [4:53:27<6:13:43,  3.73s/it] 39%|███▉      | 3891/9908 [4:53:31<6:13:22,  3.72s/it] 39%|███▉      | 3892/9908 [4:53:35<6:28:16,  3.87s/it] 39%|███▉      | 3893/9908 [4:53:39<6:18:08,  3.77s/it] 39%|███▉      | 3894/9908 [4:53:42<6:13:18,  3.72s/it] 39%|███▉      | 3895/9908 [4:53:46<6:13:34,  3.73s/it] 39%|███▉      | 3896/9908 [4:53:50<6:05:24,  3.65s/it] 39%|███▉      | 3897/9908 [4:53:53<6:00:05,  3.59s/it] 39%|███▉      | 3898/9908 [4:53:57<5:59:56,  3.59s/it] 39%|███▉      | 3899/9908 [4:54:00<6:02:00,  3.61s/it]09/20/2024 06:30:35 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.02284662239253521, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.0897809267044067, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.1126275062561035}
 39%|███▉      | 3900/9908 [4:54:04<6:03:37,  3.63s/it] 39%|███▉      | 3901/9908 [4:54:08<6:09:40,  3.69s/it] 39%|███▉      | 3902/9908 [4:54:12<6:11:21,  3.71s/it] 39%|███▉      | 3903/9908 [4:54:15<6:03:52,  3.64s/it] 39%|███▉      | 3904/9908 [4:54:19<6:12:10,  3.72s/it] 39%|███▉      | 3905/9908 [4:54:22<6:06:13,  3.66s/it] 39%|███▉      | 3906/9908 [4:54:26<5:59:31,  3.59s/it] 39%|███▉      | 3907/9908 [4:54:29<5:52:52,  3.53s/it] 39%|███▉      | 3908/9908 [4:54:33<5:55:56,  3.56s/it] 39%|███▉      | 3909/9908 [4:54:37<6:02:10,  3.62s/it] 39%|███▉      | 3910/9908 [4:54:41<6:22:19,  3.82s/it] 39%|███▉      | 3911/9908 [4:54:45<6:21:22,  3.82s/it] 39%|███▉      | 3912/9908 [4:54:48<6:10:58,  3.71s/it] 39%|███▉      | 3913/9908 [4:54:52<6:05:10,  3.65s/it] 40%|███▉      | 3914/9908 [4:54:56<6:11:35,  3.72s/it] 40%|███▉      | 3915/9908 [4:54:59<6:10:53,  3.71s/it] 40%|███▉      | 3916/9908 [4:55:03<6:08:56,  3.69s/it] 40%|███▉      | 3917/9908 [4:55:07<6:07:44,  3.68s/it] 40%|███▉      | 3918/9908 [4:55:11<6:17:11,  3.78s/it] 40%|███▉      | 3919/9908 [4:55:14<6:12:35,  3.73s/it] 40%|███▉      | 3920/9908 [4:55:17<5:56:27,  3.57s/it] 40%|███▉      | 3921/9908 [4:55:21<5:54:47,  3.56s/it] 40%|███▉      | 3922/9908 [4:55:25<5:58:54,  3.60s/it] 40%|███▉      | 3923/9908 [4:55:28<6:02:15,  3.63s/it] 40%|███▉      | 3924/9908 [4:55:32<5:59:35,  3.61s/it] 40%|███▉      | 3925/9908 [4:55:36<6:00:42,  3.62s/it] 40%|███▉      | 3926/9908 [4:55:39<6:03:16,  3.64s/it] 40%|███▉      | 3927/9908 [4:55:43<6:08:25,  3.70s/it] 40%|███▉      | 3928/9908 [4:55:47<6:09:45,  3.71s/it] 40%|███▉      | 3929/9908 [4:55:51<6:11:32,  3.73s/it] 40%|███▉      | 3930/9908 [4:55:54<6:09:10,  3.71s/it] 40%|███▉      | 3931/9908 [4:55:58<6:19:19,  3.81s/it] 40%|███▉      | 3932/9908 [4:56:02<6:09:21,  3.71s/it] 40%|███▉      | 3933/9908 [4:56:05<6:03:46,  3.65s/it] 40%|███▉      | 3934/9908 [4:56:09<6:01:36,  3.63s/it] 40%|███▉      | 3935/9908 [4:56:13<6:07:32,  3.69s/it] 40%|███▉      | 3936/9908 [4:56:16<6:08:42,  3.70s/it] 40%|███▉      | 3937/9908 [4:56:20<6:09:54,  3.72s/it] 40%|███▉      | 3938/9908 [4:56:24<6:09:13,  3.71s/it] 40%|███▉      | 3939/9908 [4:56:27<5:59:44,  3.62s/it] 40%|███▉      | 3940/9908 [4:56:31<6:09:23,  3.71s/it] 40%|███▉      | 3941/9908 [4:56:35<6:10:16,  3.72s/it] 40%|███▉      | 3942/9908 [4:56:39<6:22:40,  3.85s/it] 40%|███▉      | 3943/9908 [4:56:43<6:16:26,  3.79s/it] 40%|███▉      | 3944/9908 [4:56:46<6:05:26,  3.68s/it] 40%|███▉      | 3945/9908 [4:56:50<6:05:10,  3.67s/it] 40%|███▉      | 3946/9908 [4:56:54<6:13:34,  3.76s/it] 40%|███▉      | 3947/9908 [4:56:58<6:16:08,  3.79s/it] 40%|███▉      | 3948/9908 [4:57:01<6:11:21,  3.74s/it] 40%|███▉      | 3949/9908 [4:57:05<6:18:43,  3.81s/it]09/20/2024 06:33:40 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.015298048965632915, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 0.9098712801933289, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 0.9251693487167358}
 40%|███▉      | 3950/9908 [4:57:09<6:22:56,  3.86s/it] 40%|███▉      | 3951/9908 [4:57:13<6:15:18,  3.78s/it] 40%|███▉      | 3952/9908 [4:57:16<6:04:38,  3.67s/it] 40%|███▉      | 3953/9908 [4:57:20<6:04:55,  3.68s/it] 40%|███▉      | 3954/9908 [4:57:24<6:12:51,  3.76s/it] 40%|███▉      | 3955/9908 [4:57:28<6:12:50,  3.76s/it] 40%|███▉      | 3956/9908 [4:57:31<6:11:55,  3.75s/it] 40%|███▉      | 3957/9908 [4:57:35<6:01:32,  3.65s/it] 40%|███▉      | 3958/9908 [4:57:38<6:03:42,  3.67s/it] 40%|███▉      | 3959/9908 [4:57:42<6:05:38,  3.69s/it] 40%|███▉      | 3960/9908 [4:57:46<6:22:03,  3.85s/it] 40%|███▉      | 3961/9908 [4:57:50<6:14:32,  3.78s/it] 40%|███▉      | 3962/9908 [4:57:54<6:10:36,  3.74s/it] 40%|███▉      | 3963/9908 [4:57:58<6:14:20,  3.78s/it] 40%|████      | 3964/9908 [4:58:01<6:04:05,  3.68s/it] 40%|████      | 3965/9908 [4:58:05<6:04:43,  3.68s/it] 40%|████      | 3966/9908 [4:58:08<5:59:47,  3.63s/it] 40%|████      | 3967/9908 [4:58:12<6:03:12,  3.67s/it] 40%|████      | 3968/9908 [4:58:15<5:57:23,  3.61s/it] 40%|████      | 3969/9908 [4:58:19<5:57:25,  3.61s/it] 40%|████      | 3970/9908 [4:58:23<6:01:19,  3.65s/it] 40%|████      | 3971/9908 [4:58:27<6:08:07,  3.72s/it] 40%|████      | 3972/9908 [4:58:31<6:19:12,  3.83s/it] 40%|████      | 3973/9908 [4:58:34<6:12:30,  3.77s/it] 40%|████      | 3974/9908 [4:58:38<6:14:25,  3.79s/it] 40%|████      | 3975/9908 [4:58:42<6:03:31,  3.68s/it] 40%|████      | 3976/9908 [4:58:45<6:04:15,  3.68s/it] 40%|████      | 3977/9908 [4:58:49<6:04:22,  3.69s/it] 40%|████      | 3978/9908 [4:58:53<5:59:51,  3.64s/it] 40%|████      | 3979/9908 [4:58:56<5:54:57,  3.59s/it] 40%|████      | 3980/9908 [4:59:00<6:00:17,  3.65s/it] 40%|████      | 3981/9908 [4:59:03<5:59:31,  3.64s/it] 40%|████      | 3982/9908 [4:59:07<5:54:41,  3.59s/it] 40%|████      | 3983/9908 [4:59:11<5:56:41,  3.61s/it] 40%|████      | 3984/9908 [4:59:14<5:53:40,  3.58s/it] 40%|████      | 3985/9908 [4:59:18<5:59:24,  3.64s/it] 40%|████      | 3986/9908 [4:59:22<6:00:32,  3.65s/it] 40%|████      | 3987/9908 [4:59:25<5:56:15,  3.61s/it] 40%|████      | 3988/9908 [4:59:29<5:54:34,  3.59s/it] 40%|████      | 3989/9908 [4:59:33<6:04:16,  3.69s/it] 40%|████      | 3990/9908 [4:59:36<6:06:46,  3.72s/it] 40%|████      | 3991/9908 [4:59:40<6:14:52,  3.80s/it] 40%|████      | 3992/9908 [4:59:44<6:11:21,  3.77s/it] 40%|████      | 3993/9908 [4:59:48<6:15:19,  3.81s/it] 40%|████      | 3994/9908 [4:59:52<6:10:00,  3.75s/it] 40%|████      | 3995/9908 [4:59:55<6:01:03,  3.66s/it] 40%|████      | 3996/9908 [4:59:59<6:13:02,  3.79s/it] 40%|████      | 3997/9908 [5:00:03<6:07:22,  3.73s/it] 40%|████      | 3998/9908 [5:00:06<6:02:47,  3.68s/it] 40%|████      | 3999/9908 [5:00:10<6:04:40,  3.70s/it]09/20/2024 06:36:43 - INFO - __main__ -   evaluate on ret%tvas--msrvtt_ret task
09/20/2024 06:36:43 - INFO - __main__ -   start running ret%tvas validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:01<06:01,  1.64s/it][A
  1%|          | 2/221 [00:01<03:11,  1.14it/s][A
  1%|▏         | 3/221 [00:02<03:01,  1.20it/s][A
  2%|▏         | 4/221 [00:03<02:17,  1.58it/s][A
  3%|▎         | 6/221 [00:03<01:15,  2.85it/s][A
  3%|▎         | 7/221 [00:03<01:04,  3.31it/s][A
  4%|▎         | 8/221 [00:03<01:06,  3.18it/s][A
  4%|▍         | 9/221 [00:04<01:08,  3.09it/s][A
  5%|▍         | 10/221 [00:04<01:13,  2.87it/s][A
  5%|▌         | 12/221 [00:09<04:41,  1.35s/it][A
  6%|▌         | 13/221 [00:09<03:37,  1.05s/it][A
  7%|▋         | 15/221 [00:10<02:23,  1.44it/s][A
  7%|▋         | 16/221 [00:10<02:24,  1.42it/s][A
  8%|▊         | 17/221 [00:12<02:46,  1.23it/s][A
  8%|▊         | 18/221 [00:12<02:21,  1.43it/s][A
  9%|▊         | 19/221 [00:13<02:32,  1.32it/s][A
  9%|▉         | 20/221 [00:13<01:57,  1.71it/s][A
 10%|▉         | 21/221 [00:13<01:42,  1.94it/s][A
 10%|▉         | 22/221 [00:14<02:06,  1.57it/s][A
 11%|█         | 24/221 [00:15<01:20,  2.46it/s][A
 11%|█▏        | 25/221 [00:15<01:17,  2.54it/s][A
 12%|█▏        | 26/221 [00:15<01:13,  2.67it/s][A
 13%|█▎        | 28/221 [00:16<01:00,  3.20it/s][A
 13%|█▎        | 29/221 [00:16<00:53,  3.62it/s][A
 14%|█▎        | 30/221 [00:17<01:23,  2.30it/s][A
 14%|█▍        | 31/221 [00:17<01:22,  2.30it/s][A
 15%|█▍        | 33/221 [00:18<01:01,  3.06it/s][A
 16%|█▌        | 35/221 [00:18<00:45,  4.05it/s][A
 16%|█▋        | 36/221 [00:18<00:46,  3.98it/s][A
 17%|█▋        | 37/221 [00:19<00:58,  3.16it/s][A
 17%|█▋        | 38/221 [00:19<01:11,  2.55it/s][A
 18%|█▊        | 39/221 [00:19<01:00,  3.01it/s][A
 18%|█▊        | 40/221 [00:20<01:19,  2.29it/s][A
 19%|█▊        | 41/221 [00:20<01:05,  2.77it/s][A
 19%|█▉        | 42/221 [00:20<00:58,  3.04it/s][A
 19%|█▉        | 43/221 [00:21<00:48,  3.65it/s][A
 20%|█▉        | 44/221 [00:21<00:41,  4.26it/s][A
 20%|██        | 45/221 [00:26<05:16,  1.80s/it][A
 21%|██        | 46/221 [00:27<03:57,  1.36s/it][A
 21%|██▏       | 47/221 [00:27<03:19,  1.15s/it][A
 22%|██▏       | 48/221 [00:27<02:25,  1.19it/s][A
 22%|██▏       | 49/221 [00:28<01:59,  1.44it/s][A
 23%|██▎       | 50/221 [00:28<01:34,  1.82it/s][A
 23%|██▎       | 51/221 [00:28<01:15,  2.26it/s][A
 24%|██▎       | 52/221 [00:28<00:59,  2.83it/s][A
 24%|██▍       | 53/221 [00:28<00:51,  3.26it/s][A
 24%|██▍       | 54/221 [00:29<01:09,  2.41it/s][A
 25%|██▍       | 55/221 [00:31<02:36,  1.06it/s][A
 25%|██▌       | 56/221 [00:31<01:57,  1.41it/s][A
 26%|██▌       | 57/221 [00:32<01:30,  1.82it/s][A
 27%|██▋       | 59/221 [00:32<00:54,  2.95it/s][A
 27%|██▋       | 60/221 [00:32<00:58,  2.77it/s][A
 28%|██▊       | 61/221 [00:32<00:52,  3.06it/s][A
 28%|██▊       | 62/221 [00:33<00:52,  3.05it/s][A
 29%|██▊       | 63/221 [00:33<00:51,  3.07it/s][A
 29%|██▉       | 64/221 [00:34<01:22,  1.91it/s][A
 29%|██▉       | 65/221 [00:34<01:03,  2.47it/s][A
 30%|██▉       | 66/221 [00:35<01:00,  2.54it/s][A
 30%|███       | 67/221 [00:35<00:58,  2.61it/s][A
 31%|███       | 68/221 [00:35<00:48,  3.14it/s][A
 31%|███       | 69/221 [00:36<01:28,  1.71it/s][A
 32%|███▏      | 70/221 [00:36<01:06,  2.26it/s][A
 32%|███▏      | 71/221 [00:37<01:07,  2.23it/s][A
 33%|███▎      | 72/221 [00:37<01:07,  2.22it/s][A
 33%|███▎      | 73/221 [00:38<01:16,  1.93it/s][A
 33%|███▎      | 74/221 [00:38<00:58,  2.49it/s][A
 34%|███▍      | 75/221 [00:39<01:03,  2.31it/s][A
 34%|███▍      | 76/221 [00:39<00:56,  2.56it/s][A
 35%|███▍      | 77/221 [00:41<02:24,  1.01s/it][A
 36%|███▌      | 79/221 [00:42<01:51,  1.27it/s][A
 36%|███▌      | 80/221 [00:43<01:28,  1.60it/s][A
 37%|███▋      | 81/221 [00:44<01:40,  1.39it/s][A
 37%|███▋      | 82/221 [00:46<02:25,  1.05s/it][A
 38%|███▊      | 83/221 [00:46<02:03,  1.12it/s][A
 38%|███▊      | 84/221 [00:46<01:35,  1.44it/s][A
 39%|███▉      | 86/221 [00:47<01:09,  1.95it/s][A
 39%|███▉      | 87/221 [00:48<01:15,  1.77it/s][A
 40%|███▉      | 88/221 [00:48<01:10,  1.89it/s][A
 40%|████      | 89/221 [00:48<01:03,  2.09it/s][A
 41%|████      | 90/221 [00:49<00:56,  2.31it/s][A
 42%|████▏     | 92/221 [00:49<00:40,  3.16it/s][A
 42%|████▏     | 93/221 [00:49<00:44,  2.88it/s][A
 43%|████▎     | 94/221 [00:50<00:58,  2.18it/s][A
 43%|████▎     | 95/221 [00:50<00:51,  2.46it/s][A
 43%|████▎     | 96/221 [00:51<01:01,  2.02it/s][A
 44%|████▍     | 97/221 [00:51<00:51,  2.41it/s][A
 44%|████▍     | 98/221 [00:52<01:08,  1.81it/s][A
 45%|████▍     | 99/221 [00:53<00:58,  2.08it/s][A
 45%|████▌     | 100/221 [00:54<01:15,  1.60it/s][A
 46%|████▌     | 101/221 [00:54<00:56,  2.12it/s][A
 46%|████▌     | 102/221 [00:55<01:10,  1.69it/s][A
 47%|████▋     | 103/221 [00:55<00:52,  2.25it/s][A
 47%|████▋     | 104/221 [00:55<00:50,  2.32it/s][A
 48%|████▊     | 105/221 [00:56<00:54,  2.14it/s][A
 48%|████▊     | 106/221 [00:58<02:11,  1.14s/it][A
 48%|████▊     | 107/221 [00:59<01:41,  1.12it/s][A
 49%|████▉     | 108/221 [00:59<01:20,  1.40it/s][A
 49%|████▉     | 109/221 [00:59<01:03,  1.78it/s][A
 50%|████▉     | 110/221 [00:59<00:47,  2.34it/s][A
 50%|█████     | 111/221 [01:00<00:45,  2.40it/s][A
 51%|█████     | 112/221 [01:00<00:42,  2.55it/s][A
 51%|█████     | 113/221 [01:00<00:34,  3.16it/s][A
 52%|█████▏    | 115/221 [01:01<00:38,  2.76it/s][A
 52%|█████▏    | 116/221 [01:01<00:39,  2.66it/s][A
 53%|█████▎    | 117/221 [01:02<00:40,  2.59it/s][A
 53%|█████▎    | 118/221 [01:02<00:40,  2.56it/s][A
 54%|█████▍    | 119/221 [01:02<00:33,  3.08it/s][A
 54%|█████▍    | 120/221 [01:02<00:26,  3.79it/s][A
 55%|█████▍    | 121/221 [01:03<00:31,  3.13it/s][A
 55%|█████▌    | 122/221 [01:03<00:34,  2.83it/s][A
 56%|█████▌    | 123/221 [01:04<00:52,  1.87it/s][A
 56%|█████▌    | 124/221 [01:05<00:42,  2.29it/s][A
 57%|█████▋    | 125/221 [01:06<01:01,  1.57it/s][A
 57%|█████▋    | 126/221 [01:11<03:25,  2.16s/it][A
 57%|█████▋    | 127/221 [01:12<02:38,  1.69s/it][A
 58%|█████▊    | 128/221 [01:12<02:01,  1.31s/it][A
 58%|█████▊    | 129/221 [01:13<01:40,  1.09s/it][A
 59%|█████▉    | 130/221 [01:13<01:18,  1.17it/s][A
 59%|█████▉    | 131/221 [01:14<01:17,  1.16it/s][A
 60%|█████▉    | 132/221 [01:16<01:30,  1.02s/it][A
 60%|██████    | 133/221 [01:16<01:14,  1.18it/s][A
 61%|██████    | 134/221 [01:17<01:24,  1.03it/s][A
 61%|██████    | 135/221 [01:18<01:22,  1.04it/s][A
 62%|██████▏   | 136/221 [01:19<01:06,  1.28it/s][A
 62%|██████▏   | 137/221 [01:19<00:57,  1.46it/s][A
 62%|██████▏   | 138/221 [01:20<00:55,  1.51it/s][A
 63%|██████▎   | 139/221 [01:20<00:44,  1.86it/s][A
 63%|██████▎   | 140/221 [01:21<00:47,  1.69it/s][A
 64%|██████▍   | 141/221 [01:21<00:41,  1.94it/s][A
 64%|██████▍   | 142/221 [01:21<00:37,  2.08it/s][A
 65%|██████▍   | 143/221 [01:22<00:36,  2.11it/s][A
 65%|██████▌   | 144/221 [01:22<00:29,  2.65it/s][A
 66%|██████▌   | 146/221 [01:22<00:18,  4.05it/s][A
 67%|██████▋   | 147/221 [01:22<00:15,  4.73it/s][A
 67%|██████▋   | 148/221 [01:23<00:32,  2.26it/s][A
 67%|██████▋   | 149/221 [01:24<00:32,  2.18it/s][A
 68%|██████▊   | 150/221 [01:24<00:35,  1.99it/s][A
 68%|██████▊   | 151/221 [01:25<00:31,  2.22it/s][A
 69%|██████▉   | 152/221 [01:25<00:28,  2.41it/s][A
 70%|██████▉   | 154/221 [01:25<00:20,  3.21it/s][A
 70%|███████   | 155/221 [01:26<00:19,  3.37it/s][A
 71%|███████   | 156/221 [01:26<00:17,  3.78it/s][A
 71%|███████   | 157/221 [01:31<01:44,  1.63s/it][A
 71%|███████▏  | 158/221 [01:32<01:30,  1.43s/it][A
 72%|███████▏  | 160/221 [01:32<00:52,  1.16it/s][A
 73%|███████▎  | 161/221 [01:33<00:40,  1.47it/s][A
 74%|███████▍  | 163/221 [01:33<00:26,  2.18it/s][A
 74%|███████▍  | 164/221 [01:33<00:26,  2.16it/s][A
 75%|███████▍  | 165/221 [01:34<00:26,  2.13it/s][A
 75%|███████▌  | 166/221 [01:34<00:26,  2.07it/s][A
 76%|███████▌  | 167/221 [01:34<00:21,  2.53it/s][A
 76%|███████▌  | 168/221 [01:39<01:24,  1.60s/it][A
 76%|███████▋  | 169/221 [01:40<01:07,  1.30s/it][A
 77%|███████▋  | 170/221 [01:41<00:59,  1.16s/it][A
 77%|███████▋  | 171/221 [01:41<00:46,  1.08it/s][A
 78%|███████▊  | 172/221 [01:41<00:36,  1.34it/s][A
 78%|███████▊  | 173/221 [01:42<00:33,  1.43it/s][A
 79%|███████▊  | 174/221 [01:42<00:25,  1.86it/s][A
 79%|███████▉  | 175/221 [01:42<00:20,  2.27it/s][A
 80%|███████▉  | 176/221 [01:42<00:18,  2.48it/s][A
 80%|████████  | 177/221 [01:43<00:17,  2.50it/s][A
 81%|████████  | 178/221 [01:43<00:16,  2.68it/s][A
 81%|████████  | 179/221 [01:43<00:14,  2.80it/s][A
 81%|████████▏ | 180/221 [01:44<00:12,  3.24it/s][A
 82%|████████▏ | 182/221 [01:44<00:11,  3.25it/s][A
 83%|████████▎ | 183/221 [01:45<00:18,  2.11it/s][A
 83%|████████▎ | 184/221 [01:46<00:17,  2.17it/s][A
 84%|████████▎ | 185/221 [01:46<00:13,  2.61it/s][A
 84%|████████▍ | 186/221 [01:46<00:13,  2.59it/s][A
 85%|████████▍ | 187/221 [01:47<00:11,  2.89it/s][A
 85%|████████▌ | 188/221 [01:47<00:09,  3.52it/s][A
 86%|████████▌ | 189/221 [01:47<00:09,  3.50it/s][A
 86%|████████▌ | 190/221 [01:47<00:10,  2.89it/s][A
 86%|████████▋ | 191/221 [01:48<00:08,  3.45it/s][A
 87%|████████▋ | 192/221 [01:48<00:10,  2.72it/s][A
 87%|████████▋ | 193/221 [01:48<00:08,  3.37it/s][A
 88%|████████▊ | 194/221 [01:49<00:09,  2.82it/s][A
 88%|████████▊ | 195/221 [01:49<00:08,  3.04it/s][A
 89%|████████▊ | 196/221 [01:49<00:07,  3.15it/s][A
 89%|████████▉ | 197/221 [01:49<00:06,  3.56it/s][A
 90%|████████▉ | 198/221 [01:50<00:06,  3.73it/s][A
 90%|█████████ | 199/221 [01:50<00:05,  4.02it/s][A
 90%|█████████ | 200/221 [01:51<00:08,  2.58it/s][A
 91%|█████████ | 201/221 [01:51<00:09,  2.01it/s][A
 91%|█████████▏| 202/221 [01:52<00:08,  2.35it/s][A
 92%|█████████▏| 203/221 [01:53<00:14,  1.27it/s][A
 92%|█████████▏| 204/221 [01:53<00:10,  1.65it/s][A
 93%|█████████▎| 206/221 [01:54<00:06,  2.40it/s][A
 94%|█████████▎| 207/221 [01:54<00:04,  2.84it/s][A
 94%|█████████▍| 208/221 [01:54<00:04,  2.73it/s][A
 95%|█████████▌| 210/221 [01:55<00:02,  4.03it/s][A
 95%|█████████▌| 211/221 [01:55<00:03,  3.21it/s][A
 96%|█████████▌| 212/221 [01:56<00:03,  2.94it/s][A
 96%|█████████▋| 213/221 [01:56<00:02,  3.51it/s][A
 97%|█████████▋| 214/221 [01:56<00:02,  3.07it/s][A
 97%|█████████▋| 215/221 [01:56<00:01,  3.11it/s][A
 98%|█████████▊| 216/221 [01:57<00:01,  2.93it/s][A
 98%|█████████▊| 217/221 [01:59<00:03,  1.03it/s][A
 99%|█████████▊| 218/221 [02:00<00:02,  1.30it/s][A
 99%|█████████▉| 219/221 [02:00<00:01,  1.70it/s][A
100%|█████████▉| 220/221 [02:02<00:01,  1.16s/it][A
100%|██████████| 221/221 [02:02<00:00,  1.18it/s][A100%|██████████| 221/221 [02:02<00:00,  1.80it/s]

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:00<01:56,  1.89it/s][A
  1%|          | 2/221 [00:01<01:55,  1.89it/s][A
  1%|▏         | 3/221 [00:01<01:55,  1.89it/s][A
  2%|▏         | 4/221 [00:02<01:54,  1.89it/s][A
  2%|▏         | 5/221 [00:02<01:54,  1.89it/s][A
  3%|▎         | 6/221 [00:03<01:53,  1.89it/s][A
  3%|▎         | 7/221 [00:03<01:53,  1.89it/s][A
  4%|▎         | 8/221 [00:04<01:52,  1.89it/s][A
  4%|▍         | 9/221 [00:04<01:52,  1.89it/s][A
  5%|▍         | 10/221 [00:05<01:51,  1.89it/s][A
  5%|▍         | 11/221 [00:05<01:50,  1.89it/s][A
  5%|▌         | 12/221 [00:06<01:50,  1.89it/s][A
  6%|▌         | 13/221 [00:06<01:49,  1.89it/s][A
  6%|▋         | 14/221 [00:07<01:49,  1.89it/s][A
  7%|▋         | 15/221 [00:07<01:48,  1.89it/s][A
  7%|▋         | 16/221 [00:08<01:48,  1.89it/s][A
  8%|▊         | 17/221 [00:08<01:47,  1.89it/s][A
  8%|▊         | 18/221 [00:09<01:47,  1.89it/s][A
  9%|▊         | 19/221 [00:10<01:46,  1.89it/s][A
  9%|▉         | 20/221 [00:10<01:46,  1.89it/s][A
 10%|▉         | 21/221 [00:11<01:45,  1.89it/s][A
 10%|▉         | 22/221 [00:11<01:45,  1.89it/s][A
 10%|█         | 23/221 [00:12<01:44,  1.89it/s][A
 11%|█         | 24/221 [00:12<01:44,  1.89it/s][A
 11%|█▏        | 25/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 26/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 27/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 28/221 [00:14<01:41,  1.89it/s][A
 13%|█▎        | 29/221 [00:15<01:41,  1.89it/s][A
 14%|█▎        | 30/221 [00:15<01:40,  1.89it/s][A
 14%|█▍        | 31/221 [00:16<01:40,  1.89it/s][A
 14%|█▍        | 32/221 [00:16<01:39,  1.89it/s][A
 15%|█▍        | 33/221 [00:17<01:39,  1.89it/s][A
 15%|█▌        | 34/221 [00:17<01:38,  1.89it/s][A
 16%|█▌        | 35/221 [00:18<01:38,  1.89it/s][A
 16%|█▋        | 36/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 37/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 38/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 39/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 40/221 [00:21<01:35,  1.89it/s][A
 19%|█▊        | 41/221 [00:21<01:35,  1.89it/s][A
 19%|█▉        | 42/221 [00:22<01:34,  1.89it/s][A
 19%|█▉        | 43/221 [00:22<01:34,  1.89it/s][A
 20%|█▉        | 44/221 [00:23<01:33,  1.89it/s][A
 20%|██        | 45/221 [00:23<01:33,  1.89it/s][A
 21%|██        | 46/221 [00:24<01:32,  1.89it/s][A
 21%|██▏       | 47/221 [00:24<01:31,  1.89it/s][A
 22%|██▏       | 48/221 [00:25<01:31,  1.89it/s][A
 22%|██▏       | 49/221 [00:25<01:30,  1.89it/s][A
 23%|██▎       | 50/221 [00:26<01:30,  1.89it/s][A
 23%|██▎       | 51/221 [00:26<01:29,  1.89it/s][A
 24%|██▎       | 52/221 [00:27<01:29,  1.89it/s][A
 24%|██▍       | 53/221 [00:28<01:28,  1.89it/s][A
 24%|██▍       | 54/221 [00:28<01:28,  1.89it/s][A
 25%|██▍       | 55/221 [00:29<01:27,  1.89it/s][A
 25%|██▌       | 56/221 [00:29<01:27,  1.89it/s][A
 26%|██▌       | 57/221 [00:30<01:26,  1.89it/s][A
 26%|██▌       | 58/221 [00:30<01:26,  1.89it/s][A
 27%|██▋       | 59/221 [00:31<01:25,  1.89it/s][A
 27%|██▋       | 60/221 [00:31<01:25,  1.89it/s][A
 28%|██▊       | 61/221 [00:32<01:24,  1.89it/s][A
 28%|██▊       | 62/221 [00:32<01:24,  1.89it/s][A
 29%|██▊       | 63/221 [00:33<01:23,  1.89it/s][A
 29%|██▉       | 64/221 [00:33<01:22,  1.89it/s][A
 29%|██▉       | 65/221 [00:34<01:22,  1.89it/s][A
 30%|██▉       | 66/221 [00:34<01:21,  1.89it/s][A
 30%|███       | 67/221 [00:35<01:21,  1.89it/s][A
 31%|███       | 68/221 [00:35<01:20,  1.89it/s][A
 31%|███       | 69/221 [00:36<01:20,  1.89it/s][A
 32%|███▏      | 70/221 [00:36<01:19,  1.89it/s][A
 32%|███▏      | 71/221 [00:37<01:19,  1.89it/s][A
 33%|███▎      | 72/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 73/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 74/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 75/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 76/221 [00:40<01:16,  1.89it/s][A
 35%|███▍      | 77/221 [00:40<01:16,  1.89it/s][A
 35%|███▌      | 78/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 79/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 80/221 [00:42<01:14,  1.89it/s][A
 37%|███▋      | 81/221 [00:42<01:13,  1.89it/s][A
 37%|███▋      | 82/221 [00:43<01:13,  1.89it/s][A
 38%|███▊      | 83/221 [00:43<01:12,  1.89it/s][A
 38%|███▊      | 84/221 [00:44<01:12,  1.89it/s][A
 38%|███▊      | 85/221 [00:44<01:11,  1.89it/s][A
 39%|███▉      | 86/221 [00:45<01:11,  1.89it/s][A
 39%|███▉      | 87/221 [00:45<01:10,  1.89it/s][A
 40%|███▉      | 88/221 [00:46<01:10,  1.89it/s][A
 40%|████      | 89/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 90/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 91/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 92/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 93/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 94/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 95/221 [00:50<01:06,  1.89it/s][A
 43%|████▎     | 96/221 [00:50<01:06,  1.89it/s][A
 44%|████▍     | 97/221 [00:51<01:05,  1.89it/s][A
 44%|████▍     | 98/221 [00:51<01:04,  1.89it/s][A
 45%|████▍     | 99/221 [00:52<01:04,  1.89it/s][A
 45%|████▌     | 100/221 [00:52<01:03,  1.89it/s][A
 46%|████▌     | 101/221 [00:53<01:03,  1.89it/s][A
 46%|████▌     | 102/221 [00:53<01:02,  1.89it/s][A
 47%|████▋     | 103/221 [00:54<01:02,  1.89it/s][A
 47%|████▋     | 104/221 [00:54<01:01,  1.89it/s][A
 48%|████▊     | 105/221 [00:55<01:01,  1.89it/s][A
 48%|████▊     | 106/221 [00:56<01:00,  1.89it/s][A
 48%|████▊     | 107/221 [00:56<01:00,  1.89it/s][A
 49%|████▉     | 108/221 [00:57<00:59,  1.89it/s][A
 49%|████▉     | 109/221 [00:57<00:59,  1.89it/s][A
 50%|████▉     | 110/221 [00:58<00:58,  1.89it/s][A
 50%|█████     | 111/221 [00:58<00:58,  1.89it/s][A
 51%|█████     | 112/221 [00:59<00:57,  1.89it/s][A
 51%|█████     | 113/221 [00:59<00:57,  1.89it/s][A
 52%|█████▏    | 114/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 115/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 116/221 [01:01<00:55,  1.89it/s][A
 53%|█████▎    | 117/221 [01:01<00:54,  1.89it/s][A
 53%|█████▎    | 118/221 [01:02<00:54,  1.89it/s][A
 54%|█████▍    | 119/221 [01:02<00:53,  1.89it/s][A
 54%|█████▍    | 120/221 [01:03<00:53,  1.89it/s][A
 55%|█████▍    | 121/221 [01:03<00:52,  1.89it/s][A
 55%|█████▌    | 122/221 [01:04<00:52,  1.89it/s][A
 56%|█████▌    | 123/221 [01:05<00:51,  1.89it/s][A
 56%|█████▌    | 124/221 [01:05<00:51,  1.89it/s][A
 57%|█████▋    | 125/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 126/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 127/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 128/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 129/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 130/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 131/221 [01:09<00:47,  1.89it/s][A
 60%|█████▉    | 132/221 [01:09<00:47,  1.89it/s][A
 60%|██████    | 133/221 [01:10<00:46,  1.89it/s][A
 61%|██████    | 134/221 [01:10<00:45,  1.89it/s][A
 61%|██████    | 135/221 [01:11<00:45,  1.89it/s][A
 62%|██████▏   | 136/221 [01:11<00:44,  1.89it/s][A
 62%|██████▏   | 137/221 [01:12<00:44,  1.89it/s][A
 62%|██████▏   | 138/221 [01:12<00:43,  1.89it/s][A
 63%|██████▎   | 139/221 [01:13<00:43,  1.89it/s][A
 63%|██████▎   | 140/221 [01:13<00:42,  1.89it/s][A
 64%|██████▍   | 141/221 [01:14<00:42,  1.89it/s][A
 64%|██████▍   | 142/221 [01:15<00:41,  1.89it/s][A
 65%|██████▍   | 143/221 [01:15<00:41,  1.89it/s][A
 65%|██████▌   | 144/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 145/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 146/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 147/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 148/221 [01:18<00:38,  1.89it/s][A
 67%|██████▋   | 149/221 [01:18<00:38,  1.89it/s][A
 68%|██████▊   | 150/221 [01:19<00:37,  1.89it/s][A
 68%|██████▊   | 151/221 [01:19<00:36,  1.89it/s][A
 69%|██████▉   | 152/221 [01:20<00:36,  1.89it/s][A
 69%|██████▉   | 153/221 [01:20<00:35,  1.89it/s][A
 70%|██████▉   | 154/221 [01:21<00:35,  1.89it/s][A
 70%|███████   | 155/221 [01:21<00:34,  1.89it/s][A
 71%|███████   | 156/221 [01:22<00:34,  1.89it/s][A
 71%|███████   | 157/221 [01:22<00:33,  1.89it/s][A
 71%|███████▏  | 158/221 [01:23<00:33,  1.89it/s][A
 72%|███████▏  | 159/221 [01:24<00:32,  1.89it/s][A
 72%|███████▏  | 160/221 [01:24<00:32,  1.89it/s][A
 73%|███████▎  | 161/221 [01:25<00:31,  1.89it/s][A
 73%|███████▎  | 162/221 [01:25<00:31,  1.89it/s][A
 74%|███████▍  | 163/221 [01:26<00:30,  1.89it/s][A
 74%|███████▍  | 164/221 [01:26<00:30,  1.89it/s][A
 75%|███████▍  | 165/221 [01:27<00:29,  1.89it/s][A
 75%|███████▌  | 166/221 [01:27<00:29,  1.89it/s][A
 76%|███████▌  | 167/221 [01:28<00:28,  1.89it/s][A
 76%|███████▌  | 168/221 [01:28<00:28,  1.89it/s][A
 76%|███████▋  | 169/221 [01:29<00:27,  1.89it/s][A
 77%|███████▋  | 170/221 [01:29<00:26,  1.89it/s][A
 77%|███████▋  | 171/221 [01:30<00:26,  1.89it/s][A
 78%|███████▊  | 172/221 [01:30<00:25,  1.89it/s][A
 78%|███████▊  | 173/221 [01:31<00:25,  1.89it/s][A
 79%|███████▊  | 174/221 [01:31<00:24,  1.89it/s][A
 79%|███████▉  | 175/221 [01:32<00:24,  1.89it/s][A
 80%|███████▉  | 176/221 [01:33<00:23,  1.89it/s][A
 80%|████████  | 177/221 [01:33<00:23,  1.89it/s][A
 81%|████████  | 178/221 [01:34<00:22,  1.89it/s][A
 81%|████████  | 179/221 [01:34<00:22,  1.89it/s][A
 81%|████████▏ | 180/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 181/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 182/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 183/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 184/221 [01:37<00:19,  1.89it/s][A
 84%|████████▎ | 185/221 [01:37<00:19,  1.89it/s][A
 84%|████████▍ | 186/221 [01:38<00:18,  1.89it/s][A
 85%|████████▍ | 187/221 [01:38<00:17,  1.89it/s][A
 85%|████████▌ | 188/221 [01:39<00:17,  1.89it/s][A
 86%|████████▌ | 189/221 [01:39<00:16,  1.89it/s][A
 86%|████████▌ | 190/221 [01:40<00:16,  1.89it/s][A
 86%|████████▋ | 191/221 [01:40<00:15,  1.89it/s][A
 87%|████████▋ | 192/221 [01:41<00:15,  1.89it/s][A
 87%|████████▋ | 193/221 [01:41<00:14,  1.89it/s][A
 88%|████████▊ | 194/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 195/221 [01:43<00:13,  1.89it/s][A
 89%|████████▊ | 196/221 [01:43<00:13,  1.89it/s][A
 89%|████████▉ | 197/221 [01:44<00:12,  1.89it/s][A
 90%|████████▉ | 198/221 [01:44<00:12,  1.89it/s][A
 90%|█████████ | 199/221 [01:45<00:11,  1.89it/s][A
 90%|█████████ | 200/221 [01:45<00:11,  1.89it/s][A
 91%|█████████ | 201/221 [01:46<00:10,  1.89it/s][A
 91%|█████████▏| 202/221 [01:46<00:10,  1.89it/s][A
 92%|█████████▏| 203/221 [01:47<00:09,  1.89it/s][A
 92%|█████████▏| 204/221 [01:47<00:08,  1.89it/s][A
 93%|█████████▎| 205/221 [01:48<00:08,  1.89it/s][A
 93%|█████████▎| 206/221 [01:48<00:07,  1.89it/s][A
 94%|█████████▎| 207/221 [01:49<00:07,  1.89it/s][A
 94%|█████████▍| 208/221 [01:49<00:06,  1.89it/s][A
 95%|█████████▍| 209/221 [01:50<00:06,  1.89it/s][A
 95%|█████████▌| 210/221 [01:50<00:05,  1.89it/s][A
 95%|█████████▌| 211/221 [01:51<00:05,  1.89it/s][A
 96%|█████████▌| 212/221 [01:52<00:04,  1.89it/s][A
 96%|█████████▋| 213/221 [01:52<00:04,  1.89it/s][A
 97%|█████████▋| 214/221 [01:53<00:03,  1.89it/s][A
 97%|█████████▋| 215/221 [01:53<00:03,  1.89it/s][A
 98%|█████████▊| 216/221 [01:54<00:02,  1.89it/s][A
 98%|█████████▊| 217/221 [01:54<00:02,  1.89it/s][A
 99%|█████████▊| 218/221 [01:55<00:01,  1.89it/s][A
 99%|█████████▉| 219/221 [01:55<00:01,  1.89it/s][A
100%|█████████▉| 220/221 [01:56<00:00,  1.89it/s][A
100%|██████████| 221/221 [01:56<00:00,  1.89it/s][A100%|██████████| 221/221 [01:56<00:00,  1.89it/s]
09/20/2024 06:43:28 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_forward=====step 3999--===========

09/20/2024 06:43:28 - INFO - __main__ -   {'area_r1': 45.0, 'area_recall': '45.0/73.0/83.1', 'area_ravg': 67.0}
09/20/2024 06:43:28 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_backard=====step 3999--===========

09/20/2024 06:43:28 - INFO - __main__ -   {'forward_r1': 51.4, 'forward_recall': '51.4/78.6/87.1', 'forward_ravg': 72.4}
09/20/2024 06:43:28 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video=====step 3999--===========

09/20/2024 06:43:28 - INFO - __main__ -   {'area_video_r1': 50.1, 'area_video_recall': '50.1/78.4/87.7', 'area_video_ravg': 72.1}
09/20/2024 06:43:28 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video====history best step: 3499=======

09/20/2024 06:43:28 - INFO - __main__ -   {'area_video_r1': 50.3, 'area_video_recall': '50.3/78.1/86.7', 'area_video_ravg': 71.7}
09/20/2024 06:43:28 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itm_area=====step 3999--===========

09/20/2024 06:43:28 - INFO - __main__ -   {'area_video_r1': 59.7, 'area_video_recall': '59.7/82.2/88.3', 'area_video_ravg': 76.8, 'area_video_back_r1': 59.4, 'area_video_back_recall': '59.4/83.7/91.0', 'area_video_back_ravg': 78.0}
09/20/2024 06:43:28 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itm_area====history best step: 3499=======

09/20/2024 06:43:28 - INFO - __main__ -   {'area_video_r1': 60.5, 'area_video_recall': '60.5/81.8/87.1', 'area_video_ravg': 76.5, 'area_video_back_r1': 59.7, 'area_video_back_recall': '59.7/83.0/91.0', 'area_video_back_ravg': 77.9}
09/20/2024 06:43:28 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas=====step 3999--===========

09/20/2024 06:43:28 - INFO - __main__ -   {'video_r1': 30.4, 'video_recall': '30.4/56.7/68.6', 'video_ravg': 51.9}
09/20/2024 06:43:28 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas====history best step: 1499=======

09/20/2024 06:43:28 - INFO - __main__ -   {'video_r1': 34.7, 'video_recall': '34.7/60.5/72.3', 'video_ravg': 55.8}
09/20/2024 06:43:50 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.024473747238516808, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.0055683851242065, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.0300421714782715}
 40%|████      | 4000/9908 [5:07:19<215:21:32, 131.23s/it] 40%|████      | 4001/9908 [5:07:22<152:12:06, 92.76s/it]  40%|████      | 4002/9908 [5:07:26<108:26:04, 66.10s/it] 40%|████      | 4003/9908 [5:07:29<77:27:39, 47.22s/it]  40%|████      | 4004/9908 [5:07:33<56:05:04, 34.20s/it] 40%|████      | 4005/9908 [5:07:36<40:57:22, 24.98s/it] 40%|████      | 4006/9908 [5:07:40<30:32:38, 18.63s/it] 40%|████      | 4007/9908 [5:07:44<23:09:38, 14.13s/it] 40%|████      | 4008/9908 [5:07:47<18:07:08, 11.06s/it] 40%|████      | 4009/9908 [5:07:52<14:40:15,  8.95s/it] 40%|████      | 4010/9908 [5:07:55<11:54:33,  7.27s/it] 40%|████      | 4011/9908 [5:07:58<10:05:44,  6.16s/it] 40%|████      | 4012/9908 [5:08:02<8:59:47,  5.49s/it]  41%|████      | 4013/9908 [5:08:06<8:01:38,  4.90s/it] 41%|████      | 4014/9908 [5:08:10<7:28:33,  4.57s/it] 41%|████      | 4015/9908 [5:08:13<7:05:55,  4.34s/it] 41%|████      | 4016/9908 [5:08:17<6:42:04,  4.09s/it] 41%|████      | 4017/9908 [5:08:21<6:33:58,  4.01s/it] 41%|████      | 4018/9908 [5:08:25<6:34:00,  4.01s/it] 41%|████      | 4019/9908 [5:08:28<6:20:57,  3.88s/it] 41%|████      | 4020/9908 [5:08:32<6:14:55,  3.82s/it] 41%|████      | 4021/9908 [5:08:36<6:14:02,  3.81s/it] 41%|████      | 4022/9908 [5:08:39<6:02:25,  3.69s/it] 41%|████      | 4023/9908 [5:08:43<6:13:00,  3.80s/it] 41%|████      | 4024/9908 [5:08:47<6:09:32,  3.77s/it] 41%|████      | 4025/9908 [5:08:51<6:06:08,  3.73s/it] 41%|████      | 4026/9908 [5:08:54<6:02:09,  3.69s/it] 41%|████      | 4027/9908 [5:08:58<6:06:00,  3.73s/it] 41%|████      | 4028/9908 [5:09:02<6:04:04,  3.72s/it] 41%|████      | 4029/9908 [5:09:05<6:00:05,  3.68s/it] 41%|████      | 4030/9908 [5:09:09<6:02:35,  3.70s/it] 41%|████      | 4031/9908 [5:09:13<5:57:17,  3.65s/it] 41%|████      | 4032/9908 [5:09:16<5:53:29,  3.61s/it] 41%|████      | 4033/9908 [5:09:20<6:02:55,  3.71s/it] 41%|████      | 4034/9908 [5:09:24<6:07:40,  3.76s/it] 41%|████      | 4035/9908 [5:09:28<6:17:23,  3.86s/it] 41%|████      | 4036/9908 [5:09:32<6:11:51,  3.80s/it] 41%|████      | 4037/9908 [5:09:35<5:57:31,  3.65s/it] 41%|████      | 4038/9908 [5:09:39<5:57:09,  3.65s/it] 41%|████      | 4039/9908 [5:09:42<5:53:27,  3.61s/it] 41%|████      | 4040/9908 [5:09:46<5:58:16,  3.66s/it] 41%|████      | 4041/9908 [5:09:50<5:54:36,  3.63s/it] 41%|████      | 4042/9908 [5:09:53<6:02:47,  3.71s/it] 41%|████      | 4043/9908 [5:09:57<6:06:38,  3.75s/it] 41%|████      | 4044/9908 [5:10:01<6:14:18,  3.83s/it] 41%|████      | 4045/9908 [5:10:05<6:05:23,  3.74s/it] 41%|████      | 4046/9908 [5:10:08<6:01:17,  3.70s/it] 41%|████      | 4047/9908 [5:10:12<6:03:03,  3.72s/it] 41%|████      | 4048/9908 [5:10:16<5:50:59,  3.59s/it] 41%|████      | 4049/9908 [5:10:19<5:48:35,  3.57s/it]09/20/2024 06:46:53 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.028461648151278496, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.4024076461791992, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.4308693408966064}
 41%|████      | 4050/9908 [5:10:23<5:50:15,  3.59s/it] 41%|████      | 4051/9908 [5:10:27<6:06:38,  3.76s/it] 41%|████      | 4052/9908 [5:10:31<6:09:20,  3.78s/it] 41%|████      | 4053/9908 [5:10:34<5:58:23,  3.67s/it] 41%|████      | 4054/9908 [5:10:37<5:51:04,  3.60s/it] 41%|████      | 4055/9908 [5:10:41<5:50:11,  3.59s/it] 41%|████      | 4056/9908 [5:10:45<5:55:58,  3.65s/it] 41%|████      | 4057/9908 [5:10:49<5:58:56,  3.68s/it] 41%|████      | 4058/9908 [5:10:52<6:04:00,  3.73s/it] 41%|████      | 4059/9908 [5:10:56<6:09:28,  3.79s/it] 41%|████      | 4060/9908 [5:11:00<6:05:53,  3.75s/it] 41%|████      | 4061/9908 [5:11:04<6:11:44,  3.81s/it] 41%|████      | 4062/9908 [5:11:07<5:56:04,  3.65s/it] 41%|████      | 4063/9908 [5:11:11<5:54:27,  3.64s/it] 41%|████      | 4064/9908 [5:11:15<6:00:24,  3.70s/it] 41%|████      | 4065/9908 [5:11:18<5:58:56,  3.69s/it] 41%|████      | 4066/9908 [5:11:22<5:59:19,  3.69s/it] 41%|████      | 4067/9908 [5:11:26<5:52:57,  3.63s/it] 41%|████      | 4068/9908 [5:11:29<5:52:27,  3.62s/it] 41%|████      | 4069/9908 [5:11:33<6:03:24,  3.73s/it] 41%|████      | 4070/9908 [5:11:37<6:06:39,  3.77s/it] 41%|████      | 4071/9908 [5:11:41<6:03:40,  3.74s/it] 41%|████      | 4072/9908 [5:11:44<6:02:29,  3.73s/it] 41%|████      | 4073/9908 [5:11:48<6:10:40,  3.81s/it] 41%|████      | 4074/9908 [5:11:52<6:15:34,  3.86s/it] 41%|████      | 4075/9908 [5:11:56<6:14:35,  3.85s/it] 41%|████      | 4076/9908 [5:12:00<6:11:10,  3.82s/it] 41%|████      | 4077/9908 [5:12:04<6:08:48,  3.80s/it] 41%|████      | 4078/9908 [5:12:07<6:01:19,  3.72s/it] 41%|████      | 4079/9908 [5:12:11<5:50:48,  3.61s/it] 41%|████      | 4080/9908 [5:12:14<5:41:36,  3.52s/it] 41%|████      | 4081/9908 [5:12:17<5:43:17,  3.53s/it] 41%|████      | 4082/9908 [5:12:22<6:06:00,  3.77s/it] 41%|████      | 4083/9908 [5:12:26<6:13:08,  3.84s/it] 41%|████      | 4084/9908 [5:12:29<5:57:56,  3.69s/it] 41%|████      | 4085/9908 [5:12:33<5:49:49,  3.60s/it] 41%|████      | 4086/9908 [5:12:36<5:57:17,  3.68s/it] 41%|████      | 4087/9908 [5:12:40<5:53:02,  3.64s/it] 41%|████▏     | 4088/9908 [5:12:44<6:02:07,  3.73s/it] 41%|████▏     | 4089/9908 [5:12:47<5:53:23,  3.64s/it] 41%|████▏     | 4090/9908 [5:12:51<6:03:08,  3.74s/it] 41%|████▏     | 4091/9908 [5:12:55<6:00:03,  3.71s/it] 41%|████▏     | 4092/9908 [5:12:59<6:10:14,  3.82s/it] 41%|████▏     | 4093/9908 [5:13:02<5:57:28,  3.69s/it] 41%|████▏     | 4094/9908 [5:13:06<6:02:57,  3.75s/it] 41%|████▏     | 4095/9908 [5:13:10<5:52:23,  3.64s/it] 41%|████▏     | 4096/9908 [5:13:14<6:06:42,  3.79s/it] 41%|████▏     | 4097/9908 [5:13:17<6:01:43,  3.73s/it] 41%|████▏     | 4098/9908 [5:13:21<5:59:39,  3.71s/it] 41%|████▏     | 4099/9908 [5:13:25<5:57:53,  3.70s/it]09/20/2024 06:49:59 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.02488403394818306, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.3585073947906494, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.3833913803100586}
 41%|████▏     | 4100/9908 [5:13:29<6:05:31,  3.78s/it] 41%|████▏     | 4101/9908 [5:13:32<6:02:18,  3.74s/it] 41%|████▏     | 4102/9908 [5:13:36<6:07:31,  3.80s/it] 41%|████▏     | 4103/9908 [5:13:40<6:02:23,  3.75s/it] 41%|████▏     | 4104/9908 [5:13:43<5:54:26,  3.66s/it] 41%|████▏     | 4105/9908 [5:13:47<6:02:26,  3.75s/it] 41%|████▏     | 4106/9908 [5:13:51<5:51:50,  3.64s/it] 41%|████▏     | 4107/9908 [5:13:54<5:54:16,  3.66s/it] 41%|████▏     | 4108/9908 [5:13:58<5:54:25,  3.67s/it] 41%|████▏     | 4109/9908 [5:14:01<5:42:44,  3.55s/it] 41%|████▏     | 4110/9908 [5:14:05<5:48:17,  3.60s/it] 41%|████▏     | 4111/9908 [5:14:09<5:59:54,  3.73s/it] 42%|████▏     | 4112/9908 [5:14:13<5:51:30,  3.64s/it] 42%|████▏     | 4113/9908 [5:14:16<5:47:50,  3.60s/it] 42%|████▏     | 4114/9908 [5:14:20<5:50:27,  3.63s/it] 42%|████▏     | 4115/9908 [5:14:24<6:01:11,  3.74s/it] 42%|████▏     | 4116/9908 [5:14:27<5:57:42,  3.71s/it] 42%|████▏     | 4117/9908 [5:14:31<5:55:23,  3.68s/it] 42%|████▏     | 4118/9908 [5:14:35<5:55:26,  3.68s/it] 42%|████▏     | 4119/9908 [5:14:38<5:57:27,  3.70s/it] 42%|████▏     | 4120/9908 [5:14:43<6:07:56,  3.81s/it] 42%|████▏     | 4121/9908 [5:14:47<6:14:38,  3.88s/it] 42%|████▏     | 4122/9908 [5:14:50<6:02:39,  3.76s/it] 42%|████▏     | 4123/9908 [5:14:54<6:01:50,  3.75s/it] 42%|████▏     | 4124/9908 [5:14:57<5:58:44,  3.72s/it] 42%|████▏     | 4125/9908 [5:15:01<5:49:50,  3.63s/it] 42%|████▏     | 4126/9908 [5:15:04<5:43:00,  3.56s/it] 42%|████▏     | 4127/9908 [5:15:08<5:51:26,  3.65s/it] 42%|████▏     | 4128/9908 [5:15:12<5:49:42,  3.63s/it] 42%|████▏     | 4129/9908 [5:15:15<5:53:05,  3.67s/it] 42%|████▏     | 4130/9908 [5:15:19<5:54:25,  3.68s/it] 42%|████▏     | 4131/9908 [5:15:23<5:56:53,  3.71s/it] 42%|████▏     | 4132/9908 [5:15:27<6:02:55,  3.77s/it] 42%|████▏     | 4133/9908 [5:15:31<6:04:38,  3.79s/it] 42%|████▏     | 4134/9908 [5:15:34<5:55:26,  3.69s/it] 42%|████▏     | 4135/9908 [5:15:38<6:01:20,  3.76s/it] 42%|████▏     | 4136/9908 [5:15:42<6:08:23,  3.83s/it] 42%|████▏     | 4137/9908 [5:15:45<5:53:59,  3.68s/it] 42%|████▏     | 4138/9908 [5:15:49<5:55:42,  3.70s/it] 42%|████▏     | 4139/9908 [5:15:53<6:03:04,  3.78s/it] 42%|████▏     | 4140/9908 [5:15:57<5:57:13,  3.72s/it] 42%|████▏     | 4141/9908 [5:16:00<5:55:19,  3.70s/it] 42%|████▏     | 4142/9908 [5:16:04<6:02:48,  3.78s/it] 42%|████▏     | 4143/9908 [5:16:08<5:59:02,  3.74s/it] 42%|████▏     | 4144/9908 [5:16:12<6:02:15,  3.77s/it] 42%|████▏     | 4145/9908 [5:16:16<6:05:28,  3.80s/it] 42%|████▏     | 4146/9908 [5:16:19<6:03:08,  3.78s/it] 42%|████▏     | 4147/9908 [5:16:23<5:55:42,  3.70s/it] 42%|████▏     | 4148/9908 [5:16:26<5:51:48,  3.66s/it] 42%|████▏     | 4149/9908 [5:16:30<5:59:03,  3.74s/it]09/20/2024 06:53:05 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.02169487625360489, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.112857699394226, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.1345525979995728}
 42%|████▏     | 4150/9908 [5:16:34<6:00:03,  3.75s/it] 42%|████▏     | 4151/9908 [5:16:38<6:00:20,  3.76s/it] 42%|████▏     | 4152/9908 [5:16:42<5:56:14,  3.71s/it] 42%|████▏     | 4153/9908 [5:16:45<5:53:07,  3.68s/it] 42%|████▏     | 4154/9908 [5:16:49<5:59:49,  3.75s/it] 42%|████▏     | 4155/9908 [5:16:53<6:04:21,  3.80s/it] 42%|████▏     | 4156/9908 [5:16:57<5:57:44,  3.73s/it] 42%|████▏     | 4157/9908 [5:17:00<5:56:27,  3.72s/it] 42%|████▏     | 4158/9908 [5:17:04<5:51:19,  3.67s/it] 42%|████▏     | 4159/9908 [5:17:07<5:45:08,  3.60s/it] 42%|████▏     | 4160/9908 [5:17:11<5:53:23,  3.69s/it] 42%|████▏     | 4161/9908 [5:17:15<5:54:56,  3.71s/it] 42%|████▏     | 4162/9908 [5:17:18<5:51:38,  3.67s/it] 42%|████▏     | 4163/9908 [5:17:23<6:04:59,  3.81s/it] 42%|████▏     | 4164/9908 [5:17:27<6:08:58,  3.85s/it] 42%|████▏     | 4165/9908 [5:17:30<6:03:54,  3.80s/it] 42%|████▏     | 4166/9908 [5:17:34<6:04:02,  3.80s/it] 42%|████▏     | 4167/9908 [5:17:38<6:07:56,  3.85s/it] 42%|████▏     | 4168/9908 [5:17:42<6:02:18,  3.79s/it] 42%|████▏     | 4169/9908 [5:17:45<6:04:49,  3.81s/it] 42%|████▏     | 4170/9908 [5:17:49<5:59:57,  3.76s/it] 42%|████▏     | 4171/9908 [5:17:53<5:55:12,  3.71s/it] 42%|████▏     | 4172/9908 [5:17:56<5:53:06,  3.69s/it] 42%|████▏     | 4173/9908 [5:18:00<6:01:25,  3.78s/it] 42%|████▏     | 4174/9908 [5:18:04<5:55:30,  3.72s/it] 42%|████▏     | 4175/9908 [5:18:08<5:55:46,  3.72s/it] 42%|████▏     | 4176/9908 [5:18:12<5:58:59,  3.76s/it] 42%|████▏     | 4177/9908 [5:18:15<5:53:43,  3.70s/it] 42%|████▏     | 4178/9908 [5:18:19<5:45:51,  3.62s/it] 42%|████▏     | 4179/9908 [5:18:22<5:52:03,  3.69s/it] 42%|████▏     | 4180/9908 [5:18:26<5:46:25,  3.63s/it] 42%|████▏     | 4181/9908 [5:18:30<5:47:25,  3.64s/it] 42%|████▏     | 4182/9908 [5:18:33<5:51:18,  3.68s/it] 42%|████▏     | 4183/9908 [5:18:37<5:41:30,  3.58s/it] 42%|████▏     | 4184/9908 [5:18:40<5:42:58,  3.60s/it] 42%|████▏     | 4185/9908 [5:18:44<5:58:00,  3.75s/it] 42%|████▏     | 4186/9908 [5:18:48<6:07:16,  3.85s/it] 42%|████▏     | 4187/9908 [5:18:52<5:50:34,  3.68s/it] 42%|████▏     | 4188/9908 [5:18:55<5:52:01,  3.69s/it] 42%|████▏     | 4189/9908 [5:18:59<5:55:39,  3.73s/it] 42%|████▏     | 4190/9908 [5:19:03<6:00:20,  3.78s/it] 42%|████▏     | 4191/9908 [5:19:07<6:13:13,  3.92s/it] 42%|████▏     | 4192/9908 [5:19:11<6:04:15,  3.82s/it] 42%|████▏     | 4193/9908 [5:19:15<5:59:49,  3.78s/it] 42%|████▏     | 4194/9908 [5:19:18<5:51:52,  3.69s/it] 42%|████▏     | 4195/9908 [5:19:22<5:45:35,  3.63s/it] 42%|████▏     | 4196/9908 [5:19:25<5:45:12,  3.63s/it] 42%|████▏     | 4197/9908 [5:19:29<5:43:36,  3.61s/it] 42%|████▏     | 4198/9908 [5:19:33<6:02:11,  3.81s/it] 42%|████▏     | 4199/9908 [5:19:37<5:52:18,  3.70s/it]09/20/2024 06:56:11 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.02333013527095318, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.3308218717575073, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.354151964187622}
 42%|████▏     | 4200/9908 [5:19:41<5:59:08,  3.78s/it] 42%|████▏     | 4201/9908 [5:19:45<6:05:28,  3.84s/it] 42%|████▏     | 4202/9908 [5:19:48<5:57:15,  3.76s/it] 42%|████▏     | 4203/9908 [5:19:52<5:51:20,  3.70s/it] 42%|████▏     | 4204/9908 [5:19:55<5:47:00,  3.65s/it] 42%|████▏     | 4205/9908 [5:19:59<5:56:13,  3.75s/it] 42%|████▏     | 4206/9908 [5:20:03<5:56:07,  3.75s/it] 42%|████▏     | 4207/9908 [5:20:07<6:00:05,  3.79s/it] 42%|████▏     | 4208/9908 [5:20:10<5:51:21,  3.70s/it] 42%|████▏     | 4209/9908 [5:20:14<5:52:47,  3.71s/it] 42%|████▏     | 4210/9908 [5:20:18<5:56:29,  3.75s/it] 43%|████▎     | 4211/9908 [5:20:22<5:53:47,  3.73s/it] 43%|████▎     | 4212/9908 [5:20:25<5:55:59,  3.75s/it] 43%|████▎     | 4213/9908 [5:20:29<5:52:43,  3.72s/it] 43%|████▎     | 4214/9908 [5:20:33<5:58:26,  3.78s/it] 43%|████▎     | 4215/9908 [5:20:37<6:01:22,  3.81s/it] 43%|████▎     | 4216/9908 [5:20:40<5:55:57,  3.75s/it] 43%|████▎     | 4217/9908 [5:20:44<5:43:43,  3.62s/it] 43%|████▎     | 4218/9908 [5:20:48<5:52:34,  3.72s/it] 43%|████▎     | 4219/9908 [5:20:52<6:01:40,  3.81s/it] 43%|████▎     | 4220/9908 [5:20:55<5:54:03,  3.73s/it] 43%|████▎     | 4221/9908 [5:20:59<5:58:28,  3.78s/it] 43%|████▎     | 4222/9908 [5:21:03<5:51:32,  3.71s/it] 43%|████▎     | 4223/9908 [5:21:06<5:42:11,  3.61s/it] 43%|████▎     | 4224/9908 [5:21:10<5:40:44,  3.60s/it] 43%|████▎     | 4225/9908 [5:21:13<5:36:48,  3.56s/it] 43%|████▎     | 4226/9908 [5:21:17<5:41:28,  3.61s/it] 43%|████▎     | 4227/9908 [5:21:21<5:55:33,  3.76s/it] 43%|████▎     | 4228/9908 [5:21:25<5:59:03,  3.79s/it] 43%|████▎     | 4229/9908 [5:21:29<5:56:58,  3.77s/it] 43%|████▎     | 4230/9908 [5:21:32<5:52:40,  3.73s/it] 43%|████▎     | 4231/9908 [5:21:36<5:59:15,  3.80s/it] 43%|████▎     | 4232/9908 [5:21:40<5:52:11,  3.72s/it] 43%|████▎     | 4233/9908 [5:21:44<5:58:27,  3.79s/it] 43%|████▎     | 4234/9908 [5:21:47<5:55:19,  3.76s/it] 43%|████▎     | 4235/9908 [5:21:52<6:09:59,  3.91s/it] 43%|████▎     | 4236/9908 [5:21:55<5:56:57,  3.78s/it] 43%|████▎     | 4237/9908 [5:21:59<5:57:29,  3.78s/it] 43%|████▎     | 4238/9908 [5:22:02<5:51:43,  3.72s/it] 43%|████▎     | 4239/9908 [5:22:06<5:54:07,  3.75s/it] 43%|████▎     | 4240/9908 [5:22:10<5:58:45,  3.80s/it] 43%|████▎     | 4241/9908 [5:22:14<5:54:13,  3.75s/it] 43%|████▎     | 4242/9908 [5:22:18<5:56:37,  3.78s/it] 43%|████▎     | 4243/9908 [5:22:21<5:50:16,  3.71s/it] 43%|████▎     | 4244/9908 [5:22:25<5:52:33,  3.73s/it] 43%|████▎     | 4245/9908 [5:22:29<5:50:12,  3.71s/it] 43%|████▎     | 4246/9908 [5:22:33<5:58:00,  3.79s/it] 43%|████▎     | 4247/9908 [5:22:36<5:54:24,  3.76s/it] 43%|████▎     | 4248/9908 [5:22:40<5:53:28,  3.75s/it] 43%|████▎     | 4249/9908 [5:22:44<5:47:34,  3.69s/it]09/20/2024 06:59:18 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.027306189760565758, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.1103479862213135, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.137654185295105}
 43%|████▎     | 4250/9908 [5:22:47<5:50:19,  3.72s/it] 43%|████▎     | 4251/9908 [5:22:51<5:50:56,  3.72s/it] 43%|████▎     | 4252/9908 [5:22:55<5:49:21,  3.71s/it] 43%|████▎     | 4253/9908 [5:22:59<5:54:49,  3.76s/it] 43%|████▎     | 4254/9908 [5:23:02<5:52:15,  3.74s/it] 43%|████▎     | 4255/9908 [5:23:06<5:46:00,  3.67s/it] 43%|████▎     | 4256/9908 [5:23:09<5:44:51,  3.66s/it] 43%|████▎     | 4257/9908 [5:23:13<5:48:53,  3.70s/it] 43%|████▎     | 4258/9908 [5:23:17<5:46:57,  3.68s/it] 43%|████▎     | 4259/9908 [5:23:21<5:48:01,  3.70s/it] 43%|████▎     | 4260/9908 [5:23:24<5:44:38,  3.66s/it] 43%|████▎     | 4261/9908 [5:23:28<5:39:12,  3.60s/it] 43%|████▎     | 4262/9908 [5:23:31<5:38:48,  3.60s/it] 43%|████▎     | 4263/9908 [5:23:35<5:46:14,  3.68s/it] 43%|████▎     | 4264/9908 [5:23:39<5:37:40,  3.59s/it] 43%|████▎     | 4265/9908 [5:23:42<5:45:03,  3.67s/it] 43%|████▎     | 4266/9908 [5:23:46<5:50:28,  3.73s/it] 43%|████▎     | 4267/9908 [5:23:50<5:43:40,  3.66s/it] 43%|████▎     | 4268/9908 [5:23:54<5:52:41,  3.75s/it] 43%|████▎     | 4269/9908 [5:23:57<5:52:04,  3.75s/it] 43%|████▎     | 4270/9908 [5:24:01<5:44:49,  3.67s/it] 43%|████▎     | 4271/9908 [5:24:05<5:52:06,  3.75s/it] 43%|████▎     | 4272/9908 [5:24:08<5:43:14,  3.65s/it] 43%|████▎     | 4273/9908 [5:24:12<5:49:20,  3.72s/it] 43%|████▎     | 4274/9908 [5:24:16<6:03:58,  3.88s/it] 43%|████▎     | 4275/9908 [5:24:20<6:03:04,  3.87s/it] 43%|████▎     | 4276/9908 [5:24:23<5:43:20,  3.66s/it] 43%|████▎     | 4277/9908 [5:24:27<5:50:07,  3.73s/it] 43%|████▎     | 4278/9908 [5:24:31<5:44:36,  3.67s/it] 43%|████▎     | 4279/9908 [5:24:35<5:44:24,  3.67s/it] 43%|████▎     | 4280/9908 [5:24:38<5:39:42,  3.62s/it] 43%|████▎     | 4281/9908 [5:24:42<5:43:47,  3.67s/it] 43%|████▎     | 4282/9908 [5:24:45<5:38:44,  3.61s/it] 43%|████▎     | 4283/9908 [5:24:49<5:40:13,  3.63s/it] 43%|████▎     | 4284/9908 [5:24:52<5:35:51,  3.58s/it] 43%|████▎     | 4285/9908 [5:24:56<5:33:32,  3.56s/it] 43%|████▎     | 4286/9908 [5:25:00<5:50:08,  3.74s/it] 43%|████▎     | 4287/9908 [5:25:04<5:46:24,  3.70s/it] 43%|████▎     | 4288/9908 [5:25:07<5:43:41,  3.67s/it] 43%|████▎     | 4289/9908 [5:25:11<5:37:35,  3.60s/it] 43%|████▎     | 4290/9908 [5:25:15<5:47:48,  3.71s/it] 43%|████▎     | 4291/9908 [5:25:19<6:04:08,  3.89s/it] 43%|████▎     | 4292/9908 [5:25:23<5:53:26,  3.78s/it] 43%|████▎     | 4293/9908 [5:25:26<5:52:54,  3.77s/it] 43%|████▎     | 4294/9908 [5:25:30<5:51:06,  3.75s/it] 43%|████▎     | 4295/9908 [5:25:33<5:38:59,  3.62s/it] 43%|████▎     | 4296/9908 [5:25:37<5:45:55,  3.70s/it] 43%|████▎     | 4297/9908 [5:25:41<5:45:11,  3.69s/it] 43%|████▎     | 4298/9908 [5:25:45<5:47:16,  3.71s/it] 43%|████▎     | 4299/9908 [5:25:48<5:48:56,  3.73s/it]09/20/2024 07:02:23 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.016696220263838768, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.1712608337402344, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.1879570484161377}
 43%|████▎     | 4300/9908 [5:25:52<5:43:53,  3.68s/it] 43%|████▎     | 4301/9908 [5:25:55<5:39:56,  3.64s/it] 43%|████▎     | 4302/9908 [5:25:59<5:34:52,  3.58s/it] 43%|████▎     | 4303/9908 [5:26:02<5:28:50,  3.52s/it] 43%|████▎     | 4304/9908 [5:26:06<5:41:12,  3.65s/it] 43%|████▎     | 4305/9908 [5:26:10<5:54:20,  3.79s/it] 43%|████▎     | 4306/9908 [5:26:14<5:45:05,  3.70s/it] 43%|████▎     | 4307/9908 [5:26:18<5:46:02,  3.71s/it] 43%|████▎     | 4308/9908 [5:26:21<5:36:53,  3.61s/it] 43%|████▎     | 4309/9908 [5:26:25<5:43:23,  3.68s/it] 44%|████▎     | 4310/9908 [5:26:28<5:35:23,  3.59s/it] 44%|████▎     | 4311/9908 [5:26:32<5:34:05,  3.58s/it] 44%|████▎     | 4312/9908 [5:26:36<5:44:03,  3.69s/it] 44%|████▎     | 4313/9908 [5:26:40<5:49:33,  3.75s/it] 44%|████▎     | 4314/9908 [5:26:43<5:44:05,  3.69s/it] 44%|████▎     | 4315/9908 [5:26:47<5:49:05,  3.74s/it] 44%|████▎     | 4316/9908 [5:26:51<5:53:24,  3.79s/it] 44%|████▎     | 4317/9908 [5:26:54<5:45:39,  3.71s/it] 44%|████▎     | 4318/9908 [5:26:59<5:57:00,  3.83s/it] 44%|████▎     | 4319/9908 [5:27:02<5:51:17,  3.77s/it] 44%|████▎     | 4320/9908 [5:27:06<5:57:15,  3.84s/it] 44%|████▎     | 4321/9908 [5:27:10<5:55:07,  3.81s/it] 44%|████▎     | 4322/9908 [5:27:13<5:42:30,  3.68s/it] 44%|████▎     | 4323/9908 [5:27:17<5:47:54,  3.74s/it] 44%|████▎     | 4324/9908 [5:27:21<5:40:25,  3.66s/it] 44%|████▎     | 4325/9908 [5:27:24<5:42:53,  3.69s/it] 44%|████▎     | 4326/9908 [5:27:28<5:34:20,  3.59s/it] 44%|████▎     | 4327/9908 [5:27:32<5:39:38,  3.65s/it] 44%|████▎     | 4328/9908 [5:27:36<5:47:25,  3.74s/it] 44%|████▎     | 4329/9908 [5:27:40<5:55:28,  3.82s/it] 44%|████▎     | 4330/9908 [5:27:43<5:52:42,  3.79s/it] 44%|████▎     | 4331/9908 [5:27:47<5:43:02,  3.69s/it] 44%|████▎     | 4332/9908 [5:27:50<5:36:15,  3.62s/it] 44%|████▎     | 4333/9908 [5:27:54<5:34:39,  3.60s/it] 44%|████▎     | 4334/9908 [5:27:58<5:47:47,  3.74s/it] 44%|████▍     | 4335/9908 [5:28:01<5:40:28,  3.67s/it] 44%|████▍     | 4336/9908 [5:28:05<5:33:43,  3.59s/it] 44%|████▍     | 4337/9908 [5:28:09<5:42:36,  3.69s/it] 44%|████▍     | 4338/9908 [5:28:12<5:44:12,  3.71s/it] 44%|████▍     | 4339/9908 [5:28:16<5:45:22,  3.72s/it] 44%|████▍     | 4340/9908 [5:28:20<5:58:17,  3.86s/it] 44%|████▍     | 4341/9908 [5:28:24<5:48:07,  3.75s/it] 44%|████▍     | 4342/9908 [5:28:27<5:40:22,  3.67s/it] 44%|████▍     | 4343/9908 [5:28:31<5:36:56,  3.63s/it] 44%|████▍     | 4344/9908 [5:28:35<5:40:18,  3.67s/it] 44%|████▍     | 4345/9908 [5:28:38<5:32:50,  3.59s/it] 44%|████▍     | 4346/9908 [5:28:42<5:41:15,  3.68s/it] 44%|████▍     | 4347/9908 [5:28:46<5:51:08,  3.79s/it] 44%|████▍     | 4348/9908 [5:28:50<5:51:07,  3.79s/it] 44%|████▍     | 4349/9908 [5:28:53<5:42:42,  3.70s/it]09/20/2024 07:05:28 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03092215396463871, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2550698518753052, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.2859920263290405}
 44%|████▍     | 4350/9908 [5:28:57<5:48:32,  3.76s/it] 44%|████▍     | 4351/9908 [5:29:01<5:42:05,  3.69s/it] 44%|████▍     | 4352/9908 [5:29:05<5:46:24,  3.74s/it] 44%|████▍     | 4353/9908 [5:29:08<5:40:48,  3.68s/it] 44%|████▍     | 4354/9908 [5:29:12<5:46:35,  3.74s/it] 44%|████▍     | 4355/9908 [5:29:16<5:42:48,  3.70s/it] 44%|████▍     | 4356/9908 [5:29:19<5:39:49,  3.67s/it] 44%|████▍     | 4357/9908 [5:29:23<5:41:35,  3.69s/it] 44%|████▍     | 4358/9908 [5:29:26<5:38:42,  3.66s/it] 44%|████▍     | 4359/9908 [5:29:30<5:39:58,  3.68s/it] 44%|████▍     | 4360/9908 [5:29:34<5:41:08,  3.69s/it] 44%|████▍     | 4361/9908 [5:29:38<5:46:00,  3.74s/it] 44%|████▍     | 4362/9908 [5:29:41<5:39:34,  3.67s/it] 44%|████▍     | 4363/9908 [5:29:45<5:46:32,  3.75s/it] 44%|████▍     | 4364/9908 [5:29:49<5:49:14,  3.78s/it] 44%|████▍     | 4365/9908 [5:29:53<5:42:45,  3.71s/it] 44%|████▍     | 4366/9908 [5:29:56<5:38:19,  3.66s/it] 44%|████▍     | 4367/9908 [5:30:00<5:42:29,  3.71s/it] 44%|████▍     | 4368/9908 [5:30:04<5:49:04,  3.78s/it] 44%|████▍     | 4369/9908 [5:30:08<5:45:57,  3.75s/it] 44%|████▍     | 4370/9908 [5:30:11<5:49:57,  3.79s/it] 44%|████▍     | 4371/9908 [5:30:15<5:44:36,  3.73s/it] 44%|████▍     | 4372/9908 [5:30:19<5:40:41,  3.69s/it] 44%|████▍     | 4373/9908 [5:30:22<5:35:39,  3.64s/it] 44%|████▍     | 4374/9908 [5:30:26<5:38:27,  3.67s/it] 44%|████▍     | 4375/9908 [5:30:30<5:44:55,  3.74s/it] 44%|████▍     | 4376/9908 [5:30:33<5:37:48,  3.66s/it] 44%|████▍     | 4377/9908 [5:30:37<5:49:25,  3.79s/it] 44%|████▍     | 4378/9908 [5:30:41<5:52:49,  3.83s/it] 44%|████▍     | 4379/9908 [5:30:45<5:39:54,  3.69s/it] 44%|████▍     | 4380/9908 [5:30:48<5:35:06,  3.64s/it] 44%|████▍     | 4381/9908 [5:30:52<5:46:54,  3.77s/it] 44%|████▍     | 4382/9908 [5:30:56<5:44:01,  3.74s/it] 44%|████▍     | 4383/9908 [5:30:59<5:38:35,  3.68s/it] 44%|████▍     | 4384/9908 [5:31:03<5:44:56,  3.75s/it] 44%|████▍     | 4385/9908 [5:31:07<5:38:26,  3.68s/it] 44%|████▍     | 4386/9908 [5:31:11<5:50:05,  3.80s/it] 44%|████▍     | 4387/9908 [5:31:14<5:37:43,  3.67s/it] 44%|████▍     | 4388/9908 [5:31:18<5:34:44,  3.64s/it] 44%|████▍     | 4389/9908 [5:31:21<5:30:50,  3.60s/it] 44%|████▍     | 4390/9908 [5:31:25<5:31:35,  3.61s/it] 44%|████▍     | 4391/9908 [5:31:29<5:35:58,  3.65s/it] 44%|████▍     | 4392/9908 [5:31:32<5:34:20,  3.64s/it] 44%|████▍     | 4393/9908 [5:31:36<5:39:43,  3.70s/it] 44%|████▍     | 4394/9908 [5:31:40<5:39:57,  3.70s/it] 44%|████▍     | 4395/9908 [5:31:44<5:40:51,  3.71s/it] 44%|████▍     | 4396/9908 [5:31:47<5:39:46,  3.70s/it] 44%|████▍     | 4397/9908 [5:31:51<5:45:59,  3.77s/it] 44%|████▍     | 4398/9908 [5:31:55<5:39:33,  3.70s/it] 44%|████▍     | 4399/9908 [5:31:59<5:38:42,  3.69s/it]09/20/2024 07:08:33 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03138338029384613, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.3917651176452637, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.423148512840271}
 44%|████▍     | 4400/9908 [5:32:02<5:44:13,  3.75s/it] 44%|████▍     | 4401/9908 [5:32:06<5:41:37,  3.72s/it] 44%|████▍     | 4402/9908 [5:32:10<5:37:53,  3.68s/it] 44%|████▍     | 4403/9908 [5:32:13<5:37:41,  3.68s/it] 44%|████▍     | 4404/9908 [5:32:17<5:46:18,  3.78s/it] 44%|████▍     | 4405/9908 [5:32:21<5:39:39,  3.70s/it] 44%|████▍     | 4406/9908 [5:32:25<5:40:29,  3.71s/it] 44%|████▍     | 4407/9908 [5:32:28<5:37:01,  3.68s/it] 44%|████▍     | 4408/9908 [5:32:32<5:38:57,  3.70s/it] 44%|████▍     | 4409/9908 [5:32:36<5:42:54,  3.74s/it] 45%|████▍     | 4410/9908 [5:32:40<5:45:41,  3.77s/it] 45%|████▍     | 4411/9908 [5:32:43<5:44:34,  3.76s/it] 45%|████▍     | 4412/9908 [5:32:47<5:35:57,  3.67s/it] 45%|████▍     | 4413/9908 [5:32:51<5:41:01,  3.72s/it] 45%|████▍     | 4414/9908 [5:32:54<5:40:12,  3.72s/it] 45%|████▍     | 4415/9908 [5:32:58<5:40:23,  3.72s/it] 45%|████▍     | 4416/9908 [5:33:02<5:35:02,  3.66s/it] 45%|████▍     | 4417/9908 [5:33:05<5:28:02,  3.58s/it] 45%|████▍     | 4418/9908 [5:33:09<5:35:23,  3.67s/it] 45%|████▍     | 4419/9908 [5:33:13<5:42:20,  3.74s/it] 45%|████▍     | 4420/9908 [5:33:16<5:34:04,  3.65s/it] 45%|████▍     | 4421/9908 [5:33:20<5:42:07,  3.74s/it] 45%|████▍     | 4422/9908 [5:33:24<5:38:01,  3.70s/it] 45%|████▍     | 4423/9908 [5:33:28<5:55:56,  3.89s/it] 45%|████▍     | 4424/9908 [5:33:32<5:45:59,  3.79s/it] 45%|████▍     | 4425/9908 [5:33:35<5:34:24,  3.66s/it] 45%|████▍     | 4426/9908 [5:33:38<5:27:52,  3.59s/it] 45%|████▍     | 4427/9908 [5:33:42<5:35:52,  3.68s/it] 45%|████▍     | 4428/9908 [5:33:46<5:39:24,  3.72s/it] 45%|████▍     | 4429/9908 [5:33:50<5:38:30,  3.71s/it] 45%|████▍     | 4430/9908 [5:33:54<5:40:26,  3.73s/it] 45%|████▍     | 4431/9908 [5:33:57<5:33:23,  3.65s/it] 45%|████▍     | 4432/9908 [5:34:01<5:38:15,  3.71s/it] 45%|████▍     | 4433/9908 [5:34:05<5:35:41,  3.68s/it] 45%|████▍     | 4434/9908 [5:34:08<5:35:58,  3.68s/it] 45%|████▍     | 4435/9908 [5:34:12<5:40:38,  3.73s/it] 45%|████▍     | 4436/9908 [5:34:16<5:42:42,  3.76s/it] 45%|████▍     | 4437/9908 [5:34:20<5:42:00,  3.75s/it] 45%|████▍     | 4438/9908 [5:34:23<5:42:30,  3.76s/it] 45%|████▍     | 4439/9908 [5:34:27<5:43:39,  3.77s/it] 45%|████▍     | 4440/9908 [5:34:31<5:48:22,  3.82s/it] 45%|████▍     | 4441/9908 [5:34:35<5:53:25,  3.88s/it] 45%|████▍     | 4442/9908 [5:34:39<5:48:56,  3.83s/it] 45%|████▍     | 4443/9908 [5:34:42<5:41:31,  3.75s/it] 45%|████▍     | 4444/9908 [5:34:46<5:33:17,  3.66s/it] 45%|████▍     | 4445/9908 [5:34:50<5:34:57,  3.68s/it] 45%|████▍     | 4446/9908 [5:34:54<5:41:58,  3.76s/it] 45%|████▍     | 4447/9908 [5:34:57<5:38:50,  3.72s/it] 45%|████▍     | 4448/9908 [5:35:01<5:45:48,  3.80s/it] 45%|████▍     | 4449/9908 [5:35:05<5:46:45,  3.81s/it]09/20/2024 07:11:39 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.02488618902862072, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.0847194194793701, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.1096055507659912}
 45%|████▍     | 4450/9908 [5:35:09<5:45:30,  3.80s/it] 45%|████▍     | 4451/9908 [5:35:13<5:46:01,  3.80s/it] 45%|████▍     | 4452/9908 [5:35:16<5:46:54,  3.82s/it] 45%|████▍     | 4453/9908 [5:35:20<5:40:58,  3.75s/it] 45%|████▍     | 4454/9908 [5:35:23<5:31:16,  3.64s/it] 45%|████▍     | 4455/9908 [5:35:27<5:33:04,  3.66s/it] 45%|████▍     | 4456/9908 [5:35:31<5:28:21,  3.61s/it] 45%|████▍     | 4457/9908 [5:35:35<5:36:58,  3.71s/it] 45%|████▍     | 4458/9908 [5:35:38<5:36:44,  3.71s/it] 45%|████▌     | 4459/9908 [5:35:42<5:29:46,  3.63s/it] 45%|████▌     | 4460/9908 [5:35:45<5:31:53,  3.66s/it] 45%|████▌     | 4461/9908 [5:35:49<5:36:37,  3.71s/it] 45%|████▌     | 4462/9908 [5:35:53<5:34:59,  3.69s/it] 45%|████▌     | 4463/9908 [5:35:57<5:37:18,  3.72s/it] 45%|████▌     | 4464/9908 [5:36:00<5:34:14,  3.68s/it] 45%|████▌     | 4465/9908 [5:36:04<5:32:24,  3.66s/it] 45%|████▌     | 4466/9908 [5:36:08<5:49:11,  3.85s/it] 45%|████▌     | 4467/9908 [5:36:12<5:38:05,  3.73s/it] 45%|████▌     | 4468/9908 [5:36:15<5:37:33,  3.72s/it] 45%|████▌     | 4469/9908 [5:36:19<5:26:45,  3.60s/it] 45%|████▌     | 4470/9908 [5:36:22<5:26:23,  3.60s/it] 45%|████▌     | 4471/9908 [5:36:26<5:40:09,  3.75s/it] 45%|████▌     | 4472/9908 [5:36:30<5:41:20,  3.77s/it] 45%|████▌     | 4473/9908 [5:36:34<5:44:13,  3.80s/it] 45%|████▌     | 4474/9908 [5:36:38<5:44:03,  3.80s/it] 45%|████▌     | 4475/9908 [5:36:41<5:39:16,  3.75s/it] 45%|████▌     | 4476/9908 [5:36:45<5:26:18,  3.60s/it] 45%|████▌     | 4477/9908 [5:36:48<5:21:43,  3.55s/it] 45%|████▌     | 4478/9908 [5:36:52<5:18:26,  3.52s/it] 45%|████▌     | 4479/9908 [5:36:55<5:25:54,  3.60s/it] 45%|████▌     | 4480/9908 [5:36:59<5:19:28,  3.53s/it] 45%|████▌     | 4481/9908 [5:37:02<5:18:03,  3.52s/it] 45%|████▌     | 4482/9908 [5:37:06<5:29:23,  3.64s/it] 45%|████▌     | 4483/9908 [5:37:10<5:31:25,  3.67s/it] 45%|████▌     | 4484/9908 [5:37:14<5:38:00,  3.74s/it] 45%|████▌     | 4485/9908 [5:37:17<5:34:07,  3.70s/it] 45%|████▌     | 4486/9908 [5:37:21<5:29:30,  3.65s/it] 45%|████▌     | 4487/9908 [5:37:25<5:36:12,  3.72s/it] 45%|████▌     | 4488/9908 [5:37:29<5:41:57,  3.79s/it] 45%|████▌     | 4489/9908 [5:37:33<5:40:35,  3.77s/it] 45%|████▌     | 4490/9908 [5:37:36<5:31:34,  3.67s/it] 45%|████▌     | 4491/9908 [5:37:39<5:27:23,  3.63s/it] 45%|████▌     | 4492/9908 [5:37:43<5:21:02,  3.56s/it] 45%|████▌     | 4493/9908 [5:37:47<5:32:23,  3.68s/it] 45%|████▌     | 4494/9908 [5:37:50<5:29:19,  3.65s/it] 45%|████▌     | 4495/9908 [5:37:54<5:30:38,  3.66s/it] 45%|████▌     | 4496/9908 [5:37:58<5:31:22,  3.67s/it] 45%|████▌     | 4497/9908 [5:38:02<5:37:59,  3.75s/it] 45%|████▌     | 4498/9908 [5:38:05<5:32:17,  3.69s/it] 45%|████▌     | 4499/9908 [5:38:09<5:33:52,  3.70s/it]09/20/2024 07:14:42 - INFO - __main__ -   evaluate on ret%tvas--msrvtt_ret task
09/20/2024 07:14:42 - INFO - __main__ -   start running ret%tvas validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:01<06:13,  1.70s/it][A
  1%|          | 2/221 [00:01<03:10,  1.15it/s][A
  1%|▏         | 3/221 [00:02<03:12,  1.14it/s][A
  2%|▏         | 4/221 [00:03<02:31,  1.43it/s][A
  3%|▎         | 6/221 [00:03<01:19,  2.70it/s][A
  3%|▎         | 7/221 [00:03<01:09,  3.08it/s][A
  4%|▎         | 8/221 [00:03<01:05,  3.24it/s][A
  4%|▍         | 9/221 [00:04<01:06,  3.18it/s][A
  5%|▍         | 10/221 [00:04<00:58,  3.60it/s][A
  5%|▌         | 12/221 [00:10<05:10,  1.49s/it][A
  6%|▌         | 13/221 [00:10<03:59,  1.15s/it][A
  7%|▋         | 15/221 [00:10<02:39,  1.29it/s][A
  7%|▋         | 16/221 [00:11<02:39,  1.29it/s][A
  8%|▊         | 17/221 [00:13<03:07,  1.09it/s][A
  8%|▊         | 18/221 [00:13<02:36,  1.30it/s][A
  9%|▊         | 19/221 [00:14<02:56,  1.15it/s][A
  9%|▉         | 20/221 [00:14<02:12,  1.52it/s][A
 10%|▉         | 21/221 [00:14<01:48,  1.84it/s][A
 10%|▉         | 22/221 [00:15<02:00,  1.65it/s][A
 11%|█         | 24/221 [00:16<01:23,  2.37it/s][A
 11%|█▏        | 25/221 [00:16<01:17,  2.52it/s][A
 12%|█▏        | 26/221 [00:16<01:10,  2.77it/s][A
 12%|█▏        | 27/221 [00:16<00:57,  3.40it/s][A
 13%|█▎        | 28/221 [00:17<01:05,  2.93it/s][A
 13%|█▎        | 29/221 [00:17<00:57,  3.34it/s][A
 14%|█▎        | 30/221 [00:17<01:09,  2.75it/s][A
 14%|█▍        | 31/221 [00:18<01:11,  2.64it/s][A
 15%|█▍        | 33/221 [00:18<00:59,  3.16it/s][A
 16%|█▌        | 35/221 [00:19<00:44,  4.14it/s][A
 16%|█▋        | 36/221 [00:19<00:44,  4.15it/s][A
 17%|█▋        | 37/221 [00:20<01:04,  2.86it/s][A
 17%|█▋        | 38/221 [00:20<01:18,  2.32it/s][A
 18%|█▊        | 39/221 [00:20<01:08,  2.65it/s][A
 18%|█▊        | 40/221 [00:21<01:11,  2.52it/s][A
 19%|█▊        | 41/221 [00:21<01:00,  2.99it/s][A
 19%|█▉        | 42/221 [00:21<00:52,  3.42it/s][A
 19%|█▉        | 43/221 [00:21<00:44,  4.00it/s][A
 20%|█▉        | 44/221 [00:21<00:36,  4.83it/s][A
 20%|██        | 45/221 [00:30<07:45,  2.65s/it][A
 21%|██        | 46/221 [00:30<05:38,  1.93s/it][A
 21%|██▏       | 47/221 [00:31<04:23,  1.51s/it][A
 22%|██▏       | 48/221 [00:31<03:11,  1.11s/it][A
 22%|██▏       | 49/221 [00:31<02:35,  1.10it/s][A
 23%|██▎       | 50/221 [00:32<02:03,  1.39it/s][A
 23%|██▎       | 51/221 [00:32<01:34,  1.79it/s][A
 24%|██▎       | 52/221 [00:32<01:15,  2.23it/s][A
 24%|██▍       | 53/221 [00:32<01:01,  2.75it/s][A
 24%|██▍       | 54/221 [00:33<01:10,  2.36it/s][A
 25%|██▍       | 55/221 [00:35<02:33,  1.08it/s][A
 25%|██▌       | 56/221 [00:35<01:55,  1.43it/s][A
 26%|██▌       | 57/221 [00:35<01:30,  1.81it/s][A
 27%|██▋       | 59/221 [00:35<00:56,  2.87it/s][A
 27%|██▋       | 60/221 [00:36<01:00,  2.68it/s][A
 28%|██▊       | 61/221 [00:36<00:54,  2.91it/s][A
 28%|██▊       | 62/221 [00:36<00:51,  3.10it/s][A
 29%|██▊       | 63/221 [00:36<00:42,  3.72it/s][A
 29%|██▉       | 64/221 [00:37<01:09,  2.26it/s][A
 30%|██▉       | 66/221 [00:38<00:58,  2.66it/s][A
 30%|███       | 67/221 [00:38<00:54,  2.82it/s][A
 31%|███       | 68/221 [00:38<00:45,  3.34it/s][A
 31%|███       | 69/221 [00:41<02:03,  1.23it/s][A
 32%|███▏      | 70/221 [00:41<01:33,  1.62it/s][A
 32%|███▏      | 71/221 [00:41<01:19,  1.88it/s][A
 33%|███▎      | 72/221 [00:41<01:13,  2.01it/s][A
 33%|███▎      | 73/221 [00:42<01:21,  1.82it/s][A
 34%|███▍      | 75/221 [00:43<01:00,  2.40it/s][A
 34%|███▍      | 76/221 [00:43<00:57,  2.53it/s][A
 35%|███▍      | 77/221 [00:45<02:05,  1.15it/s][A
 35%|███▌      | 78/221 [00:45<01:35,  1.50it/s][A
 36%|███▌      | 79/221 [00:46<01:45,  1.34it/s][A
 37%|███▋      | 81/221 [00:47<01:22,  1.70it/s][A
 37%|███▋      | 82/221 [00:50<02:29,  1.07s/it][A
 38%|███▊      | 83/221 [00:50<02:10,  1.06it/s][A
 38%|███▊      | 84/221 [00:50<01:41,  1.34it/s][A
 39%|███▉      | 86/221 [00:51<01:09,  1.94it/s][A
 39%|███▉      | 87/221 [00:52<01:14,  1.79it/s][A
 40%|███▉      | 88/221 [00:52<01:09,  1.91it/s][A
 40%|████      | 89/221 [00:52<01:06,  1.98it/s][A
 41%|████      | 90/221 [00:53<01:02,  2.10it/s][A
 41%|████      | 91/221 [00:53<00:49,  2.64it/s][A
 42%|████▏     | 92/221 [00:53<00:44,  2.91it/s][A
 42%|████▏     | 93/221 [00:53<00:42,  3.02it/s][A
 43%|████▎     | 94/221 [00:54<00:45,  2.78it/s][A
 43%|████▎     | 95/221 [00:54<00:44,  2.85it/s][A
 43%|████▎     | 96/221 [00:55<00:53,  2.36it/s][A
 44%|████▍     | 97/221 [00:55<00:44,  2.77it/s][A
 44%|████▍     | 98/221 [00:56<00:55,  2.22it/s][A
 45%|████▍     | 99/221 [00:56<00:50,  2.41it/s][A
 45%|████▌     | 100/221 [00:57<01:14,  1.63it/s][A
 46%|████▌     | 101/221 [00:57<00:57,  2.08it/s][A
 46%|████▌     | 102/221 [00:59<01:23,  1.43it/s][A
 47%|████▋     | 103/221 [00:59<01:01,  1.92it/s][A
 47%|████▋     | 104/221 [00:59<00:53,  2.18it/s][A
 48%|████▊     | 105/221 [00:59<00:55,  2.10it/s][A
 48%|████▊     | 106/221 [01:02<01:57,  1.02s/it][A
 48%|████▊     | 107/221 [01:02<01:32,  1.23it/s][A
 49%|████▉     | 108/221 [01:03<01:19,  1.43it/s][A
 49%|████▉     | 109/221 [01:03<01:03,  1.77it/s][A
 50%|████▉     | 110/221 [01:03<00:48,  2.30it/s][A
 50%|█████     | 111/221 [01:03<00:48,  2.27it/s][A
 51%|█████     | 112/221 [01:04<00:47,  2.27it/s][A
 51%|█████     | 113/221 [01:04<00:38,  2.80it/s][A
 52%|█████▏    | 115/221 [01:05<00:36,  2.92it/s][A
 52%|█████▏    | 116/221 [01:05<00:36,  2.86it/s][A
 53%|█████▎    | 117/221 [01:05<00:40,  2.58it/s][A
 53%|█████▎    | 118/221 [01:06<00:40,  2.54it/s][A
 54%|█████▍    | 119/221 [01:06<00:33,  3.06it/s][A
 54%|█████▍    | 120/221 [01:06<00:27,  3.70it/s][A
 55%|█████▍    | 121/221 [01:07<00:33,  2.94it/s][A
 55%|█████▌    | 122/221 [01:07<00:36,  2.69it/s][A
 56%|█████▌    | 123/221 [01:09<01:17,  1.27it/s][A
 56%|█████▌    | 124/221 [01:09<00:58,  1.65it/s][A
 57%|█████▋    | 125/221 [01:10<01:21,  1.18it/s][A
 57%|█████▋    | 126/221 [01:18<04:19,  2.74s/it][A
 57%|█████▋    | 127/221 [01:19<03:29,  2.23s/it][A
 58%|█████▊    | 128/221 [01:19<02:37,  1.69s/it][A
 58%|█████▊    | 129/221 [01:20<02:03,  1.34s/it][A
 59%|█████▉    | 130/221 [01:20<01:34,  1.04s/it][A
 59%|█████▉    | 131/221 [01:21<01:25,  1.05it/s][A
 60%|█████▉    | 132/221 [01:22<01:42,  1.16s/it][A
 60%|██████    | 133/221 [01:23<01:24,  1.04it/s][A
 61%|██████    | 134/221 [01:24<01:32,  1.06s/it][A
 61%|██████    | 135/221 [01:25<01:16,  1.13it/s][A
 62%|██████▏   | 136/221 [01:25<01:02,  1.37it/s][A
 62%|██████▏   | 137/221 [01:25<00:53,  1.58it/s][A
 62%|██████▏   | 138/221 [01:26<00:52,  1.59it/s][A
 63%|██████▎   | 139/221 [01:26<00:41,  1.98it/s][A
 63%|██████▎   | 140/221 [01:27<00:45,  1.78it/s][A
 64%|██████▍   | 141/221 [01:27<00:41,  1.94it/s][A
 64%|██████▍   | 142/221 [01:28<00:38,  2.08it/s][A
 65%|██████▍   | 143/221 [01:28<00:35,  2.17it/s][A
 65%|██████▌   | 144/221 [01:28<00:32,  2.36it/s][A
 66%|██████▌   | 146/221 [01:29<00:20,  3.66it/s][A
 67%|██████▋   | 147/221 [01:29<00:17,  4.29it/s][A
 67%|██████▋   | 148/221 [01:30<00:38,  1.91it/s][A
 67%|██████▋   | 149/221 [01:30<00:31,  2.27it/s][A
 68%|██████▊   | 150/221 [01:31<00:32,  2.19it/s][A
 68%|██████▊   | 151/221 [01:31<00:29,  2.40it/s][A
 69%|██████▉   | 152/221 [01:32<00:28,  2.44it/s][A
 69%|██████▉   | 153/221 [01:32<00:22,  3.05it/s][A
 70%|██████▉   | 154/221 [01:32<00:18,  3.54it/s][A
 70%|███████   | 155/221 [01:32<00:19,  3.41it/s][A
 71%|███████   | 156/221 [01:32<00:16,  4.04it/s][A
 71%|███████   | 157/221 [01:36<01:24,  1.33s/it][A
 71%|███████▏  | 158/221 [01:37<01:19,  1.27s/it][A
 72%|███████▏  | 159/221 [01:37<00:57,  1.07it/s][A
 72%|███████▏  | 160/221 [01:38<00:43,  1.40it/s][A
 73%|███████▎  | 162/221 [01:38<00:24,  2.38it/s][A
 74%|███████▍  | 163/221 [01:38<00:22,  2.55it/s][A
 74%|███████▍  | 164/221 [01:38<00:20,  2.78it/s][A
 75%|███████▍  | 165/221 [01:39<00:25,  2.22it/s][A
 75%|███████▌  | 166/221 [01:40<00:26,  2.06it/s][A
 76%|███████▌  | 167/221 [01:40<00:20,  2.57it/s][A
 76%|███████▌  | 168/221 [01:45<01:37,  1.85s/it][A
 76%|███████▋  | 169/221 [01:46<01:17,  1.49s/it][A
 77%|███████▋  | 170/221 [01:46<01:00,  1.19s/it][A
 77%|███████▋  | 171/221 [01:47<00:47,  1.05it/s][A
 78%|███████▊  | 172/221 [01:47<00:35,  1.37it/s][A
 78%|███████▊  | 173/221 [01:47<00:30,  1.57it/s][A
 79%|███████▊  | 174/221 [01:48<00:23,  2.02it/s][A
 79%|███████▉  | 175/221 [01:48<00:20,  2.28it/s][A
 80%|███████▉  | 176/221 [01:48<00:18,  2.49it/s][A
 80%|████████  | 177/221 [01:48<00:16,  2.65it/s][A
 81%|████████  | 178/221 [01:49<00:15,  2.78it/s][A
 81%|████████  | 179/221 [01:49<00:14,  2.83it/s][A
 81%|████████▏ | 180/221 [01:49<00:13,  3.08it/s][A
 82%|████████▏ | 181/221 [01:50<00:11,  3.47it/s][A
 82%|████████▏ | 182/221 [01:50<00:13,  2.91it/s][A
 83%|████████▎ | 183/221 [01:51<00:17,  2.14it/s][A
 83%|████████▎ | 184/221 [01:51<00:16,  2.31it/s][A
 84%|████████▎ | 185/221 [01:51<00:14,  2.54it/s][A
 84%|████████▍ | 186/221 [01:52<00:11,  3.05it/s][A
 85%|████████▍ | 187/221 [01:52<00:10,  3.34it/s][A
 85%|████████▌ | 188/221 [01:52<00:08,  3.90it/s][A
 86%|████████▌ | 189/221 [01:52<00:09,  3.25it/s][A
 86%|████████▌ | 190/221 [01:53<00:12,  2.55it/s][A
 86%|████████▋ | 191/221 [01:53<00:10,  2.95it/s][A
 87%|████████▋ | 192/221 [01:54<00:11,  2.55it/s][A
 87%|████████▋ | 193/221 [01:54<00:08,  3.13it/s][A
 88%|████████▊ | 194/221 [01:54<00:10,  2.55it/s][A
 88%|████████▊ | 195/221 [01:55<00:08,  2.91it/s][A
 89%|████████▊ | 196/221 [01:55<00:07,  3.20it/s][A
 89%|████████▉ | 197/221 [01:55<00:06,  3.47it/s][A
 90%|████████▉ | 198/221 [01:55<00:06,  3.62it/s][A
 90%|█████████ | 199/221 [01:56<00:05,  4.20it/s][A
 90%|█████████ | 200/221 [01:56<00:06,  3.24it/s][A
 91%|█████████ | 201/221 [01:57<00:07,  2.51it/s][A
 91%|█████████▏| 202/221 [01:57<00:06,  2.96it/s][A
 92%|█████████▏| 203/221 [01:58<00:09,  1.93it/s][A
 92%|█████████▏| 204/221 [01:58<00:07,  2.34it/s][A
 93%|█████████▎| 206/221 [01:59<00:05,  2.57it/s][A
 94%|█████████▎| 207/221 [01:59<00:04,  3.03it/s][A
 94%|█████████▍| 208/221 [01:59<00:03,  3.29it/s][A
 95%|█████████▌| 210/221 [01:59<00:02,  4.10it/s][A
 95%|█████████▌| 211/221 [02:00<00:03,  2.91it/s][A
 96%|█████████▌| 212/221 [02:00<00:02,  3.12it/s][A
 97%|█████████▋| 214/221 [02:01<00:02,  3.11it/s][A
 97%|█████████▋| 215/221 [02:02<00:02,  2.67it/s][A
 98%|█████████▊| 216/221 [02:02<00:01,  2.54it/s][A
 98%|█████████▊| 217/221 [02:06<00:05,  1.38s/it][A
 99%|█████████▊| 218/221 [02:06<00:03,  1.09s/it][A
 99%|█████████▉| 219/221 [02:07<00:01,  1.19it/s][A
100%|█████████▉| 220/221 [02:09<00:01,  1.25s/it][A
100%|██████████| 221/221 [02:09<00:00,  1.08it/s][A100%|██████████| 221/221 [02:09<00:00,  1.71it/s]

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:00<01:56,  1.89it/s][A
  1%|          | 2/221 [00:01<01:55,  1.89it/s][A
  1%|▏         | 3/221 [00:01<01:55,  1.89it/s][A
  2%|▏         | 4/221 [00:02<01:54,  1.89it/s][A
  2%|▏         | 5/221 [00:02<01:54,  1.89it/s][A
  3%|▎         | 6/221 [00:03<01:53,  1.89it/s][A
  3%|▎         | 7/221 [00:03<01:53,  1.89it/s][A
  4%|▎         | 8/221 [00:04<01:52,  1.89it/s][A
  4%|▍         | 9/221 [00:04<01:52,  1.89it/s][A
  5%|▍         | 10/221 [00:05<01:51,  1.89it/s][A
  5%|▍         | 11/221 [00:05<01:50,  1.89it/s][A
  5%|▌         | 12/221 [00:06<01:50,  1.89it/s][A
  6%|▌         | 13/221 [00:06<01:49,  1.89it/s][A
  6%|▋         | 14/221 [00:07<01:49,  1.89it/s][A
  7%|▋         | 15/221 [00:07<01:48,  1.89it/s][A
  7%|▋         | 16/221 [00:08<01:48,  1.89it/s][A
  8%|▊         | 17/221 [00:08<01:47,  1.89it/s][A
  8%|▊         | 18/221 [00:09<01:47,  1.89it/s][A
  9%|▊         | 19/221 [00:10<01:46,  1.89it/s][A
  9%|▉         | 20/221 [00:10<01:46,  1.89it/s][A
 10%|▉         | 21/221 [00:11<01:45,  1.89it/s][A
 10%|▉         | 22/221 [00:11<01:45,  1.89it/s][A
 10%|█         | 23/221 [00:12<01:44,  1.89it/s][A
 11%|█         | 24/221 [00:12<01:44,  1.89it/s][A
 11%|█▏        | 25/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 26/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 27/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 28/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 29/221 [00:15<01:41,  1.89it/s][A
 14%|█▎        | 30/221 [00:15<01:40,  1.89it/s][A
 14%|█▍        | 31/221 [00:16<01:40,  1.89it/s][A
 14%|█▍        | 32/221 [00:16<01:39,  1.89it/s][A
 15%|█▍        | 33/221 [00:17<01:39,  1.89it/s][A
 15%|█▌        | 34/221 [00:17<01:38,  1.89it/s][A
 16%|█▌        | 35/221 [00:18<01:38,  1.89it/s][A
 16%|█▋        | 36/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 37/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 38/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 39/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 40/221 [00:21<01:35,  1.89it/s][A
 19%|█▊        | 41/221 [00:21<01:35,  1.89it/s][A
 19%|█▉        | 42/221 [00:22<01:34,  1.89it/s][A
 19%|█▉        | 43/221 [00:22<01:34,  1.89it/s][A
 20%|█▉        | 44/221 [00:23<01:33,  1.89it/s][A
 20%|██        | 45/221 [00:23<01:33,  1.89it/s][A
 21%|██        | 46/221 [00:24<01:32,  1.89it/s][A
 21%|██▏       | 47/221 [00:24<01:31,  1.89it/s][A
 22%|██▏       | 48/221 [00:25<01:31,  1.89it/s][A
 22%|██▏       | 49/221 [00:25<01:30,  1.89it/s][A
 23%|██▎       | 50/221 [00:26<01:30,  1.89it/s][A
 23%|██▎       | 51/221 [00:26<01:29,  1.89it/s][A
 24%|██▎       | 52/221 [00:27<01:29,  1.89it/s][A
 24%|██▍       | 53/221 [00:28<01:28,  1.89it/s][A
 24%|██▍       | 54/221 [00:28<01:28,  1.89it/s][A
 25%|██▍       | 55/221 [00:29<01:27,  1.89it/s][A
 25%|██▌       | 56/221 [00:29<01:27,  1.89it/s][A
 26%|██▌       | 57/221 [00:30<01:26,  1.89it/s][A
 26%|██▌       | 58/221 [00:30<01:26,  1.89it/s][A
 27%|██▋       | 59/221 [00:31<01:25,  1.89it/s][A
 27%|██▋       | 60/221 [00:31<01:25,  1.89it/s][A
 28%|██▊       | 61/221 [00:32<01:24,  1.89it/s][A
 28%|██▊       | 62/221 [00:32<01:24,  1.89it/s][A
 29%|██▊       | 63/221 [00:33<01:23,  1.89it/s][A
 29%|██▉       | 64/221 [00:33<01:22,  1.89it/s][A
 29%|██▉       | 65/221 [00:34<01:22,  1.89it/s][A
 30%|██▉       | 66/221 [00:34<01:21,  1.89it/s][A
 30%|███       | 67/221 [00:35<01:21,  1.89it/s][A
 31%|███       | 68/221 [00:35<01:20,  1.89it/s][A
 31%|███       | 69/221 [00:36<01:20,  1.89it/s][A
 32%|███▏      | 70/221 [00:37<01:19,  1.89it/s][A
 32%|███▏      | 71/221 [00:37<01:19,  1.89it/s][A
 33%|███▎      | 72/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 73/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 74/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 75/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 76/221 [00:40<01:16,  1.89it/s][A
 35%|███▍      | 77/221 [00:40<01:16,  1.89it/s][A
 35%|███▌      | 78/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 79/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 80/221 [00:42<01:14,  1.89it/s][A
 37%|███▋      | 81/221 [00:42<01:13,  1.89it/s][A
 37%|███▋      | 82/221 [00:43<01:13,  1.89it/s][A
 38%|███▊      | 83/221 [00:43<01:12,  1.89it/s][A
 38%|███▊      | 84/221 [00:44<01:12,  1.89it/s][A
 38%|███▊      | 85/221 [00:44<01:11,  1.89it/s][A
 39%|███▉      | 86/221 [00:45<01:11,  1.89it/s][A
 39%|███▉      | 87/221 [00:45<01:10,  1.89it/s][A
 40%|███▉      | 88/221 [00:46<01:10,  1.89it/s][A
 40%|████      | 89/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 90/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 91/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 92/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 93/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 94/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 95/221 [00:50<01:06,  1.89it/s][A
 43%|████▎     | 96/221 [00:50<01:06,  1.89it/s][A
 44%|████▍     | 97/221 [00:51<01:05,  1.89it/s][A
 44%|████▍     | 98/221 [00:51<01:05,  1.89it/s][A
 45%|████▍     | 99/221 [00:52<01:04,  1.89it/s][A
 45%|████▌     | 100/221 [00:52<01:03,  1.89it/s][A
 46%|████▌     | 101/221 [00:53<01:03,  1.89it/s][A
 46%|████▌     | 102/221 [00:53<01:02,  1.89it/s][A
 47%|████▋     | 103/221 [00:54<01:02,  1.89it/s][A
 47%|████▋     | 104/221 [00:54<01:01,  1.89it/s][A
 48%|████▊     | 105/221 [00:55<01:01,  1.89it/s][A
 48%|████▊     | 106/221 [00:56<01:00,  1.89it/s][A
 48%|████▊     | 107/221 [00:56<01:00,  1.89it/s][A
 49%|████▉     | 108/221 [00:57<00:59,  1.89it/s][A
 49%|████▉     | 109/221 [00:57<00:59,  1.89it/s][A
 50%|████▉     | 110/221 [00:58<00:58,  1.89it/s][A
 50%|█████     | 111/221 [00:58<00:58,  1.89it/s][A
 51%|█████     | 112/221 [00:59<00:57,  1.89it/s][A
 51%|█████     | 113/221 [00:59<00:57,  1.89it/s][A
 52%|█████▏    | 114/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 115/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 116/221 [01:01<00:55,  1.89it/s][A
 53%|█████▎    | 117/221 [01:01<00:54,  1.89it/s][A
 53%|█████▎    | 118/221 [01:02<00:54,  1.89it/s][A
 54%|█████▍    | 119/221 [01:02<00:53,  1.89it/s][A
 54%|█████▍    | 120/221 [01:03<00:53,  1.89it/s][A
 55%|█████▍    | 121/221 [01:03<00:52,  1.89it/s][A
 55%|█████▌    | 122/221 [01:04<00:52,  1.89it/s][A
 56%|█████▌    | 123/221 [01:05<00:51,  1.89it/s][A
 56%|█████▌    | 124/221 [01:05<00:51,  1.89it/s][A
 57%|█████▋    | 125/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 126/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 127/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 128/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 129/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 130/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 131/221 [01:09<00:47,  1.89it/s][A
 60%|█████▉    | 132/221 [01:09<00:47,  1.89it/s][A
 60%|██████    | 133/221 [01:10<00:46,  1.89it/s][A
 61%|██████    | 134/221 [01:10<00:45,  1.89it/s][A
 61%|██████    | 135/221 [01:11<00:45,  1.89it/s][A
 62%|██████▏   | 136/221 [01:11<00:44,  1.89it/s][A
 62%|██████▏   | 137/221 [01:12<00:44,  1.89it/s][A
 62%|██████▏   | 138/221 [01:12<00:43,  1.89it/s][A
 63%|██████▎   | 139/221 [01:13<00:43,  1.89it/s][A
 63%|██████▎   | 140/221 [01:14<00:42,  1.89it/s][A
 64%|██████▍   | 141/221 [01:14<00:42,  1.89it/s][A
 64%|██████▍   | 142/221 [01:15<00:41,  1.89it/s][A
 65%|██████▍   | 143/221 [01:15<00:41,  1.89it/s][A
 65%|██████▌   | 144/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 145/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 146/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 147/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 148/221 [01:18<00:38,  1.89it/s][A
 67%|██████▋   | 149/221 [01:18<00:38,  1.89it/s][A
 68%|██████▊   | 150/221 [01:19<00:37,  1.89it/s][A
 68%|██████▊   | 151/221 [01:19<00:36,  1.89it/s][A
 69%|██████▉   | 152/221 [01:20<00:36,  1.89it/s][A
 69%|██████▉   | 153/221 [01:20<00:35,  1.89it/s][A
 70%|██████▉   | 154/221 [01:21<00:35,  1.89it/s][A
 70%|███████   | 155/221 [01:21<00:34,  1.89it/s][A
 71%|███████   | 156/221 [01:22<00:34,  1.89it/s][A
 71%|███████   | 157/221 [01:22<00:33,  1.89it/s][A
 71%|███████▏  | 158/221 [01:23<00:33,  1.89it/s][A
 72%|███████▏  | 159/221 [01:24<00:32,  1.89it/s][A
 72%|███████▏  | 160/221 [01:24<00:32,  1.89it/s][A
 73%|███████▎  | 161/221 [01:25<00:31,  1.89it/s][A
 73%|███████▎  | 162/221 [01:25<00:31,  1.89it/s][A
 74%|███████▍  | 163/221 [01:26<00:30,  1.89it/s][A
 74%|███████▍  | 164/221 [01:26<00:30,  1.89it/s][A
 75%|███████▍  | 165/221 [01:27<00:29,  1.89it/s][A
 75%|███████▌  | 166/221 [01:27<00:29,  1.89it/s][A
 76%|███████▌  | 167/221 [01:28<00:28,  1.89it/s][A
 76%|███████▌  | 168/221 [01:28<00:28,  1.89it/s][A
 76%|███████▋  | 169/221 [01:29<00:27,  1.89it/s][A
 77%|███████▋  | 170/221 [01:29<00:26,  1.89it/s][A
 77%|███████▋  | 171/221 [01:30<00:26,  1.89it/s][A
 78%|███████▊  | 172/221 [01:30<00:25,  1.89it/s][A
 78%|███████▊  | 173/221 [01:31<00:25,  1.89it/s][A
 79%|███████▊  | 174/221 [01:31<00:24,  1.89it/s][A
 79%|███████▉  | 175/221 [01:32<00:24,  1.89it/s][A
 80%|███████▉  | 176/221 [01:33<00:23,  1.89it/s][A
 80%|████████  | 177/221 [01:33<00:23,  1.89it/s][A
 81%|████████  | 178/221 [01:34<00:22,  1.89it/s][A
 81%|████████  | 179/221 [01:34<00:22,  1.89it/s][A
 81%|████████▏ | 180/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 181/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 182/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 183/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 184/221 [01:37<00:19,  1.89it/s][A
 84%|████████▎ | 185/221 [01:37<00:19,  1.89it/s][A
 84%|████████▍ | 186/221 [01:38<00:18,  1.89it/s][A
 85%|████████▍ | 187/221 [01:38<00:17,  1.89it/s][A
 85%|████████▌ | 188/221 [01:39<00:17,  1.89it/s][A
 86%|████████▌ | 189/221 [01:39<00:16,  1.89it/s][A
 86%|████████▌ | 190/221 [01:40<00:16,  1.89it/s][A
 86%|████████▋ | 191/221 [01:40<00:15,  1.89it/s][A
 87%|████████▋ | 192/221 [01:41<00:15,  1.89it/s][A
 87%|████████▋ | 193/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 194/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 195/221 [01:43<00:13,  1.89it/s][A
 89%|████████▊ | 196/221 [01:43<00:13,  1.89it/s][A
 89%|████████▉ | 197/221 [01:44<00:12,  1.89it/s][A
 90%|████████▉ | 198/221 [01:44<00:12,  1.89it/s][A
 90%|█████████ | 199/221 [01:45<00:11,  1.89it/s][A
 90%|█████████ | 200/221 [01:45<00:11,  1.89it/s][A
 91%|█████████ | 201/221 [01:46<00:10,  1.89it/s][A
 91%|█████████▏| 202/221 [01:46<00:10,  1.89it/s][A
 92%|█████████▏| 203/221 [01:47<00:09,  1.89it/s][A
 92%|█████████▏| 204/221 [01:47<00:08,  1.89it/s][A
 93%|█████████▎| 205/221 [01:48<00:08,  1.89it/s][A
 93%|█████████▎| 206/221 [01:48<00:07,  1.89it/s][A
 94%|█████████▎| 207/221 [01:49<00:07,  1.89it/s][A
 94%|█████████▍| 208/221 [01:49<00:06,  1.89it/s][A
 95%|█████████▍| 209/221 [01:50<00:06,  1.89it/s][A
 95%|█████████▌| 210/221 [01:50<00:05,  1.89it/s][A
 95%|█████████▌| 211/221 [01:51<00:05,  1.89it/s][A
 96%|█████████▌| 212/221 [01:52<00:04,  1.89it/s][A
 96%|█████████▋| 213/221 [01:52<00:04,  1.89it/s][A
 97%|█████████▋| 214/221 [01:53<00:03,  1.89it/s][A
 97%|█████████▋| 215/221 [01:53<00:03,  1.89it/s][A
 98%|█████████▊| 216/221 [01:54<00:02,  1.89it/s][A
 98%|█████████▊| 217/221 [01:54<00:02,  1.89it/s][A
 99%|█████████▊| 218/221 [01:55<00:01,  1.89it/s][A
 99%|█████████▉| 219/221 [01:55<00:01,  1.89it/s][A
100%|█████████▉| 220/221 [01:56<00:00,  1.89it/s][A
100%|██████████| 221/221 [01:56<00:00,  1.89it/s][A100%|██████████| 221/221 [01:56<00:00,  1.89it/s]
09/20/2024 07:21:34 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_forward=====step 4499--===========

09/20/2024 07:21:34 - INFO - __main__ -   {'area_r1': 46.6, 'area_recall': '46.6/73.9/83.5', 'area_ravg': 68.0}
09/20/2024 07:21:34 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_backard=====step 4499--===========

09/20/2024 07:21:34 - INFO - __main__ -   {'forward_r1': 49.9, 'forward_recall': '49.9/79.2/87.3', 'forward_ravg': 72.1}
09/20/2024 07:21:34 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video=====step 4499--===========

09/20/2024 07:21:34 - INFO - __main__ -   {'area_video_r1': 49.9, 'area_video_recall': '49.9/78.8/87.8', 'area_video_ravg': 72.2}
09/20/2024 07:21:34 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video====history best step: 3499=======

09/20/2024 07:21:34 - INFO - __main__ -   {'area_video_r1': 50.3, 'area_video_recall': '50.3/78.1/86.7', 'area_video_ravg': 71.7}
09/20/2024 07:21:34 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itm_area=====step 4499--===========

09/20/2024 07:21:34 - INFO - __main__ -   {'area_video_r1': 60.0, 'area_video_recall': '60.0/82.9/88.8', 'area_video_ravg': 77.2, 'area_video_back_r1': 61.2, 'area_video_back_recall': '61.2/85.2/91.2', 'area_video_back_ravg': 79.2}
09/20/2024 07:21:34 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itm_area====history best step: 3499=======

09/20/2024 07:21:34 - INFO - __main__ -   {'area_video_r1': 60.5, 'area_video_recall': '60.5/81.8/87.1', 'area_video_ravg': 76.5, 'area_video_back_r1': 59.7, 'area_video_back_recall': '59.7/83.0/91.0', 'area_video_back_ravg': 77.9}
09/20/2024 07:21:34 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas=====step 4499--===========

09/20/2024 07:21:34 - INFO - __main__ -   {'video_r1': 30.5, 'video_recall': '30.5/55.7/65.8', 'video_ravg': 50.7}
09/20/2024 07:21:34 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas====history best step: 1499=======

09/20/2024 07:21:34 - INFO - __main__ -   {'video_r1': 34.7, 'video_recall': '34.7/60.5/72.3', 'video_ravg': 55.8}
09/20/2024 07:21:55 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.027345940470695496, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.318345308303833, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.345691204071045}
 45%|████▌     | 4500/9908 [5:45:23<199:40:43, 132.92s/it] 45%|████▌     | 4501/9908 [5:45:27<141:17:46, 94.08s/it]  45%|████▌     | 4502/9908 [5:45:30<100:29:34, 66.92s/it] 45%|████▌     | 4503/9908 [5:45:34<72:04:27, 48.01s/it]  45%|████▌     | 4504/9908 [5:45:38<52:01:50, 34.66s/it] 45%|████▌     | 4505/9908 [5:45:42<38:04:14, 25.37s/it] 45%|████▌     | 4506/9908 [5:45:45<28:11:43, 18.79s/it] 45%|████▌     | 4507/9908 [5:45:49<21:22:57, 14.25s/it] 45%|████▌     | 4508/9908 [5:45:52<16:38:53, 11.10s/it] 46%|████▌     | 4509/9908 [5:45:56<13:24:58,  8.95s/it] 46%|████▌     | 4510/9908 [5:46:00<10:59:05,  7.33s/it] 46%|████▌     | 4511/9908 [5:46:04<9:24:50,  6.28s/it]  46%|████▌     | 4512/9908 [5:46:08<8:21:11,  5.57s/it] 46%|████▌     | 4513/9908 [5:46:11<7:33:14,  5.04s/it] 46%|████▌     | 4514/9908 [5:46:15<7:04:23,  4.72s/it] 46%|████▌     | 4515/9908 [5:46:20<6:54:45,  4.61s/it] 46%|████▌     | 4516/9908 [5:46:23<6:18:44,  4.21s/it] 46%|████▌     | 4517/9908 [5:46:27<6:07:38,  4.09s/it] 46%|████▌     | 4518/9908 [5:46:31<6:02:06,  4.03s/it] 46%|████▌     | 4519/9908 [5:46:34<5:55:02,  3.95s/it] 46%|████▌     | 4520/9908 [5:46:38<5:44:19,  3.83s/it] 46%|████▌     | 4521/9908 [5:46:42<5:39:41,  3.78s/it] 46%|████▌     | 4522/9908 [5:46:46<5:41:20,  3.80s/it] 46%|████▌     | 4523/9908 [5:46:49<5:35:11,  3.73s/it] 46%|████▌     | 4524/9908 [5:46:53<5:37:30,  3.76s/it] 46%|████▌     | 4525/9908 [5:46:57<5:41:19,  3.80s/it] 46%|████▌     | 4526/9908 [5:47:01<5:38:02,  3.77s/it] 46%|████▌     | 4527/9908 [5:47:04<5:35:48,  3.74s/it] 46%|████▌     | 4528/9908 [5:47:08<5:37:14,  3.76s/it] 46%|████▌     | 4529/9908 [5:47:12<5:38:48,  3.78s/it] 46%|████▌     | 4530/9908 [5:47:15<5:34:09,  3.73s/it] 46%|████▌     | 4531/9908 [5:47:19<5:33:04,  3.72s/it] 46%|████▌     | 4532/9908 [5:47:23<5:33:55,  3.73s/it] 46%|████▌     | 4533/9908 [5:47:27<5:35:23,  3.74s/it] 46%|████▌     | 4534/9908 [5:47:31<5:37:29,  3.77s/it] 46%|████▌     | 4535/9908 [5:47:35<5:43:52,  3.84s/it] 46%|████▌     | 4536/9908 [5:47:38<5:44:25,  3.85s/it] 46%|████▌     | 4537/9908 [5:47:42<5:35:33,  3.75s/it] 46%|████▌     | 4538/9908 [5:47:46<5:35:59,  3.75s/it] 46%|████▌     | 4539/9908 [5:47:50<5:41:26,  3.82s/it] 46%|████▌     | 4540/9908 [5:47:54<5:44:17,  3.85s/it] 46%|████▌     | 4541/9908 [5:47:57<5:44:06,  3.85s/it] 46%|████▌     | 4542/9908 [5:48:01<5:30:27,  3.70s/it] 46%|████▌     | 4543/9908 [5:48:04<5:22:49,  3.61s/it] 46%|████▌     | 4544/9908 [5:48:07<5:14:24,  3.52s/it] 46%|████▌     | 4545/9908 [5:48:11<5:25:24,  3.64s/it] 46%|████▌     | 4546/9908 [5:48:15<5:33:26,  3.73s/it] 46%|████▌     | 4547/9908 [5:48:19<5:38:03,  3.78s/it] 46%|████▌     | 4548/9908 [5:48:23<5:29:52,  3.69s/it] 46%|████▌     | 4549/9908 [5:48:26<5:29:03,  3.68s/it]09/20/2024 07:25:01 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.028445500880479813, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2357497215270996, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.264195203781128}
 46%|████▌     | 4550/9908 [5:48:30<5:31:11,  3.71s/it] 46%|████▌     | 4551/9908 [5:48:34<5:36:50,  3.77s/it] 46%|████▌     | 4552/9908 [5:48:38<5:33:19,  3.73s/it] 46%|████▌     | 4553/9908 [5:48:42<5:38:52,  3.80s/it] 46%|████▌     | 4554/9908 [5:48:45<5:33:33,  3.74s/it] 46%|████▌     | 4555/9908 [5:48:49<5:28:45,  3.68s/it] 46%|████▌     | 4556/9908 [5:48:52<5:26:19,  3.66s/it] 46%|████▌     | 4557/9908 [5:48:56<5:33:39,  3.74s/it] 46%|████▌     | 4558/9908 [5:49:00<5:39:36,  3.81s/it] 46%|████▌     | 4559/9908 [5:49:04<5:42:22,  3.84s/it] 46%|████▌     | 4560/9908 [5:49:08<5:42:54,  3.85s/it] 46%|████▌     | 4561/9908 [5:49:12<5:37:31,  3.79s/it] 46%|████▌     | 4562/9908 [5:49:15<5:31:04,  3.72s/it] 46%|████▌     | 4563/9908 [5:49:19<5:34:12,  3.75s/it] 46%|████▌     | 4564/9908 [5:49:23<5:26:46,  3.67s/it] 46%|████▌     | 4565/9908 [5:49:26<5:30:38,  3.71s/it] 46%|████▌     | 4566/9908 [5:49:30<5:23:46,  3.64s/it] 46%|████▌     | 4567/9908 [5:49:34<5:31:25,  3.72s/it] 46%|████▌     | 4568/9908 [5:49:37<5:29:06,  3.70s/it] 46%|████▌     | 4569/9908 [5:49:41<5:31:27,  3.72s/it] 46%|████▌     | 4570/9908 [5:49:45<5:37:42,  3.80s/it] 46%|████▌     | 4571/9908 [5:49:49<5:41:37,  3.84s/it] 46%|████▌     | 4572/9908 [5:49:53<5:36:28,  3.78s/it] 46%|████▌     | 4573/9908 [5:49:57<5:41:10,  3.84s/it] 46%|████▌     | 4574/9908 [5:50:00<5:35:59,  3.78s/it] 46%|████▌     | 4575/9908 [5:50:04<5:38:39,  3.81s/it] 46%|████▌     | 4576/9908 [5:50:08<5:28:59,  3.70s/it] 46%|████▌     | 4577/9908 [5:50:11<5:28:42,  3.70s/it] 46%|████▌     | 4578/9908 [5:50:15<5:28:34,  3.70s/it] 46%|████▌     | 4579/9908 [5:50:19<5:27:43,  3.69s/it] 46%|████▌     | 4580/9908 [5:50:22<5:26:40,  3.68s/it] 46%|████▌     | 4581/9908 [5:50:26<5:35:21,  3.78s/it] 46%|████▌     | 4582/9908 [5:50:30<5:41:20,  3.85s/it] 46%|████▋     | 4583/9908 [5:50:34<5:36:43,  3.79s/it] 46%|████▋     | 4584/9908 [5:50:38<5:40:19,  3.84s/it] 46%|████▋     | 4585/9908 [5:50:42<5:30:48,  3.73s/it] 46%|████▋     | 4586/9908 [5:50:45<5:23:36,  3.65s/it] 46%|████▋     | 4587/9908 [5:50:49<5:27:22,  3.69s/it] 46%|████▋     | 4588/9908 [5:50:52<5:26:11,  3.68s/it] 46%|████▋     | 4589/9908 [5:50:56<5:28:16,  3.70s/it] 46%|████▋     | 4590/9908 [5:51:00<5:35:32,  3.79s/it] 46%|████▋     | 4591/9908 [5:51:04<5:41:07,  3.85s/it] 46%|████▋     | 4592/9908 [5:51:08<5:30:19,  3.73s/it] 46%|████▋     | 4593/9908 [5:51:11<5:26:11,  3.68s/it] 46%|████▋     | 4594/9908 [5:51:15<5:25:15,  3.67s/it] 46%|████▋     | 4595/9908 [5:51:18<5:21:26,  3.63s/it] 46%|████▋     | 4596/9908 [5:51:22<5:27:06,  3.69s/it] 46%|████▋     | 4597/9908 [5:51:26<5:33:12,  3.76s/it] 46%|████▋     | 4598/9908 [5:51:30<5:33:15,  3.77s/it] 46%|████▋     | 4599/9908 [5:51:34<5:31:01,  3.74s/it]09/20/2024 07:28:08 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.029110101982951164, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.09437894821167, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.1234890222549438}
 46%|████▋     | 4600/9908 [5:51:37<5:34:04,  3.78s/it] 46%|████▋     | 4601/9908 [5:51:41<5:33:48,  3.77s/it] 46%|████▋     | 4602/9908 [5:51:45<5:31:01,  3.74s/it] 46%|████▋     | 4603/9908 [5:51:49<5:36:01,  3.80s/it] 46%|████▋     | 4604/9908 [5:51:52<5:26:36,  3.69s/it] 46%|████▋     | 4605/9908 [5:51:56<5:26:48,  3.70s/it] 46%|████▋     | 4606/9908 [5:52:00<5:25:16,  3.68s/it] 46%|████▋     | 4607/9908 [5:52:03<5:25:12,  3.68s/it] 47%|████▋     | 4608/9908 [5:52:07<5:20:38,  3.63s/it] 47%|████▋     | 4609/9908 [5:52:10<5:17:25,  3.59s/it] 47%|████▋     | 4610/9908 [5:52:14<5:17:42,  3.60s/it] 47%|████▋     | 4611/9908 [5:52:18<5:23:33,  3.67s/it] 47%|████▋     | 4612/9908 [5:52:22<5:30:16,  3.74s/it] 47%|████▋     | 4613/9908 [5:52:25<5:28:55,  3.73s/it] 47%|████▋     | 4614/9908 [5:52:29<5:32:57,  3.77s/it] 47%|████▋     | 4615/9908 [5:52:33<5:26:52,  3.71s/it] 47%|████▋     | 4616/9908 [5:52:36<5:25:50,  3.69s/it] 47%|████▋     | 4617/9908 [5:52:40<5:31:27,  3.76s/it] 47%|████▋     | 4618/9908 [5:52:44<5:32:53,  3.78s/it] 47%|████▋     | 4619/9908 [5:52:48<5:32:38,  3.77s/it] 47%|████▋     | 4620/9908 [5:52:52<5:31:43,  3.76s/it] 47%|████▋     | 4621/9908 [5:52:55<5:28:35,  3.73s/it] 47%|████▋     | 4622/9908 [5:52:59<5:29:05,  3.74s/it] 47%|████▋     | 4623/9908 [5:53:03<5:23:57,  3.68s/it] 47%|████▋     | 4624/9908 [5:53:06<5:19:51,  3.63s/it] 47%|████▋     | 4625/9908 [5:53:09<5:10:02,  3.52s/it] 47%|████▋     | 4626/9908 [5:53:13<5:17:49,  3.61s/it] 47%|████▋     | 4627/9908 [5:53:17<5:22:32,  3.66s/it] 47%|████▋     | 4628/9908 [5:53:21<5:22:41,  3.67s/it] 47%|████▋     | 4629/9908 [5:53:25<5:30:56,  3.76s/it] 47%|████▋     | 4630/9908 [5:53:28<5:31:37,  3.77s/it] 47%|████▋     | 4631/9908 [5:53:32<5:29:29,  3.75s/it] 47%|████▋     | 4632/9908 [5:53:36<5:32:44,  3.78s/it] 47%|████▋     | 4633/9908 [5:53:40<5:25:58,  3.71s/it] 47%|████▋     | 4634/9908 [5:53:43<5:28:38,  3.74s/it] 47%|████▋     | 4635/9908 [5:53:47<5:31:17,  3.77s/it] 47%|████▋     | 4636/9908 [5:53:51<5:21:16,  3.66s/it] 47%|████▋     | 4637/9908 [5:53:54<5:24:40,  3.70s/it] 47%|████▋     | 4638/9908 [5:53:58<5:18:45,  3.63s/it] 47%|████▋     | 4639/9908 [5:54:02<5:20:28,  3.65s/it] 47%|████▋     | 4640/9908 [5:54:05<5:22:44,  3.68s/it] 47%|████▋     | 4641/9908 [5:54:09<5:25:41,  3.71s/it] 47%|████▋     | 4642/9908 [5:54:13<5:32:40,  3.79s/it] 47%|████▋     | 4643/9908 [5:54:17<5:31:57,  3.78s/it] 47%|████▋     | 4644/9908 [5:54:21<5:36:59,  3.84s/it] 47%|████▋     | 4645/9908 [5:54:24<5:27:02,  3.73s/it] 47%|████▋     | 4646/9908 [5:54:28<5:34:43,  3.82s/it] 47%|████▋     | 4647/9908 [5:54:32<5:21:10,  3.66s/it] 47%|████▋     | 4648/9908 [5:54:36<5:31:48,  3.78s/it] 47%|████▋     | 4649/9908 [5:54:40<5:32:54,  3.80s/it]09/20/2024 07:31:14 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.02254573255777359, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 0.9596168994903564, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 0.9821626543998718}
 47%|████▋     | 4650/9908 [5:54:43<5:25:01,  3.71s/it] 47%|████▋     | 4651/9908 [5:54:46<5:14:27,  3.59s/it] 47%|████▋     | 4652/9908 [5:54:50<5:25:26,  3.72s/it] 47%|████▋     | 4653/9908 [5:54:54<5:17:43,  3.63s/it] 47%|████▋     | 4654/9908 [5:54:58<5:25:03,  3.71s/it] 47%|████▋     | 4655/9908 [5:55:01<5:22:11,  3.68s/it] 47%|████▋     | 4656/9908 [5:55:05<5:18:37,  3.64s/it] 47%|████▋     | 4657/9908 [5:55:09<5:24:41,  3.71s/it] 47%|████▋     | 4658/9908 [5:55:12<5:21:11,  3.67s/it] 47%|████▋     | 4659/9908 [5:55:16<5:15:19,  3.60s/it] 47%|████▋     | 4660/9908 [5:55:19<5:16:15,  3.62s/it] 47%|████▋     | 4661/9908 [5:55:23<5:14:13,  3.59s/it] 47%|████▋     | 4662/9908 [5:55:27<5:23:18,  3.70s/it] 47%|████▋     | 4663/9908 [5:55:30<5:21:08,  3.67s/it] 47%|████▋     | 4664/9908 [5:55:34<5:21:57,  3.68s/it] 47%|████▋     | 4665/9908 [5:55:38<5:17:32,  3.63s/it] 47%|████▋     | 4666/9908 [5:55:41<5:14:39,  3.60s/it] 47%|████▋     | 4667/9908 [5:55:45<5:25:28,  3.73s/it] 47%|████▋     | 4668/9908 [5:55:49<5:29:41,  3.78s/it] 47%|████▋     | 4669/9908 [5:55:53<5:28:02,  3.76s/it] 47%|████▋     | 4670/9908 [5:55:56<5:16:09,  3.62s/it] 47%|████▋     | 4671/9908 [5:56:00<5:34:43,  3.83s/it] 47%|████▋     | 4672/9908 [5:56:04<5:22:37,  3.70s/it] 47%|████▋     | 4673/9908 [5:56:07<5:17:51,  3.64s/it] 47%|████▋     | 4674/9908 [5:56:11<5:24:51,  3.72s/it] 47%|████▋     | 4675/9908 [5:56:15<5:30:10,  3.79s/it] 47%|████▋     | 4676/9908 [5:56:19<5:25:24,  3.73s/it] 47%|████▋     | 4677/9908 [5:56:23<5:28:15,  3.77s/it] 47%|████▋     | 4678/9908 [5:56:26<5:19:52,  3.67s/it] 47%|████▋     | 4679/9908 [5:56:30<5:16:03,  3.63s/it] 47%|████▋     | 4680/9908 [5:56:33<5:14:07,  3.61s/it] 47%|████▋     | 4681/9908 [5:56:37<5:22:58,  3.71s/it] 47%|████▋     | 4682/9908 [5:56:41<5:25:39,  3.74s/it] 47%|████▋     | 4683/9908 [5:56:44<5:18:21,  3.66s/it] 47%|████▋     | 4684/9908 [5:56:48<5:22:20,  3.70s/it] 47%|████▋     | 4685/9908 [5:56:52<5:24:06,  3.72s/it] 47%|████▋     | 4686/9908 [5:56:56<5:18:37,  3.66s/it] 47%|████▋     | 4687/9908 [5:56:59<5:22:18,  3.70s/it] 47%|████▋     | 4688/9908 [5:57:03<5:19:34,  3.67s/it] 47%|████▋     | 4689/9908 [5:57:07<5:33:00,  3.83s/it] 47%|████▋     | 4690/9908 [5:57:11<5:29:38,  3.79s/it] 47%|████▋     | 4691/9908 [5:57:14<5:23:24,  3.72s/it] 47%|████▋     | 4692/9908 [5:57:18<5:16:46,  3.64s/it] 47%|████▋     | 4693/9908 [5:57:21<5:17:31,  3.65s/it] 47%|████▋     | 4694/9908 [5:57:25<5:13:59,  3.61s/it] 47%|████▋     | 4695/9908 [5:57:28<5:04:47,  3.51s/it] 47%|████▋     | 4696/9908 [5:57:32<5:20:18,  3.69s/it] 47%|████▋     | 4697/9908 [5:57:36<5:20:59,  3.70s/it] 47%|████▋     | 4698/9908 [5:57:40<5:22:35,  3.72s/it] 47%|████▋     | 4699/9908 [5:57:44<5:25:30,  3.75s/it]09/20/2024 07:34:18 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.027615835890173912, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.1634037494659424, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.1910195350646973}
 47%|████▋     | 4700/9908 [5:57:47<5:17:44,  3.66s/it] 47%|████▋     | 4701/9908 [5:57:51<5:15:17,  3.63s/it] 47%|████▋     | 4702/9908 [5:57:54<5:12:00,  3.60s/it] 47%|████▋     | 4703/9908 [5:57:58<5:16:30,  3.65s/it] 47%|████▋     | 4704/9908 [5:58:02<5:20:51,  3.70s/it] 47%|████▋     | 4705/9908 [5:58:06<5:29:55,  3.80s/it] 47%|████▋     | 4706/9908 [5:58:09<5:16:35,  3.65s/it] 48%|████▊     | 4707/9908 [5:58:13<5:14:55,  3.63s/it] 48%|████▊     | 4708/9908 [5:58:16<5:11:17,  3.59s/it] 48%|████▊     | 4709/9908 [5:58:20<5:16:59,  3.66s/it] 48%|████▊     | 4710/9908 [5:58:24<5:21:24,  3.71s/it] 48%|████▊     | 4711/9908 [5:58:27<5:18:23,  3.68s/it] 48%|████▊     | 4712/9908 [5:58:31<5:10:00,  3.58s/it] 48%|████▊     | 4713/9908 [5:58:35<5:17:03,  3.66s/it] 48%|████▊     | 4714/9908 [5:58:38<5:10:48,  3.59s/it] 48%|████▊     | 4715/9908 [5:58:42<5:22:43,  3.73s/it] 48%|████▊     | 4716/9908 [5:58:46<5:22:48,  3.73s/it] 48%|████▊     | 4717/9908 [5:58:50<5:19:23,  3.69s/it] 48%|████▊     | 4718/9908 [5:58:53<5:16:35,  3.66s/it] 48%|████▊     | 4719/9908 [5:58:57<5:16:59,  3.67s/it] 48%|████▊     | 4720/9908 [5:59:00<5:16:19,  3.66s/it] 48%|████▊     | 4721/9908 [5:59:04<5:21:03,  3.71s/it] 48%|████▊     | 4722/9908 [5:59:08<5:20:24,  3.71s/it] 48%|████▊     | 4723/9908 [5:59:12<5:22:10,  3.73s/it] 48%|████▊     | 4724/9908 [5:59:15<5:19:24,  3.70s/it] 48%|████▊     | 4725/9908 [5:59:19<5:22:15,  3.73s/it] 48%|████▊     | 4726/9908 [5:59:23<5:23:28,  3.75s/it] 48%|████▊     | 4727/9908 [5:59:27<5:35:03,  3.88s/it] 48%|████▊     | 4728/9908 [5:59:31<5:29:20,  3.81s/it] 48%|████▊     | 4729/9908 [5:59:35<5:26:58,  3.79s/it] 48%|████▊     | 4730/9908 [5:59:38<5:16:48,  3.67s/it] 48%|████▊     | 4731/9908 [5:59:42<5:15:47,  3.66s/it] 48%|████▊     | 4732/9908 [5:59:46<5:27:13,  3.79s/it] 48%|████▊     | 4733/9908 [5:59:49<5:16:28,  3.67s/it] 48%|████▊     | 4734/9908 [5:59:53<5:16:10,  3.67s/it] 48%|████▊     | 4735/9908 [5:59:56<5:11:06,  3.61s/it] 48%|████▊     | 4736/9908 [6:00:00<5:16:45,  3.67s/it] 48%|████▊     | 4737/9908 [6:00:04<5:13:02,  3.63s/it] 48%|████▊     | 4738/9908 [6:00:07<5:20:53,  3.72s/it] 48%|████▊     | 4739/9908 [6:00:11<5:19:15,  3.71s/it] 48%|████▊     | 4740/9908 [6:00:15<5:15:55,  3.67s/it] 48%|████▊     | 4741/9908 [6:00:18<5:11:16,  3.61s/it] 48%|████▊     | 4742/9908 [6:00:22<5:12:10,  3.63s/it] 48%|████▊     | 4743/9908 [6:00:25<5:12:07,  3.63s/it] 48%|████▊     | 4744/9908 [6:00:29<5:17:19,  3.69s/it] 48%|████▊     | 4745/9908 [6:00:33<5:21:05,  3.73s/it] 48%|████▊     | 4746/9908 [6:00:37<5:15:47,  3.67s/it] 48%|████▊     | 4747/9908 [6:00:40<5:08:25,  3.59s/it] 48%|████▊     | 4748/9908 [6:00:44<5:13:44,  3.65s/it] 48%|████▊     | 4749/9908 [6:00:47<5:07:15,  3.57s/it]09/20/2024 07:37:22 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.031353432685136795, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 0.9434456825256348, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 0.9747990965843201}
 48%|████▊     | 4750/9908 [6:00:51<5:09:04,  3.60s/it] 48%|████▊     | 4751/9908 [6:00:55<5:12:46,  3.64s/it] 48%|████▊     | 4752/9908 [6:00:58<5:07:50,  3.58s/it] 48%|████▊     | 4753/9908 [6:01:02<5:04:53,  3.55s/it] 48%|████▊     | 4754/9908 [6:01:06<5:23:22,  3.76s/it] 48%|████▊     | 4755/9908 [6:01:09<5:17:06,  3.69s/it] 48%|████▊     | 4756/9908 [6:01:13<5:10:24,  3.62s/it] 48%|████▊     | 4757/9908 [6:01:17<5:25:39,  3.79s/it] 48%|████▊     | 4758/9908 [6:01:21<5:21:33,  3.75s/it] 48%|████▊     | 4759/9908 [6:01:24<5:10:43,  3.62s/it] 48%|████▊     | 4760/9908 [6:01:28<5:17:35,  3.70s/it] 48%|████▊     | 4761/9908 [6:01:32<5:19:24,  3.72s/it] 48%|████▊     | 4762/9908 [6:01:35<5:18:17,  3.71s/it] 48%|████▊     | 4763/9908 [6:01:39<5:20:36,  3.74s/it] 48%|████▊     | 4764/9908 [6:01:43<5:12:51,  3.65s/it] 48%|████▊     | 4765/9908 [6:01:46<5:10:54,  3.63s/it] 48%|████▊     | 4766/9908 [6:01:50<5:09:05,  3.61s/it] 48%|████▊     | 4767/9908 [6:01:54<5:14:57,  3.68s/it] 48%|████▊     | 4768/9908 [6:01:57<5:10:02,  3.62s/it] 48%|████▊     | 4769/9908 [6:02:01<5:24:45,  3.79s/it] 48%|████▊     | 4770/9908 [6:02:05<5:17:38,  3.71s/it] 48%|████▊     | 4771/9908 [6:02:08<5:08:20,  3.60s/it] 48%|████▊     | 4772/9908 [6:02:12<5:15:19,  3.68s/it] 48%|████▊     | 4773/9908 [6:02:16<5:14:24,  3.67s/it] 48%|████▊     | 4774/9908 [6:02:20<5:21:26,  3.76s/it] 48%|████▊     | 4775/9908 [6:02:23<5:15:26,  3.69s/it] 48%|████▊     | 4776/9908 [6:02:27<5:19:51,  3.74s/it] 48%|████▊     | 4777/9908 [6:02:31<5:18:19,  3.72s/it] 48%|████▊     | 4778/9908 [6:02:34<5:21:28,  3.76s/it] 48%|████▊     | 4779/9908 [6:02:38<5:20:03,  3.74s/it] 48%|████▊     | 4780/9908 [6:02:42<5:23:26,  3.78s/it] 48%|████▊     | 4781/9908 [6:02:46<5:19:36,  3.74s/it] 48%|████▊     | 4782/9908 [6:02:49<5:18:49,  3.73s/it] 48%|████▊     | 4783/9908 [6:02:53<5:21:52,  3.77s/it] 48%|████▊     | 4784/9908 [6:02:57<5:20:59,  3.76s/it] 48%|████▊     | 4785/9908 [6:03:00<5:07:14,  3.60s/it] 48%|████▊     | 4786/9908 [6:03:04<5:13:31,  3.67s/it] 48%|████▊     | 4787/9908 [6:03:08<5:15:03,  3.69s/it] 48%|████▊     | 4788/9908 [6:03:12<5:18:27,  3.73s/it] 48%|████▊     | 4789/9908 [6:03:15<5:16:39,  3.71s/it] 48%|████▊     | 4790/9908 [6:03:19<5:19:49,  3.75s/it] 48%|████▊     | 4791/9908 [6:03:23<5:21:04,  3.76s/it] 48%|████▊     | 4792/9908 [6:03:27<5:29:40,  3.87s/it] 48%|████▊     | 4793/9908 [6:03:31<5:32:47,  3.90s/it] 48%|████▊     | 4794/9908 [6:03:35<5:28:02,  3.85s/it] 48%|████▊     | 4795/9908 [6:03:38<5:20:29,  3.76s/it] 48%|████▊     | 4796/9908 [6:03:42<5:18:36,  3.74s/it] 48%|████▊     | 4797/9908 [6:03:46<5:17:34,  3.73s/it] 48%|████▊     | 4798/9908 [6:03:50<5:22:09,  3.78s/it] 48%|████▊     | 4799/9908 [6:03:53<5:16:47,  3.72s/it]09/20/2024 07:40:28 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04066891595721245, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2357972860336304, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.2764662504196167}
 48%|████▊     | 4800/9908 [6:03:57<5:12:14,  3.67s/it] 48%|████▊     | 4801/9908 [6:04:01<5:17:59,  3.74s/it] 48%|████▊     | 4802/9908 [6:04:04<5:19:15,  3.75s/it] 48%|████▊     | 4803/9908 [6:04:08<5:25:45,  3.83s/it] 48%|████▊     | 4804/9908 [6:04:12<5:17:35,  3.73s/it] 48%|████▊     | 4805/9908 [6:04:15<5:12:55,  3.68s/it] 49%|████▊     | 4806/9908 [6:04:19<5:05:13,  3.59s/it] 49%|████▊     | 4807/9908 [6:04:23<5:09:51,  3.64s/it] 49%|████▊     | 4808/9908 [6:04:26<5:05:09,  3.59s/it] 49%|████▊     | 4809/9908 [6:04:30<5:12:39,  3.68s/it] 49%|████▊     | 4810/9908 [6:04:34<5:10:27,  3.65s/it] 49%|████▊     | 4811/9908 [6:04:37<5:15:20,  3.71s/it] 49%|████▊     | 4812/9908 [6:04:41<5:14:29,  3.70s/it] 49%|████▊     | 4813/9908 [6:04:45<5:14:40,  3.71s/it] 49%|████▊     | 4814/9908 [6:04:49<5:16:58,  3.73s/it] 49%|████▊     | 4815/9908 [6:04:52<5:06:51,  3.62s/it] 49%|████▊     | 4816/9908 [6:04:56<5:10:20,  3.66s/it] 49%|████▊     | 4817/9908 [6:05:00<5:19:41,  3.77s/it] 49%|████▊     | 4818/9908 [6:05:03<5:19:10,  3.76s/it] 49%|████▊     | 4819/9908 [6:05:07<5:14:19,  3.71s/it] 49%|████▊     | 4820/9908 [6:05:11<5:10:26,  3.66s/it] 49%|████▊     | 4821/9908 [6:05:14<5:11:57,  3.68s/it] 49%|████▊     | 4822/9908 [6:05:18<5:14:51,  3.71s/it] 49%|████▊     | 4823/9908 [6:05:22<5:21:18,  3.79s/it] 49%|████▊     | 4824/9908 [6:05:26<5:15:07,  3.72s/it] 49%|████▊     | 4825/9908 [6:05:29<5:16:17,  3.73s/it] 49%|████▊     | 4826/9908 [6:05:33<5:17:38,  3.75s/it] 49%|████▊     | 4827/9908 [6:05:36<5:05:05,  3.60s/it] 49%|████▊     | 4828/9908 [6:05:40<5:11:37,  3.68s/it] 49%|████▊     | 4829/9908 [6:05:44<5:13:07,  3.70s/it] 49%|████▊     | 4830/9908 [6:05:48<5:12:31,  3.69s/it] 49%|████▉     | 4831/9908 [6:05:51<5:13:09,  3.70s/it] 49%|████▉     | 4832/9908 [6:05:55<5:11:02,  3.68s/it] 49%|████▉     | 4833/9908 [6:05:59<5:12:25,  3.69s/it] 49%|████▉     | 4834/9908 [6:06:03<5:18:05,  3.76s/it] 49%|████▉     | 4835/9908 [6:06:07<5:19:58,  3.78s/it] 49%|████▉     | 4836/9908 [6:06:10<5:16:21,  3.74s/it] 49%|████▉     | 4837/9908 [6:06:14<5:18:34,  3.77s/it] 49%|████▉     | 4838/9908 [6:06:18<5:17:58,  3.76s/it] 49%|████▉     | 4839/9908 [6:06:22<5:23:17,  3.83s/it] 49%|████▉     | 4840/9908 [6:06:25<5:14:53,  3.73s/it] 49%|████▉     | 4841/9908 [6:06:29<5:12:18,  3.70s/it] 49%|████▉     | 4842/9908 [6:06:33<5:22:42,  3.82s/it] 49%|████▉     | 4843/9908 [6:06:37<5:24:23,  3.84s/it] 49%|████▉     | 4844/9908 [6:06:41<5:25:24,  3.86s/it] 49%|████▉     | 4845/9908 [6:06:44<5:17:56,  3.77s/it] 49%|████▉     | 4846/9908 [6:06:48<5:16:49,  3.76s/it] 49%|████▉     | 4847/9908 [6:06:52<5:18:14,  3.77s/it] 49%|████▉     | 4848/9908 [6:06:55<5:12:14,  3.70s/it] 49%|████▉     | 4849/9908 [6:06:59<5:19:00,  3.78s/it]09/20/2024 07:43:34 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.022698145359754562, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.0679030418395996, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.0906012058258057}
 49%|████▉     | 4850/9908 [6:07:04<5:28:35,  3.90s/it] 49%|████▉     | 4851/9908 [6:07:07<5:12:09,  3.70s/it] 49%|████▉     | 4852/9908 [6:07:10<5:08:10,  3.66s/it] 49%|████▉     | 4853/9908 [6:07:14<5:00:30,  3.57s/it] 49%|████▉     | 4854/9908 [6:07:17<4:54:28,  3.50s/it] 49%|████▉     | 4855/9908 [6:07:21<4:58:24,  3.54s/it] 49%|████▉     | 4856/9908 [6:07:24<5:04:14,  3.61s/it] 49%|████▉     | 4857/9908 [6:07:29<5:15:18,  3.75s/it] 49%|████▉     | 4858/9908 [6:07:32<5:09:54,  3.68s/it] 49%|████▉     | 4859/9908 [6:07:35<5:02:09,  3.59s/it] 49%|████▉     | 4860/9908 [6:07:40<5:24:29,  3.86s/it] 49%|████▉     | 4861/9908 [6:07:43<5:15:02,  3.75s/it] 49%|████▉     | 4862/9908 [6:07:47<5:14:33,  3.74s/it] 49%|████▉     | 4863/9908 [6:07:51<5:12:00,  3.71s/it] 49%|████▉     | 4864/9908 [6:07:55<5:14:56,  3.75s/it] 49%|████▉     | 4865/9908 [6:07:58<5:09:51,  3.69s/it] 49%|████▉     | 4866/9908 [6:08:02<5:07:13,  3.66s/it] 49%|████▉     | 4867/9908 [6:08:05<5:04:45,  3.63s/it] 49%|████▉     | 4868/9908 [6:08:09<5:01:50,  3.59s/it] 49%|████▉     | 4869/9908 [6:08:13<5:05:37,  3.64s/it] 49%|████▉     | 4870/9908 [6:08:16<5:07:21,  3.66s/it] 49%|████▉     | 4871/9908 [6:08:20<5:01:34,  3.59s/it] 49%|████▉     | 4872/9908 [6:08:23<5:02:10,  3.60s/it] 49%|████▉     | 4873/9908 [6:08:27<5:14:28,  3.75s/it] 49%|████▉     | 4874/9908 [6:08:31<5:20:43,  3.82s/it] 49%|████▉     | 4875/9908 [6:08:35<5:09:30,  3.69s/it] 49%|████▉     | 4876/9908 [6:08:39<5:16:07,  3.77s/it] 49%|████▉     | 4877/9908 [6:08:43<5:21:32,  3.83s/it] 49%|████▉     | 4878/9908 [6:08:46<5:14:34,  3.75s/it] 49%|████▉     | 4879/9908 [6:08:50<5:20:17,  3.82s/it] 49%|████▉     | 4880/9908 [6:08:54<5:12:27,  3.73s/it] 49%|████▉     | 4881/9908 [6:08:58<5:21:30,  3.84s/it] 49%|████▉     | 4882/9908 [6:09:01<5:14:02,  3.75s/it] 49%|████▉     | 4883/9908 [6:09:05<5:14:05,  3.75s/it] 49%|████▉     | 4884/9908 [6:09:09<5:16:54,  3.78s/it] 49%|████▉     | 4885/9908 [6:09:13<5:17:39,  3.79s/it] 49%|████▉     | 4886/9908 [6:09:17<5:19:08,  3.81s/it] 49%|████▉     | 4887/9908 [6:09:20<5:09:12,  3.69s/it] 49%|████▉     | 4888/9908 [6:09:24<5:10:25,  3.71s/it] 49%|████▉     | 4889/9908 [6:09:27<5:04:29,  3.64s/it] 49%|████▉     | 4890/9908 [6:09:31<5:01:43,  3.61s/it] 49%|████▉     | 4891/9908 [6:09:35<5:10:32,  3.71s/it] 49%|████▉     | 4892/9908 [6:09:39<5:15:06,  3.77s/it] 49%|████▉     | 4893/9908 [6:09:42<5:14:14,  3.76s/it] 49%|████▉     | 4894/9908 [6:09:46<5:10:27,  3.72s/it] 49%|████▉     | 4895/9908 [6:09:50<5:16:42,  3.79s/it] 49%|████▉     | 4896/9908 [6:09:54<5:19:25,  3.82s/it] 49%|████▉     | 4897/9908 [6:09:57<5:11:20,  3.73s/it] 49%|████▉     | 4898/9908 [6:10:01<5:12:55,  3.75s/it] 49%|████▉     | 4899/9908 [6:10:05<5:17:30,  3.80s/it]09/20/2024 07:46:40 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.021561117842793465, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.7525837421417236, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.7741448879241943}
 49%|████▉     | 4900/9908 [6:10:09<5:11:08,  3.73s/it] 49%|████▉     | 4901/9908 [6:10:12<5:02:14,  3.62s/it] 49%|████▉     | 4902/9908 [6:10:16<5:08:20,  3.70s/it] 49%|████▉     | 4903/9908 [6:10:20<5:15:48,  3.79s/it] 49%|████▉     | 4904/9908 [6:10:24<5:17:07,  3.80s/it] 50%|████▉     | 4905/9908 [6:10:28<5:14:48,  3.78s/it] 50%|████▉     | 4906/9908 [6:10:31<5:09:45,  3.72s/it] 50%|████▉     | 4907/9908 [6:10:35<5:11:45,  3.74s/it] 50%|████▉     | 4908/9908 [6:10:39<5:10:50,  3.73s/it] 50%|████▉     | 4909/9908 [6:10:43<5:15:28,  3.79s/it] 50%|████▉     | 4910/9908 [6:10:47<5:19:55,  3.84s/it] 50%|████▉     | 4911/9908 [6:10:50<5:15:13,  3.78s/it] 50%|████▉     | 4912/9908 [6:10:54<5:11:43,  3.74s/it] 50%|████▉     | 4913/9908 [6:10:58<5:13:21,  3.76s/it] 50%|████▉     | 4914/9908 [6:11:02<5:19:15,  3.84s/it] 50%|████▉     | 4915/9908 [6:11:05<5:16:26,  3.80s/it] 50%|████▉     | 4916/9908 [6:11:09<5:18:36,  3.83s/it] 50%|████▉     | 4917/9908 [6:11:13<5:11:11,  3.74s/it] 50%|████▉     | 4918/9908 [6:11:16<5:05:23,  3.67s/it] 50%|████▉     | 4919/9908 [6:11:20<5:06:37,  3.69s/it] 50%|████▉     | 4920/9908 [6:11:24<5:07:57,  3.70s/it] 50%|████▉     | 4921/9908 [6:11:27<5:03:49,  3.66s/it] 50%|████▉     | 4922/9908 [6:11:31<4:56:04,  3.56s/it] 50%|████▉     | 4923/9908 [6:11:34<5:03:00,  3.65s/it] 50%|████▉     | 4924/9908 [6:11:38<5:05:39,  3.68s/it] 50%|████▉     | 4925/9908 [6:11:42<5:09:00,  3.72s/it] 50%|████▉     | 4926/9908 [6:11:46<5:07:15,  3.70s/it] 50%|████▉     | 4927/9908 [6:11:50<5:12:52,  3.77s/it] 50%|████▉     | 4928/9908 [6:11:53<5:06:11,  3.69s/it] 50%|████▉     | 4929/9908 [6:11:57<5:12:37,  3.77s/it] 50%|████▉     | 4930/9908 [6:12:01<5:10:55,  3.75s/it] 50%|████▉     | 4931/9908 [6:12:05<5:12:00,  3.76s/it] 50%|████▉     | 4932/9908 [6:12:08<5:03:50,  3.66s/it] 50%|████▉     | 4933/9908 [6:12:12<5:07:49,  3.71s/it] 50%|████▉     | 4934/9908 [6:12:16<5:23:30,  3.90s/it] 50%|████▉     | 4935/9908 [6:12:20<5:10:06,  3.74s/it] 50%|████▉     | 4936/9908 [6:12:23<5:03:44,  3.67s/it] 50%|████▉     | 4937/9908 [6:12:27<5:01:55,  3.64s/it] 50%|████▉     | 4938/9908 [6:12:30<4:45:25,  3.45s/it] 50%|████▉     | 4939/9908 [6:12:32<4:30:51,  3.27s/it] 50%|████▉     | 4940/9908 [6:12:35<4:20:23,  3.14s/it] 50%|████▉     | 4941/9908 [6:12:38<4:12:48,  3.05s/it] 50%|████▉     | 4942/9908 [6:12:41<4:07:24,  2.99s/it] 50%|████▉     | 4943/9908 [6:12:44<4:03:56,  2.95s/it] 50%|████▉     | 4944/9908 [6:12:47<4:01:07,  2.91s/it] 50%|████▉     | 4945/9908 [6:12:50<3:59:29,  2.90s/it] 50%|████▉     | 4946/9908 [6:12:52<3:58:09,  2.88s/it] 50%|████▉     | 4947/9908 [6:12:55<3:57:22,  2.87s/it] 50%|████▉     | 4948/9908 [6:12:58<3:56:32,  2.86s/it] 50%|████▉     | 4949/9908 [6:13:01<3:56:22,  2.86s/it]09/20/2024 07:49:35 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03727663680911064, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.390608549118042, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.4278851747512817}
 50%|████▉     | 4950/9908 [6:13:04<3:56:07,  2.86s/it] 50%|████▉     | 4951/9908 [6:13:07<3:55:37,  2.85s/it] 50%|████▉     | 4952/9908 [6:13:09<3:55:32,  2.85s/it] 50%|████▉     | 4953/9908 [6:13:12<3:55:21,  2.85s/it]/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
 50%|█████     | 4954/9908 [6:13:55<20:27:30, 14.87s/it] 50%|█████     | 4955/9908 [6:14:03<17:19:34, 12.59s/it] 50%|█████     | 4956/9908 [6:14:09<14:57:34, 10.88s/it] 50%|█████     | 4957/9908 [6:14:15<12:52:46,  9.37s/it] 50%|█████     | 4958/9908 [6:14:20<10:54:37,  7.93s/it] 50%|█████     | 4959/9908 [6:14:26<10:12:40,  7.43s/it] 50%|█████     | 4960/9908 [6:14:31<9:18:31,  6.77s/it]  50%|█████     | 4961/9908 [6:14:35<8:06:13,  5.90s/it] 50%|█████     | 4962/9908 [6:14:39<7:19:01,  5.33s/it] 50%|█████     | 4963/9908 [6:14:43<6:33:30,  4.77s/it] 50%|█████     | 4964/9908 [6:14:46<6:01:17,  4.38s/it] 50%|█████     | 4965/9908 [6:14:50<5:39:15,  4.12s/it] 50%|█████     | 4966/9908 [6:14:53<5:23:43,  3.93s/it] 50%|█████     | 4967/9908 [6:14:57<5:11:13,  3.78s/it] 50%|█████     | 4968/9908 [6:15:00<5:08:15,  3.74s/it] 50%|█████     | 4969/9908 [6:15:04<5:06:25,  3.72s/it] 50%|█████     | 4970/9908 [6:15:08<5:09:44,  3.76s/it] 50%|█████     | 4971/9908 [6:15:12<5:10:32,  3.77s/it] 50%|█████     | 4972/9908 [6:15:15<5:03:19,  3.69s/it] 50%|█████     | 4973/9908 [6:15:19<5:04:12,  3.70s/it] 50%|█████     | 4974/9908 [6:15:23<5:09:40,  3.77s/it] 50%|█████     | 4975/9908 [6:15:27<5:11:52,  3.79s/it] 50%|█████     | 4976/9908 [6:15:30<5:05:23,  3.72s/it] 50%|█████     | 4977/9908 [6:15:34<5:13:38,  3.82s/it] 50%|█████     | 4978/9908 [6:15:38<5:14:14,  3.82s/it] 50%|█████     | 4979/9908 [6:15:42<5:07:42,  3.75s/it] 50%|█████     | 4980/9908 [6:15:45<5:12:19,  3.80s/it] 50%|█████     | 4981/9908 [6:15:49<5:09:43,  3.77s/it] 50%|█████     | 4982/9908 [6:15:53<5:05:01,  3.72s/it] 50%|█████     | 4983/9908 [6:15:56<5:02:23,  3.68s/it] 50%|█████     | 4984/9908 [6:16:00<4:55:26,  3.60s/it] 50%|█████     | 4985/9908 [6:16:04<5:01:32,  3.68s/it] 50%|█████     | 4986/9908 [6:16:07<5:06:09,  3.73s/it] 50%|█████     | 4987/9908 [6:16:11<5:05:01,  3.72s/it] 50%|█████     | 4988/9908 [6:16:15<5:01:05,  3.67s/it] 50%|█████     | 4989/9908 [6:16:18<4:55:07,  3.60s/it] 50%|█████     | 4990/9908 [6:16:21<4:47:26,  3.51s/it] 50%|█████     | 4991/9908 [6:16:25<4:56:00,  3.61s/it] 50%|█████     | 4992/9908 [6:16:29<4:53:21,  3.58s/it] 50%|█████     | 4993/9908 [6:16:33<4:59:30,  3.66s/it] 50%|█████     | 4994/9908 [6:16:36<5:03:50,  3.71s/it] 50%|█████     | 4995/9908 [6:16:40<5:01:04,  3.68s/it] 50%|█████     | 4996/9908 [6:16:44<5:03:33,  3.71s/it] 50%|█████     | 4997/9908 [6:16:47<4:57:15,  3.63s/it] 50%|█████     | 4998/9908 [6:16:51<5:02:32,  3.70s/it] 50%|█████     | 4999/9908 [6:16:55<5:00:05,  3.67s/it]09/20/2024 07:53:28 - INFO - __main__ -   evaluate on ret%tvas--msrvtt_ret task
09/20/2024 07:53:28 - INFO - __main__ -   start running ret%tvas validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:02<09:51,  2.69s/it][A
  1%|          | 2/221 [00:03<04:55,  1.35s/it][A
  1%|▏         | 3/221 [00:03<03:44,  1.03s/it][A
  2%|▏         | 4/221 [00:03<02:35,  1.39it/s][A
  2%|▏         | 5/221 [00:04<01:51,  1.93it/s][A
  3%|▎         | 6/221 [00:04<01:23,  2.57it/s][A
  3%|▎         | 7/221 [00:04<01:19,  2.70it/s][A
  4%|▎         | 8/221 [00:05<01:20,  2.63it/s][A
  4%|▍         | 9/221 [00:05<01:33,  2.27it/s][A
  5%|▍         | 10/221 [00:05<01:27,  2.40it/s][A
  5%|▌         | 12/221 [00:09<03:33,  1.02s/it][A
  6%|▌         | 13/221 [00:09<02:47,  1.24it/s][A
  7%|▋         | 15/221 [00:10<01:56,  1.76it/s][A
  7%|▋         | 16/221 [00:10<02:01,  1.69it/s][A
  8%|▊         | 17/221 [00:11<02:13,  1.52it/s][A
  8%|▊         | 18/221 [00:11<01:49,  1.86it/s][A
  9%|▊         | 19/221 [00:13<02:39,  1.27it/s][A
 10%|▉         | 21/221 [00:13<01:46,  1.87it/s][A
 10%|▉         | 22/221 [00:14<01:51,  1.78it/s][A
 11%|█         | 24/221 [00:14<01:20,  2.46it/s][A
 11%|█▏        | 25/221 [00:14<01:15,  2.61it/s][A
 12%|█▏        | 26/221 [00:15<01:10,  2.78it/s][A
 13%|█▎        | 28/221 [00:15<01:08,  2.82it/s][A
 13%|█▎        | 29/221 [00:16<00:59,  3.20it/s][A
 14%|█▎        | 30/221 [00:16<01:08,  2.81it/s][A
 14%|█▍        | 31/221 [00:17<01:12,  2.62it/s][A
 15%|█▍        | 33/221 [00:17<01:00,  3.10it/s][A
 15%|█▌        | 34/221 [00:17<00:50,  3.68it/s][A
 16%|█▌        | 35/221 [00:17<00:45,  4.12it/s][A
 16%|█▋        | 36/221 [00:17<00:43,  4.25it/s][A
 17%|█▋        | 37/221 [00:18<01:13,  2.50it/s][A
 17%|█▋        | 38/221 [00:19<01:22,  2.22it/s][A
 18%|█▊        | 39/221 [00:19<01:11,  2.54it/s][A
 18%|█▊        | 40/221 [00:20<01:17,  2.33it/s][A
 19%|█▊        | 41/221 [00:20<01:04,  2.79it/s][A
 19%|█▉        | 42/221 [00:20<00:54,  3.29it/s][A
 19%|█▉        | 43/221 [00:20<00:43,  4.05it/s][A
 20%|██        | 45/221 [00:25<03:39,  1.25s/it][A
 21%|██        | 46/221 [00:25<02:57,  1.01s/it][A
 21%|██▏       | 47/221 [00:26<02:35,  1.12it/s][A
 22%|██▏       | 48/221 [00:26<01:59,  1.45it/s][A
 22%|██▏       | 49/221 [00:26<01:45,  1.63it/s][A
 23%|██▎       | 50/221 [00:27<01:31,  1.87it/s][A
 23%|██▎       | 51/221 [00:27<01:17,  2.18it/s][A
 24%|██▎       | 52/221 [00:27<01:04,  2.61it/s][A
 24%|██▍       | 53/221 [00:27<00:56,  2.95it/s][A
 24%|██▍       | 54/221 [00:28<01:04,  2.59it/s][A
 25%|██▍       | 55/221 [00:30<02:11,  1.27it/s][A
 25%|██▌       | 56/221 [00:30<01:41,  1.63it/s][A
 26%|██▌       | 57/221 [00:30<01:23,  1.97it/s][A
 27%|██▋       | 59/221 [00:30<00:53,  3.03it/s][A
 27%|██▋       | 60/221 [00:31<01:00,  2.65it/s][A
 28%|██▊       | 61/221 [00:31<00:54,  2.93it/s][A
 28%|██▊       | 62/221 [00:31<00:54,  2.94it/s][A
 29%|██▊       | 63/221 [00:32<00:43,  3.65it/s][A
 29%|██▉       | 64/221 [00:33<01:20,  1.95it/s][A
 29%|██▉       | 65/221 [00:33<01:01,  2.52it/s][A
 30%|██▉       | 66/221 [00:33<01:06,  2.34it/s][A
 30%|███       | 67/221 [00:34<01:00,  2.56it/s][A
 31%|███       | 68/221 [00:34<00:49,  3.12it/s][A
 31%|███       | 69/221 [00:35<01:49,  1.39it/s][A
 32%|███▏      | 70/221 [00:36<01:22,  1.84it/s][A
 32%|███▏      | 71/221 [00:36<01:15,  1.98it/s][A
 33%|███▎      | 72/221 [00:37<01:16,  1.95it/s][A
 33%|███▎      | 73/221 [00:37<01:23,  1.77it/s][A
 33%|███▎      | 74/221 [00:37<01:02,  2.34it/s][A
 34%|███▍      | 75/221 [00:38<00:57,  2.55it/s][A
 34%|███▍      | 76/221 [00:38<00:54,  2.66it/s][A
 35%|███▍      | 77/221 [00:40<02:10,  1.11it/s][A
 36%|███▌      | 79/221 [00:42<01:56,  1.21it/s][A
 36%|███▌      | 80/221 [00:42<01:30,  1.55it/s][A
 37%|███▋      | 81/221 [00:42<01:33,  1.50it/s][A
 37%|███▋      | 82/221 [00:46<03:28,  1.50s/it][A
 38%|███▊      | 83/221 [00:47<02:50,  1.24s/it][A
 38%|███▊      | 84/221 [00:47<02:10,  1.05it/s][A
 39%|███▉      | 86/221 [00:47<01:23,  1.61it/s][A
 39%|███▉      | 87/221 [00:48<01:17,  1.72it/s][A
 40%|███▉      | 88/221 [00:48<01:09,  1.92it/s][A
 40%|████      | 89/221 [00:48<01:01,  2.13it/s][A
 41%|████      | 90/221 [00:49<00:53,  2.47it/s][A
 41%|████      | 91/221 [00:49<00:43,  3.01it/s][A
 42%|████▏     | 92/221 [00:49<00:38,  3.36it/s][A
 42%|████▏     | 93/221 [00:49<00:39,  3.21it/s][A
 43%|████▎     | 94/221 [00:50<01:00,  2.11it/s][A
 43%|████▎     | 95/221 [00:51<00:54,  2.30it/s][A
 43%|████▎     | 96/221 [00:51<01:03,  1.98it/s][A
 44%|████▍     | 97/221 [00:52<00:52,  2.35it/s][A
 44%|████▍     | 98/221 [00:52<01:05,  1.87it/s][A
 45%|████▍     | 99/221 [00:53<00:54,  2.23it/s][A
 45%|████▌     | 100/221 [00:54<01:18,  1.54it/s][A
 46%|████▌     | 101/221 [00:54<00:58,  2.04it/s][A
 46%|████▌     | 102/221 [00:55<01:16,  1.55it/s][A
 47%|████▋     | 103/221 [00:55<00:57,  2.07it/s][A
 47%|████▋     | 104/221 [00:55<00:51,  2.26it/s][A
 48%|████▊     | 105/221 [00:56<00:55,  2.09it/s][A
 48%|████▊     | 106/221 [00:58<02:02,  1.06s/it][A
 48%|████▊     | 107/221 [00:59<01:35,  1.20it/s][A
 49%|████▉     | 108/221 [00:59<01:22,  1.38it/s][A
 49%|████▉     | 109/221 [00:59<01:08,  1.65it/s][A
 50%|████▉     | 110/221 [01:00<00:52,  2.09it/s][A
 50%|█████     | 111/221 [01:00<00:46,  2.38it/s][A
 51%|█████     | 112/221 [01:00<00:46,  2.37it/s][A
 51%|█████     | 113/221 [01:00<00:38,  2.78it/s][A
 52%|█████▏    | 115/221 [01:01<00:36,  2.88it/s][A
 52%|█████▏    | 116/221 [01:01<00:36,  2.91it/s][A
 53%|█████▎    | 117/221 [01:02<00:38,  2.67it/s][A
 53%|█████▎    | 118/221 [01:02<00:40,  2.57it/s][A
 54%|█████▍    | 119/221 [01:03<00:35,  2.90it/s][A
 54%|█████▍    | 120/221 [01:03<00:28,  3.59it/s][A
 55%|█████▍    | 121/221 [01:03<00:32,  3.09it/s][A
 55%|█████▌    | 122/221 [01:04<00:35,  2.76it/s][A
 56%|█████▌    | 123/221 [01:05<01:04,  1.52it/s][A
 56%|█████▌    | 124/221 [01:05<00:50,  1.92it/s][A
 57%|█████▋    | 125/221 [01:06<00:59,  1.62it/s][A
 57%|█████▋    | 126/221 [01:09<02:02,  1.29s/it][A
 57%|█████▋    | 127/221 [01:10<01:42,  1.09s/it][A
 58%|█████▊    | 128/221 [01:10<01:23,  1.11it/s][A
 58%|█████▊    | 129/221 [01:10<01:11,  1.28it/s][A
 59%|█████▉    | 130/221 [01:11<00:56,  1.61it/s][A
 59%|█████▉    | 131/221 [01:12<01:10,  1.27it/s][A
 60%|█████▉    | 132/221 [01:13<01:25,  1.04it/s][A
 60%|██████    | 133/221 [01:14<01:13,  1.20it/s][A
 61%|██████    | 134/221 [01:15<01:19,  1.09it/s][A
 61%|██████    | 135/221 [01:16<01:12,  1.19it/s][A
 62%|██████▏   | 136/221 [01:16<00:59,  1.43it/s][A
 62%|██████▏   | 137/221 [01:16<00:51,  1.63it/s][A
 62%|██████▏   | 138/221 [01:17<00:50,  1.63it/s][A
 63%|██████▎   | 139/221 [01:17<00:39,  2.08it/s][A
 63%|██████▎   | 140/221 [01:18<00:43,  1.85it/s][A
 64%|██████▍   | 141/221 [01:18<00:38,  2.07it/s][A
 64%|██████▍   | 142/221 [01:18<00:34,  2.28it/s][A
 65%|██████▍   | 143/221 [01:19<00:33,  2.31it/s][A
 65%|██████▌   | 144/221 [01:19<00:30,  2.57it/s][A
 66%|██████▌   | 146/221 [01:19<00:19,  3.88it/s][A
 67%|██████▋   | 147/221 [01:19<00:16,  4.55it/s][A
 67%|██████▋   | 148/221 [01:21<00:37,  1.94it/s][A
 67%|██████▋   | 149/221 [01:21<00:31,  2.30it/s][A
 68%|██████▊   | 150/221 [01:22<00:34,  2.08it/s][A
 68%|██████▊   | 151/221 [01:22<00:28,  2.43it/s][A
 69%|██████▉   | 152/221 [01:22<00:26,  2.56it/s][A
 69%|██████▉   | 153/221 [01:22<00:21,  3.16it/s][A
 70%|██████▉   | 154/221 [01:23<00:19,  3.43it/s][A
 70%|███████   | 155/221 [01:23<00:18,  3.58it/s][A
 71%|███████   | 156/221 [01:23<00:17,  3.63it/s][A
 71%|███████   | 157/221 [01:30<02:24,  2.27s/it][A
 71%|███████▏  | 158/221 [01:31<02:01,  1.93s/it][A
 72%|███████▏  | 160/221 [01:31<01:07,  1.10s/it][A
 73%|███████▎  | 161/221 [01:32<00:52,  1.14it/s][A
 74%|███████▍  | 163/221 [01:32<00:34,  1.69it/s][A
 74%|███████▍  | 164/221 [01:32<00:29,  1.95it/s][A
 75%|███████▍  | 165/221 [01:33<00:27,  2.04it/s][A
 75%|███████▌  | 166/221 [01:33<00:28,  1.96it/s][A
 76%|███████▌  | 167/221 [01:34<00:24,  2.21it/s][A
 76%|███████▌  | 168/221 [01:38<01:26,  1.63s/it][A
 76%|███████▋  | 169/221 [01:39<01:09,  1.33s/it][A
 77%|███████▋  | 170/221 [01:39<00:55,  1.09s/it][A
 77%|███████▋  | 171/221 [01:40<00:43,  1.14it/s][A
 78%|███████▊  | 172/221 [01:40<00:35,  1.39it/s][A
 78%|███████▊  | 173/221 [01:41<00:31,  1.55it/s][A
 79%|███████▊  | 174/221 [01:41<00:26,  1.79it/s][A
 79%|███████▉  | 175/221 [01:41<00:22,  2.07it/s][A
 80%|███████▉  | 176/221 [01:41<00:19,  2.32it/s][A
 80%|████████  | 177/221 [01:42<00:17,  2.46it/s][A
 81%|████████  | 178/221 [01:42<00:16,  2.59it/s][A
 81%|████████  | 179/221 [01:42<00:15,  2.77it/s][A
 81%|████████▏ | 180/221 [01:43<00:12,  3.19it/s][A
 82%|████████▏ | 181/221 [01:43<00:10,  3.72it/s][A
 82%|████████▏ | 182/221 [01:43<00:14,  2.72it/s][A
 83%|████████▎ | 183/221 [01:44<00:16,  2.27it/s][A
 83%|████████▎ | 184/221 [01:44<00:15,  2.34it/s][A
 84%|████████▎ | 185/221 [01:45<00:13,  2.63it/s][A
 84%|████████▍ | 186/221 [01:45<00:12,  2.81it/s][A
 85%|████████▍ | 187/221 [01:45<00:11,  3.06it/s][A
 85%|████████▌ | 188/221 [01:45<00:09,  3.59it/s][A
 86%|████████▌ | 189/221 [01:46<00:09,  3.47it/s][A
 86%|████████▌ | 190/221 [01:46<00:10,  2.95it/s][A
 86%|████████▋ | 191/221 [01:46<00:09,  3.15it/s][A
 87%|████████▋ | 192/221 [01:47<00:10,  2.67it/s][A
 87%|████████▋ | 193/221 [01:47<00:08,  3.23it/s][A
 88%|████████▊ | 194/221 [01:48<00:12,  2.11it/s][A
 88%|████████▊ | 195/221 [01:48<00:10,  2.54it/s][A
 89%|████████▊ | 196/221 [01:48<00:08,  2.88it/s][A
 89%|████████▉ | 197/221 [01:49<00:07,  3.03it/s][A
 90%|████████▉ | 198/221 [01:49<00:07,  3.25it/s][A
 90%|█████████ | 199/221 [01:49<00:06,  3.62it/s][A
 90%|█████████ | 200/221 [01:50<00:07,  2.86it/s][A
 91%|█████████ | 201/221 [01:50<00:08,  2.39it/s][A
 91%|█████████▏| 202/221 [01:51<00:07,  2.70it/s][A
 92%|█████████▏| 203/221 [01:52<00:12,  1.41it/s][A
 92%|█████████▏| 204/221 [01:52<00:10,  1.69it/s][A
 93%|█████████▎| 206/221 [01:53<00:06,  2.22it/s][A
 94%|█████████▍| 208/221 [01:53<00:04,  2.74it/s][A
 95%|█████████▌| 210/221 [01:54<00:03,  3.36it/s][A
 95%|█████████▌| 211/221 [01:54<00:03,  2.62it/s][A
 96%|█████████▌| 212/221 [01:55<00:03,  2.84it/s][A
 97%|█████████▋| 214/221 [01:55<00:02,  3.01it/s][A
 97%|█████████▋| 215/221 [01:56<00:02,  2.72it/s][A
 98%|█████████▊| 216/221 [01:56<00:01,  2.77it/s][A
 98%|█████████▊| 217/221 [01:59<00:03,  1.07it/s][A
 99%|█████████▊| 218/221 [01:59<00:02,  1.29it/s][A
 99%|█████████▉| 219/221 [01:59<00:01,  1.53it/s][A
100%|█████████▉| 220/221 [02:00<00:00,  1.58it/s][A
100%|██████████| 221/221 [02:00<00:00,  2.07it/s][A100%|██████████| 221/221 [02:00<00:00,  1.83it/s]

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:00<01:56,  1.89it/s][A
  1%|          | 2/221 [00:01<01:55,  1.89it/s][A
  1%|▏         | 3/221 [00:01<01:55,  1.89it/s][A
  2%|▏         | 4/221 [00:02<01:54,  1.89it/s][A
  2%|▏         | 5/221 [00:02<01:54,  1.89it/s][A
  3%|▎         | 6/221 [00:03<01:53,  1.89it/s][A
  3%|▎         | 7/221 [00:03<01:53,  1.89it/s][A
  4%|▎         | 8/221 [00:04<01:52,  1.89it/s][A
  4%|▍         | 9/221 [00:04<01:52,  1.89it/s][A
  5%|▍         | 10/221 [00:05<01:51,  1.89it/s][A
  5%|▍         | 11/221 [00:05<01:51,  1.89it/s][A
  5%|▌         | 12/221 [00:06<01:50,  1.89it/s][A
  6%|▌         | 13/221 [00:06<01:49,  1.89it/s][A
  6%|▋         | 14/221 [00:07<01:49,  1.89it/s][A
  7%|▋         | 15/221 [00:07<01:48,  1.89it/s][A
  7%|▋         | 16/221 [00:08<01:48,  1.89it/s][A
  8%|▊         | 17/221 [00:08<01:47,  1.89it/s][A
  8%|▊         | 18/221 [00:09<01:47,  1.89it/s][A
  9%|▊         | 19/221 [00:10<01:46,  1.89it/s][A
  9%|▉         | 20/221 [00:10<01:46,  1.89it/s][A
 10%|▉         | 21/221 [00:11<01:45,  1.89it/s][A
 10%|▉         | 22/221 [00:11<01:45,  1.89it/s][A
 10%|█         | 23/221 [00:12<01:44,  1.89it/s][A
 11%|█         | 24/221 [00:12<01:44,  1.89it/s][A
 11%|█▏        | 25/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 26/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 27/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 28/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 29/221 [00:15<01:41,  1.89it/s][A
 14%|█▎        | 30/221 [00:15<01:40,  1.89it/s][A
 14%|█▍        | 31/221 [00:16<01:40,  1.89it/s][A
 14%|█▍        | 32/221 [00:16<01:39,  1.89it/s][A
 15%|█▍        | 33/221 [00:17<01:39,  1.89it/s][A
 15%|█▌        | 34/221 [00:17<01:38,  1.89it/s][A
 16%|█▌        | 35/221 [00:18<01:38,  1.89it/s][A
 16%|█▋        | 36/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 37/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 38/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 39/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 40/221 [00:21<01:35,  1.89it/s][A
 19%|█▊        | 41/221 [00:21<01:35,  1.89it/s][A
 19%|█▉        | 42/221 [00:22<01:34,  1.89it/s][A
 19%|█▉        | 43/221 [00:22<01:34,  1.89it/s][A
 20%|█▉        | 44/221 [00:23<01:33,  1.89it/s][A
 20%|██        | 45/221 [00:23<01:33,  1.89it/s][A
 21%|██        | 46/221 [00:24<01:32,  1.89it/s][A
 21%|██▏       | 47/221 [00:24<01:31,  1.89it/s][A
 22%|██▏       | 48/221 [00:25<01:31,  1.89it/s][A
 22%|██▏       | 49/221 [00:25<01:30,  1.89it/s][A
 23%|██▎       | 50/221 [00:26<01:30,  1.89it/s][A
 23%|██▎       | 51/221 [00:26<01:29,  1.89it/s][A
 24%|██▎       | 52/221 [00:27<01:29,  1.89it/s][A
 24%|██▍       | 53/221 [00:28<01:28,  1.89it/s][A
 24%|██▍       | 54/221 [00:28<01:28,  1.89it/s][A
 25%|██▍       | 55/221 [00:29<01:27,  1.89it/s][A
 25%|██▌       | 56/221 [00:29<01:27,  1.89it/s][A
 26%|██▌       | 57/221 [00:30<01:26,  1.89it/s][A
 26%|██▌       | 58/221 [00:30<01:26,  1.89it/s][A
 27%|██▋       | 59/221 [00:31<01:25,  1.89it/s][A
 27%|██▋       | 60/221 [00:31<01:25,  1.89it/s][A
 28%|██▊       | 61/221 [00:32<01:24,  1.89it/s][A
 28%|██▊       | 62/221 [00:32<01:24,  1.89it/s][A
 29%|██▊       | 63/221 [00:33<01:23,  1.89it/s][A
 29%|██▉       | 64/221 [00:33<01:22,  1.89it/s][A
 29%|██▉       | 65/221 [00:34<01:22,  1.89it/s][A
 30%|██▉       | 66/221 [00:34<01:21,  1.89it/s][A
 30%|███       | 67/221 [00:35<01:21,  1.89it/s][A
 31%|███       | 68/221 [00:35<01:20,  1.89it/s][A
 31%|███       | 69/221 [00:36<01:20,  1.89it/s][A
 32%|███▏      | 70/221 [00:37<01:19,  1.89it/s][A
 32%|███▏      | 71/221 [00:37<01:19,  1.89it/s][A
 33%|███▎      | 72/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 73/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 74/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 75/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 76/221 [00:40<01:16,  1.89it/s][A
 35%|███▍      | 77/221 [00:40<01:16,  1.89it/s][A
 35%|███▌      | 78/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 79/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 80/221 [00:42<01:14,  1.89it/s][A
 37%|███▋      | 81/221 [00:42<01:13,  1.89it/s][A
 37%|███▋      | 82/221 [00:43<01:13,  1.89it/s][A
 38%|███▊      | 83/221 [00:43<01:12,  1.89it/s][A
 38%|███▊      | 84/221 [00:44<01:12,  1.89it/s][A
 38%|███▊      | 85/221 [00:44<01:11,  1.89it/s][A
 39%|███▉      | 86/221 [00:45<01:11,  1.89it/s][A
 39%|███▉      | 87/221 [00:45<01:10,  1.89it/s][A
 40%|███▉      | 88/221 [00:46<01:10,  1.89it/s][A
 40%|████      | 89/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 90/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 91/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 92/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 93/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 94/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 95/221 [00:50<01:06,  1.89it/s][A
 43%|████▎     | 96/221 [00:50<01:06,  1.89it/s][A
 44%|████▍     | 97/221 [00:51<01:05,  1.89it/s][A
 44%|████▍     | 98/221 [00:51<01:05,  1.89it/s][A
 45%|████▍     | 99/221 [00:52<01:04,  1.89it/s][A
 45%|████▌     | 100/221 [00:52<01:03,  1.89it/s][A
 46%|████▌     | 101/221 [00:53<01:03,  1.89it/s][A
 46%|████▌     | 102/221 [00:53<01:02,  1.89it/s][A
 47%|████▋     | 103/221 [00:54<01:02,  1.89it/s][A
 47%|████▋     | 104/221 [00:54<01:01,  1.89it/s][A
 48%|████▊     | 105/221 [00:55<01:01,  1.89it/s][A
 48%|████▊     | 106/221 [00:56<01:00,  1.89it/s][A
 48%|████▊     | 107/221 [00:56<01:00,  1.89it/s][A
 49%|████▉     | 108/221 [00:57<00:59,  1.89it/s][A
 49%|████▉     | 109/221 [00:57<00:59,  1.89it/s][A
 50%|████▉     | 110/221 [00:58<00:58,  1.89it/s][A
 50%|█████     | 111/221 [00:58<00:58,  1.89it/s][A
 51%|█████     | 112/221 [00:59<00:57,  1.89it/s][A
 51%|█████     | 113/221 [00:59<00:57,  1.89it/s][A
 52%|█████▏    | 114/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 115/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 116/221 [01:01<00:55,  1.89it/s][A
 53%|█████▎    | 117/221 [01:01<00:54,  1.89it/s][A
 53%|█████▎    | 118/221 [01:02<00:54,  1.89it/s][A
 54%|█████▍    | 119/221 [01:02<00:53,  1.89it/s][A
 54%|█████▍    | 120/221 [01:03<00:53,  1.89it/s][A
 55%|█████▍    | 121/221 [01:03<00:52,  1.89it/s][A
 55%|█████▌    | 122/221 [01:04<00:52,  1.89it/s][A
 56%|█████▌    | 123/221 [01:05<00:51,  1.89it/s][A
 56%|█████▌    | 124/221 [01:05<00:51,  1.89it/s][A
 57%|█████▋    | 125/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 126/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 127/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 128/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 129/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 130/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 131/221 [01:09<00:47,  1.89it/s][A
 60%|█████▉    | 132/221 [01:09<00:47,  1.89it/s][A
 60%|██████    | 133/221 [01:10<00:46,  1.89it/s][A
 61%|██████    | 134/221 [01:10<00:45,  1.89it/s][A
 61%|██████    | 135/221 [01:11<00:45,  1.89it/s][A
 62%|██████▏   | 136/221 [01:11<00:44,  1.89it/s][A
 62%|██████▏   | 137/221 [01:12<00:44,  1.89it/s][A
 62%|██████▏   | 138/221 [01:12<00:43,  1.89it/s][A
 63%|██████▎   | 139/221 [01:13<00:43,  1.89it/s][A
 63%|██████▎   | 140/221 [01:13<00:42,  1.89it/s][A
 64%|██████▍   | 141/221 [01:14<00:42,  1.89it/s][A
 64%|██████▍   | 142/221 [01:15<00:41,  1.89it/s][A
 65%|██████▍   | 143/221 [01:15<00:41,  1.89it/s][A
 65%|██████▌   | 144/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 145/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 146/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 147/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 148/221 [01:18<00:38,  1.89it/s][A
 67%|██████▋   | 149/221 [01:18<00:38,  1.89it/s][A
 68%|██████▊   | 150/221 [01:19<00:37,  1.89it/s][A
 68%|██████▊   | 151/221 [01:19<00:36,  1.89it/s][A
 69%|██████▉   | 152/221 [01:20<00:36,  1.89it/s][A
 69%|██████▉   | 153/221 [01:20<00:35,  1.89it/s][A
 70%|██████▉   | 154/221 [01:21<00:35,  1.89it/s][A
 70%|███████   | 155/221 [01:21<00:34,  1.89it/s][A
 71%|███████   | 156/221 [01:22<00:34,  1.89it/s][A
 71%|███████   | 157/221 [01:22<00:33,  1.89it/s][A
 71%|███████▏  | 158/221 [01:23<00:33,  1.89it/s][A
 72%|███████▏  | 159/221 [01:24<00:32,  1.89it/s][A
 72%|███████▏  | 160/221 [01:24<00:32,  1.89it/s][A
 73%|███████▎  | 161/221 [01:25<00:31,  1.89it/s][A
 73%|███████▎  | 162/221 [01:25<00:31,  1.89it/s][A
 74%|███████▍  | 163/221 [01:26<00:30,  1.89it/s][A
 74%|███████▍  | 164/221 [01:26<00:30,  1.89it/s][A
 75%|███████▍  | 165/221 [01:27<00:29,  1.89it/s][A
 75%|███████▌  | 166/221 [01:27<00:29,  1.89it/s][A
 76%|███████▌  | 167/221 [01:28<00:28,  1.89it/s][A
 76%|███████▌  | 168/221 [01:28<00:28,  1.89it/s][A
 76%|███████▋  | 169/221 [01:29<00:27,  1.89it/s][A
 77%|███████▋  | 170/221 [01:29<00:26,  1.89it/s][A
 77%|███████▋  | 171/221 [01:30<00:26,  1.89it/s][A
 78%|███████▊  | 172/221 [01:30<00:25,  1.89it/s][A
 78%|███████▊  | 173/221 [01:31<00:25,  1.89it/s][A
 79%|███████▊  | 174/221 [01:31<00:24,  1.89it/s][A
 79%|███████▉  | 175/221 [01:32<00:24,  1.89it/s][A
 80%|███████▉  | 176/221 [01:33<00:23,  1.89it/s][A
 80%|████████  | 177/221 [01:33<00:23,  1.89it/s][A
 81%|████████  | 178/221 [01:34<00:22,  1.89it/s][A
 81%|████████  | 179/221 [01:34<00:22,  1.89it/s][A
 81%|████████▏ | 180/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 181/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 182/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 183/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 184/221 [01:37<00:19,  1.89it/s][A
 84%|████████▎ | 185/221 [01:37<00:19,  1.89it/s][A
 84%|████████▍ | 186/221 [01:38<00:18,  1.89it/s][A
 85%|████████▍ | 187/221 [01:38<00:17,  1.89it/s][A
 85%|████████▌ | 188/221 [01:39<00:17,  1.89it/s][A
 86%|████████▌ | 189/221 [01:39<00:16,  1.89it/s][A
 86%|████████▌ | 190/221 [01:40<00:16,  1.89it/s][A
 86%|████████▋ | 191/221 [01:40<00:15,  1.89it/s][A
 87%|████████▋ | 192/221 [01:41<00:15,  1.89it/s][A
 87%|████████▋ | 193/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 194/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 195/221 [01:43<00:13,  1.89it/s][A
 89%|████████▊ | 196/221 [01:43<00:13,  1.89it/s][A
 89%|████████▉ | 197/221 [01:44<00:12,  1.89it/s][A
 90%|████████▉ | 198/221 [01:44<00:12,  1.89it/s][A
 90%|█████████ | 199/221 [01:45<00:11,  1.89it/s][A
 90%|█████████ | 200/221 [01:45<00:11,  1.89it/s][A
 91%|█████████ | 201/221 [01:46<00:10,  1.89it/s][A
 91%|█████████▏| 202/221 [01:46<00:10,  1.89it/s][A
 92%|█████████▏| 203/221 [01:47<00:09,  1.89it/s][A
 92%|█████████▏| 204/221 [01:47<00:08,  1.89it/s][A
 93%|█████████▎| 205/221 [01:48<00:08,  1.89it/s][A
 93%|█████████▎| 206/221 [01:48<00:07,  1.89it/s][A
 94%|█████████▎| 207/221 [01:49<00:07,  1.89it/s][A
 94%|█████████▍| 208/221 [01:49<00:06,  1.89it/s][A
 95%|█████████▍| 209/221 [01:50<00:06,  1.89it/s][A
 95%|█████████▌| 210/221 [01:50<00:05,  1.89it/s][A
 95%|█████████▌| 211/221 [01:51<00:05,  1.89it/s][A
 96%|█████████▌| 212/221 [01:52<00:04,  1.89it/s][A
 96%|█████████▋| 213/221 [01:52<00:04,  1.89it/s][A
 97%|█████████▋| 214/221 [01:53<00:03,  1.89it/s][A
 97%|█████████▋| 215/221 [01:53<00:03,  1.89it/s][A
 98%|█████████▊| 216/221 [01:54<00:02,  1.89it/s][A
 98%|█████████▊| 217/221 [01:54<00:02,  1.89it/s][A
 99%|█████████▊| 218/221 [01:55<00:01,  1.89it/s][A
 99%|█████████▉| 219/221 [01:55<00:01,  1.89it/s][A
100%|█████████▉| 220/221 [01:56<00:00,  1.89it/s][A
100%|██████████| 221/221 [01:56<00:00,  1.89it/s][A100%|██████████| 221/221 [01:56<00:00,  1.89it/s]
09/20/2024 08:00:18 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_forward=====step 4999--===========

09/20/2024 08:00:18 - INFO - __main__ -   {'area_r1': 46.7, 'area_recall': '46.7/74.4/83.9', 'area_ravg': 68.4}
09/20/2024 08:00:18 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_backard=====step 4999--===========

09/20/2024 08:00:18 - INFO - __main__ -   {'forward_r1': 50.2, 'forward_recall': '50.2/78.8/87.4', 'forward_ravg': 72.2}
09/20/2024 08:00:18 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video=====step 4999--===========

09/20/2024 08:00:18 - INFO - __main__ -   {'area_video_r1': 49.2, 'area_video_recall': '49.2/78.2/87.9', 'area_video_ravg': 71.8}
09/20/2024 08:00:18 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video====history best step: 3499=======

09/20/2024 08:00:18 - INFO - __main__ -   {'area_video_r1': 50.3, 'area_video_recall': '50.3/78.1/86.7', 'area_video_ravg': 71.7}
09/20/2024 08:00:18 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itm_area=====step 4999--===========

09/20/2024 08:00:18 - INFO - __main__ -   {'area_video_r1': 60.7, 'area_video_recall': '60.7/83.0/89.5', 'area_video_ravg': 77.8, 'area_video_back_r1': 61.3, 'area_video_back_recall': '61.3/84.4/91.3', 'area_video_back_ravg': 79.0}
09/20/2024 08:00:18 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itm_area====history best step: 4999=======

09/20/2024 08:00:18 - INFO - __main__ -   {'area_video_r1': 60.7, 'area_video_recall': '60.7/83.0/89.5', 'area_video_ravg': 77.8, 'area_video_back_r1': 61.3, 'area_video_back_recall': '61.3/84.4/91.3', 'area_video_back_ravg': 79.0}
09/20/2024 08:00:18 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas=====step 4999--===========

09/20/2024 08:00:18 - INFO - __main__ -   {'video_r1': 31.1, 'video_recall': '31.1/56.1/66.2', 'video_ravg': 51.1}
09/20/2024 08:00:18 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas====history best step: 1499=======

09/20/2024 08:00:18 - INFO - __main__ -   {'video_r1': 34.7, 'video_recall': '34.7/60.5/72.3', 'video_ravg': 55.8}
09/20/2024 08:00:44 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.028320500627160072, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.0069621801376343, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.0352827310562134}
 50%|█████     | 5000/9908 [6:24:13<182:47:50, 134.08s/it] 50%|█████     | 5001/9908 [6:24:16<129:17:40, 94.86s/it]  50%|█████     | 5002/9908 [6:24:20<91:59:33, 67.50s/it]  50%|█████     | 5003/9908 [6:24:24<65:50:58, 48.33s/it] 51%|█████     | 5004/9908 [6:24:28<47:38:43, 34.98s/it] 51%|█████     | 5005/9908 [6:24:31<34:49:51, 25.57s/it] 51%|█████     | 5006/9908 [6:24:35<25:49:29, 18.97s/it] 51%|█████     | 5007/9908 [6:24:39<19:40:02, 14.45s/it] 51%|█████     | 5008/9908 [6:24:43<15:21:45, 11.29s/it] 51%|█████     | 5009/9908 [6:24:46<12:15:18,  9.01s/it] 51%|█████     | 5010/9908 [6:24:50<10:15:23,  7.54s/it] 51%|█████     | 5011/9908 [6:24:54<8:34:48,  6.31s/it]  51%|█████     | 5012/9908 [6:24:58<7:42:00,  5.66s/it] 51%|█████     | 5013/9908 [6:25:02<6:56:42,  5.11s/it] 51%|█████     | 5014/9908 [6:25:06<6:23:21,  4.70s/it] 51%|█████     | 5015/9908 [6:25:09<5:56:58,  4.38s/it] 51%|█████     | 5016/9908 [6:25:13<5:38:07,  4.15s/it] 51%|█████     | 5017/9908 [6:25:16<5:21:02,  3.94s/it] 51%|█████     | 5018/9908 [6:25:20<5:20:51,  3.94s/it] 51%|█████     | 5019/9908 [6:25:24<5:13:12,  3.84s/it] 51%|█████     | 5020/9908 [6:25:27<5:10:17,  3.81s/it] 51%|█████     | 5021/9908 [6:25:31<5:03:02,  3.72s/it] 51%|█████     | 5022/9908 [6:25:35<4:58:41,  3.67s/it] 51%|█████     | 5023/9908 [6:25:38<4:59:01,  3.67s/it] 51%|█████     | 5024/9908 [6:25:42<5:00:21,  3.69s/it] 51%|█████     | 5025/9908 [6:25:46<4:59:23,  3.68s/it] 51%|█████     | 5026/9908 [6:25:49<4:58:20,  3.67s/it] 51%|█████     | 5027/9908 [6:25:53<4:54:49,  3.62s/it] 51%|█████     | 5028/9908 [6:25:57<5:00:07,  3.69s/it] 51%|█████     | 5029/9908 [6:26:00<4:58:29,  3.67s/it] 51%|█████     | 5030/9908 [6:26:04<5:02:01,  3.72s/it] 51%|█████     | 5031/9908 [6:26:08<5:15:21,  3.88s/it] 51%|█████     | 5032/9908 [6:26:12<5:01:17,  3.71s/it] 51%|█████     | 5033/9908 [6:26:15<5:03:07,  3.73s/it] 51%|█████     | 5034/9908 [6:26:19<5:05:03,  3.76s/it] 51%|█████     | 5035/9908 [6:26:23<5:05:10,  3.76s/it] 51%|█████     | 5036/9908 [6:26:26<4:58:09,  3.67s/it] 51%|█████     | 5037/9908 [6:26:30<4:55:56,  3.65s/it] 51%|█████     | 5038/9908 [6:26:33<4:50:22,  3.58s/it] 51%|█████     | 5039/9908 [6:26:37<4:50:21,  3.58s/it] 51%|█████     | 5040/9908 [6:26:41<4:53:46,  3.62s/it] 51%|█████     | 5041/9908 [6:26:45<5:03:15,  3.74s/it] 51%|█████     | 5042/9908 [6:26:48<4:58:29,  3.68s/it] 51%|█████     | 5043/9908 [6:26:52<4:56:56,  3.66s/it] 51%|█████     | 5044/9908 [6:26:56<5:02:36,  3.73s/it] 51%|█████     | 5045/9908 [6:27:00<5:04:00,  3.75s/it] 51%|█████     | 5046/9908 [6:27:03<5:03:26,  3.74s/it] 51%|█████     | 5047/9908 [6:27:07<4:57:47,  3.68s/it] 51%|█████     | 5048/9908 [6:27:10<4:55:10,  3.64s/it] 51%|█████     | 5049/9908 [6:27:14<4:55:20,  3.65s/it]09/20/2024 08:03:49 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.017219604924321175, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 0.9614734649658203, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 0.9786930680274963}
 51%|█████     | 5050/9908 [6:27:18<5:03:24,  3.75s/it] 51%|█████     | 5051/9908 [6:27:22<5:00:48,  3.72s/it] 51%|█████     | 5052/9908 [6:27:25<4:54:17,  3.64s/it] 51%|█████     | 5053/9908 [6:27:29<5:08:03,  3.81s/it] 51%|█████     | 5054/9908 [6:27:33<5:05:49,  3.78s/it] 51%|█████     | 5055/9908 [6:27:37<5:05:24,  3.78s/it] 51%|█████     | 5056/9908 [6:27:40<5:01:02,  3.72s/it] 51%|█████     | 5057/9908 [6:27:45<5:08:47,  3.82s/it] 51%|█████     | 5058/9908 [6:27:48<5:00:27,  3.72s/it] 51%|█████     | 5059/9908 [6:27:52<5:06:14,  3.79s/it] 51%|█████     | 5060/9908 [6:27:55<4:59:01,  3.70s/it] 51%|█████     | 5061/9908 [6:27:59<4:56:15,  3.67s/it] 51%|█████     | 5062/9908 [6:28:03<5:04:13,  3.77s/it] 51%|█████     | 5063/9908 [6:28:07<5:09:43,  3.84s/it] 51%|█████     | 5064/9908 [6:28:11<5:04:21,  3.77s/it] 51%|█████     | 5065/9908 [6:28:15<5:06:27,  3.80s/it] 51%|█████     | 5066/9908 [6:28:18<5:02:15,  3.75s/it] 51%|█████     | 5067/9908 [6:28:22<5:00:11,  3.72s/it] 51%|█████     | 5068/9908 [6:28:26<5:02:37,  3.75s/it] 51%|█████     | 5069/9908 [6:28:29<4:58:56,  3.71s/it] 51%|█████     | 5070/9908 [6:28:33<4:56:56,  3.68s/it] 51%|█████     | 5071/9908 [6:28:36<4:54:51,  3.66s/it] 51%|█████     | 5072/9908 [6:28:40<4:49:11,  3.59s/it] 51%|█████     | 5073/9908 [6:28:44<5:00:41,  3.73s/it] 51%|█████     | 5074/9908 [6:28:48<5:05:35,  3.79s/it] 51%|█████     | 5075/9908 [6:28:52<5:03:43,  3.77s/it] 51%|█████     | 5076/9908 [6:28:55<4:55:54,  3.67s/it] 51%|█████     | 5077/9908 [6:28:59<5:00:58,  3.74s/it] 51%|█████▏    | 5078/9908 [6:29:03<5:01:27,  3.74s/it] 51%|█████▏    | 5079/9908 [6:29:06<4:53:29,  3.65s/it] 51%|█████▏    | 5080/9908 [6:29:10<5:02:48,  3.76s/it] 51%|█████▏    | 5081/9908 [6:29:14<5:02:59,  3.77s/it] 51%|█████▏    | 5082/9908 [6:29:18<5:08:45,  3.84s/it] 51%|█████▏    | 5083/9908 [6:29:21<4:58:20,  3.71s/it] 51%|█████▏    | 5084/9908 [6:29:25<4:57:50,  3.70s/it] 51%|█████▏    | 5085/9908 [6:29:29<4:53:58,  3.66s/it] 51%|█████▏    | 5086/9908 [6:29:32<4:51:49,  3.63s/it] 51%|█████▏    | 5087/9908 [6:29:36<5:02:17,  3.76s/it] 51%|█████▏    | 5088/9908 [6:29:40<5:00:25,  3.74s/it] 51%|█████▏    | 5089/9908 [6:29:43<4:56:22,  3.69s/it] 51%|█████▏    | 5090/9908 [6:29:47<4:58:09,  3.71s/it] 51%|█████▏    | 5091/9908 [6:29:51<4:56:23,  3.69s/it] 51%|█████▏    | 5092/9908 [6:29:55<5:04:57,  3.80s/it] 51%|█████▏    | 5093/9908 [6:29:58<4:58:42,  3.72s/it] 51%|█████▏    | 5094/9908 [6:30:02<4:53:06,  3.65s/it] 51%|█████▏    | 5095/9908 [6:30:06<4:51:25,  3.63s/it] 51%|█████▏    | 5096/9908 [6:30:09<4:56:26,  3.70s/it] 51%|█████▏    | 5097/9908 [6:30:13<4:54:39,  3.67s/it] 51%|█████▏    | 5098/9908 [6:30:17<4:53:06,  3.66s/it] 51%|█████▏    | 5099/9908 [6:30:20<4:53:35,  3.66s/it]09/20/2024 08:06:55 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.034776344895362854, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.3076764345169067, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.3424527645111084}
 51%|█████▏    | 5100/9908 [6:30:24<5:04:33,  3.80s/it] 51%|█████▏    | 5101/9908 [6:30:29<5:13:08,  3.91s/it] 51%|█████▏    | 5102/9908 [6:30:32<5:03:01,  3.78s/it] 52%|█████▏    | 5103/9908 [6:30:36<5:03:47,  3.79s/it] 52%|█████▏    | 5104/9908 [6:30:40<5:03:57,  3.80s/it] 52%|█████▏    | 5105/9908 [6:30:43<4:58:13,  3.73s/it] 52%|█████▏    | 5106/9908 [6:30:47<4:52:12,  3.65s/it] 52%|█████▏    | 5107/9908 [6:30:51<5:00:13,  3.75s/it] 52%|█████▏    | 5108/9908 [6:30:54<4:54:53,  3.69s/it] 52%|█████▏    | 5109/9908 [6:30:58<5:00:49,  3.76s/it] 52%|█████▏    | 5110/9908 [6:31:02<4:57:48,  3.72s/it] 52%|█████▏    | 5111/9908 [6:31:06<5:09:29,  3.87s/it] 52%|█████▏    | 5112/9908 [6:31:10<5:05:23,  3.82s/it] 52%|█████▏    | 5113/9908 [6:31:14<5:04:06,  3.81s/it] 52%|█████▏    | 5114/9908 [6:31:17<5:00:07,  3.76s/it] 52%|█████▏    | 5115/9908 [6:31:21<4:57:24,  3.72s/it] 52%|█████▏    | 5116/9908 [6:31:24<4:55:37,  3.70s/it] 52%|█████▏    | 5117/9908 [6:31:28<4:55:13,  3.70s/it] 52%|█████▏    | 5118/9908 [6:31:32<4:58:07,  3.73s/it] 52%|█████▏    | 5119/9908 [6:31:36<5:03:02,  3.80s/it] 52%|█████▏    | 5120/9908 [6:31:40<4:59:56,  3.76s/it] 52%|█████▏    | 5121/9908 [6:31:43<5:01:23,  3.78s/it] 52%|█████▏    | 5122/9908 [6:31:47<4:56:58,  3.72s/it] 52%|█████▏    | 5123/9908 [6:31:51<4:56:30,  3.72s/it] 52%|█████▏    | 5124/9908 [6:31:55<5:00:13,  3.77s/it] 52%|█████▏    | 5125/9908 [6:31:58<5:01:10,  3.78s/it] 52%|█████▏    | 5126/9908 [6:32:02<5:02:14,  3.79s/it] 52%|█████▏    | 5127/9908 [6:32:06<5:00:56,  3.78s/it] 52%|█████▏    | 5128/9908 [6:32:10<5:03:33,  3.81s/it] 52%|█████▏    | 5129/9908 [6:32:14<5:01:05,  3.78s/it] 52%|█████▏    | 5130/9908 [6:32:17<5:00:43,  3.78s/it] 52%|█████▏    | 5131/9908 [6:32:21<4:56:50,  3.73s/it] 52%|█████▏    | 5132/9908 [6:32:24<4:49:47,  3.64s/it] 52%|█████▏    | 5133/9908 [6:32:28<4:42:16,  3.55s/it] 52%|█████▏    | 5134/9908 [6:32:31<4:46:39,  3.60s/it] 52%|█████▏    | 5135/9908 [6:32:35<4:52:09,  3.67s/it] 52%|█████▏    | 5136/9908 [6:32:39<4:50:21,  3.65s/it] 52%|█████▏    | 5137/9908 [6:32:43<4:53:02,  3.69s/it] 52%|█████▏    | 5138/9908 [6:32:46<4:52:44,  3.68s/it] 52%|█████▏    | 5139/9908 [6:32:50<4:54:19,  3.70s/it] 52%|█████▏    | 5140/9908 [6:32:54<4:52:30,  3.68s/it] 52%|█████▏    | 5141/9908 [6:32:57<4:52:37,  3.68s/it] 52%|█████▏    | 5142/9908 [6:33:01<4:57:42,  3.75s/it] 52%|█████▏    | 5143/9908 [6:33:05<4:59:15,  3.77s/it] 52%|█████▏    | 5144/9908 [6:33:09<4:53:11,  3.69s/it] 52%|█████▏    | 5145/9908 [6:33:12<4:57:50,  3.75s/it] 52%|█████▏    | 5146/9908 [6:33:17<5:03:49,  3.83s/it] 52%|█████▏    | 5147/9908 [6:33:20<5:00:05,  3.78s/it] 52%|█████▏    | 5148/9908 [6:33:24<4:55:51,  3.73s/it] 52%|█████▏    | 5149/9908 [6:33:27<4:54:28,  3.71s/it]09/20/2024 08:10:02 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.020196741446852684, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2365186214447021, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.2567154169082642}
 52%|█████▏    | 5150/9908 [6:33:31<5:01:57,  3.81s/it] 52%|█████▏    | 5151/9908 [6:33:35<4:58:28,  3.76s/it] 52%|█████▏    | 5152/9908 [6:33:39<4:59:31,  3.78s/it] 52%|█████▏    | 5153/9908 [6:33:43<4:53:58,  3.71s/it] 52%|█████▏    | 5154/9908 [6:33:46<4:58:32,  3.77s/it] 52%|█████▏    | 5155/9908 [6:33:50<4:59:31,  3.78s/it] 52%|█████▏    | 5156/9908 [6:33:54<4:57:31,  3.76s/it] 52%|█████▏    | 5157/9908 [6:33:57<4:53:05,  3.70s/it] 52%|█████▏    | 5158/9908 [6:34:02<5:04:25,  3.85s/it] 52%|█████▏    | 5159/9908 [6:34:06<5:04:15,  3.84s/it] 52%|█████▏    | 5160/9908 [6:34:09<4:56:57,  3.75s/it] 52%|█████▏    | 5161/9908 [6:34:13<4:58:38,  3.77s/it] 52%|█████▏    | 5162/9908 [6:34:17<5:00:45,  3.80s/it] 52%|█████▏    | 5163/9908 [6:34:20<4:58:56,  3.78s/it] 52%|█████▏    | 5164/9908 [6:34:25<5:09:46,  3.92s/it] 52%|█████▏    | 5165/9908 [6:34:28<4:58:28,  3.78s/it] 52%|█████▏    | 5166/9908 [6:34:32<4:55:58,  3.74s/it] 52%|█████▏    | 5167/9908 [6:34:36<4:54:11,  3.72s/it] 52%|█████▏    | 5168/9908 [6:34:39<4:54:11,  3.72s/it] 52%|█████▏    | 5169/9908 [6:34:43<4:58:40,  3.78s/it] 52%|█████▏    | 5170/9908 [6:34:47<5:07:46,  3.90s/it] 52%|█████▏    | 5171/9908 [6:34:51<4:55:41,  3.75s/it] 52%|█████▏    | 5172/9908 [6:34:54<4:46:14,  3.63s/it] 52%|█████▏    | 5173/9908 [6:34:58<4:46:15,  3.63s/it] 52%|█████▏    | 5174/9908 [6:35:01<4:46:24,  3.63s/it] 52%|█████▏    | 5175/9908 [6:35:05<4:52:08,  3.70s/it] 52%|█████▏    | 5176/9908 [6:35:09<4:55:27,  3.75s/it] 52%|█████▏    | 5177/9908 [6:35:13<4:52:14,  3.71s/it] 52%|█████▏    | 5178/9908 [6:35:16<4:50:47,  3.69s/it] 52%|█████▏    | 5179/9908 [6:35:20<4:43:08,  3.59s/it] 52%|█████▏    | 5180/9908 [6:35:23<4:39:24,  3.55s/it] 52%|█████▏    | 5181/9908 [6:35:27<4:38:58,  3.54s/it] 52%|█████▏    | 5182/9908 [6:35:31<4:46:34,  3.64s/it] 52%|█████▏    | 5183/9908 [6:35:34<4:45:25,  3.62s/it] 52%|█████▏    | 5184/9908 [6:35:38<4:49:31,  3.68s/it] 52%|█████▏    | 5185/9908 [6:35:42<5:02:50,  3.85s/it] 52%|█████▏    | 5186/9908 [6:35:46<4:57:26,  3.78s/it] 52%|█████▏    | 5187/9908 [6:35:50<4:56:33,  3.77s/it] 52%|█████▏    | 5188/9908 [6:35:53<4:49:47,  3.68s/it] 52%|█████▏    | 5189/9908 [6:35:56<4:39:17,  3.55s/it] 52%|█████▏    | 5190/9908 [6:36:00<4:43:30,  3.61s/it] 52%|█████▏    | 5191/9908 [6:36:04<4:45:15,  3.63s/it] 52%|█████▏    | 5192/9908 [6:36:07<4:40:42,  3.57s/it] 52%|█████▏    | 5193/9908 [6:36:11<4:48:46,  3.67s/it] 52%|█████▏    | 5194/9908 [6:36:15<4:45:32,  3.63s/it] 52%|█████▏    | 5195/9908 [6:36:18<4:51:43,  3.71s/it] 52%|█████▏    | 5196/9908 [6:36:22<4:45:41,  3.64s/it] 52%|█████▏    | 5197/9908 [6:36:26<4:49:42,  3.69s/it] 52%|█████▏    | 5198/9908 [6:36:29<4:50:01,  3.69s/it] 52%|█████▏    | 5199/9908 [6:36:33<4:44:06,  3.62s/it]09/20/2024 08:13:07 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.022380374372005463, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2583482265472412, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.2807285785675049}
 52%|█████▏    | 5200/9908 [6:36:36<4:40:47,  3.58s/it] 52%|█████▏    | 5201/9908 [6:36:40<4:49:55,  3.70s/it] 53%|█████▎    | 5202/9908 [6:36:44<4:52:45,  3.73s/it] 53%|█████▎    | 5203/9908 [6:36:48<4:52:52,  3.73s/it] 53%|█████▎    | 5204/9908 [6:36:51<4:48:52,  3.68s/it] 53%|█████▎    | 5205/9908 [6:36:56<5:00:53,  3.84s/it] 53%|█████▎    | 5206/9908 [6:36:59<4:55:25,  3.77s/it] 53%|█████▎    | 5207/9908 [6:37:03<4:51:41,  3.72s/it] 53%|█████▎    | 5208/9908 [6:37:07<4:49:38,  3.70s/it] 53%|█████▎    | 5209/9908 [6:37:10<4:48:48,  3.69s/it] 53%|█████▎    | 5210/9908 [6:37:14<4:52:57,  3.74s/it] 53%|█████▎    | 5211/9908 [6:37:18<4:55:28,  3.77s/it] 53%|█████▎    | 5212/9908 [6:37:21<4:49:26,  3.70s/it] 53%|█████▎    | 5213/9908 [6:37:25<4:58:01,  3.81s/it] 53%|█████▎    | 5214/9908 [6:37:29<4:57:44,  3.81s/it] 53%|█████▎    | 5215/9908 [6:37:33<4:56:35,  3.79s/it] 53%|█████▎    | 5216/9908 [6:37:37<5:02:18,  3.87s/it] 53%|█████▎    | 5217/9908 [6:37:41<4:55:10,  3.78s/it] 53%|█████▎    | 5218/9908 [6:37:44<4:51:21,  3.73s/it] 53%|█████▎    | 5219/9908 [6:37:48<4:56:11,  3.79s/it] 53%|█████▎    | 5220/9908 [6:37:52<4:54:34,  3.77s/it] 53%|█████▎    | 5221/9908 [6:37:55<4:48:24,  3.69s/it] 53%|█████▎    | 5222/9908 [6:37:59<4:56:43,  3.80s/it] 53%|█████▎    | 5223/9908 [6:38:03<4:50:48,  3.72s/it] 53%|█████▎    | 5224/9908 [6:38:07<4:51:48,  3.74s/it] 53%|█████▎    | 5225/9908 [6:38:10<4:50:14,  3.72s/it] 53%|█████▎    | 5226/9908 [6:38:14<4:46:58,  3.68s/it] 53%|█████▎    | 5227/9908 [6:38:18<4:43:06,  3.63s/it] 53%|█████▎    | 5228/9908 [6:38:21<4:41:26,  3.61s/it] 53%|█████▎    | 5229/9908 [6:38:25<4:44:56,  3.65s/it] 53%|█████▎    | 5230/9908 [6:38:29<4:49:41,  3.72s/it] 53%|█████▎    | 5231/9908 [6:38:32<4:49:08,  3.71s/it] 53%|█████▎    | 5232/9908 [6:38:36<4:44:57,  3.66s/it] 53%|█████▎    | 5233/9908 [6:38:40<4:42:19,  3.62s/it] 53%|█████▎    | 5234/9908 [6:38:43<4:44:33,  3.65s/it] 53%|█████▎    | 5235/9908 [6:38:47<4:45:38,  3.67s/it] 53%|█████▎    | 5236/9908 [6:38:50<4:37:51,  3.57s/it] 53%|█████▎    | 5237/9908 [6:38:54<4:43:44,  3.64s/it] 53%|█████▎    | 5238/9908 [6:38:58<4:54:14,  3.78s/it] 53%|█████▎    | 5239/9908 [6:39:02<4:59:31,  3.85s/it] 53%|█████▎    | 5240/9908 [6:39:06<4:51:55,  3.75s/it] 53%|█████▎    | 5241/9908 [6:39:09<4:51:52,  3.75s/it] 53%|█████▎    | 5242/9908 [6:39:13<4:47:29,  3.70s/it] 53%|█████▎    | 5243/9908 [6:39:16<4:41:11,  3.62s/it] 53%|█████▎    | 5244/9908 [6:39:20<4:44:36,  3.66s/it] 53%|█████▎    | 5245/9908 [6:39:24<4:40:52,  3.61s/it] 53%|█████▎    | 5246/9908 [6:39:27<4:39:35,  3.60s/it] 53%|█████▎    | 5247/9908 [6:39:31<4:41:38,  3.63s/it] 53%|█████▎    | 5248/9908 [6:39:35<4:42:29,  3.64s/it] 53%|█████▎    | 5249/9908 [6:39:38<4:35:23,  3.55s/it]09/20/2024 08:16:13 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.036202624440193176, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.376020908355713, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.4122235774993896}
 53%|█████▎    | 5250/9908 [6:39:42<4:35:48,  3.55s/it] 53%|█████▎    | 5251/9908 [6:39:45<4:39:36,  3.60s/it] 53%|█████▎    | 5252/9908 [6:39:49<4:41:41,  3.63s/it] 53%|█████▎    | 5253/9908 [6:39:53<4:45:15,  3.68s/it] 53%|█████▎    | 5254/9908 [6:39:56<4:38:35,  3.59s/it] 53%|█████▎    | 5255/9908 [6:40:00<4:42:52,  3.65s/it] 53%|█████▎    | 5256/9908 [6:40:03<4:36:33,  3.57s/it] 53%|█████▎    | 5257/9908 [6:40:07<4:50:05,  3.74s/it] 53%|█████▎    | 5258/9908 [6:40:11<4:42:39,  3.65s/it] 53%|█████▎    | 5259/9908 [6:40:15<4:42:24,  3.64s/it] 53%|█████▎    | 5260/9908 [6:40:18<4:46:43,  3.70s/it] 53%|█████▎    | 5261/9908 [6:40:22<4:45:04,  3.68s/it] 53%|█████▎    | 5262/9908 [6:40:26<4:49:47,  3.74s/it] 53%|█████▎    | 5263/9908 [6:40:29<4:44:11,  3.67s/it] 53%|█████▎    | 5264/9908 [6:40:33<4:50:54,  3.76s/it] 53%|█████▎    | 5265/9908 [6:40:37<4:41:02,  3.63s/it] 53%|█████▎    | 5266/9908 [6:40:40<4:40:51,  3.63s/it] 53%|█████▎    | 5267/9908 [6:40:44<4:38:14,  3.60s/it] 53%|█████▎    | 5268/9908 [6:40:48<4:41:49,  3.64s/it] 53%|█████▎    | 5269/9908 [6:40:51<4:41:44,  3.64s/it] 53%|█████▎    | 5270/9908 [6:40:55<4:44:17,  3.68s/it] 53%|█████▎    | 5271/9908 [6:40:58<4:38:46,  3.61s/it] 53%|█████▎    | 5272/9908 [6:41:02<4:36:09,  3.57s/it] 53%|█████▎    | 5273/9908 [6:41:06<4:43:31,  3.67s/it] 53%|█████▎    | 5274/9908 [6:41:10<4:52:48,  3.79s/it] 53%|█████▎    | 5275/9908 [6:41:13<4:41:19,  3.64s/it] 53%|█████▎    | 5276/9908 [6:41:17<4:46:53,  3.72s/it] 53%|█████▎    | 5277/9908 [6:41:21<4:41:35,  3.65s/it] 53%|█████▎    | 5278/9908 [6:41:24<4:38:50,  3.61s/it] 53%|█████▎    | 5279/9908 [6:41:28<4:38:40,  3.61s/it] 53%|█████▎    | 5280/9908 [6:41:32<4:44:55,  3.69s/it] 53%|█████▎    | 5281/9908 [6:41:35<4:46:41,  3.72s/it] 53%|█████▎    | 5282/9908 [6:41:39<4:45:18,  3.70s/it] 53%|█████▎    | 5283/9908 [6:41:43<4:44:58,  3.70s/it] 53%|█████▎    | 5284/9908 [6:41:47<4:48:52,  3.75s/it] 53%|█████▎    | 5285/9908 [6:41:50<4:36:34,  3.59s/it] 53%|█████▎    | 5286/9908 [6:41:53<4:33:59,  3.56s/it] 53%|█████▎    | 5287/9908 [6:41:57<4:43:40,  3.68s/it] 53%|█████▎    | 5288/9908 [6:42:01<4:55:27,  3.84s/it] 53%|█████▎    | 5289/9908 [6:42:05<4:46:11,  3.72s/it] 53%|█████▎    | 5290/9908 [6:42:09<4:44:16,  3.69s/it] 53%|█████▎    | 5291/9908 [6:42:12<4:38:32,  3.62s/it] 53%|█████▎    | 5292/9908 [6:42:16<4:37:21,  3.61s/it] 53%|█████▎    | 5293/9908 [6:42:20<4:47:21,  3.74s/it] 53%|█████▎    | 5294/9908 [6:42:24<4:53:34,  3.82s/it] 53%|█████▎    | 5295/9908 [6:42:27<4:49:41,  3.77s/it] 53%|█████▎    | 5296/9908 [6:42:31<4:47:37,  3.74s/it] 53%|█████▎    | 5297/9908 [6:42:35<4:48:07,  3.75s/it] 53%|█████▎    | 5298/9908 [6:42:39<4:50:47,  3.78s/it] 53%|█████▎    | 5299/9908 [6:42:42<4:44:45,  3.71s/it]09/20/2024 08:19:17 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.021302588284015656, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.214448094367981, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.235750675201416}
 53%|█████▎    | 5300/9908 [6:42:46<4:41:41,  3.67s/it] 54%|█████▎    | 5301/9908 [6:42:49<4:43:46,  3.70s/it] 54%|█████▎    | 5302/9908 [6:42:53<4:45:50,  3.72s/it] 54%|█████▎    | 5303/9908 [6:42:57<4:40:41,  3.66s/it] 54%|█████▎    | 5304/9908 [6:43:01<4:47:08,  3.74s/it] 54%|█████▎    | 5305/9908 [6:43:04<4:48:45,  3.76s/it] 54%|█████▎    | 5306/9908 [6:43:08<4:41:03,  3.66s/it] 54%|█████▎    | 5307/9908 [6:43:11<4:34:03,  3.57s/it] 54%|█████▎    | 5308/9908 [6:43:15<4:31:11,  3.54s/it] 54%|█████▎    | 5309/9908 [6:43:19<4:41:11,  3.67s/it] 54%|█████▎    | 5310/9908 [6:43:23<4:46:27,  3.74s/it] 54%|█████▎    | 5311/9908 [6:43:26<4:35:26,  3.60s/it] 54%|█████▎    | 5312/9908 [6:43:30<4:48:18,  3.76s/it] 54%|█████▎    | 5313/9908 [6:43:34<4:47:11,  3.75s/it] 54%|█████▎    | 5314/9908 [6:43:38<4:57:26,  3.88s/it] 54%|█████▎    | 5315/9908 [6:43:42<4:57:42,  3.89s/it] 54%|█████▎    | 5316/9908 [6:43:46<4:58:15,  3.90s/it] 54%|█████▎    | 5317/9908 [6:43:50<4:59:29,  3.91s/it] 54%|█████▎    | 5318/9908 [6:43:53<4:54:41,  3.85s/it] 54%|█████▎    | 5319/9908 [6:43:57<4:41:37,  3.68s/it] 54%|█████▎    | 5320/9908 [6:44:00<4:41:45,  3.68s/it] 54%|█████▎    | 5321/9908 [6:44:04<4:43:23,  3.71s/it] 54%|█████▎    | 5322/9908 [6:44:08<4:42:55,  3.70s/it] 54%|█████▎    | 5323/9908 [6:44:12<4:51:13,  3.81s/it] 54%|█████▎    | 5324/9908 [6:44:15<4:45:37,  3.74s/it] 54%|█████▎    | 5325/9908 [6:44:19<4:46:21,  3.75s/it] 54%|█████▍    | 5326/9908 [6:44:23<4:48:08,  3.77s/it] 54%|█████▍    | 5327/9908 [6:44:27<4:49:17,  3.79s/it] 54%|█████▍    | 5328/9908 [6:44:30<4:39:49,  3.67s/it] 54%|█████▍    | 5329/9908 [6:44:34<4:42:47,  3.71s/it] 54%|█████▍    | 5330/9908 [6:44:38<4:40:56,  3.68s/it] 54%|█████▍    | 5331/9908 [6:44:41<4:36:18,  3.62s/it] 54%|█████▍    | 5332/9908 [6:44:45<4:41:04,  3.69s/it] 54%|█████▍    | 5333/9908 [6:44:49<4:36:32,  3.63s/it] 54%|█████▍    | 5334/9908 [6:44:52<4:36:25,  3.63s/it] 54%|█████▍    | 5335/9908 [6:44:56<4:36:59,  3.63s/it] 54%|█████▍    | 5336/9908 [6:45:00<4:43:24,  3.72s/it] 54%|█████▍    | 5337/9908 [6:45:03<4:37:53,  3.65s/it] 54%|█████▍    | 5338/9908 [6:45:07<4:35:22,  3.62s/it] 54%|█████▍    | 5339/9908 [6:45:10<4:34:51,  3.61s/it] 54%|█████▍    | 5340/9908 [6:45:14<4:41:41,  3.70s/it] 54%|█████▍    | 5341/9908 [6:45:18<4:44:56,  3.74s/it] 54%|█████▍    | 5342/9908 [6:45:22<4:45:54,  3.76s/it] 54%|█████▍    | 5343/9908 [6:45:26<4:56:03,  3.89s/it] 54%|█████▍    | 5344/9908 [6:45:30<4:50:52,  3.82s/it] 54%|█████▍    | 5345/9908 [6:45:33<4:41:53,  3.71s/it] 54%|█████▍    | 5346/9908 [6:45:37<4:44:29,  3.74s/it] 54%|█████▍    | 5347/9908 [6:45:41<4:48:04,  3.79s/it] 54%|█████▍    | 5348/9908 [6:45:44<4:43:37,  3.73s/it] 54%|█████▍    | 5349/9908 [6:45:48<4:37:22,  3.65s/it]09/20/2024 08:22:23 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.02608569897711277, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.1139497756958008, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.1400355100631714}
 54%|█████▍    | 5350/9908 [6:45:52<4:37:26,  3.65s/it] 54%|█████▍    | 5351/9908 [6:45:56<4:45:35,  3.76s/it] 54%|█████▍    | 5352/9908 [6:45:59<4:45:13,  3.76s/it] 54%|█████▍    | 5353/9908 [6:46:03<4:42:33,  3.72s/it] 54%|█████▍    | 5354/9908 [6:46:07<4:40:58,  3.70s/it] 54%|█████▍    | 5355/9908 [6:46:10<4:38:16,  3.67s/it] 54%|█████▍    | 5356/9908 [6:46:14<4:38:22,  3.67s/it] 54%|█████▍    | 5357/9908 [6:46:18<4:39:57,  3.69s/it] 54%|█████▍    | 5358/9908 [6:46:21<4:39:44,  3.69s/it] 54%|█████▍    | 5359/9908 [6:46:25<4:42:13,  3.72s/it] 54%|█████▍    | 5360/9908 [6:46:29<4:49:59,  3.83s/it] 54%|█████▍    | 5361/9908 [6:46:33<4:47:11,  3.79s/it] 54%|█████▍    | 5362/9908 [6:46:37<4:42:55,  3.73s/it] 54%|█████▍    | 5363/9908 [6:46:40<4:40:43,  3.71s/it] 54%|█████▍    | 5364/9908 [6:46:44<4:46:05,  3.78s/it] 54%|█████▍    | 5365/9908 [6:46:48<4:46:29,  3.78s/it] 54%|█████▍    | 5366/9908 [6:46:52<4:46:08,  3.78s/it] 54%|█████▍    | 5367/9908 [6:46:55<4:38:53,  3.68s/it] 54%|█████▍    | 5368/9908 [6:46:59<4:38:24,  3.68s/it] 54%|█████▍    | 5369/9908 [6:47:03<4:39:36,  3.70s/it] 54%|█████▍    | 5370/9908 [6:47:06<4:37:22,  3.67s/it] 54%|█████▍    | 5371/9908 [6:47:10<4:36:18,  3.65s/it] 54%|█████▍    | 5372/9908 [6:47:13<4:36:24,  3.66s/it] 54%|█████▍    | 5373/9908 [6:47:17<4:45:39,  3.78s/it] 54%|█████▍    | 5374/9908 [6:47:21<4:46:41,  3.79s/it] 54%|█████▍    | 5375/9908 [6:47:25<4:37:19,  3.67s/it] 54%|█████▍    | 5376/9908 [6:47:28<4:38:18,  3.68s/it] 54%|█████▍    | 5377/9908 [6:47:32<4:41:35,  3.73s/it] 54%|█████▍    | 5378/9908 [6:47:36<4:37:20,  3.67s/it] 54%|█████▍    | 5379/9908 [6:47:39<4:36:16,  3.66s/it] 54%|█████▍    | 5380/9908 [6:47:43<4:42:14,  3.74s/it] 54%|█████▍    | 5381/9908 [6:47:47<4:44:24,  3.77s/it] 54%|█████▍    | 5382/9908 [6:47:51<4:41:41,  3.73s/it] 54%|█████▍    | 5383/9908 [6:47:55<4:41:00,  3.73s/it] 54%|█████▍    | 5384/9908 [6:47:58<4:35:17,  3.65s/it] 54%|█████▍    | 5385/9908 [6:48:02<4:38:23,  3.69s/it] 54%|█████▍    | 5386/9908 [6:48:06<4:42:01,  3.74s/it] 54%|█████▍    | 5387/9908 [6:48:09<4:39:44,  3.71s/it] 54%|█████▍    | 5388/9908 [6:48:13<4:32:01,  3.61s/it] 54%|█████▍    | 5389/9908 [6:48:16<4:32:34,  3.62s/it] 54%|█████▍    | 5390/9908 [6:48:21<4:49:22,  3.84s/it] 54%|█████▍    | 5391/9908 [6:48:24<4:48:13,  3.83s/it] 54%|█████▍    | 5392/9908 [6:48:28<4:42:38,  3.76s/it] 54%|█████▍    | 5393/9908 [6:48:32<4:44:56,  3.79s/it] 54%|█████▍    | 5394/9908 [6:48:36<4:47:40,  3.82s/it] 54%|█████▍    | 5395/9908 [6:48:40<4:48:57,  3.84s/it] 54%|█████▍    | 5396/9908 [6:48:43<4:42:52,  3.76s/it] 54%|█████▍    | 5397/9908 [6:48:47<4:44:44,  3.79s/it] 54%|█████▍    | 5398/9908 [6:48:51<4:45:59,  3.80s/it] 54%|█████▍    | 5399/9908 [6:48:55<4:43:35,  3.77s/it]09/20/2024 08:25:29 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.029161274433135986, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.572436809539795, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.6015980243682861}
 55%|█████▍    | 5400/9908 [6:48:59<4:45:30,  3.80s/it] 55%|█████▍    | 5401/9908 [6:49:02<4:39:50,  3.73s/it] 55%|█████▍    | 5402/9908 [6:49:06<4:45:05,  3.80s/it] 55%|█████▍    | 5403/9908 [6:49:10<4:44:57,  3.80s/it] 55%|█████▍    | 5404/9908 [6:49:13<4:38:11,  3.71s/it] 55%|█████▍    | 5405/9908 [6:49:17<4:35:02,  3.66s/it] 55%|█████▍    | 5406/9908 [6:49:21<4:40:36,  3.74s/it] 55%|█████▍    | 5407/9908 [6:49:24<4:34:19,  3.66s/it] 55%|█████▍    | 5408/9908 [6:49:28<4:31:44,  3.62s/it] 55%|█████▍    | 5409/9908 [6:49:32<4:33:01,  3.64s/it] 55%|█████▍    | 5410/9908 [6:49:36<4:41:43,  3.76s/it] 55%|█████▍    | 5411/9908 [6:49:39<4:43:11,  3.78s/it] 55%|█████▍    | 5412/9908 [6:49:43<4:44:43,  3.80s/it] 55%|█████▍    | 5413/9908 [6:49:47<4:43:49,  3.79s/it] 55%|█████▍    | 5414/9908 [6:49:51<4:47:23,  3.84s/it] 55%|█████▍    | 5415/9908 [6:49:55<4:45:49,  3.82s/it] 55%|█████▍    | 5416/9908 [6:49:59<4:45:23,  3.81s/it] 55%|█████▍    | 5417/9908 [6:50:02<4:42:00,  3.77s/it] 55%|█████▍    | 5418/9908 [6:50:06<4:41:00,  3.76s/it] 55%|█████▍    | 5419/9908 [6:50:10<4:45:32,  3.82s/it] 55%|█████▍    | 5420/9908 [6:50:13<4:34:06,  3.66s/it] 55%|█████▍    | 5421/9908 [6:50:17<4:32:16,  3.64s/it] 55%|█████▍    | 5422/9908 [6:50:20<4:30:46,  3.62s/it] 55%|█████▍    | 5423/9908 [6:50:24<4:33:59,  3.67s/it] 55%|█████▍    | 5424/9908 [6:50:28<4:35:16,  3.68s/it] 55%|█████▍    | 5425/9908 [6:50:31<4:31:18,  3.63s/it] 55%|█████▍    | 5426/9908 [6:50:35<4:27:07,  3.58s/it] 55%|█████▍    | 5427/9908 [6:50:39<4:31:19,  3.63s/it] 55%|█████▍    | 5428/9908 [6:50:42<4:34:12,  3.67s/it] 55%|█████▍    | 5429/9908 [6:50:46<4:39:29,  3.74s/it] 55%|█████▍    | 5430/9908 [6:50:50<4:40:11,  3.75s/it] 55%|█████▍    | 5431/9908 [6:50:54<4:38:06,  3.73s/it] 55%|█████▍    | 5432/9908 [6:50:57<4:26:13,  3.57s/it] 55%|█████▍    | 5433/9908 [6:51:00<4:26:59,  3.58s/it] 55%|█████▍    | 5434/9908 [6:51:04<4:30:06,  3.62s/it] 55%|█████▍    | 5435/9908 [6:51:08<4:35:13,  3.69s/it] 55%|█████▍    | 5436/9908 [6:51:12<4:38:51,  3.74s/it] 55%|█████▍    | 5437/9908 [6:51:15<4:32:37,  3.66s/it] 55%|█████▍    | 5438/9908 [6:51:19<4:25:16,  3.56s/it] 55%|█████▍    | 5439/9908 [6:51:23<4:42:08,  3.79s/it] 55%|█████▍    | 5440/9908 [6:51:27<4:40:08,  3.76s/it] 55%|█████▍    | 5441/9908 [6:51:30<4:38:03,  3.73s/it] 55%|█████▍    | 5442/9908 [6:51:34<4:32:19,  3.66s/it] 55%|█████▍    | 5443/9908 [6:51:37<4:30:00,  3.63s/it] 55%|█████▍    | 5444/9908 [6:51:41<4:37:36,  3.73s/it] 55%|█████▍    | 5445/9908 [6:51:45<4:41:17,  3.78s/it] 55%|█████▍    | 5446/9908 [6:51:49<4:33:02,  3.67s/it] 55%|█████▍    | 5447/9908 [6:51:52<4:31:16,  3.65s/it] 55%|█████▍    | 5448/9908 [6:51:56<4:39:19,  3.76s/it] 55%|█████▍    | 5449/9908 [6:52:00<4:43:45,  3.82s/it]09/20/2024 08:28:35 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.023045366629958153, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.094330906867981, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.1173763275146484}
 55%|█████▌    | 5450/9908 [6:52:04<4:37:57,  3.74s/it] 55%|█████▌    | 5451/9908 [6:52:07<4:32:48,  3.67s/it] 55%|█████▌    | 5452/9908 [6:52:11<4:38:33,  3.75s/it] 55%|█████▌    | 5453/9908 [6:52:15<4:42:47,  3.81s/it] 55%|█████▌    | 5454/9908 [6:52:19<4:40:37,  3.78s/it] 55%|█████▌    | 5455/9908 [6:52:23<4:40:14,  3.78s/it] 55%|█████▌    | 5456/9908 [6:52:27<4:41:33,  3.79s/it] 55%|█████▌    | 5457/9908 [6:52:30<4:35:15,  3.71s/it] 55%|█████▌    | 5458/9908 [6:52:34<4:34:56,  3.71s/it] 55%|█████▌    | 5459/9908 [6:52:38<4:42:41,  3.81s/it] 55%|█████▌    | 5460/9908 [6:52:41<4:36:50,  3.73s/it] 55%|█████▌    | 5461/9908 [6:52:45<4:36:58,  3.74s/it] 55%|█████▌    | 5462/9908 [6:52:49<4:32:17,  3.67s/it] 55%|█████▌    | 5463/9908 [6:52:52<4:27:30,  3.61s/it] 55%|█████▌    | 5464/9908 [6:52:56<4:31:41,  3.67s/it] 55%|█████▌    | 5465/9908 [6:52:59<4:29:14,  3.64s/it] 55%|█████▌    | 5466/9908 [6:53:03<4:28:24,  3.63s/it] 55%|█████▌    | 5467/9908 [6:53:07<4:28:34,  3.63s/it] 55%|█████▌    | 5468/9908 [6:53:11<4:33:33,  3.70s/it] 55%|█████▌    | 5469/9908 [6:53:14<4:32:59,  3.69s/it] 55%|█████▌    | 5470/9908 [6:53:18<4:30:40,  3.66s/it] 55%|█████▌    | 5471/9908 [6:53:22<4:37:49,  3.76s/it] 55%|█████▌    | 5472/9908 [6:53:26<4:42:51,  3.83s/it] 55%|█████▌    | 5473/9908 [6:53:30<4:51:08,  3.94s/it] 55%|█████▌    | 5474/9908 [6:53:34<4:41:00,  3.80s/it] 55%|█████▌    | 5475/9908 [6:53:37<4:38:18,  3.77s/it] 55%|█████▌    | 5476/9908 [6:53:41<4:36:57,  3.75s/it] 55%|█████▌    | 5477/9908 [6:53:45<4:43:39,  3.84s/it] 55%|█████▌    | 5478/9908 [6:53:48<4:34:10,  3.71s/it] 55%|█████▌    | 5479/9908 [6:53:52<4:29:48,  3.66s/it] 55%|█████▌    | 5480/9908 [6:53:56<4:32:08,  3.69s/it] 55%|█████▌    | 5481/9908 [6:53:59<4:26:37,  3.61s/it] 55%|█████▌    | 5482/9908 [6:54:03<4:28:40,  3.64s/it] 55%|█████▌    | 5483/9908 [6:54:06<4:26:23,  3.61s/it] 55%|█████▌    | 5484/9908 [6:54:10<4:33:32,  3.71s/it] 55%|█████▌    | 5485/9908 [6:54:14<4:41:10,  3.81s/it] 55%|█████▌    | 5486/9908 [6:54:18<4:36:12,  3.75s/it] 55%|█████▌    | 5487/9908 [6:54:22<4:41:26,  3.82s/it] 55%|█████▌    | 5488/9908 [6:54:26<4:38:50,  3.79s/it] 55%|█████▌    | 5489/9908 [6:54:29<4:35:38,  3.74s/it] 55%|█████▌    | 5490/9908 [6:54:33<4:36:45,  3.76s/it] 55%|█████▌    | 5491/9908 [6:54:36<4:29:33,  3.66s/it] 55%|█████▌    | 5492/9908 [6:54:40<4:36:02,  3.75s/it] 55%|█████▌    | 5493/9908 [6:54:44<4:37:41,  3.77s/it] 55%|█████▌    | 5494/9908 [6:54:48<4:44:45,  3.87s/it] 55%|█████▌    | 5495/9908 [6:54:52<4:41:46,  3.83s/it] 55%|█████▌    | 5496/9908 [6:54:56<4:34:43,  3.74s/it] 55%|█████▌    | 5497/9908 [6:54:59<4:35:55,  3.75s/it] 55%|█████▌    | 5498/9908 [6:55:03<4:27:03,  3.63s/it] 56%|█████▌    | 5499/9908 [6:55:07<4:29:15,  3.66s/it]09/20/2024 08:31:40 - INFO - __main__ -   evaluate on ret%tvas--msrvtt_ret task
09/20/2024 08:31:40 - INFO - __main__ -   start running ret%tvas validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:02<07:58,  2.17s/it][A
  1%|          | 2/221 [00:02<03:57,  1.08s/it][A
  1%|▏         | 3/221 [00:03<03:15,  1.11it/s][A
  2%|▏         | 4/221 [00:03<02:16,  1.59it/s][A
  3%|▎         | 6/221 [00:03<01:16,  2.80it/s][A
  3%|▎         | 7/221 [00:03<01:08,  3.10it/s][A
  4%|▎         | 8/221 [00:04<01:06,  3.19it/s][A
  4%|▍         | 9/221 [00:04<01:07,  3.15it/s][A
  5%|▍         | 10/221 [00:04<01:12,  2.90it/s][A
  5%|▌         | 12/221 [00:11<06:01,  1.73s/it][A
  6%|▌         | 13/221 [00:11<04:42,  1.36s/it][A
  7%|▋         | 15/221 [00:12<03:05,  1.11it/s][A
  7%|▋         | 16/221 [00:12<02:48,  1.22it/s][A
  8%|▊         | 17/221 [00:13<02:49,  1.20it/s][A
  8%|▊         | 18/221 [00:13<02:14,  1.51it/s][A
  9%|▊         | 19/221 [00:15<02:42,  1.24it/s][A
  9%|▉         | 20/221 [00:15<02:02,  1.64it/s][A
 10%|▉         | 21/221 [00:15<01:47,  1.86it/s][A
 10%|▉         | 22/221 [00:16<01:57,  1.70it/s][A
 10%|█         | 23/221 [00:16<01:29,  2.22it/s][A
 11%|█         | 24/221 [00:16<01:14,  2.65it/s][A
 11%|█▏        | 25/221 [00:16<01:06,  2.93it/s][A
 12%|█▏        | 26/221 [00:17<01:08,  2.85it/s][A
 13%|█▎        | 28/221 [00:17<00:56,  3.39it/s][A
 13%|█▎        | 29/221 [00:17<00:50,  3.77it/s][A
 14%|█▎        | 30/221 [00:18<01:03,  3.02it/s][A
 14%|█▍        | 31/221 [00:18<01:06,  2.86it/s][A
 14%|█▍        | 32/221 [00:18<00:53,  3.53it/s][A
 15%|█▍        | 33/221 [00:19<00:59,  3.16it/s][A
 15%|█▌        | 34/221 [00:19<00:49,  3.81it/s][A
 16%|█▌        | 35/221 [00:19<00:46,  4.03it/s][A
 16%|█▋        | 36/221 [00:19<00:45,  4.03it/s][A
 17%|█▋        | 37/221 [00:20<01:18,  2.36it/s][A
 17%|█▋        | 38/221 [00:21<01:23,  2.20it/s][A
 18%|█▊        | 39/221 [00:21<01:11,  2.54it/s][A
 18%|█▊        | 40/221 [00:21<01:13,  2.46it/s][A
 19%|█▊        | 41/221 [00:22<00:59,  3.04it/s][A
 19%|█▉        | 42/221 [00:22<00:50,  3.54it/s][A
 19%|█▉        | 43/221 [00:22<00:44,  4.00it/s][A
 20%|█▉        | 44/221 [00:22<00:36,  4.79it/s][A
 20%|██        | 45/221 [00:24<02:28,  1.19it/s][A
 21%|██        | 46/221 [00:25<01:59,  1.47it/s][A
 21%|██▏       | 47/221 [00:25<01:49,  1.59it/s][A
 22%|██▏       | 48/221 [00:25<01:23,  2.08it/s][A
 22%|██▏       | 49/221 [00:26<01:23,  2.06it/s][A
 23%|██▎       | 50/221 [00:26<01:17,  2.22it/s][A
 23%|██▎       | 51/221 [00:26<01:05,  2.60it/s][A
 24%|██▎       | 52/221 [00:27<00:53,  3.13it/s][A
 24%|██▍       | 53/221 [00:27<00:50,  3.32it/s][A
 24%|██▍       | 54/221 [00:27<01:01,  2.73it/s][A
 25%|██▍       | 55/221 [00:30<02:35,  1.07it/s][A
 25%|██▌       | 56/221 [00:30<01:59,  1.38it/s][A
 26%|██▌       | 57/221 [00:30<01:33,  1.76it/s][A
 27%|██▋       | 59/221 [00:30<00:56,  2.85it/s][A
 27%|██▋       | 60/221 [00:31<01:02,  2.58it/s][A
 28%|██▊       | 61/221 [00:31<00:56,  2.83it/s][A
 28%|██▊       | 62/221 [00:31<00:56,  2.82it/s][A
 29%|██▊       | 63/221 [00:32<00:47,  3.34it/s][A
 29%|██▉       | 64/221 [00:33<01:20,  1.96it/s][A
 29%|██▉       | 65/221 [00:33<01:02,  2.48it/s][A
 30%|██▉       | 66/221 [00:33<01:10,  2.21it/s][A
 30%|███       | 67/221 [00:34<01:04,  2.40it/s][A
 31%|███       | 69/221 [00:35<01:31,  1.67it/s][A
 32%|███▏      | 70/221 [00:35<01:12,  2.09it/s][A
 32%|███▏      | 71/221 [00:36<01:17,  1.94it/s][A
 33%|███▎      | 72/221 [00:36<01:10,  2.10it/s][A
 33%|███▎      | 73/221 [00:37<01:22,  1.79it/s][A
 33%|███▎      | 74/221 [00:37<01:03,  2.33it/s][A
 34%|███▍      | 75/221 [00:38<00:57,  2.53it/s][A
 34%|███▍      | 76/221 [00:38<00:55,  2.63it/s][A
 35%|███▍      | 77/221 [00:41<02:40,  1.11s/it][A
 35%|███▌      | 78/221 [00:41<01:58,  1.21it/s][A
 36%|███▌      | 79/221 [00:42<02:01,  1.17it/s][A
 36%|███▌      | 80/221 [00:42<01:29,  1.58it/s][A
 37%|███▋      | 81/221 [00:43<01:29,  1.56it/s][A
 37%|███▋      | 82/221 [00:45<02:55,  1.27s/it][A
 38%|███▊      | 83/221 [00:46<02:28,  1.07s/it][A
 38%|███▊      | 84/221 [00:46<01:51,  1.23it/s][A
 39%|███▉      | 86/221 [00:47<01:11,  1.88it/s][A
 39%|███▉      | 87/221 [00:47<01:08,  1.95it/s][A
 40%|███▉      | 88/221 [00:47<01:02,  2.12it/s][A
 40%|████      | 89/221 [00:48<01:00,  2.18it/s][A
 41%|████      | 90/221 [00:48<00:53,  2.46it/s][A
 41%|████      | 91/221 [00:48<00:41,  3.11it/s][A
 42%|████▏     | 92/221 [00:48<00:36,  3.51it/s][A
 42%|████▏     | 93/221 [00:49<00:36,  3.49it/s][A
 43%|████▎     | 94/221 [00:49<00:52,  2.40it/s][A
 43%|████▎     | 95/221 [00:50<00:52,  2.42it/s][A
 43%|████▎     | 96/221 [00:51<01:02,  2.01it/s][A
 44%|████▍     | 97/221 [00:51<00:49,  2.51it/s][A
 44%|████▍     | 98/221 [00:51<00:51,  2.37it/s][A
 45%|████▍     | 99/221 [00:51<00:43,  2.81it/s][A
 45%|████▌     | 100/221 [00:52<00:58,  2.06it/s][A
 46%|████▌     | 101/221 [00:52<00:46,  2.56it/s][A
 46%|████▌     | 102/221 [00:53<01:05,  1.82it/s][A
 47%|████▋     | 103/221 [00:53<00:49,  2.40it/s][A
 47%|████▋     | 104/221 [00:54<00:48,  2.43it/s][A
 48%|████▊     | 105/221 [00:54<00:50,  2.28it/s][A
 48%|████▊     | 106/221 [00:59<03:15,  1.70s/it][A
 48%|████▊     | 107/221 [00:59<02:24,  1.27s/it][A
 49%|████▉     | 108/221 [01:00<01:57,  1.04s/it][A
 49%|████▉     | 109/221 [01:00<01:33,  1.20it/s][A
 50%|█████     | 111/221 [01:01<01:02,  1.76it/s][A
 51%|█████     | 112/221 [01:01<00:58,  1.87it/s][A
 51%|█████     | 113/221 [01:01<00:47,  2.25it/s][A
 52%|█████▏    | 114/221 [01:01<00:37,  2.83it/s][A
 52%|█████▏    | 115/221 [01:02<00:48,  2.21it/s][A
 52%|█████▏    | 116/221 [01:02<00:43,  2.41it/s][A
 53%|█████▎    | 117/221 [01:03<00:42,  2.45it/s][A
 53%|█████▎    | 118/221 [01:03<00:41,  2.46it/s][A
 54%|█████▍    | 119/221 [01:03<00:33,  3.08it/s][A
 54%|█████▍    | 120/221 [01:03<00:26,  3.75it/s][A
 55%|█████▍    | 121/221 [01:04<00:35,  2.80it/s][A
 55%|█████▌    | 122/221 [01:04<00:35,  2.76it/s][A
 56%|█████▌    | 123/221 [01:07<01:31,  1.07it/s][A
 56%|█████▌    | 124/221 [01:07<01:09,  1.40it/s][A
 57%|█████▋    | 125/221 [01:08<01:19,  1.21it/s][A
 57%|█████▋    | 126/221 [01:12<03:04,  1.95s/it][A
 57%|█████▋    | 127/221 [01:13<02:27,  1.56s/it][A
 58%|█████▊    | 128/221 [01:14<01:53,  1.22s/it][A
 58%|█████▊    | 129/221 [01:14<01:34,  1.03s/it][A
 59%|█████▉    | 130/221 [01:14<01:11,  1.27it/s][A
 59%|█████▉    | 131/221 [01:15<01:14,  1.21it/s][A
 60%|█████▉    | 132/221 [01:17<01:27,  1.02it/s][A
 60%|██████    | 133/221 [01:17<01:15,  1.17it/s][A
 61%|██████    | 134/221 [01:18<01:10,  1.23it/s][A
 61%|██████    | 135/221 [01:18<01:04,  1.33it/s][A
 62%|██████▏   | 136/221 [01:19<00:53,  1.60it/s][A
 62%|██████▏   | 137/221 [01:19<00:48,  1.74it/s][A
 62%|██████▏   | 138/221 [01:20<00:47,  1.75it/s][A
 63%|██████▎   | 139/221 [01:20<00:38,  2.15it/s][A
 63%|██████▎   | 140/221 [01:21<00:43,  1.88it/s][A
 64%|██████▍   | 141/221 [01:21<00:39,  2.02it/s][A
 64%|██████▍   | 142/221 [01:21<00:35,  2.23it/s][A
 65%|██████▍   | 143/221 [01:22<00:33,  2.32it/s][A
 65%|██████▌   | 144/221 [01:22<00:27,  2.83it/s][A
 66%|██████▌   | 146/221 [01:22<00:18,  4.16it/s][A
 67%|██████▋   | 147/221 [01:22<00:15,  4.80it/s][A
 67%|██████▋   | 148/221 [01:23<00:29,  2.50it/s][A
 67%|██████▋   | 149/221 [01:24<00:24,  2.89it/s][A
 68%|██████▊   | 150/221 [01:24<00:27,  2.57it/s][A
 68%|██████▊   | 151/221 [01:24<00:23,  2.97it/s][A
 69%|██████▉   | 152/221 [01:25<00:23,  2.90it/s][A
 69%|██████▉   | 153/221 [01:25<00:19,  3.52it/s][A
 70%|██████▉   | 154/221 [01:25<00:17,  3.80it/s][A
 70%|███████   | 155/221 [01:25<00:17,  3.86it/s][A
 71%|███████   | 156/221 [01:25<00:17,  3.82it/s][A
 71%|███████   | 157/221 [01:33<02:28,  2.33s/it][A
 71%|███████▏  | 158/221 [01:34<02:00,  1.91s/it][A
 72%|███████▏  | 159/221 [01:34<01:27,  1.42s/it][A
 72%|███████▏  | 160/221 [01:34<01:03,  1.04s/it][A
 73%|███████▎  | 162/221 [01:34<00:35,  1.68it/s][A
 74%|███████▍  | 163/221 [01:34<00:30,  1.89it/s][A
 74%|███████▍  | 164/221 [01:35<00:25,  2.24it/s][A
 75%|███████▍  | 165/221 [01:35<00:25,  2.17it/s][A
 75%|███████▌  | 166/221 [01:36<00:26,  2.11it/s][A
 76%|███████▌  | 167/221 [01:36<00:22,  2.37it/s][A
 76%|███████▌  | 168/221 [01:41<01:32,  1.74s/it][A
 76%|███████▋  | 169/221 [01:41<01:09,  1.34s/it][A
 77%|███████▋  | 170/221 [01:42<00:57,  1.12s/it][A
 77%|███████▋  | 171/221 [01:42<00:45,  1.10it/s][A
 78%|███████▊  | 172/221 [01:43<00:34,  1.41it/s][A
 78%|███████▊  | 173/221 [01:43<00:29,  1.60it/s][A
 79%|███████▊  | 174/221 [01:43<00:22,  2.05it/s][A
 79%|███████▉  | 175/221 [01:43<00:19,  2.34it/s][A
 80%|███████▉  | 176/221 [01:44<00:17,  2.63it/s][A
 80%|████████  | 177/221 [01:44<00:14,  3.03it/s][A
 81%|████████  | 178/221 [01:44<00:13,  3.11it/s][A
 81%|████████  | 179/221 [01:44<00:12,  3.31it/s][A
 81%|████████▏ | 180/221 [01:45<00:11,  3.56it/s][A
 82%|████████▏ | 181/221 [01:45<00:10,  3.96it/s][A
 82%|████████▏ | 182/221 [01:45<00:12,  3.21it/s][A
 83%|████████▎ | 183/221 [01:46<00:15,  2.50it/s][A
 83%|████████▎ | 184/221 [01:46<00:14,  2.61it/s][A
 84%|████████▎ | 185/221 [01:47<00:12,  2.89it/s][A
 84%|████████▍ | 186/221 [01:47<00:10,  3.30it/s][A
 85%|████████▍ | 187/221 [01:47<00:10,  3.25it/s][A
 85%|████████▌ | 188/221 [01:47<00:08,  3.81it/s][A
 86%|████████▌ | 189/221 [01:48<00:08,  3.58it/s][A
 86%|████████▌ | 190/221 [01:48<00:11,  2.63it/s][A
 86%|████████▋ | 191/221 [01:48<00:09,  3.06it/s][A
 87%|████████▋ | 192/221 [01:49<00:12,  2.25it/s][A
 87%|████████▋ | 193/221 [01:49<00:09,  2.83it/s][A
 88%|████████▊ | 194/221 [01:50<00:12,  2.23it/s][A
 88%|████████▊ | 195/221 [01:50<00:09,  2.79it/s][A
 89%|████████▊ | 196/221 [01:50<00:07,  3.18it/s][A
 89%|████████▉ | 197/221 [01:51<00:07,  3.19it/s][A
 90%|████████▉ | 198/221 [01:51<00:07,  3.20it/s][A
 90%|█████████ | 199/221 [01:51<00:06,  3.58it/s][A
 90%|█████████ | 200/221 [01:52<00:07,  2.82it/s][A
 91%|█████████ | 201/221 [01:52<00:08,  2.23it/s][A
 91%|█████████▏| 202/221 [01:52<00:07,  2.64it/s][A
 92%|█████████▏| 203/221 [01:54<00:13,  1.33it/s][A
 92%|█████████▏| 204/221 [01:54<00:10,  1.61it/s][A
 93%|█████████▎| 206/221 [01:55<00:06,  2.21it/s][A
 94%|█████████▎| 207/221 [01:55<00:05,  2.74it/s][A
 94%|█████████▍| 208/221 [01:56<00:05,  2.51it/s][A
 95%|█████████▌| 210/221 [01:56<00:03,  3.42it/s][A
 95%|█████████▌| 211/221 [01:56<00:03,  2.72it/s][A
 96%|█████████▌| 212/221 [01:57<00:03,  2.95it/s][A
 96%|█████████▋| 213/221 [01:57<00:02,  3.50it/s][A
 97%|█████████▋| 214/221 [01:57<00:02,  3.13it/s][A
 97%|█████████▋| 215/221 [01:58<00:02,  2.60it/s][A
 98%|█████████▊| 216/221 [01:58<00:01,  2.62it/s][A
 98%|█████████▊| 217/221 [02:00<00:02,  1.52it/s][A
 99%|█████████▊| 218/221 [02:00<00:01,  1.81it/s][A
 99%|█████████▉| 219/221 [02:00<00:00,  2.16it/s][A
100%|█████████▉| 220/221 [02:05<00:01,  1.66s/it][A
100%|██████████| 221/221 [02:05<00:00,  1.21s/it][A100%|██████████| 221/221 [02:05<00:00,  1.77it/s]

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:00<01:56,  1.89it/s][A
  1%|          | 2/221 [00:01<01:55,  1.89it/s][A
  1%|▏         | 3/221 [00:01<01:55,  1.89it/s][A
  2%|▏         | 4/221 [00:02<01:54,  1.89it/s][A
  2%|▏         | 5/221 [00:02<01:54,  1.89it/s][A
  3%|▎         | 6/221 [00:03<01:53,  1.89it/s][A
  3%|▎         | 7/221 [00:03<01:53,  1.89it/s][A
  4%|▎         | 8/221 [00:04<01:52,  1.89it/s][A
  4%|▍         | 9/221 [00:04<01:52,  1.89it/s][A
  5%|▍         | 10/221 [00:05<01:51,  1.89it/s][A
  5%|▍         | 11/221 [00:05<01:51,  1.89it/s][A
  5%|▌         | 12/221 [00:06<01:50,  1.89it/s][A
  6%|▌         | 13/221 [00:06<01:49,  1.89it/s][A
  6%|▋         | 14/221 [00:07<01:49,  1.89it/s][A
  7%|▋         | 15/221 [00:07<01:48,  1.89it/s][A
  7%|▋         | 16/221 [00:08<01:48,  1.89it/s][A
  8%|▊         | 17/221 [00:08<01:47,  1.89it/s][A
  8%|▊         | 18/221 [00:09<01:47,  1.89it/s][A
  9%|▊         | 19/221 [00:10<01:46,  1.89it/s][A
  9%|▉         | 20/221 [00:10<01:46,  1.89it/s][A
 10%|▉         | 21/221 [00:11<01:45,  1.89it/s][A
 10%|▉         | 22/221 [00:11<01:45,  1.89it/s][A
 10%|█         | 23/221 [00:12<01:44,  1.89it/s][A
 11%|█         | 24/221 [00:12<01:44,  1.89it/s][A
 11%|█▏        | 25/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 26/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 27/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 28/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 29/221 [00:15<01:41,  1.89it/s][A
 14%|█▎        | 30/221 [00:15<01:40,  1.89it/s][A
 14%|█▍        | 31/221 [00:16<01:40,  1.89it/s][A
 14%|█▍        | 32/221 [00:16<01:39,  1.89it/s][A
 15%|█▍        | 33/221 [00:17<01:39,  1.89it/s][A
 15%|█▌        | 34/221 [00:17<01:38,  1.89it/s][A
 16%|█▌        | 35/221 [00:18<01:38,  1.89it/s][A
 16%|█▋        | 36/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 37/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 38/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 39/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 40/221 [00:21<01:35,  1.89it/s][A
 19%|█▊        | 41/221 [00:21<01:35,  1.89it/s][A
 19%|█▉        | 42/221 [00:22<01:34,  1.89it/s][A
 19%|█▉        | 43/221 [00:22<01:34,  1.89it/s][A
 20%|█▉        | 44/221 [00:23<01:33,  1.89it/s][A
 20%|██        | 45/221 [00:23<01:33,  1.89it/s][A
 21%|██        | 46/221 [00:24<01:32,  1.89it/s][A
 21%|██▏       | 47/221 [00:24<01:31,  1.89it/s][A
 22%|██▏       | 48/221 [00:25<01:31,  1.89it/s][A
 22%|██▏       | 49/221 [00:25<01:30,  1.89it/s][A
 23%|██▎       | 50/221 [00:26<01:30,  1.89it/s][A
 23%|██▎       | 51/221 [00:26<01:29,  1.89it/s][A
 24%|██▎       | 52/221 [00:27<01:29,  1.89it/s][A
 24%|██▍       | 53/221 [00:28<01:28,  1.89it/s][A
 24%|██▍       | 54/221 [00:28<01:28,  1.89it/s][A
 25%|██▍       | 55/221 [00:29<01:27,  1.89it/s][A
 25%|██▌       | 56/221 [00:29<01:27,  1.89it/s][A
 26%|██▌       | 57/221 [00:30<01:26,  1.89it/s][A
 26%|██▌       | 58/221 [00:30<01:26,  1.89it/s][A
 27%|██▋       | 59/221 [00:31<01:25,  1.89it/s][A
 27%|██▋       | 60/221 [00:31<01:25,  1.89it/s][A
 28%|██▊       | 61/221 [00:32<01:24,  1.89it/s][A
 28%|██▊       | 62/221 [00:32<01:24,  1.89it/s][A
 29%|██▊       | 63/221 [00:33<01:23,  1.89it/s][A
 29%|██▉       | 64/221 [00:33<01:22,  1.89it/s][A
 29%|██▉       | 65/221 [00:34<01:22,  1.89it/s][A
 30%|██▉       | 66/221 [00:34<01:21,  1.89it/s][A
 30%|███       | 67/221 [00:35<01:21,  1.89it/s][A
 31%|███       | 68/221 [00:35<01:20,  1.89it/s][A
 31%|███       | 69/221 [00:36<01:20,  1.89it/s][A
 32%|███▏      | 70/221 [00:37<01:19,  1.89it/s][A
 32%|███▏      | 71/221 [00:37<01:19,  1.89it/s][A
 33%|███▎      | 72/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 73/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 74/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 75/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 76/221 [00:40<01:16,  1.89it/s][A
 35%|███▍      | 77/221 [00:40<01:16,  1.89it/s][A
 35%|███▌      | 78/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 79/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 80/221 [00:42<01:14,  1.89it/s][A
 37%|███▋      | 81/221 [00:42<01:13,  1.89it/s][A
 37%|███▋      | 82/221 [00:43<01:13,  1.89it/s][A
 38%|███▊      | 83/221 [00:43<01:12,  1.89it/s][A
 38%|███▊      | 84/221 [00:44<01:12,  1.89it/s][A
 38%|███▊      | 85/221 [00:44<01:11,  1.89it/s][A
 39%|███▉      | 86/221 [00:45<01:11,  1.89it/s][A
 39%|███▉      | 87/221 [00:45<01:10,  1.89it/s][A
 40%|███▉      | 88/221 [00:46<01:10,  1.89it/s][A
 40%|████      | 89/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 90/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 91/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 92/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 93/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 94/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 95/221 [00:50<01:06,  1.89it/s][A
 43%|████▎     | 96/221 [00:50<01:06,  1.89it/s][A
 44%|████▍     | 97/221 [00:51<01:05,  1.89it/s][A
 44%|████▍     | 98/221 [00:51<01:05,  1.89it/s][A
 45%|████▍     | 99/221 [00:52<01:04,  1.89it/s][A
 45%|████▌     | 100/221 [00:52<01:03,  1.89it/s][A
 46%|████▌     | 101/221 [00:53<01:03,  1.89it/s][A
 46%|████▌     | 102/221 [00:53<01:02,  1.89it/s][A
 47%|████▋     | 103/221 [00:54<01:02,  1.89it/s][A
 47%|████▋     | 104/221 [00:54<01:01,  1.89it/s][A
 48%|████▊     | 105/221 [00:55<01:01,  1.89it/s][A
 48%|████▊     | 106/221 [00:56<01:00,  1.89it/s][A
 48%|████▊     | 107/221 [00:56<01:00,  1.89it/s][A
 49%|████▉     | 108/221 [00:57<00:59,  1.89it/s][A
 49%|████▉     | 109/221 [00:57<00:59,  1.89it/s][A
 50%|████▉     | 110/221 [00:58<00:58,  1.89it/s][A
 50%|█████     | 111/221 [00:58<00:58,  1.89it/s][A
 51%|█████     | 112/221 [00:59<00:57,  1.89it/s][A
 51%|█████     | 113/221 [00:59<00:57,  1.89it/s][A
 52%|█████▏    | 114/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 115/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 116/221 [01:01<00:55,  1.89it/s][A
 53%|█████▎    | 117/221 [01:01<00:54,  1.89it/s][A
 53%|█████▎    | 118/221 [01:02<00:54,  1.89it/s][A
 54%|█████▍    | 119/221 [01:02<00:53,  1.89it/s][A
 54%|█████▍    | 120/221 [01:03<00:53,  1.89it/s][A
 55%|█████▍    | 121/221 [01:03<00:52,  1.89it/s][A
 55%|█████▌    | 122/221 [01:04<00:52,  1.89it/s][A
 56%|█████▌    | 123/221 [01:05<00:51,  1.89it/s][A
 56%|█████▌    | 124/221 [01:05<00:51,  1.89it/s][A
 57%|█████▋    | 125/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 126/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 127/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 128/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 129/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 130/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 131/221 [01:09<00:47,  1.89it/s][A
 60%|█████▉    | 132/221 [01:09<00:47,  1.89it/s][A
 60%|██████    | 133/221 [01:10<00:46,  1.89it/s][A
 61%|██████    | 134/221 [01:10<00:45,  1.89it/s][A
 61%|██████    | 135/221 [01:11<00:45,  1.89it/s][A
 62%|██████▏   | 136/221 [01:11<00:44,  1.89it/s][A
 62%|██████▏   | 137/221 [01:12<00:44,  1.89it/s][A
 62%|██████▏   | 138/221 [01:12<00:43,  1.89it/s][A
 63%|██████▎   | 139/221 [01:13<00:43,  1.89it/s][A
 63%|██████▎   | 140/221 [01:14<00:42,  1.89it/s][A
 64%|██████▍   | 141/221 [01:14<00:42,  1.89it/s][A
 64%|██████▍   | 142/221 [01:15<00:41,  1.89it/s][A
 65%|██████▍   | 143/221 [01:15<00:41,  1.89it/s][A
 65%|██████▌   | 144/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 145/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 146/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 147/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 148/221 [01:18<00:38,  1.89it/s][A
 67%|██████▋   | 149/221 [01:18<00:38,  1.89it/s][A
 68%|██████▊   | 150/221 [01:19<00:37,  1.89it/s][A
 68%|██████▊   | 151/221 [01:19<00:36,  1.89it/s][A
 69%|██████▉   | 152/221 [01:20<00:36,  1.89it/s][A
 69%|██████▉   | 153/221 [01:20<00:35,  1.89it/s][A
 70%|██████▉   | 154/221 [01:21<00:35,  1.89it/s][A
 70%|███████   | 155/221 [01:21<00:34,  1.89it/s][A
 71%|███████   | 156/221 [01:22<00:34,  1.89it/s][A
 71%|███████   | 157/221 [01:22<00:33,  1.89it/s][A
 71%|███████▏  | 158/221 [01:23<00:33,  1.89it/s][A
 72%|███████▏  | 159/221 [01:24<00:32,  1.89it/s][A
 72%|███████▏  | 160/221 [01:24<00:32,  1.89it/s][A
 73%|███████▎  | 161/221 [01:25<00:31,  1.89it/s][A
 73%|███████▎  | 162/221 [01:25<00:31,  1.89it/s][A
 74%|███████▍  | 163/221 [01:26<00:30,  1.89it/s][A
 74%|███████▍  | 164/221 [01:26<00:30,  1.89it/s][A
 75%|███████▍  | 165/221 [01:27<00:29,  1.89it/s][A
 75%|███████▌  | 166/221 [01:27<00:29,  1.89it/s][A
 76%|███████▌  | 167/221 [01:28<00:28,  1.89it/s][A
 76%|███████▌  | 168/221 [01:28<00:28,  1.89it/s][A
 76%|███████▋  | 169/221 [01:29<00:27,  1.89it/s][A
 77%|███████▋  | 170/221 [01:29<00:26,  1.89it/s][A
 77%|███████▋  | 171/221 [01:30<00:26,  1.89it/s][A
 78%|███████▊  | 172/221 [01:30<00:25,  1.89it/s][A
 78%|███████▊  | 173/221 [01:31<00:25,  1.89it/s][A
 79%|███████▊  | 174/221 [01:31<00:24,  1.89it/s][A
 79%|███████▉  | 175/221 [01:32<00:24,  1.89it/s][A
 80%|███████▉  | 176/221 [01:33<00:23,  1.89it/s][A
 80%|████████  | 177/221 [01:33<00:23,  1.89it/s][A
 81%|████████  | 178/221 [01:34<00:22,  1.89it/s][A
 81%|████████  | 179/221 [01:34<00:22,  1.89it/s][A
 81%|████████▏ | 180/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 181/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 182/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 183/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 184/221 [01:37<00:19,  1.89it/s][A
 84%|████████▎ | 185/221 [01:37<00:19,  1.89it/s][A
 84%|████████▍ | 186/221 [01:38<00:18,  1.89it/s][A
 85%|████████▍ | 187/221 [01:38<00:17,  1.89it/s][A
 85%|████████▌ | 188/221 [01:39<00:17,  1.89it/s][A
 86%|████████▌ | 189/221 [01:39<00:16,  1.89it/s][A
 86%|████████▌ | 190/221 [01:40<00:16,  1.89it/s][A
 86%|████████▋ | 191/221 [01:40<00:15,  1.89it/s][A
 87%|████████▋ | 192/221 [01:41<00:15,  1.89it/s][A
 87%|████████▋ | 193/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 194/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 195/221 [01:43<00:13,  1.89it/s][A
 89%|████████▊ | 196/221 [01:43<00:13,  1.89it/s][A
 89%|████████▉ | 197/221 [01:44<00:12,  1.89it/s][A
 90%|████████▉ | 198/221 [01:44<00:12,  1.89it/s][A
 90%|█████████ | 199/221 [01:45<00:11,  1.89it/s][A
 90%|█████████ | 200/221 [01:45<00:11,  1.89it/s][A
 91%|█████████ | 201/221 [01:46<00:10,  1.89it/s][A
 91%|█████████▏| 202/221 [01:46<00:10,  1.89it/s][A
 92%|█████████▏| 203/221 [01:47<00:09,  1.89it/s][A
 92%|█████████▏| 204/221 [01:47<00:08,  1.89it/s][A
 93%|█████████▎| 205/221 [01:48<00:08,  1.89it/s][A
 93%|█████████▎| 206/221 [01:48<00:07,  1.89it/s][A
 94%|█████████▎| 207/221 [01:49<00:07,  1.89it/s][A
 94%|█████████▍| 208/221 [01:49<00:06,  1.89it/s][A
 95%|█████████▍| 209/221 [01:50<00:06,  1.89it/s][A
 95%|█████████▌| 210/221 [01:50<00:05,  1.89it/s][A
 95%|█████████▌| 211/221 [01:51<00:05,  1.89it/s][A
 96%|█████████▌| 212/221 [01:52<00:04,  1.89it/s][A
 96%|█████████▋| 213/221 [01:52<00:04,  1.89it/s][A
 97%|█████████▋| 214/221 [01:53<00:03,  1.89it/s][A
 97%|█████████▋| 215/221 [01:53<00:03,  1.89it/s][A
 98%|█████████▊| 216/221 [01:54<00:02,  1.89it/s][A
 98%|█████████▊| 217/221 [01:54<00:02,  1.89it/s][A
 99%|█████████▊| 218/221 [01:55<00:01,  1.89it/s][A
 99%|█████████▉| 219/221 [01:55<00:01,  1.89it/s][A
100%|█████████▉| 220/221 [01:56<00:00,  1.89it/s][A
100%|██████████| 221/221 [01:56<00:00,  1.89it/s][A100%|██████████| 221/221 [01:56<00:00,  1.89it/s]
09/20/2024 08:38:31 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_forward=====step 5499--===========

09/20/2024 08:38:31 - INFO - __main__ -   {'area_r1': 47.7, 'area_recall': '47.7/73.8/84.2', 'area_ravg': 68.6}
09/20/2024 08:38:31 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_backard=====step 5499--===========

09/20/2024 08:38:31 - INFO - __main__ -   {'forward_r1': 50.6, 'forward_recall': '50.6/79.4/87.1', 'forward_ravg': 72.4}
09/20/2024 08:38:31 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video=====step 5499--===========

09/20/2024 08:38:31 - INFO - __main__ -   {'area_video_r1': 48.8, 'area_video_recall': '48.8/79.2/88.1', 'area_video_ravg': 72.0}
09/20/2024 08:38:31 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video====history best step: 3499=======

09/20/2024 08:38:31 - INFO - __main__ -   {'area_video_r1': 50.3, 'area_video_recall': '50.3/78.1/86.7', 'area_video_ravg': 71.7}
09/20/2024 08:38:31 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itm_area=====step 5499--===========

09/20/2024 08:38:31 - INFO - __main__ -   {'area_video_r1': 61.5, 'area_video_recall': '61.5/82.7/89.1', 'area_video_ravg': 77.8, 'area_video_back_r1': 61.7, 'area_video_back_recall': '61.7/84.7/91.1', 'area_video_back_ravg': 79.1}
09/20/2024 08:38:31 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itm_area====history best step: 5499=======

09/20/2024 08:38:31 - INFO - __main__ -   {'area_video_r1': 61.5, 'area_video_recall': '61.5/82.7/89.1', 'area_video_ravg': 77.8, 'area_video_back_r1': 61.7, 'area_video_back_recall': '61.7/84.7/91.1', 'area_video_back_ravg': 79.1}
09/20/2024 08:38:31 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas=====step 5499--===========

09/20/2024 08:38:31 - INFO - __main__ -   {'video_r1': 30.3, 'video_recall': '30.3/56.0/66.5', 'video_ravg': 50.9}
09/20/2024 08:38:31 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas====history best step: 1499=======

09/20/2024 08:38:31 - INFO - __main__ -   {'video_r1': 34.7, 'video_recall': '34.7/60.5/72.3', 'video_ravg': 55.8}
09/20/2024 08:38:59 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04349745810031891, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2114206552505493, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.254918098449707}
 56%|█████▌    | 5500/9908 [7:02:28<165:15:26, 134.97s/it] 56%|█████▌    | 5501/9908 [7:02:31<116:50:09, 95.44s/it]  56%|█████▌    | 5502/9908 [7:02:35<83:06:59, 67.91s/it]  56%|█████▌    | 5503/9908 [7:02:39<59:33:59, 48.68s/it] 56%|█████▌    | 5504/9908 [7:02:42<43:02:53, 35.19s/it] 56%|█████▌    | 5505/9908 [7:02:46<31:30:06, 25.76s/it] 56%|█████▌    | 5506/9908 [7:02:50<23:33:48, 19.27s/it] 56%|█████▌    | 5507/9908 [7:02:54<17:45:36, 14.53s/it] 56%|█████▌    | 5508/9908 [7:02:57<13:43:43, 11.23s/it] 56%|█████▌    | 5509/9908 [7:03:01<10:56:52,  8.96s/it] 56%|█████▌    | 5510/9908 [7:03:04<8:59:41,  7.36s/it]  56%|█████▌    | 5511/9908 [7:03:08<7:46:16,  6.36s/it] 56%|█████▌    | 5512/9908 [7:03:12<6:52:39,  5.63s/it] 56%|█████▌    | 5513/9908 [7:03:16<6:03:18,  4.96s/it] 56%|█████▌    | 5514/9908 [7:03:19<5:29:44,  4.50s/it] 56%|█████▌    | 5515/9908 [7:03:24<5:24:42,  4.43s/it] 56%|█████▌    | 5516/9908 [7:03:27<5:11:52,  4.26s/it] 56%|█████▌    | 5517/9908 [7:03:31<5:03:56,  4.15s/it] 56%|█████▌    | 5518/9908 [7:03:35<4:50:18,  3.97s/it] 56%|█████▌    | 5519/9908 [7:03:38<4:41:22,  3.85s/it] 56%|█████▌    | 5520/9908 [7:03:42<4:45:35,  3.91s/it] 56%|█████▌    | 5521/9908 [7:03:46<4:34:59,  3.76s/it] 56%|█████▌    | 5522/9908 [7:03:50<4:39:58,  3.83s/it] 56%|█████▌    | 5523/9908 [7:03:53<4:34:51,  3.76s/it] 56%|█████▌    | 5524/9908 [7:03:57<4:37:35,  3.80s/it] 56%|█████▌    | 5525/9908 [7:04:01<4:38:52,  3.82s/it] 56%|█████▌    | 5526/9908 [7:04:05<4:39:44,  3.83s/it] 56%|█████▌    | 5527/9908 [7:04:09<4:37:54,  3.81s/it] 56%|█████▌    | 5528/9908 [7:04:12<4:35:38,  3.78s/it] 56%|█████▌    | 5529/9908 [7:04:16<4:37:56,  3.81s/it] 56%|█████▌    | 5530/9908 [7:04:20<4:34:20,  3.76s/it] 56%|█████▌    | 5531/9908 [7:04:24<4:33:27,  3.75s/it] 56%|█████▌    | 5532/9908 [7:04:27<4:30:10,  3.70s/it] 56%|█████▌    | 5533/9908 [7:04:31<4:34:27,  3.76s/it] 56%|█████▌    | 5534/9908 [7:04:35<4:32:03,  3.73s/it] 56%|█████▌    | 5535/9908 [7:04:38<4:24:32,  3.63s/it] 56%|█████▌    | 5536/9908 [7:04:42<4:29:36,  3.70s/it] 56%|█████▌    | 5537/9908 [7:04:46<4:34:10,  3.76s/it] 56%|█████▌    | 5538/9908 [7:04:50<4:30:45,  3.72s/it] 56%|█████▌    | 5539/9908 [7:04:53<4:32:19,  3.74s/it] 56%|█████▌    | 5540/9908 [7:04:57<4:32:54,  3.75s/it] 56%|█████▌    | 5541/9908 [7:05:01<4:32:28,  3.74s/it] 56%|█████▌    | 5542/9908 [7:05:05<4:34:24,  3.77s/it] 56%|█████▌    | 5543/9908 [7:05:09<4:34:14,  3.77s/it] 56%|█████▌    | 5544/9908 [7:05:12<4:31:00,  3.73s/it] 56%|█████▌    | 5545/9908 [7:05:16<4:33:29,  3.76s/it] 56%|█████▌    | 5546/9908 [7:05:19<4:25:51,  3.66s/it] 56%|█████▌    | 5547/9908 [7:05:23<4:30:35,  3.72s/it] 56%|█████▌    | 5548/9908 [7:05:27<4:33:50,  3.77s/it] 56%|█████▌    | 5549/9908 [7:05:31<4:32:14,  3.75s/it]09/20/2024 08:42:05 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.047994039952754974, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.6433501243591309, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.691344141960144}
 56%|█████▌    | 5550/9908 [7:05:34<4:22:07,  3.61s/it] 56%|█████▌    | 5551/9908 [7:05:38<4:26:12,  3.67s/it] 56%|█████▌    | 5552/9908 [7:05:42<4:27:16,  3.68s/it] 56%|█████▌    | 5553/9908 [7:05:45<4:29:00,  3.71s/it] 56%|█████▌    | 5554/9908 [7:05:49<4:33:51,  3.77s/it] 56%|█████▌    | 5555/9908 [7:05:53<4:30:42,  3.73s/it] 56%|█████▌    | 5556/9908 [7:05:57<4:41:49,  3.89s/it] 56%|█████▌    | 5557/9908 [7:06:00<4:27:13,  3.69s/it] 56%|█████▌    | 5558/9908 [7:06:04<4:26:58,  3.68s/it] 56%|█████▌    | 5559/9908 [7:06:08<4:26:35,  3.68s/it] 56%|█████▌    | 5560/9908 [7:06:12<4:27:11,  3.69s/it] 56%|█████▌    | 5561/9908 [7:06:15<4:30:44,  3.74s/it] 56%|█████▌    | 5562/9908 [7:06:19<4:35:01,  3.80s/it] 56%|█████▌    | 5563/9908 [7:06:23<4:34:35,  3.79s/it] 56%|█████▌    | 5564/9908 [7:06:27<4:30:52,  3.74s/it] 56%|█████▌    | 5565/9908 [7:06:30<4:24:20,  3.65s/it] 56%|█████▌    | 5566/9908 [7:06:34<4:24:29,  3.65s/it] 56%|█████▌    | 5567/9908 [7:06:38<4:27:41,  3.70s/it] 56%|█████▌    | 5568/9908 [7:06:42<4:31:19,  3.75s/it] 56%|█████▌    | 5569/9908 [7:06:46<4:39:20,  3.86s/it] 56%|█████▌    | 5570/9908 [7:06:49<4:35:10,  3.81s/it] 56%|█████▌    | 5571/9908 [7:06:53<4:28:54,  3.72s/it] 56%|█████▌    | 5572/9908 [7:06:56<4:25:14,  3.67s/it] 56%|█████▌    | 5573/9908 [7:07:00<4:24:37,  3.66s/it] 56%|█████▋    | 5574/9908 [7:07:04<4:25:57,  3.68s/it] 56%|█████▋    | 5575/9908 [7:07:07<4:25:10,  3.67s/it] 56%|█████▋    | 5576/9908 [7:07:11<4:29:35,  3.73s/it] 56%|█████▋    | 5577/9908 [7:07:15<4:34:13,  3.80s/it] 56%|█████▋    | 5578/9908 [7:07:19<4:31:22,  3.76s/it] 56%|█████▋    | 5579/9908 [7:07:23<4:33:19,  3.79s/it] 56%|█████▋    | 5580/9908 [7:07:26<4:30:24,  3.75s/it] 56%|█████▋    | 5581/9908 [7:07:30<4:35:44,  3.82s/it] 56%|█████▋    | 5582/9908 [7:07:34<4:28:12,  3.72s/it] 56%|█████▋    | 5583/9908 [7:07:37<4:22:00,  3.63s/it] 56%|█████▋    | 5584/9908 [7:07:41<4:16:54,  3.56s/it] 56%|█████▋    | 5585/9908 [7:07:44<4:20:13,  3.61s/it] 56%|█████▋    | 5586/9908 [7:07:48<4:29:15,  3.74s/it] 56%|█████▋    | 5587/9908 [7:07:52<4:31:36,  3.77s/it] 56%|█████▋    | 5588/9908 [7:07:56<4:30:09,  3.75s/it] 56%|█████▋    | 5589/9908 [7:08:00<4:30:33,  3.76s/it] 56%|█████▋    | 5590/9908 [7:08:04<4:31:47,  3.78s/it] 56%|█████▋    | 5591/9908 [7:08:07<4:20:30,  3.62s/it] 56%|█████▋    | 5592/9908 [7:08:11<4:24:14,  3.67s/it] 56%|█████▋    | 5593/9908 [7:08:15<4:34:16,  3.81s/it] 56%|█████▋    | 5594/9908 [7:08:19<4:34:19,  3.82s/it] 56%|█████▋    | 5595/9908 [7:08:22<4:31:13,  3.77s/it] 56%|█████▋    | 5596/9908 [7:08:26<4:29:03,  3.74s/it] 56%|█████▋    | 5597/9908 [7:08:30<4:25:19,  3.69s/it] 56%|█████▋    | 5598/9908 [7:08:33<4:29:27,  3.75s/it] 57%|█████▋    | 5599/9908 [7:08:37<4:33:30,  3.81s/it]09/20/2024 08:45:12 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.017154289409518242, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.0448038578033447, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.0619581937789917}
 57%|█████▋    | 5600/9908 [7:08:41<4:29:46,  3.76s/it] 57%|█████▋    | 5601/9908 [7:08:45<4:26:59,  3.72s/it] 57%|█████▋    | 5602/9908 [7:08:49<4:33:17,  3.81s/it] 57%|█████▋    | 5603/9908 [7:08:52<4:27:00,  3.72s/it] 57%|█████▋    | 5604/9908 [7:08:56<4:20:46,  3.64s/it] 57%|█████▋    | 5605/9908 [7:09:00<4:28:42,  3.75s/it] 57%|█████▋    | 5606/9908 [7:09:03<4:27:44,  3.73s/it] 57%|█████▋    | 5607/9908 [7:09:07<4:26:42,  3.72s/it] 57%|█████▋    | 5608/9908 [7:09:11<4:22:16,  3.66s/it] 57%|█████▋    | 5609/9908 [7:09:14<4:24:18,  3.69s/it] 57%|█████▋    | 5610/9908 [7:09:18<4:26:26,  3.72s/it] 57%|█████▋    | 5611/9908 [7:09:22<4:24:28,  3.69s/it] 57%|█████▋    | 5612/9908 [7:09:26<4:30:01,  3.77s/it] 57%|█████▋    | 5613/9908 [7:09:29<4:25:24,  3.71s/it] 57%|█████▋    | 5614/9908 [7:09:33<4:23:47,  3.69s/it] 57%|█████▋    | 5615/9908 [7:09:37<4:24:44,  3.70s/it] 57%|█████▋    | 5616/9908 [7:09:40<4:25:00,  3.70s/it] 57%|█████▋    | 5617/9908 [7:09:44<4:32:26,  3.81s/it] 57%|█████▋    | 5618/9908 [7:09:48<4:25:28,  3.71s/it] 57%|█████▋    | 5619/9908 [7:09:52<4:25:36,  3.72s/it] 57%|█████▋    | 5620/9908 [7:09:55<4:27:19,  3.74s/it] 57%|█████▋    | 5621/9908 [7:09:59<4:27:21,  3.74s/it] 57%|█████▋    | 5622/9908 [7:10:03<4:25:33,  3.72s/it] 57%|█████▋    | 5623/9908 [7:10:06<4:22:44,  3.68s/it] 57%|█████▋    | 5624/9908 [7:10:10<4:25:22,  3.72s/it] 57%|█████▋    | 5625/9908 [7:10:14<4:30:37,  3.79s/it] 57%|█████▋    | 5626/9908 [7:10:18<4:28:12,  3.76s/it] 57%|█████▋    | 5627/9908 [7:10:22<4:28:18,  3.76s/it] 57%|█████▋    | 5628/9908 [7:10:26<4:31:10,  3.80s/it] 57%|█████▋    | 5629/9908 [7:10:29<4:24:37,  3.71s/it] 57%|█████▋    | 5630/9908 [7:10:33<4:23:34,  3.70s/it] 57%|█████▋    | 5631/9908 [7:10:37<4:28:10,  3.76s/it] 57%|█████▋    | 5632/9908 [7:10:40<4:26:37,  3.74s/it] 57%|█████▋    | 5633/9908 [7:10:44<4:26:09,  3.74s/it] 57%|█████▋    | 5634/9908 [7:10:48<4:21:44,  3.67s/it] 57%|█████▋    | 5635/9908 [7:10:51<4:25:22,  3.73s/it] 57%|█████▋    | 5636/9908 [7:10:55<4:22:54,  3.69s/it] 57%|█████▋    | 5637/9908 [7:10:59<4:27:53,  3.76s/it] 57%|█████▋    | 5638/9908 [7:11:03<4:25:23,  3.73s/it] 57%|█████▋    | 5639/9908 [7:11:06<4:21:41,  3.68s/it] 57%|█████▋    | 5640/9908 [7:11:10<4:25:28,  3.73s/it] 57%|█████▋    | 5641/9908 [7:11:14<4:26:29,  3.75s/it] 57%|█████▋    | 5642/9908 [7:11:18<4:26:38,  3.75s/it] 57%|█████▋    | 5643/9908 [7:11:21<4:30:04,  3.80s/it] 57%|█████▋    | 5644/9908 [7:11:25<4:24:53,  3.73s/it] 57%|█████▋    | 5645/9908 [7:11:29<4:24:23,  3.72s/it] 57%|█████▋    | 5646/9908 [7:11:32<4:21:06,  3.68s/it] 57%|█████▋    | 5647/9908 [7:11:36<4:21:30,  3.68s/it] 57%|█████▋    | 5648/9908 [7:11:40<4:20:10,  3.66s/it] 57%|█████▋    | 5649/9908 [7:11:43<4:20:03,  3.66s/it]09/20/2024 08:48:18 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.022686421871185303, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 0.9818887114524841, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.0045751333236694}
 57%|█████▋    | 5650/9908 [7:11:47<4:29:03,  3.79s/it] 57%|█████▋    | 5651/9908 [7:11:51<4:33:27,  3.85s/it] 57%|█████▋    | 5652/9908 [7:11:55<4:27:22,  3.77s/it] 57%|█████▋    | 5653/9908 [7:11:58<4:22:18,  3.70s/it] 57%|█████▋    | 5654/9908 [7:12:02<4:27:20,  3.77s/it] 57%|█████▋    | 5655/9908 [7:12:06<4:27:12,  3.77s/it] 57%|█████▋    | 5656/9908 [7:12:10<4:29:18,  3.80s/it] 57%|█████▋    | 5657/9908 [7:12:14<4:23:24,  3.72s/it] 57%|█████▋    | 5658/9908 [7:12:17<4:21:46,  3.70s/it] 57%|█████▋    | 5659/9908 [7:12:21<4:23:29,  3.72s/it] 57%|█████▋    | 5660/9908 [7:12:25<4:19:26,  3.66s/it] 57%|█████▋    | 5661/9908 [7:12:28<4:15:43,  3.61s/it] 57%|█████▋    | 5662/9908 [7:12:32<4:18:11,  3.65s/it] 57%|█████▋    | 5663/9908 [7:12:36<4:29:16,  3.81s/it] 57%|█████▋    | 5664/9908 [7:12:40<4:29:33,  3.81s/it] 57%|█████▋    | 5665/9908 [7:12:43<4:26:22,  3.77s/it] 57%|█████▋    | 5666/9908 [7:12:47<4:22:03,  3.71s/it] 57%|█████▋    | 5667/9908 [7:12:51<4:21:20,  3.70s/it] 57%|█████▋    | 5668/9908 [7:12:55<4:25:31,  3.76s/it] 57%|█████▋    | 5669/9908 [7:12:58<4:23:17,  3.73s/it] 57%|█████▋    | 5670/9908 [7:13:02<4:17:25,  3.64s/it] 57%|█████▋    | 5671/9908 [7:13:06<4:25:16,  3.76s/it] 57%|█████▋    | 5672/9908 [7:13:10<4:33:06,  3.87s/it] 57%|█████▋    | 5673/9908 [7:13:14<4:31:27,  3.85s/it] 57%|█████▋    | 5674/9908 [7:13:18<4:36:08,  3.91s/it] 57%|█████▋    | 5675/9908 [7:13:21<4:31:43,  3.85s/it] 57%|█████▋    | 5676/9908 [7:13:25<4:32:46,  3.87s/it] 57%|█████▋    | 5677/9908 [7:13:29<4:22:46,  3.73s/it] 57%|█████▋    | 5678/9908 [7:13:32<4:22:50,  3.73s/it] 57%|█████▋    | 5679/9908 [7:13:36<4:22:35,  3.73s/it] 57%|█████▋    | 5680/9908 [7:13:40<4:16:05,  3.63s/it] 57%|█████▋    | 5681/9908 [7:13:43<4:15:59,  3.63s/it] 57%|█████▋    | 5682/9908 [7:13:47<4:16:27,  3.64s/it] 57%|█████▋    | 5683/9908 [7:13:51<4:21:18,  3.71s/it] 57%|█████▋    | 5684/9908 [7:13:55<4:25:29,  3.77s/it] 57%|█████▋    | 5685/9908 [7:13:58<4:27:12,  3.80s/it] 57%|█████▋    | 5686/9908 [7:14:02<4:28:57,  3.82s/it] 57%|█████▋    | 5687/9908 [7:14:06<4:23:17,  3.74s/it] 57%|█████▋    | 5688/9908 [7:14:09<4:17:44,  3.66s/it] 57%|█████▋    | 5689/9908 [7:14:13<4:17:28,  3.66s/it] 57%|█████▋    | 5690/9908 [7:14:17<4:22:39,  3.74s/it] 57%|█████▋    | 5691/9908 [7:14:21<4:23:04,  3.74s/it] 57%|█████▋    | 5692/9908 [7:14:24<4:22:52,  3.74s/it] 57%|█████▋    | 5693/9908 [7:14:28<4:18:32,  3.68s/it] 57%|█████▋    | 5694/9908 [7:14:32<4:26:35,  3.80s/it] 57%|█████▋    | 5695/9908 [7:14:36<4:31:19,  3.86s/it] 57%|█████▋    | 5696/9908 [7:14:40<4:22:11,  3.73s/it] 57%|█████▋    | 5697/9908 [7:14:43<4:17:22,  3.67s/it] 58%|█████▊    | 5698/9908 [7:14:47<4:20:02,  3.71s/it] 58%|█████▊    | 5699/9908 [7:14:51<4:21:28,  3.73s/it]09/20/2024 08:51:25 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.018228430300951004, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 0.9184137582778931, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 0.9366421699523926}
 58%|█████▊    | 5700/9908 [7:14:54<4:18:30,  3.69s/it] 58%|█████▊    | 5701/9908 [7:14:58<4:16:20,  3.66s/it] 58%|█████▊    | 5702/9908 [7:15:02<4:22:19,  3.74s/it] 58%|█████▊    | 5703/9908 [7:15:05<4:21:54,  3.74s/it] 58%|█████▊    | 5704/9908 [7:15:09<4:21:41,  3.73s/it] 58%|█████▊    | 5705/9908 [7:15:13<4:21:38,  3.73s/it] 58%|█████▊    | 5706/9908 [7:15:17<4:25:43,  3.79s/it] 58%|█████▊    | 5707/9908 [7:15:20<4:16:25,  3.66s/it] 58%|█████▊    | 5708/9908 [7:15:24<4:13:36,  3.62s/it] 58%|█████▊    | 5709/9908 [7:15:27<4:15:00,  3.64s/it] 58%|█████▊    | 5710/9908 [7:15:32<4:24:41,  3.78s/it] 58%|█████▊    | 5711/9908 [7:15:35<4:17:11,  3.68s/it] 58%|█████▊    | 5712/9908 [7:15:39<4:15:02,  3.65s/it] 58%|█████▊    | 5713/9908 [7:15:42<4:15:32,  3.65s/it] 58%|█████▊    | 5714/9908 [7:15:46<4:13:24,  3.63s/it] 58%|█████▊    | 5715/9908 [7:15:50<4:20:55,  3.73s/it] 58%|█████▊    | 5716/9908 [7:15:54<4:27:12,  3.82s/it] 58%|█████▊    | 5717/9908 [7:15:57<4:19:55,  3.72s/it] 58%|█████▊    | 5718/9908 [7:16:01<4:13:20,  3.63s/it] 58%|█████▊    | 5719/9908 [7:16:04<4:09:17,  3.57s/it] 58%|█████▊    | 5720/9908 [7:16:08<4:09:54,  3.58s/it] 58%|█████▊    | 5721/9908 [7:16:12<4:15:47,  3.67s/it] 58%|█████▊    | 5722/9908 [7:16:16<4:23:04,  3.77s/it] 58%|█████▊    | 5723/9908 [7:16:19<4:15:50,  3.67s/it] 58%|█████▊    | 5724/9908 [7:16:22<4:11:10,  3.60s/it] 58%|█████▊    | 5725/9908 [7:16:27<4:20:12,  3.73s/it] 58%|█████▊    | 5726/9908 [7:16:30<4:14:49,  3.66s/it] 58%|█████▊    | 5727/9908 [7:16:34<4:19:47,  3.73s/it] 58%|█████▊    | 5728/9908 [7:16:38<4:17:54,  3.70s/it] 58%|█████▊    | 5729/9908 [7:16:41<4:17:54,  3.70s/it] 58%|█████▊    | 5730/9908 [7:16:45<4:19:00,  3.72s/it] 58%|█████▊    | 5731/9908 [7:16:49<4:22:19,  3.77s/it] 58%|█████▊    | 5732/9908 [7:16:52<4:18:20,  3.71s/it] 58%|█████▊    | 5733/9908 [7:16:56<4:15:13,  3.67s/it] 58%|█████▊    | 5734/9908 [7:17:00<4:15:12,  3.67s/it] 58%|█████▊    | 5735/9908 [7:17:03<4:12:04,  3.62s/it] 58%|█████▊    | 5736/9908 [7:17:07<4:24:44,  3.81s/it] 58%|█████▊    | 5737/9908 [7:17:11<4:19:20,  3.73s/it] 58%|█████▊    | 5738/9908 [7:17:15<4:19:20,  3.73s/it] 58%|█████▊    | 5739/9908 [7:17:18<4:17:42,  3.71s/it] 58%|█████▊    | 5740/9908 [7:17:22<4:26:04,  3.83s/it] 58%|█████▊    | 5741/9908 [7:17:26<4:23:03,  3.79s/it] 58%|█████▊    | 5742/9908 [7:17:30<4:13:58,  3.66s/it] 58%|█████▊    | 5743/9908 [7:17:33<4:16:13,  3.69s/it] 58%|█████▊    | 5744/9908 [7:17:37<4:19:39,  3.74s/it] 58%|█████▊    | 5745/9908 [7:17:41<4:13:14,  3.65s/it] 58%|█████▊    | 5746/9908 [7:17:44<4:07:34,  3.57s/it] 58%|█████▊    | 5747/9908 [7:17:48<4:19:01,  3.73s/it] 58%|█████▊    | 5748/9908 [7:17:52<4:20:11,  3.75s/it] 58%|█████▊    | 5749/9908 [7:17:56<4:17:28,  3.71s/it]09/20/2024 08:54:30 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.026546278968453407, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2045814990997314, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.2311277389526367}
 58%|█████▊    | 5750/9908 [7:17:59<4:15:42,  3.69s/it] 58%|█████▊    | 5751/9908 [7:18:03<4:19:58,  3.75s/it] 58%|█████▊    | 5752/9908 [7:18:07<4:15:41,  3.69s/it] 58%|█████▊    | 5753/9908 [7:18:10<4:08:05,  3.58s/it] 58%|█████▊    | 5754/9908 [7:18:14<4:10:42,  3.62s/it] 58%|█████▊    | 5755/9908 [7:18:17<4:14:22,  3.68s/it] 58%|█████▊    | 5756/9908 [7:18:21<4:20:32,  3.77s/it] 58%|█████▊    | 5757/9908 [7:18:25<4:17:55,  3.73s/it] 58%|█████▊    | 5758/9908 [7:18:29<4:20:42,  3.77s/it] 58%|█████▊    | 5759/9908 [7:18:33<4:20:09,  3.76s/it] 58%|█████▊    | 5760/9908 [7:18:36<4:17:31,  3.73s/it] 58%|█████▊    | 5761/9908 [7:18:40<4:19:01,  3.75s/it] 58%|█████▊    | 5762/9908 [7:18:44<4:23:43,  3.82s/it] 58%|█████▊    | 5763/9908 [7:18:48<4:16:09,  3.71s/it] 58%|█████▊    | 5764/9908 [7:18:51<4:18:06,  3.74s/it] 58%|█████▊    | 5765/9908 [7:18:55<4:13:21,  3.67s/it] 58%|█████▊    | 5766/9908 [7:18:59<4:16:23,  3.71s/it] 58%|█████▊    | 5767/9908 [7:19:02<4:12:39,  3.66s/it] 58%|█████▊    | 5768/9908 [7:19:06<4:18:55,  3.75s/it] 58%|█████▊    | 5769/9908 [7:19:10<4:20:31,  3.78s/it] 58%|█████▊    | 5770/9908 [7:19:14<4:23:56,  3.83s/it] 58%|█████▊    | 5771/9908 [7:19:18<4:20:32,  3.78s/it] 58%|█████▊    | 5772/9908 [7:19:21<4:20:24,  3.78s/it] 58%|█████▊    | 5773/9908 [7:19:25<4:19:14,  3.76s/it] 58%|█████▊    | 5774/9908 [7:19:29<4:14:59,  3.70s/it] 58%|█████▊    | 5775/9908 [7:19:32<4:13:58,  3.69s/it] 58%|█████▊    | 5776/9908 [7:19:36<4:14:49,  3.70s/it] 58%|█████▊    | 5777/9908 [7:19:40<4:14:22,  3.69s/it] 58%|█████▊    | 5778/9908 [7:19:43<4:13:09,  3.68s/it] 58%|█████▊    | 5779/9908 [7:19:47<4:20:48,  3.79s/it] 58%|█████▊    | 5780/9908 [7:19:51<4:14:01,  3.69s/it] 58%|█████▊    | 5781/9908 [7:19:55<4:12:49,  3.68s/it] 58%|█████▊    | 5782/9908 [7:19:58<4:17:58,  3.75s/it] 58%|█████▊    | 5783/9908 [7:20:02<4:12:34,  3.67s/it] 58%|█████▊    | 5784/9908 [7:20:06<4:14:47,  3.71s/it] 58%|█████▊    | 5785/9908 [7:20:10<4:16:46,  3.74s/it] 58%|█████▊    | 5786/9908 [7:20:13<4:17:29,  3.75s/it] 58%|█████▊    | 5787/9908 [7:20:17<4:17:50,  3.75s/it] 58%|█████▊    | 5788/9908 [7:20:21<4:12:56,  3.68s/it] 58%|█████▊    | 5789/9908 [7:20:24<4:16:38,  3.74s/it] 58%|█████▊    | 5790/9908 [7:20:28<4:15:48,  3.73s/it] 58%|█████▊    | 5791/9908 [7:20:32<4:19:25,  3.78s/it] 58%|█████▊    | 5792/9908 [7:20:35<4:11:52,  3.67s/it] 58%|█████▊    | 5793/9908 [7:20:40<4:21:21,  3.81s/it] 58%|█████▊    | 5794/9908 [7:20:43<4:15:29,  3.73s/it] 58%|█████▊    | 5795/9908 [7:20:47<4:13:35,  3.70s/it] 58%|█████▊    | 5796/9908 [7:20:50<4:13:12,  3.69s/it] 59%|█████▊    | 5797/9908 [7:20:54<4:10:44,  3.66s/it] 59%|█████▊    | 5798/9908 [7:20:58<4:10:35,  3.66s/it] 59%|█████▊    | 5799/9908 [7:21:02<4:19:21,  3.79s/it]09/20/2024 08:57:36 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.024616040289402008, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.402806043624878, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.427422046661377}
 59%|█████▊    | 5800/9908 [7:21:06<4:21:01,  3.81s/it] 59%|█████▊    | 5801/9908 [7:21:09<4:19:47,  3.80s/it] 59%|█████▊    | 5802/9908 [7:21:13<4:18:54,  3.78s/it] 59%|█████▊    | 5803/9908 [7:21:17<4:17:23,  3.76s/it] 59%|█████▊    | 5804/9908 [7:21:21<4:15:28,  3.74s/it] 59%|█████▊    | 5805/9908 [7:21:24<4:07:48,  3.62s/it] 59%|█████▊    | 5806/9908 [7:21:28<4:06:47,  3.61s/it] 59%|█████▊    | 5807/9908 [7:21:31<4:07:54,  3.63s/it] 59%|█████▊    | 5808/9908 [7:21:35<4:13:03,  3.70s/it] 59%|█████▊    | 5809/9908 [7:21:39<4:16:41,  3.76s/it] 59%|█████▊    | 5810/9908 [7:21:43<4:18:01,  3.78s/it] 59%|█████▊    | 5811/9908 [7:21:47<4:20:40,  3.82s/it] 59%|█████▊    | 5812/9908 [7:21:51<4:23:43,  3.86s/it] 59%|█████▊    | 5813/9908 [7:21:54<4:20:16,  3.81s/it] 59%|█████▊    | 5814/9908 [7:21:58<4:16:47,  3.76s/it] 59%|█████▊    | 5815/9908 [7:22:02<4:14:56,  3.74s/it] 59%|█████▊    | 5816/9908 [7:22:05<4:08:51,  3.65s/it] 59%|█████▊    | 5817/9908 [7:22:09<4:08:53,  3.65s/it] 59%|█████▊    | 5818/9908 [7:22:13<4:14:27,  3.73s/it] 59%|█████▊    | 5819/9908 [7:22:16<4:10:22,  3.67s/it] 59%|█████▊    | 5820/9908 [7:22:20<4:10:24,  3.68s/it] 59%|█████▉    | 5821/9908 [7:22:24<4:13:50,  3.73s/it] 59%|█████▉    | 5822/9908 [7:22:27<4:12:44,  3.71s/it] 59%|█████▉    | 5823/9908 [7:22:31<4:15:05,  3.75s/it] 59%|█████▉    | 5824/9908 [7:22:35<4:08:21,  3.65s/it] 59%|█████▉    | 5825/9908 [7:22:39<4:13:49,  3.73s/it] 59%|█████▉    | 5826/9908 [7:22:42<4:13:16,  3.72s/it] 59%|█████▉    | 5827/9908 [7:22:46<4:16:43,  3.77s/it] 59%|█████▉    | 5828/9908 [7:22:50<4:08:23,  3.65s/it] 59%|█████▉    | 5829/9908 [7:22:54<4:20:16,  3.83s/it] 59%|█████▉    | 5830/9908 [7:22:58<4:17:47,  3.79s/it] 59%|█████▉    | 5831/9908 [7:23:01<4:10:07,  3.68s/it] 59%|█████▉    | 5832/9908 [7:23:05<4:12:46,  3.72s/it] 59%|█████▉    | 5833/9908 [7:23:09<4:21:46,  3.85s/it] 59%|█████▉    | 5834/9908 [7:23:13<4:17:08,  3.79s/it] 59%|█████▉    | 5835/9908 [7:23:16<4:15:10,  3.76s/it] 59%|█████▉    | 5836/9908 [7:23:20<4:12:26,  3.72s/it] 59%|█████▉    | 5837/9908 [7:23:23<4:07:45,  3.65s/it] 59%|█████▉    | 5838/9908 [7:23:27<4:09:08,  3.67s/it] 59%|█████▉    | 5839/9908 [7:23:31<4:11:17,  3.71s/it] 59%|█████▉    | 5840/9908 [7:23:35<4:15:04,  3.76s/it] 59%|█████▉    | 5841/9908 [7:23:38<4:13:30,  3.74s/it] 59%|█████▉    | 5842/9908 [7:23:42<4:17:57,  3.81s/it] 59%|█████▉    | 5843/9908 [7:23:46<4:15:43,  3.77s/it] 59%|█████▉    | 5844/9908 [7:23:50<4:11:25,  3.71s/it] 59%|█████▉    | 5845/9908 [7:23:54<4:18:13,  3.81s/it] 59%|█████▉    | 5846/9908 [7:23:58<4:19:04,  3.83s/it] 59%|█████▉    | 5847/9908 [7:24:01<4:13:53,  3.75s/it] 59%|█████▉    | 5848/9908 [7:24:05<4:12:14,  3.73s/it] 59%|█████▉    | 5849/9908 [7:24:09<4:12:17,  3.73s/it]09/20/2024 09:00:43 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03263852000236511, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.4700394868850708, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.5026780366897583}
 59%|█████▉    | 5850/9908 [7:24:12<4:10:16,  3.70s/it] 59%|█████▉    | 5851/9908 [7:24:16<4:19:36,  3.84s/it] 59%|█████▉    | 5852/9908 [7:24:20<4:14:34,  3.77s/it] 59%|█████▉    | 5853/9908 [7:24:23<4:09:33,  3.69s/it] 59%|█████▉    | 5854/9908 [7:24:27<4:10:59,  3.71s/it] 59%|█████▉    | 5855/9908 [7:24:31<4:02:07,  3.58s/it] 59%|█████▉    | 5856/9908 [7:24:35<4:10:52,  3.71s/it] 59%|█████▉    | 5857/9908 [7:24:38<4:10:24,  3.71s/it] 59%|█████▉    | 5858/9908 [7:24:42<4:09:36,  3.70s/it] 59%|█████▉    | 5859/9908 [7:24:46<4:07:51,  3.67s/it] 59%|█████▉    | 5860/9908 [7:24:49<4:13:03,  3.75s/it] 59%|█████▉    | 5861/9908 [7:24:53<4:10:23,  3.71s/it] 59%|█████▉    | 5862/9908 [7:24:57<4:11:29,  3.73s/it] 59%|█████▉    | 5863/9908 [7:25:01<4:12:19,  3.74s/it] 59%|█████▉    | 5864/9908 [7:25:04<4:07:59,  3.68s/it] 59%|█████▉    | 5865/9908 [7:25:08<4:15:03,  3.79s/it] 59%|█████▉    | 5866/9908 [7:25:12<4:12:32,  3.75s/it] 59%|█████▉    | 5867/9908 [7:25:16<4:12:20,  3.75s/it] 59%|█████▉    | 5868/9908 [7:25:20<4:17:06,  3.82s/it] 59%|█████▉    | 5869/9908 [7:25:23<4:12:17,  3.75s/it] 59%|█████▉    | 5870/9908 [7:25:27<4:07:13,  3.67s/it] 59%|█████▉    | 5871/9908 [7:25:30<4:07:20,  3.68s/it] 59%|█████▉    | 5872/9908 [7:25:34<4:05:23,  3.65s/it] 59%|█████▉    | 5873/9908 [7:25:38<4:07:43,  3.68s/it] 59%|█████▉    | 5874/9908 [7:25:41<4:00:57,  3.58s/it] 59%|█████▉    | 5875/9908 [7:25:45<4:06:31,  3.67s/it] 59%|█████▉    | 5876/9908 [7:25:48<4:03:39,  3.63s/it] 59%|█████▉    | 5877/9908 [7:25:52<4:06:05,  3.66s/it] 59%|█████▉    | 5878/9908 [7:25:56<4:06:01,  3.66s/it] 59%|█████▉    | 5879/9908 [7:26:00<4:12:04,  3.75s/it] 59%|█████▉    | 5880/9908 [7:26:04<4:12:54,  3.77s/it] 59%|█████▉    | 5881/9908 [7:26:07<4:11:13,  3.74s/it] 59%|█████▉    | 5882/9908 [7:26:11<4:12:01,  3.76s/it] 59%|█████▉    | 5883/9908 [7:26:15<4:06:54,  3.68s/it] 59%|█████▉    | 5884/9908 [7:26:18<4:09:28,  3.72s/it] 59%|█████▉    | 5885/9908 [7:26:22<4:10:45,  3.74s/it] 59%|█████▉    | 5886/9908 [7:26:26<4:09:43,  3.73s/it] 59%|█████▉    | 5887/9908 [7:26:29<4:04:55,  3.65s/it] 59%|█████▉    | 5888/9908 [7:26:33<4:01:56,  3.61s/it] 59%|█████▉    | 5889/9908 [7:26:37<4:18:27,  3.86s/it] 59%|█████▉    | 5890/9908 [7:26:41<4:15:20,  3.81s/it] 59%|█████▉    | 5891/9908 [7:26:45<4:10:01,  3.73s/it] 59%|█████▉    | 5892/9908 [7:26:48<4:02:46,  3.63s/it] 59%|█████▉    | 5893/9908 [7:26:52<4:02:58,  3.63s/it] 59%|█████▉    | 5894/9908 [7:26:56<4:15:32,  3.82s/it] 59%|█████▉    | 5895/9908 [7:26:59<4:11:40,  3.76s/it] 60%|█████▉    | 5896/9908 [7:27:03<4:03:04,  3.64s/it] 60%|█████▉    | 5897/9908 [7:27:07<4:06:09,  3.68s/it] 60%|█████▉    | 5898/9908 [7:27:10<4:08:56,  3.72s/it] 60%|█████▉    | 5899/9908 [7:27:14<4:13:15,  3.79s/it]09/20/2024 09:03:49 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03096594475209713, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.154812216758728, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.1857781410217285}
 60%|█████▉    | 5900/9908 [7:27:18<4:08:17,  3.72s/it] 60%|█████▉    | 5901/9908 [7:27:22<4:06:25,  3.69s/it] 60%|█████▉    | 5902/9908 [7:27:25<4:01:57,  3.62s/it] 60%|█████▉    | 5903/9908 [7:27:29<4:00:02,  3.60s/it] 60%|█████▉    | 5904/9908 [7:27:32<4:05:58,  3.69s/it] 60%|█████▉    | 5905/9908 [7:27:36<4:10:01,  3.75s/it] 60%|█████▉    | 5906/9908 [7:27:40<4:12:04,  3.78s/it] 60%|█████▉    | 5907/9908 [7:27:44<4:09:52,  3.75s/it] 60%|█████▉    | 5908/9908 [7:27:48<4:11:16,  3.77s/it] 60%|█████▉    | 5909/9908 [7:27:52<4:13:29,  3.80s/it] 60%|█████▉    | 5910/9908 [7:27:55<4:08:46,  3.73s/it] 60%|█████▉    | 5911/9908 [7:27:59<4:08:07,  3.72s/it] 60%|█████▉    | 5912/9908 [7:28:03<4:09:42,  3.75s/it] 60%|█████▉    | 5913/9908 [7:28:06<4:06:12,  3.70s/it] 60%|█████▉    | 5914/9908 [7:28:10<4:00:51,  3.62s/it] 60%|█████▉    | 5915/9908 [7:28:14<4:08:56,  3.74s/it] 60%|█████▉    | 5916/9908 [7:28:17<4:07:52,  3.73s/it] 60%|█████▉    | 5917/9908 [7:28:21<4:10:34,  3.77s/it] 60%|█████▉    | 5918/9908 [7:28:25<4:06:23,  3.71s/it] 60%|█████▉    | 5919/9908 [7:28:29<4:07:53,  3.73s/it] 60%|█████▉    | 5920/9908 [7:28:32<4:05:51,  3.70s/it] 60%|█████▉    | 5921/9908 [7:28:36<4:07:51,  3.73s/it] 60%|█████▉    | 5922/9908 [7:28:40<4:12:42,  3.80s/it] 60%|█████▉    | 5923/9908 [7:28:44<4:09:30,  3.76s/it] 60%|█████▉    | 5924/9908 [7:28:47<4:04:15,  3.68s/it] 60%|█████▉    | 5925/9908 [7:28:51<4:04:11,  3.68s/it] 60%|█████▉    | 5926/9908 [7:28:55<4:04:40,  3.69s/it] 60%|█████▉    | 5927/9908 [7:28:58<4:02:41,  3.66s/it] 60%|█████▉    | 5928/9908 [7:29:01<3:56:49,  3.57s/it] 60%|█████▉    | 5929/9908 [7:29:05<4:03:38,  3.67s/it] 60%|█████▉    | 5930/9908 [7:29:09<4:06:30,  3.72s/it] 60%|█████▉    | 5931/9908 [7:29:13<4:06:20,  3.72s/it] 60%|█████▉    | 5932/9908 [7:29:17<4:03:48,  3.68s/it] 60%|█████▉    | 5933/9908 [7:29:20<4:01:29,  3.65s/it] 60%|█████▉    | 5934/9908 [7:29:24<4:00:46,  3.64s/it] 60%|█████▉    | 5935/9908 [7:29:27<4:01:07,  3.64s/it] 60%|█████▉    | 5936/9908 [7:29:31<4:08:39,  3.76s/it] 60%|█████▉    | 5937/9908 [7:29:35<4:08:53,  3.76s/it] 60%|█████▉    | 5938/9908 [7:29:39<4:11:22,  3.80s/it] 60%|█████▉    | 5939/9908 [7:29:42<4:04:24,  3.69s/it] 60%|█████▉    | 5940/9908 [7:29:46<4:06:10,  3.72s/it] 60%|█████▉    | 5941/9908 [7:29:50<4:04:36,  3.70s/it] 60%|█████▉    | 5942/9908 [7:29:53<4:01:56,  3.66s/it] 60%|█████▉    | 5943/9908 [7:29:58<4:12:54,  3.83s/it] 60%|█████▉    | 5944/9908 [7:30:02<4:12:53,  3.83s/it] 60%|██████    | 5945/9908 [7:30:05<4:09:21,  3.78s/it] 60%|██████    | 5946/9908 [7:30:09<4:05:42,  3.72s/it] 60%|██████    | 5947/9908 [7:30:13<4:14:32,  3.86s/it] 60%|██████    | 5948/9908 [7:30:17<4:13:55,  3.85s/it] 60%|██████    | 5949/9908 [7:30:21<4:12:21,  3.82s/it]09/20/2024 09:06:55 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.012274459935724735, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.0746355056762695, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.0869100093841553}
 60%|██████    | 5950/9908 [7:30:24<4:14:43,  3.86s/it] 60%|██████    | 5951/9908 [7:30:28<4:01:50,  3.67s/it] 60%|██████    | 5952/9908 [7:30:31<3:59:49,  3.64s/it] 60%|██████    | 5953/9908 [7:30:35<4:04:08,  3.70s/it] 60%|██████    | 5954/9908 [7:30:39<4:00:58,  3.66s/it] 60%|██████    | 5955/9908 [7:30:42<4:02:40,  3.68s/it] 60%|██████    | 5956/9908 [7:30:46<4:03:45,  3.70s/it] 60%|██████    | 5957/9908 [7:30:50<4:05:16,  3.72s/it] 60%|██████    | 5958/9908 [7:30:53<3:59:34,  3.64s/it] 60%|██████    | 5959/9908 [7:30:57<4:00:56,  3.66s/it] 60%|██████    | 5960/9908 [7:31:01<4:04:34,  3.72s/it] 60%|██████    | 5961/9908 [7:31:05<4:01:20,  3.67s/it] 60%|██████    | 5962/9908 [7:31:08<3:57:08,  3.61s/it] 60%|██████    | 5963/9908 [7:31:12<4:03:42,  3.71s/it] 60%|██████    | 5964/9908 [7:31:16<4:03:37,  3.71s/it] 60%|██████    | 5965/9908 [7:31:19<3:59:02,  3.64s/it] 60%|██████    | 5966/9908 [7:31:23<3:56:26,  3.60s/it] 60%|██████    | 5967/9908 [7:31:27<4:04:36,  3.72s/it] 60%|██████    | 5968/9908 [7:31:30<4:03:58,  3.72s/it] 60%|██████    | 5969/9908 [7:31:34<4:02:52,  3.70s/it] 60%|██████    | 5970/9908 [7:31:38<4:10:09,  3.81s/it] 60%|██████    | 5971/9908 [7:31:42<4:05:48,  3.75s/it] 60%|██████    | 5972/9908 [7:31:46<4:11:02,  3.83s/it] 60%|██████    | 5973/9908 [7:31:49<4:10:47,  3.82s/it] 60%|██████    | 5974/9908 [7:31:53<4:08:05,  3.78s/it] 60%|██████    | 5975/9908 [7:31:57<4:05:14,  3.74s/it] 60%|██████    | 5976/9908 [7:32:00<4:02:28,  3.70s/it] 60%|██████    | 5977/9908 [7:32:04<3:58:06,  3.63s/it] 60%|██████    | 5978/9908 [7:32:08<4:06:03,  3.76s/it] 60%|██████    | 5979/9908 [7:32:11<3:59:44,  3.66s/it] 60%|██████    | 5980/9908 [7:32:15<4:03:20,  3.72s/it] 60%|██████    | 5981/9908 [7:32:19<4:04:02,  3.73s/it] 60%|██████    | 5982/9908 [7:32:22<3:56:00,  3.61s/it] 60%|██████    | 5983/9908 [7:32:26<3:59:35,  3.66s/it] 60%|██████    | 5984/9908 [7:32:30<3:55:30,  3.60s/it] 60%|██████    | 5985/9908 [7:32:33<3:55:10,  3.60s/it] 60%|██████    | 5986/9908 [7:32:37<3:56:48,  3.62s/it] 60%|██████    | 5987/9908 [7:32:40<3:55:08,  3.60s/it] 60%|██████    | 5988/9908 [7:32:44<3:57:33,  3.64s/it] 60%|██████    | 5989/9908 [7:32:48<3:55:03,  3.60s/it] 60%|██████    | 5990/9908 [7:32:51<3:58:09,  3.65s/it] 60%|██████    | 5991/9908 [7:32:55<4:06:47,  3.78s/it] 60%|██████    | 5992/9908 [7:32:59<4:02:01,  3.71s/it] 60%|██████    | 5993/9908 [7:33:03<4:07:39,  3.80s/it] 60%|██████    | 5994/9908 [7:33:06<3:59:23,  3.67s/it] 61%|██████    | 5995/9908 [7:33:10<3:56:39,  3.63s/it] 61%|██████    | 5996/9908 [7:33:14<4:00:24,  3.69s/it] 61%|██████    | 5997/9908 [7:33:18<4:05:37,  3.77s/it] 61%|██████    | 5998/9908 [7:33:21<4:03:08,  3.73s/it] 61%|██████    | 5999/9908 [7:33:25<4:05:09,  3.76s/it]09/20/2024 09:09:59 - INFO - __main__ -   evaluate on ret%tvas--msrvtt_ret task
09/20/2024 09:09:59 - INFO - __main__ -   start running ret%tvas validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:01<05:50,  1.60s/it][A
  1%|          | 2/221 [00:01<03:11,  1.14it/s][A
  1%|▏         | 3/221 [00:02<02:25,  1.50it/s][A
  2%|▏         | 4/221 [00:02<01:45,  2.05it/s][A
  3%|▎         | 6/221 [00:02<00:59,  3.62it/s][A
  3%|▎         | 7/221 [00:03<00:58,  3.69it/s][A
  4%|▎         | 8/221 [00:03<01:02,  3.42it/s][A
  4%|▍         | 9/221 [00:03<01:06,  3.17it/s][A
  5%|▍         | 10/221 [00:04<01:02,  3.38it/s][A
  5%|▌         | 12/221 [00:11<06:13,  1.79s/it][A
  6%|▌         | 13/221 [00:11<04:53,  1.41s/it][A
  7%|▋         | 15/221 [00:11<03:12,  1.07it/s][A
  7%|▋         | 16/221 [00:12<02:52,  1.19it/s][A
  8%|▊         | 17/221 [00:13<03:00,  1.13it/s][A
  8%|▊         | 18/221 [00:13<02:26,  1.39it/s][A
  9%|▊         | 19/221 [00:15<03:42,  1.10s/it][A
  9%|▉         | 20/221 [00:15<02:47,  1.20it/s][A
 10%|▉         | 21/221 [00:16<02:13,  1.50it/s][A
 10%|▉         | 22/221 [00:16<02:10,  1.53it/s][A
 10%|█         | 23/221 [00:17<01:39,  1.99it/s][A
 11%|█         | 24/221 [00:17<01:19,  2.47it/s][A
 11%|█▏        | 25/221 [00:17<01:08,  2.87it/s][A
 12%|█▏        | 26/221 [00:17<01:05,  2.99it/s][A
 12%|█▏        | 27/221 [00:17<00:53,  3.66it/s][A
 13%|█▎        | 28/221 [00:18<01:03,  3.05it/s][A
 13%|█▎        | 29/221 [00:18<00:57,  3.34it/s][A
 14%|█▎        | 30/221 [00:19<01:16,  2.50it/s][A
 14%|█▍        | 31/221 [00:19<01:15,  2.50it/s][A
 14%|█▍        | 32/221 [00:19<01:00,  3.14it/s][A
 15%|█▍        | 33/221 [00:20<01:02,  2.99it/s][A
 16%|█▌        | 35/221 [00:20<00:47,  3.91it/s][A
 16%|█▋        | 36/221 [00:20<00:46,  4.01it/s][A
 17%|█▋        | 37/221 [00:21<01:05,  2.80it/s][A
 17%|█▋        | 38/221 [00:21<01:16,  2.41it/s][A
 18%|█▊        | 39/221 [00:22<01:04,  2.81it/s][A
 18%|█▊        | 40/221 [00:22<01:12,  2.50it/s][A
 19%|█▊        | 41/221 [00:22<01:00,  2.99it/s][A
 19%|█▉        | 43/221 [00:22<00:40,  4.35it/s][A
 20%|█▉        | 44/221 [00:23<00:35,  4.98it/s][A
 20%|██        | 45/221 [00:28<04:15,  1.45s/it][A
 21%|██        | 46/221 [00:28<03:16,  1.12s/it][A
 21%|██▏       | 47/221 [00:28<02:43,  1.07it/s][A
 22%|██▏       | 48/221 [00:28<02:01,  1.42it/s][A
 22%|██▏       | 49/221 [00:29<01:43,  1.66it/s][A
 23%|██▎       | 50/221 [00:29<01:33,  1.82it/s][A
 23%|██▎       | 51/221 [00:29<01:15,  2.24it/s][A
 24%|██▎       | 52/221 [00:29<01:00,  2.81it/s][A
 24%|██▍       | 53/221 [00:30<00:53,  3.13it/s][A
 24%|██▍       | 54/221 [00:31<01:19,  2.09it/s][A
 25%|██▍       | 55/221 [00:32<02:08,  1.29it/s][A
 25%|██▌       | 56/221 [00:32<01:39,  1.65it/s][A
 26%|██▌       | 57/221 [00:32<01:17,  2.12it/s][A
 27%|██▋       | 59/221 [00:33<00:50,  3.23it/s][A
 27%|██▋       | 60/221 [00:33<00:55,  2.91it/s][A
 28%|██▊       | 61/221 [00:33<00:50,  3.16it/s][A
 28%|██▊       | 62/221 [00:34<00:50,  3.12it/s][A
 29%|██▊       | 63/221 [00:34<00:45,  3.45it/s][A
 29%|██▉       | 64/221 [00:35<01:11,  2.18it/s][A
 29%|██▉       | 65/221 [00:35<00:58,  2.68it/s][A
 30%|██▉       | 66/221 [00:35<01:04,  2.39it/s][A
 30%|███       | 67/221 [00:36<00:57,  2.69it/s][A
 31%|███       | 68/221 [00:36<00:45,  3.34it/s][A
 31%|███       | 69/221 [00:38<01:49,  1.39it/s][A
 32%|███▏      | 70/221 [00:38<01:21,  1.85it/s][A
 32%|███▏      | 71/221 [00:38<01:11,  2.10it/s][A
 33%|███▎      | 72/221 [00:39<01:22,  1.82it/s][A
 33%|███▎      | 73/221 [00:39<01:24,  1.75it/s][A
 33%|███▎      | 74/221 [00:39<01:03,  2.31it/s][A
 34%|███▍      | 75/221 [00:40<00:58,  2.51it/s][A
 34%|███▍      | 76/221 [00:40<00:53,  2.70it/s][A
 35%|███▍      | 77/221 [00:43<02:31,  1.05s/it][A
 35%|███▌      | 78/221 [00:43<01:52,  1.27it/s][A
 36%|███▌      | 79/221 [00:44<02:09,  1.09it/s][A
 36%|███▌      | 80/221 [00:44<01:35,  1.47it/s][A
 37%|███▋      | 81/221 [00:45<01:32,  1.51it/s][A
 37%|███▋      | 82/221 [00:48<03:02,  1.31s/it][A
 38%|███▊      | 83/221 [00:48<02:33,  1.11s/it][A
 38%|███▊      | 84/221 [00:49<01:53,  1.21it/s][A
 39%|███▉      | 86/221 [00:49<01:14,  1.82it/s][A
 39%|███▉      | 87/221 [00:50<01:16,  1.76it/s][A
 40%|███▉      | 88/221 [00:50<01:04,  2.06it/s][A
 40%|████      | 89/221 [00:50<00:59,  2.22it/s][A
 41%|████      | 90/221 [00:50<00:51,  2.52it/s][A
 42%|████▏     | 92/221 [00:51<00:35,  3.62it/s][A
 42%|████▏     | 93/221 [00:51<00:37,  3.44it/s][A
 43%|████▎     | 94/221 [00:52<00:46,  2.74it/s][A
 43%|████▎     | 95/221 [00:52<00:45,  2.76it/s][A
 43%|████▎     | 96/221 [00:53<00:56,  2.20it/s][A
 44%|████▍     | 97/221 [00:53<00:44,  2.76it/s][A
 44%|████▍     | 98/221 [00:53<00:49,  2.50it/s][A
 45%|████▍     | 99/221 [00:54<00:43,  2.83it/s][A
 45%|████▌     | 100/221 [00:54<01:03,  1.91it/s][A
 46%|████▌     | 101/221 [00:55<00:50,  2.38it/s][A
 46%|████▌     | 102/221 [00:56<01:14,  1.59it/s][A
 47%|████▋     | 103/221 [00:56<00:55,  2.12it/s][A
 47%|████▋     | 104/221 [00:56<00:50,  2.30it/s][A
 48%|████▊     | 105/221 [00:57<00:50,  2.31it/s][A
 48%|████▊     | 106/221 [00:59<01:57,  1.02s/it][A
 48%|████▊     | 107/221 [00:59<01:32,  1.24it/s][A
 49%|████▉     | 108/221 [01:00<01:20,  1.40it/s][A
 49%|████▉     | 109/221 [01:00<01:10,  1.58it/s][A
 50%|█████     | 111/221 [01:01<00:50,  2.18it/s][A
 51%|█████     | 112/221 [01:01<00:46,  2.33it/s][A
 51%|█████     | 113/221 [01:01<00:39,  2.76it/s][A
 52%|█████▏    | 114/221 [01:01<00:31,  3.43it/s][A
 52%|█████▏    | 115/221 [01:02<00:41,  2.55it/s][A
 52%|█████▏    | 116/221 [01:02<00:39,  2.69it/s][A
 53%|█████▎    | 117/221 [01:03<00:39,  2.63it/s][A
 53%|█████▎    | 118/221 [01:03<00:39,  2.61it/s][A
 54%|█████▍    | 119/221 [01:03<00:32,  3.13it/s][A
 54%|█████▍    | 120/221 [01:03<00:26,  3.76it/s][A
 55%|█████▍    | 121/221 [01:04<00:31,  3.16it/s][A
 55%|█████▌    | 122/221 [01:04<00:33,  2.93it/s][A
 56%|█████▌    | 123/221 [01:06<01:00,  1.63it/s][A
 56%|█████▌    | 124/221 [01:06<00:47,  2.05it/s][A
 57%|█████▋    | 125/221 [01:07<00:56,  1.69it/s][A
 57%|█████▋    | 126/221 [01:15<04:46,  3.02s/it][A
 57%|█████▋    | 127/221 [01:16<03:32,  2.26s/it][A
 58%|█████▊    | 128/221 [01:16<02:39,  1.71s/it][A
 58%|█████▊    | 129/221 [01:17<02:02,  1.33s/it][A
 59%|█████▉    | 130/221 [01:17<01:32,  1.02s/it][A
 59%|█████▉    | 131/221 [01:18<01:27,  1.03it/s][A
 60%|█████▉    | 132/221 [01:19<01:40,  1.13s/it][A
 60%|██████    | 133/221 [01:20<01:28,  1.01s/it][A
 61%|██████    | 134/221 [01:21<01:30,  1.04s/it][A
 61%|██████    | 135/221 [01:22<01:21,  1.06it/s][A
 62%|██████▏   | 136/221 [01:22<01:04,  1.31it/s][A
 62%|██████▏   | 137/221 [01:23<00:54,  1.55it/s][A
 62%|██████▏   | 138/221 [01:23<00:51,  1.60it/s][A
 63%|██████▎   | 139/221 [01:23<00:40,  2.02it/s][A
 63%|██████▎   | 140/221 [01:24<00:41,  1.94it/s][A
 64%|██████▍   | 141/221 [01:24<00:36,  2.20it/s][A
 64%|██████▍   | 142/221 [01:25<00:33,  2.37it/s][A
 65%|██████▍   | 143/221 [01:25<00:31,  2.51it/s][A
 65%|██████▌   | 144/221 [01:25<00:26,  2.91it/s][A
 66%|██████▌   | 145/221 [01:25<00:20,  3.69it/s][A
 66%|██████▌   | 146/221 [01:25<00:16,  4.52it/s][A
 67%|██████▋   | 147/221 [01:25<00:13,  5.31it/s][A
 67%|██████▋   | 148/221 [01:27<00:35,  2.05it/s][A
 67%|██████▋   | 149/221 [01:27<00:29,  2.47it/s][A
 68%|██████▊   | 150/221 [01:27<00:30,  2.35it/s][A
 68%|██████▊   | 151/221 [01:28<00:26,  2.67it/s][A
 69%|██████▉   | 152/221 [01:28<00:25,  2.69it/s][A
 69%|██████▉   | 153/221 [01:28<00:20,  3.34it/s][A
 70%|██████▉   | 154/221 [01:28<00:18,  3.70it/s][A
 70%|███████   | 155/221 [01:28<00:16,  4.00it/s][A
 71%|███████   | 156/221 [01:29<00:15,  4.18it/s][A
 71%|███████   | 157/221 [01:36<02:21,  2.22s/it][A
 71%|███████▏  | 158/221 [01:37<01:56,  1.86s/it][A
 72%|███████▏  | 159/221 [01:37<01:24,  1.37s/it][A
 72%|███████▏  | 160/221 [01:37<01:01,  1.01s/it][A
 73%|███████▎  | 161/221 [01:37<00:44,  1.36it/s][A
 74%|███████▍  | 163/221 [01:37<00:28,  2.07it/s][A
 74%|███████▍  | 164/221 [01:38<00:23,  2.43it/s][A
 75%|███████▍  | 165/221 [01:38<00:22,  2.52it/s][A
 75%|███████▌  | 166/221 [01:39<00:25,  2.19it/s][A
 76%|███████▌  | 167/221 [01:39<00:21,  2.53it/s][A
 76%|███████▌  | 168/221 [01:43<01:15,  1.42s/it][A
 76%|███████▋  | 169/221 [01:43<00:58,  1.13s/it][A
 77%|███████▋  | 170/221 [01:44<00:47,  1.08it/s][A
 77%|███████▋  | 171/221 [01:44<00:38,  1.30it/s][A
 78%|███████▊  | 172/221 [01:44<00:30,  1.63it/s][A
 78%|███████▊  | 173/221 [01:45<00:26,  1.83it/s][A
 79%|███████▊  | 174/221 [01:45<00:20,  2.26it/s][A
 79%|███████▉  | 175/221 [01:45<00:17,  2.60it/s][A
 80%|███████▉  | 176/221 [01:45<00:15,  2.93it/s][A
 80%|████████  | 177/221 [01:46<00:13,  3.22it/s][A
 81%|████████  | 178/221 [01:46<00:12,  3.42it/s][A
 81%|████████  | 179/221 [01:46<00:12,  3.43it/s][A
 81%|████████▏ | 180/221 [01:46<00:11,  3.66it/s][A
 82%|████████▏ | 181/221 [01:47<00:10,  3.96it/s][A
 82%|████████▏ | 182/221 [01:47<00:12,  3.22it/s][A
 83%|████████▎ | 183/221 [01:48<00:16,  2.31it/s][A
 83%|████████▎ | 184/221 [01:48<00:14,  2.51it/s][A
 84%|████████▎ | 185/221 [01:48<00:12,  2.85it/s][A
 84%|████████▍ | 186/221 [01:48<00:10,  3.31it/s][A
 85%|████████▍ | 187/221 [01:49<00:09,  3.53it/s][A
 85%|████████▌ | 188/221 [01:49<00:09,  3.66it/s][A
 86%|████████▌ | 189/221 [01:49<00:09,  3.52it/s][A
 86%|████████▌ | 190/221 [01:50<00:10,  2.93it/s][A
 86%|████████▋ | 191/221 [01:50<00:09,  3.30it/s][A
 87%|████████▋ | 192/221 [01:50<00:09,  2.92it/s][A
 87%|████████▋ | 193/221 [01:51<00:08,  3.49it/s][A
 88%|████████▊ | 194/221 [01:51<00:10,  2.56it/s][A
 88%|████████▊ | 195/221 [01:51<00:08,  3.12it/s][A
 89%|████████▊ | 196/221 [01:52<00:07,  3.29it/s][A
 89%|████████▉ | 197/221 [01:52<00:07,  3.23it/s][A
 90%|████████▉ | 198/221 [01:52<00:06,  3.40it/s][A
 90%|█████████ | 199/221 [01:52<00:05,  4.00it/s][A
 90%|█████████ | 200/221 [01:53<00:08,  2.45it/s][A
 91%|█████████ | 201/221 [01:54<00:09,  2.20it/s][A
 91%|█████████▏| 202/221 [01:54<00:07,  2.56it/s][A
 92%|█████████▏| 203/221 [01:55<00:09,  1.87it/s][A
 92%|█████████▏| 204/221 [01:55<00:08,  2.04it/s][A
 93%|█████████▎| 206/221 [01:56<00:05,  2.89it/s][A
 94%|█████████▎| 207/221 [01:56<00:03,  3.50it/s][A
 94%|█████████▍| 208/221 [01:56<00:03,  3.32it/s][A
 95%|█████████▌| 210/221 [01:56<00:02,  3.89it/s][A
 95%|█████████▌| 211/221 [01:57<00:03,  2.95it/s][A
 96%|█████████▌| 212/221 [01:57<00:02,  3.16it/s][A
 96%|█████████▋| 213/221 [01:57<00:02,  3.71it/s][A
 97%|█████████▋| 214/221 [01:58<00:02,  3.17it/s][A
 97%|█████████▋| 215/221 [01:58<00:02,  2.60it/s][A
 98%|█████████▊| 216/221 [01:59<00:01,  2.64it/s][A
 98%|█████████▊| 217/221 [02:01<00:04,  1.04s/it][A
 99%|█████████▊| 218/221 [02:02<00:02,  1.18it/s][A
 99%|█████████▉| 219/221 [02:02<00:01,  1.53it/s][A
100%|█████████▉| 220/221 [02:06<00:01,  1.56s/it][A
100%|██████████| 221/221 [02:06<00:00,  1.14s/it][A100%|██████████| 221/221 [02:06<00:00,  1.75it/s]

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:00<01:56,  1.89it/s][A
  1%|          | 2/221 [00:01<01:55,  1.89it/s][A
  1%|▏         | 3/221 [00:01<01:55,  1.89it/s][A
  2%|▏         | 4/221 [00:02<01:54,  1.89it/s][A
  2%|▏         | 5/221 [00:02<01:54,  1.89it/s][A
  3%|▎         | 6/221 [00:03<01:53,  1.89it/s][A
  3%|▎         | 7/221 [00:03<01:53,  1.89it/s][A
  4%|▎         | 8/221 [00:04<01:52,  1.89it/s][A
  4%|▍         | 9/221 [00:04<01:52,  1.89it/s][A
  5%|▍         | 10/221 [00:05<01:51,  1.89it/s][A
  5%|▍         | 11/221 [00:05<01:50,  1.89it/s][A
  5%|▌         | 12/221 [00:06<01:50,  1.89it/s][A
  6%|▌         | 13/221 [00:06<01:49,  1.89it/s][A
  6%|▋         | 14/221 [00:07<01:49,  1.89it/s][A
  7%|▋         | 15/221 [00:07<01:48,  1.89it/s][A
  7%|▋         | 16/221 [00:08<01:48,  1.89it/s][A
  8%|▊         | 17/221 [00:08<01:47,  1.89it/s][A
  8%|▊         | 18/221 [00:09<01:47,  1.89it/s][A
  9%|▊         | 19/221 [00:10<01:46,  1.89it/s][A
  9%|▉         | 20/221 [00:10<01:46,  1.89it/s][A
 10%|▉         | 21/221 [00:11<01:45,  1.89it/s][A
 10%|▉         | 22/221 [00:11<01:45,  1.89it/s][A
 10%|█         | 23/221 [00:12<01:44,  1.89it/s][A
 11%|█         | 24/221 [00:12<01:44,  1.89it/s][A
 11%|█▏        | 25/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 26/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 27/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 28/221 [00:14<01:41,  1.89it/s][A
 13%|█▎        | 29/221 [00:15<01:41,  1.89it/s][A
 14%|█▎        | 30/221 [00:15<01:40,  1.89it/s][A
 14%|█▍        | 31/221 [00:16<01:40,  1.89it/s][A
 14%|█▍        | 32/221 [00:16<01:39,  1.89it/s][A
 15%|█▍        | 33/221 [00:17<01:39,  1.89it/s][A
 15%|█▌        | 34/221 [00:17<01:38,  1.89it/s][A
 16%|█▌        | 35/221 [00:18<01:38,  1.89it/s][A
 16%|█▋        | 36/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 37/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 38/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 39/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 40/221 [00:21<01:35,  1.89it/s][A
 19%|█▊        | 41/221 [00:21<01:35,  1.89it/s][A
 19%|█▉        | 42/221 [00:22<01:34,  1.89it/s][A
 19%|█▉        | 43/221 [00:22<01:34,  1.89it/s][A
 20%|█▉        | 44/221 [00:23<01:33,  1.89it/s][A
 20%|██        | 45/221 [00:23<01:33,  1.89it/s][A
 21%|██        | 46/221 [00:24<01:32,  1.89it/s][A
 21%|██▏       | 47/221 [00:24<01:31,  1.89it/s][A
 22%|██▏       | 48/221 [00:25<01:31,  1.89it/s][A
 22%|██▏       | 49/221 [00:25<01:30,  1.89it/s][A
 23%|██▎       | 50/221 [00:26<01:30,  1.89it/s][A
 23%|██▎       | 51/221 [00:26<01:29,  1.89it/s][A
 24%|██▎       | 52/221 [00:27<01:29,  1.89it/s][A
 24%|██▍       | 53/221 [00:28<01:28,  1.89it/s][A
 24%|██▍       | 54/221 [00:28<01:28,  1.89it/s][A
 25%|██▍       | 55/221 [00:29<01:27,  1.89it/s][A
 25%|██▌       | 56/221 [00:29<01:27,  1.89it/s][A
 26%|██▌       | 57/221 [00:30<01:26,  1.89it/s][A
 26%|██▌       | 58/221 [00:30<01:26,  1.89it/s][A
 27%|██▋       | 59/221 [00:31<01:25,  1.89it/s][A
 27%|██▋       | 60/221 [00:31<01:25,  1.89it/s][A
 28%|██▊       | 61/221 [00:32<01:24,  1.89it/s][A
 28%|██▊       | 62/221 [00:32<01:24,  1.89it/s][A
 29%|██▊       | 63/221 [00:33<01:23,  1.89it/s][A
 29%|██▉       | 64/221 [00:33<01:22,  1.89it/s][A
 29%|██▉       | 65/221 [00:34<01:22,  1.89it/s][A
 30%|██▉       | 66/221 [00:34<01:21,  1.89it/s][A
 30%|███       | 67/221 [00:35<01:21,  1.89it/s][A
 31%|███       | 68/221 [00:35<01:20,  1.89it/s][A
 31%|███       | 69/221 [00:36<01:20,  1.89it/s][A
 32%|███▏      | 70/221 [00:36<01:19,  1.89it/s][A
 32%|███▏      | 71/221 [00:37<01:19,  1.89it/s][A
 33%|███▎      | 72/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 73/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 74/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 75/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 76/221 [00:40<01:16,  1.89it/s][A
 35%|███▍      | 77/221 [00:40<01:16,  1.89it/s][A
 35%|███▌      | 78/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 79/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 80/221 [00:42<01:14,  1.89it/s][A
 37%|███▋      | 81/221 [00:42<01:13,  1.89it/s][A
 37%|███▋      | 82/221 [00:43<01:13,  1.89it/s][A
 38%|███▊      | 83/221 [00:43<01:12,  1.89it/s][A
 38%|███▊      | 84/221 [00:44<01:12,  1.89it/s][A
 38%|███▊      | 85/221 [00:44<01:11,  1.89it/s][A
 39%|███▉      | 86/221 [00:45<01:11,  1.89it/s][A
 39%|███▉      | 87/221 [00:45<01:10,  1.89it/s][A
 40%|███▉      | 88/221 [00:46<01:10,  1.89it/s][A
 40%|████      | 89/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 90/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 91/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 92/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 93/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 94/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 95/221 [00:50<01:06,  1.89it/s][A
 43%|████▎     | 96/221 [00:50<01:06,  1.89it/s][A
 44%|████▍     | 97/221 [00:51<01:05,  1.89it/s][A
 44%|████▍     | 98/221 [00:51<01:04,  1.89it/s][A
 45%|████▍     | 99/221 [00:52<01:04,  1.89it/s][A
 45%|████▌     | 100/221 [00:52<01:03,  1.89it/s][A
 46%|████▌     | 101/221 [00:53<01:03,  1.89it/s][A
 46%|████▌     | 102/221 [00:53<01:02,  1.89it/s][A
 47%|████▋     | 103/221 [00:54<01:02,  1.89it/s][A
 47%|████▋     | 104/221 [00:54<01:01,  1.89it/s][A
 48%|████▊     | 105/221 [00:55<01:01,  1.89it/s][A
 48%|████▊     | 106/221 [00:56<01:00,  1.89it/s][A
 48%|████▊     | 107/221 [00:56<01:00,  1.89it/s][A
 49%|████▉     | 108/221 [00:57<00:59,  1.89it/s][A
 49%|████▉     | 109/221 [00:57<00:59,  1.89it/s][A
 50%|████▉     | 110/221 [00:58<00:58,  1.89it/s][A
 50%|█████     | 111/221 [00:58<00:58,  1.89it/s][A
 51%|█████     | 112/221 [00:59<00:57,  1.89it/s][A
 51%|█████     | 113/221 [00:59<00:57,  1.89it/s][A
 52%|█████▏    | 114/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 115/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 116/221 [01:01<00:55,  1.89it/s][A
 53%|█████▎    | 117/221 [01:01<00:54,  1.89it/s][A
 53%|█████▎    | 118/221 [01:02<00:54,  1.89it/s][A
 54%|█████▍    | 119/221 [01:02<00:53,  1.89it/s][A
 54%|█████▍    | 120/221 [01:03<00:53,  1.89it/s][A
 55%|█████▍    | 121/221 [01:03<00:52,  1.89it/s][A
 55%|█████▌    | 122/221 [01:04<00:52,  1.89it/s][A
 56%|█████▌    | 123/221 [01:05<00:51,  1.89it/s][A
 56%|█████▌    | 124/221 [01:05<00:51,  1.89it/s][A
 57%|█████▋    | 125/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 126/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 127/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 128/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 129/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 130/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 131/221 [01:09<00:47,  1.89it/s][A
 60%|█████▉    | 132/221 [01:09<00:47,  1.89it/s][A
 60%|██████    | 133/221 [01:10<00:46,  1.89it/s][A
 61%|██████    | 134/221 [01:10<00:45,  1.89it/s][A
 61%|██████    | 135/221 [01:11<00:45,  1.89it/s][A
 62%|██████▏   | 136/221 [01:11<00:44,  1.89it/s][A
 62%|██████▏   | 137/221 [01:12<00:44,  1.89it/s][A
 62%|██████▏   | 138/221 [01:12<00:43,  1.89it/s][A
 63%|██████▎   | 139/221 [01:13<00:43,  1.89it/s][A
 63%|██████▎   | 140/221 [01:13<00:42,  1.89it/s][A
 64%|██████▍   | 141/221 [01:14<00:42,  1.89it/s][A
 64%|██████▍   | 142/221 [01:15<00:41,  1.89it/s][A
 65%|██████▍   | 143/221 [01:15<00:41,  1.89it/s][A
 65%|██████▌   | 144/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 145/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 146/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 147/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 148/221 [01:18<00:38,  1.89it/s][A
 67%|██████▋   | 149/221 [01:18<00:38,  1.89it/s][A
 68%|██████▊   | 150/221 [01:19<00:37,  1.89it/s][A
 68%|██████▊   | 151/221 [01:19<00:36,  1.89it/s][A
 69%|██████▉   | 152/221 [01:20<00:36,  1.89it/s][A
 69%|██████▉   | 153/221 [01:20<00:35,  1.89it/s][A
 70%|██████▉   | 154/221 [01:21<00:35,  1.89it/s][A
 70%|███████   | 155/221 [01:21<00:34,  1.89it/s][A
 71%|███████   | 156/221 [01:22<00:34,  1.89it/s][A
 71%|███████   | 157/221 [01:22<00:33,  1.89it/s][A
 71%|███████▏  | 158/221 [01:23<00:33,  1.89it/s][A
 72%|███████▏  | 159/221 [01:24<00:32,  1.89it/s][A
 72%|███████▏  | 160/221 [01:24<00:32,  1.89it/s][A
 73%|███████▎  | 161/221 [01:25<00:31,  1.89it/s][A
 73%|███████▎  | 162/221 [01:25<00:31,  1.89it/s][A
 74%|███████▍  | 163/221 [01:26<00:30,  1.89it/s][A
 74%|███████▍  | 164/221 [01:26<00:30,  1.89it/s][A
 75%|███████▍  | 165/221 [01:27<00:29,  1.89it/s][A
 75%|███████▌  | 166/221 [01:27<00:29,  1.89it/s][A
 76%|███████▌  | 167/221 [01:28<00:28,  1.89it/s][A
 76%|███████▌  | 168/221 [01:28<00:28,  1.89it/s][A
 76%|███████▋  | 169/221 [01:29<00:27,  1.89it/s][A
 77%|███████▋  | 170/221 [01:29<00:26,  1.89it/s][A
 77%|███████▋  | 171/221 [01:30<00:26,  1.89it/s][A
 78%|███████▊  | 172/221 [01:30<00:25,  1.89it/s][A
 78%|███████▊  | 173/221 [01:31<00:25,  1.89it/s][A
 79%|███████▊  | 174/221 [01:31<00:24,  1.89it/s][A
 79%|███████▉  | 175/221 [01:32<00:24,  1.89it/s][A
 80%|███████▉  | 176/221 [01:33<00:23,  1.89it/s][A
 80%|████████  | 177/221 [01:33<00:23,  1.89it/s][A
 81%|████████  | 178/221 [01:34<00:22,  1.89it/s][A
 81%|████████  | 179/221 [01:34<00:22,  1.89it/s][A
 81%|████████▏ | 180/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 181/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 182/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 183/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 184/221 [01:37<00:19,  1.89it/s][A
 84%|████████▎ | 185/221 [01:37<00:19,  1.89it/s][A
 84%|████████▍ | 186/221 [01:38<00:18,  1.89it/s][A
 85%|████████▍ | 187/221 [01:38<00:17,  1.89it/s][A
 85%|████████▌ | 188/221 [01:39<00:17,  1.89it/s][A
 86%|████████▌ | 189/221 [01:39<00:16,  1.89it/s][A
 86%|████████▌ | 190/221 [01:40<00:16,  1.89it/s][A
 86%|████████▋ | 191/221 [01:40<00:15,  1.89it/s][A
 87%|████████▋ | 192/221 [01:41<00:15,  1.89it/s][A
 87%|████████▋ | 193/221 [01:41<00:14,  1.89it/s][A
 88%|████████▊ | 194/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 195/221 [01:43<00:13,  1.89it/s][A
 89%|████████▊ | 196/221 [01:43<00:13,  1.89it/s][A
 89%|████████▉ | 197/221 [01:44<00:12,  1.89it/s][A
 90%|████████▉ | 198/221 [01:44<00:12,  1.89it/s][A
 90%|█████████ | 199/221 [01:45<00:11,  1.89it/s][A
 90%|█████████ | 200/221 [01:45<00:11,  1.89it/s][A
 91%|█████████ | 201/221 [01:46<00:10,  1.89it/s][A
 91%|█████████▏| 202/221 [01:46<00:10,  1.89it/s][A
 92%|█████████▏| 203/221 [01:47<00:09,  1.89it/s][A
 92%|█████████▏| 204/221 [01:47<00:08,  1.89it/s][A
 93%|█████████▎| 205/221 [01:48<00:08,  1.89it/s][A
 93%|█████████▎| 206/221 [01:48<00:07,  1.89it/s][A
 94%|█████████▎| 207/221 [01:49<00:07,  1.89it/s][A
 94%|█████████▍| 208/221 [01:49<00:06,  1.89it/s][A
 95%|█████████▍| 209/221 [01:50<00:06,  1.89it/s][A
 95%|█████████▌| 210/221 [01:50<00:05,  1.89it/s][A
 95%|█████████▌| 211/221 [01:51<00:05,  1.89it/s][A
 96%|█████████▌| 212/221 [01:52<00:04,  1.89it/s][A
 96%|█████████▋| 213/221 [01:52<00:04,  1.89it/s][A
 97%|█████████▋| 214/221 [01:53<00:03,  1.89it/s][A
 97%|█████████▋| 215/221 [01:53<00:03,  1.89it/s][A
 98%|█████████▊| 216/221 [01:54<00:02,  1.89it/s][A
 98%|█████████▊| 217/221 [01:54<00:02,  1.89it/s][A
 99%|█████████▊| 218/221 [01:55<00:01,  1.89it/s][A
 99%|█████████▉| 219/221 [01:55<00:01,  1.89it/s][A
100%|█████████▉| 220/221 [01:56<00:00,  1.89it/s][A
100%|██████████| 221/221 [01:56<00:00,  1.89it/s][A100%|██████████| 221/221 [01:56<00:00,  1.89it/s]
09/20/2024 09:16:45 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_forward=====step 5999--===========

09/20/2024 09:16:45 - INFO - __main__ -   {'area_r1': 46.9, 'area_recall': '46.9/75.1/84.2', 'area_ravg': 68.7}
09/20/2024 09:16:45 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_backard=====step 5999--===========

09/20/2024 09:16:45 - INFO - __main__ -   {'forward_r1': 51.0, 'forward_recall': '51.0/79.0/88.1', 'forward_ravg': 72.7}
09/20/2024 09:16:45 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video=====step 5999--===========

09/20/2024 09:16:45 - INFO - __main__ -   {'area_video_r1': 48.3, 'area_video_recall': '48.3/77.7/87.9', 'area_video_ravg': 71.3}
09/20/2024 09:16:45 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video====history best step: 3499=======

09/20/2024 09:16:45 - INFO - __main__ -   {'area_video_r1': 50.3, 'area_video_recall': '50.3/78.1/86.7', 'area_video_ravg': 71.7}
09/20/2024 09:16:45 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itm_area=====step 5999--===========

09/20/2024 09:16:45 - INFO - __main__ -   {'area_video_r1': 60.5, 'area_video_recall': '60.5/83.4/89.3', 'area_video_ravg': 77.7, 'area_video_back_r1': 61.4, 'area_video_back_recall': '61.4/85.3/92.3', 'area_video_back_ravg': 79.7}
09/20/2024 09:16:45 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itm_area====history best step: 5499=======

09/20/2024 09:16:45 - INFO - __main__ -   {'area_video_r1': 61.5, 'area_video_recall': '61.5/82.7/89.1', 'area_video_ravg': 77.8, 'area_video_back_r1': 61.7, 'area_video_back_recall': '61.7/84.7/91.1', 'area_video_back_ravg': 79.1}
09/20/2024 09:16:45 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas=====step 5999--===========

09/20/2024 09:16:45 - INFO - __main__ -   {'video_r1': 30.2, 'video_recall': '30.2/56.0/66.3', 'video_ravg': 50.8}
09/20/2024 09:16:45 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas====history best step: 1499=======

09/20/2024 09:16:45 - INFO - __main__ -   {'video_r1': 34.7, 'video_recall': '34.7/60.5/72.3', 'video_ravg': 55.8}
09/20/2024 09:17:05 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.024483023211359978, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 0.9965169429779053, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.0209999084472656}
 61%|██████    | 6000/9908 [7:40:34<142:24:24, 131.18s/it] 61%|██████    | 6001/9908 [7:40:37<100:40:09, 92.76s/it]  61%|██████    | 6002/9908 [7:40:40<71:34:20, 65.97s/it]  61%|██████    | 6003/9908 [7:40:44<51:16:35, 47.27s/it] 61%|██████    | 6004/9908 [7:40:48<37:04:25, 34.19s/it] 61%|██████    | 6005/9908 [7:40:51<27:12:37, 25.10s/it] 61%|██████    | 6006/9908 [7:40:55<20:15:43, 18.69s/it] 61%|██████    | 6007/9908 [7:40:59<15:34:51, 14.38s/it] 61%|██████    | 6008/9908 [7:41:03<12:01:39, 11.10s/it] 61%|██████    | 6009/9908 [7:41:07<9:36:36,  8.87s/it]  61%|██████    | 6010/9908 [7:41:10<7:54:35,  7.31s/it] 61%|██████    | 6011/9908 [7:41:14<6:39:35,  6.15s/it] 61%|██████    | 6012/9908 [7:41:18<5:55:31,  5.48s/it] 61%|██████    | 6013/9908 [7:41:21<5:17:05,  4.88s/it] 61%|██████    | 6014/9908 [7:41:25<4:56:21,  4.57s/it] 61%|██████    | 6015/9908 [7:41:28<4:33:55,  4.22s/it] 61%|██████    | 6016/9908 [7:41:32<4:31:53,  4.19s/it] 61%|██████    | 6017/9908 [7:41:36<4:23:07,  4.06s/it] 61%|██████    | 6018/9908 [7:41:40<4:13:02,  3.90s/it] 61%|██████    | 6019/9908 [7:41:43<4:05:49,  3.79s/it] 61%|██████    | 6020/9908 [7:41:47<4:05:30,  3.79s/it] 61%|██████    | 6021/9908 [7:41:51<4:05:49,  3.79s/it] 61%|██████    | 6022/9908 [7:41:54<3:59:22,  3.70s/it] 61%|██████    | 6023/9908 [7:41:58<4:03:26,  3.76s/it] 61%|██████    | 6024/9908 [7:42:03<4:13:05,  3.91s/it] 61%|██████    | 6025/9908 [7:42:06<4:03:23,  3.76s/it] 61%|██████    | 6026/9908 [7:42:09<3:54:54,  3.63s/it] 61%|██████    | 6027/9908 [7:42:13<3:57:12,  3.67s/it] 61%|██████    | 6028/9908 [7:42:17<4:10:32,  3.87s/it] 61%|██████    | 6029/9908 [7:42:21<4:02:17,  3.75s/it] 61%|██████    | 6030/9908 [7:42:25<4:05:46,  3.80s/it] 61%|██████    | 6031/9908 [7:42:29<4:05:17,  3.80s/it] 61%|██████    | 6032/9908 [7:42:32<4:02:28,  3.75s/it] 61%|██████    | 6033/9908 [7:42:36<4:04:31,  3.79s/it] 61%|██████    | 6034/9908 [7:42:40<4:05:35,  3.80s/it] 61%|██████    | 6035/9908 [7:42:44<4:07:27,  3.83s/it] 61%|██████    | 6036/9908 [7:42:48<4:09:05,  3.86s/it] 61%|██████    | 6037/9908 [7:42:51<3:59:39,  3.71s/it] 61%|██████    | 6038/9908 [7:42:55<4:04:11,  3.79s/it] 61%|██████    | 6039/9908 [7:42:59<4:01:48,  3.75s/it] 61%|██████    | 6040/9908 [7:43:02<3:55:44,  3.66s/it] 61%|██████    | 6041/9908 [7:43:06<3:54:09,  3.63s/it] 61%|██████    | 6042/9908 [7:43:10<3:56:56,  3.68s/it] 61%|██████    | 6043/9908 [7:43:13<3:56:11,  3.67s/it] 61%|██████    | 6044/9908 [7:43:17<3:56:58,  3.68s/it] 61%|██████    | 6045/9908 [7:43:21<4:01:25,  3.75s/it] 61%|██████    | 6046/9908 [7:43:25<4:03:29,  3.78s/it] 61%|██████    | 6047/9908 [7:43:28<4:03:11,  3.78s/it] 61%|██████    | 6048/9908 [7:43:32<4:06:43,  3.83s/it] 61%|██████    | 6049/9908 [7:43:36<4:06:20,  3.83s/it]09/20/2024 09:20:11 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.024994170293211937, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2207640409469604, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.2457581758499146}
 61%|██████    | 6050/9908 [7:43:40<4:04:09,  3.80s/it] 61%|██████    | 6051/9908 [7:43:43<3:59:13,  3.72s/it] 61%|██████    | 6052/9908 [7:43:47<3:49:04,  3.56s/it] 61%|██████    | 6053/9908 [7:43:50<3:53:37,  3.64s/it] 61%|██████    | 6054/9908 [7:43:54<3:50:13,  3.58s/it] 61%|██████    | 6055/9908 [7:43:58<3:54:08,  3.65s/it] 61%|██████    | 6056/9908 [7:44:02<4:01:01,  3.75s/it] 61%|██████    | 6057/9908 [7:44:05<3:57:49,  3.71s/it] 61%|██████    | 6058/9908 [7:44:09<3:56:47,  3.69s/it] 61%|██████    | 6059/9908 [7:44:13<4:00:01,  3.74s/it] 61%|██████    | 6060/9908 [7:44:17<4:07:22,  3.86s/it] 61%|██████    | 6061/9908 [7:44:21<4:03:29,  3.80s/it] 61%|██████    | 6062/9908 [7:44:24<4:00:00,  3.74s/it] 61%|██████    | 6063/9908 [7:44:28<3:57:33,  3.71s/it] 61%|██████    | 6064/9908 [7:44:32<4:00:01,  3.75s/it] 61%|██████    | 6065/9908 [7:44:35<4:00:19,  3.75s/it] 61%|██████    | 6066/9908 [7:44:39<3:55:59,  3.69s/it] 61%|██████    | 6067/9908 [7:44:43<3:56:36,  3.70s/it] 61%|██████    | 6068/9908 [7:44:47<4:01:14,  3.77s/it] 61%|██████▏   | 6069/9908 [7:44:50<3:57:29,  3.71s/it] 61%|██████▏   | 6070/9908 [7:44:54<4:04:34,  3.82s/it] 61%|██████▏   | 6071/9908 [7:44:58<4:00:20,  3.76s/it] 61%|██████▏   | 6072/9908 [7:45:02<4:01:03,  3.77s/it] 61%|██████▏   | 6073/9908 [7:45:05<3:55:58,  3.69s/it] 61%|██████▏   | 6074/9908 [7:45:09<3:52:47,  3.64s/it] 61%|██████▏   | 6075/9908 [7:45:12<3:49:40,  3.60s/it] 61%|██████▏   | 6076/9908 [7:45:16<3:55:30,  3.69s/it] 61%|██████▏   | 6077/9908 [7:45:20<3:52:26,  3.64s/it] 61%|██████▏   | 6078/9908 [7:45:23<3:45:47,  3.54s/it] 61%|██████▏   | 6079/9908 [7:45:27<3:51:47,  3.63s/it] 61%|██████▏   | 6080/9908 [7:45:31<3:56:17,  3.70s/it] 61%|██████▏   | 6081/9908 [7:45:34<3:53:09,  3.66s/it] 61%|██████▏   | 6082/9908 [7:45:38<3:50:34,  3.62s/it] 61%|██████▏   | 6083/9908 [7:45:42<3:57:36,  3.73s/it] 61%|██████▏   | 6084/9908 [7:45:46<3:58:29,  3.74s/it] 61%|██████▏   | 6085/9908 [7:45:49<3:54:48,  3.69s/it] 61%|██████▏   | 6086/9908 [7:45:52<3:49:44,  3.61s/it] 61%|██████▏   | 6087/9908 [7:45:56<3:52:58,  3.66s/it] 61%|██████▏   | 6088/9908 [7:46:00<3:51:45,  3.64s/it] 61%|██████▏   | 6089/9908 [7:46:04<3:54:20,  3.68s/it] 61%|██████▏   | 6090/9908 [7:46:08<3:59:55,  3.77s/it] 61%|██████▏   | 6091/9908 [7:46:12<4:05:32,  3.86s/it] 61%|██████▏   | 6092/9908 [7:46:15<3:56:51,  3.72s/it] 61%|██████▏   | 6093/9908 [7:46:19<3:51:56,  3.65s/it] 62%|██████▏   | 6094/9908 [7:46:22<3:53:15,  3.67s/it] 62%|██████▏   | 6095/9908 [7:46:26<4:01:18,  3.80s/it] 62%|██████▏   | 6096/9908 [7:46:30<4:00:59,  3.79s/it] 62%|██████▏   | 6097/9908 [7:46:34<4:03:26,  3.83s/it] 62%|██████▏   | 6098/9908 [7:46:38<4:01:15,  3.80s/it] 62%|██████▏   | 6099/9908 [7:46:41<3:57:56,  3.75s/it]09/20/2024 09:23:16 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.02493429183959961, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.4197484254837036, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.4446827173233032}
 62%|██████▏   | 6100/9908 [7:46:46<4:04:51,  3.86s/it] 62%|██████▏   | 6101/9908 [7:46:49<3:53:32,  3.68s/it] 62%|██████▏   | 6102/9908 [7:46:53<4:00:25,  3.79s/it] 62%|██████▏   | 6103/9908 [7:46:57<3:58:33,  3.76s/it] 62%|██████▏   | 6104/9908 [7:47:01<4:02:53,  3.83s/it] 62%|██████▏   | 6105/9908 [7:47:04<4:00:37,  3.80s/it] 62%|██████▏   | 6106/9908 [7:47:08<3:52:10,  3.66s/it] 62%|██████▏   | 6107/9908 [7:47:11<3:54:00,  3.69s/it] 62%|██████▏   | 6108/9908 [7:47:15<3:54:31,  3.70s/it] 62%|██████▏   | 6109/9908 [7:47:19<3:53:03,  3.68s/it] 62%|██████▏   | 6110/9908 [7:47:22<3:54:20,  3.70s/it] 62%|██████▏   | 6111/9908 [7:47:26<3:50:41,  3.65s/it] 62%|██████▏   | 6112/9908 [7:47:30<3:50:26,  3.64s/it] 62%|██████▏   | 6113/9908 [7:47:33<3:50:46,  3.65s/it] 62%|██████▏   | 6114/9908 [7:47:37<3:58:38,  3.77s/it] 62%|██████▏   | 6115/9908 [7:47:41<3:57:23,  3.76s/it] 62%|██████▏   | 6116/9908 [7:47:45<3:55:26,  3.73s/it] 62%|██████▏   | 6117/9908 [7:47:49<4:01:05,  3.82s/it] 62%|██████▏   | 6118/9908 [7:47:53<4:05:04,  3.88s/it] 62%|██████▏   | 6119/9908 [7:47:56<4:00:55,  3.82s/it] 62%|██████▏   | 6120/9908 [7:48:00<3:59:59,  3.80s/it] 62%|██████▏   | 6121/9908 [7:48:04<3:56:20,  3.74s/it] 62%|██████▏   | 6122/9908 [7:48:08<4:02:47,  3.85s/it] 62%|██████▏   | 6123/9908 [7:48:12<3:59:30,  3.80s/it] 62%|██████▏   | 6124/9908 [7:48:15<3:57:40,  3.77s/it] 62%|██████▏   | 6125/9908 [7:48:19<3:55:44,  3.74s/it] 62%|██████▏   | 6126/9908 [7:48:22<3:51:21,  3.67s/it] 62%|██████▏   | 6127/9908 [7:48:26<3:52:32,  3.69s/it] 62%|██████▏   | 6128/9908 [7:48:30<4:03:13,  3.86s/it] 62%|██████▏   | 6129/9908 [7:48:34<3:53:35,  3.71s/it] 62%|██████▏   | 6130/9908 [7:48:37<3:52:04,  3.69s/it] 62%|██████▏   | 6131/9908 [7:48:41<3:56:33,  3.76s/it] 62%|██████▏   | 6132/9908 [7:48:45<3:53:46,  3.71s/it] 62%|██████▏   | 6133/9908 [7:48:49<3:59:46,  3.81s/it] 62%|██████▏   | 6134/9908 [7:48:53<3:53:57,  3.72s/it] 62%|██████▏   | 6135/9908 [7:48:56<3:55:34,  3.75s/it] 62%|██████▏   | 6136/9908 [7:49:00<3:55:49,  3.75s/it] 62%|██████▏   | 6137/9908 [7:49:04<3:49:39,  3.65s/it] 62%|██████▏   | 6138/9908 [7:49:07<3:48:28,  3.64s/it] 62%|██████▏   | 6139/9908 [7:49:11<3:56:23,  3.76s/it] 62%|██████▏   | 6140/9908 [7:49:15<3:56:47,  3.77s/it] 62%|██████▏   | 6141/9908 [7:49:19<3:53:48,  3.72s/it] 62%|██████▏   | 6142/9908 [7:49:22<3:54:46,  3.74s/it] 62%|██████▏   | 6143/9908 [7:49:26<3:53:33,  3.72s/it] 62%|██████▏   | 6144/9908 [7:49:30<3:52:10,  3.70s/it] 62%|██████▏   | 6145/9908 [7:49:33<3:52:02,  3.70s/it] 62%|██████▏   | 6146/9908 [7:49:37<3:51:35,  3.69s/it] 62%|██████▏   | 6147/9908 [7:49:41<3:55:52,  3.76s/it] 62%|██████▏   | 6148/9908 [7:49:45<3:54:25,  3.74s/it] 62%|██████▏   | 6149/9908 [7:49:48<3:53:10,  3.72s/it]09/20/2024 09:26:23 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.02384539693593979, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.140990972518921, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.1648364067077637}
 62%|██████▏   | 6150/9908 [7:49:52<3:57:32,  3.79s/it] 62%|██████▏   | 6151/9908 [7:49:56<3:54:31,  3.75s/it] 62%|██████▏   | 6152/9908 [7:49:59<3:45:45,  3.61s/it] 62%|██████▏   | 6153/9908 [7:50:03<3:45:59,  3.61s/it] 62%|██████▏   | 6154/9908 [7:50:06<3:44:17,  3.58s/it] 62%|██████▏   | 6155/9908 [7:50:10<3:46:27,  3.62s/it] 62%|██████▏   | 6156/9908 [7:50:14<3:50:33,  3.69s/it] 62%|██████▏   | 6157/9908 [7:50:18<3:49:17,  3.67s/it] 62%|██████▏   | 6158/9908 [7:50:21<3:49:02,  3.66s/it] 62%|██████▏   | 6159/9908 [7:50:25<3:56:16,  3.78s/it] 62%|██████▏   | 6160/9908 [7:50:29<3:55:51,  3.78s/it] 62%|██████▏   | 6161/9908 [7:50:33<3:55:27,  3.77s/it] 62%|██████▏   | 6162/9908 [7:50:36<3:49:30,  3.68s/it] 62%|██████▏   | 6163/9908 [7:50:40<3:59:43,  3.84s/it] 62%|██████▏   | 6164/9908 [7:50:44<3:52:18,  3.72s/it] 62%|██████▏   | 6165/9908 [7:50:48<3:55:16,  3.77s/it] 62%|██████▏   | 6166/9908 [7:50:52<4:00:41,  3.86s/it] 62%|██████▏   | 6167/9908 [7:50:56<3:59:19,  3.84s/it] 62%|██████▏   | 6168/9908 [7:50:59<3:55:46,  3.78s/it] 62%|██████▏   | 6169/9908 [7:51:03<3:50:39,  3.70s/it] 62%|██████▏   | 6170/9908 [7:51:07<3:55:23,  3.78s/it] 62%|██████▏   | 6171/9908 [7:51:10<3:48:14,  3.66s/it] 62%|██████▏   | 6172/9908 [7:51:14<3:49:15,  3.68s/it] 62%|██████▏   | 6173/9908 [7:51:18<3:57:06,  3.81s/it] 62%|██████▏   | 6174/9908 [7:51:22<3:56:09,  3.79s/it] 62%|██████▏   | 6175/9908 [7:51:26<3:56:20,  3.80s/it] 62%|██████▏   | 6176/9908 [7:51:30<3:59:48,  3.86s/it] 62%|██████▏   | 6177/9908 [7:51:33<3:58:24,  3.83s/it] 62%|██████▏   | 6178/9908 [7:51:37<3:57:22,  3.82s/it] 62%|██████▏   | 6179/9908 [7:51:41<3:55:11,  3.78s/it] 62%|██████▏   | 6180/9908 [7:51:45<4:04:08,  3.93s/it] 62%|██████▏   | 6181/9908 [7:51:49<3:58:44,  3.84s/it] 62%|██████▏   | 6182/9908 [7:51:52<3:55:31,  3.79s/it] 62%|██████▏   | 6183/9908 [7:51:56<3:55:11,  3.79s/it] 62%|██████▏   | 6184/9908 [7:52:00<3:51:00,  3.72s/it] 62%|██████▏   | 6185/9908 [7:52:04<3:52:00,  3.74s/it] 62%|██████▏   | 6186/9908 [7:52:07<3:49:35,  3.70s/it] 62%|██████▏   | 6187/9908 [7:52:11<3:52:39,  3.75s/it] 62%|██████▏   | 6188/9908 [7:52:14<3:44:36,  3.62s/it] 62%|██████▏   | 6189/9908 [7:52:18<3:45:34,  3.64s/it] 62%|██████▏   | 6190/9908 [7:52:22<3:50:19,  3.72s/it] 62%|██████▏   | 6191/9908 [7:52:26<3:48:04,  3.68s/it] 62%|██████▏   | 6192/9908 [7:52:30<3:53:21,  3.77s/it] 63%|██████▎   | 6193/9908 [7:52:34<3:59:32,  3.87s/it] 63%|██████▎   | 6194/9908 [7:52:37<3:56:40,  3.82s/it] 63%|██████▎   | 6195/9908 [7:52:41<3:50:36,  3.73s/it] 63%|██████▎   | 6196/9908 [7:52:44<3:45:54,  3.65s/it] 63%|██████▎   | 6197/9908 [7:52:48<3:49:47,  3.72s/it] 63%|██████▎   | 6198/9908 [7:52:52<3:50:51,  3.73s/it] 63%|██████▎   | 6199/9908 [7:52:56<3:48:27,  3.70s/it]09/20/2024 09:29:30 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.021565763279795647, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.0642194747924805, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.0857852697372437}
 63%|██████▎   | 6200/9908 [7:52:59<3:47:04,  3.67s/it] 63%|██████▎   | 6201/9908 [7:53:03<3:49:57,  3.72s/it] 63%|██████▎   | 6202/9908 [7:53:07<3:49:41,  3.72s/it] 63%|██████▎   | 6203/9908 [7:53:11<3:52:15,  3.76s/it] 63%|██████▎   | 6204/9908 [7:53:14<3:54:06,  3.79s/it] 63%|██████▎   | 6205/9908 [7:53:18<3:45:02,  3.65s/it] 63%|██████▎   | 6206/9908 [7:53:22<3:46:53,  3.68s/it] 63%|██████▎   | 6207/9908 [7:53:25<3:48:11,  3.70s/it] 63%|██████▎   | 6208/9908 [7:53:29<3:44:56,  3.65s/it] 63%|██████▎   | 6209/9908 [7:53:33<3:47:16,  3.69s/it] 63%|██████▎   | 6210/9908 [7:53:36<3:41:52,  3.60s/it] 63%|██████▎   | 6211/9908 [7:53:40<3:46:20,  3.67s/it] 63%|██████▎   | 6212/9908 [7:53:44<3:49:23,  3.72s/it] 63%|██████▎   | 6213/9908 [7:53:47<3:50:56,  3.75s/it] 63%|██████▎   | 6214/9908 [7:53:51<3:51:08,  3.75s/it] 63%|██████▎   | 6215/9908 [7:53:55<3:50:15,  3.74s/it] 63%|██████▎   | 6216/9908 [7:53:58<3:47:02,  3.69s/it] 63%|██████▎   | 6217/9908 [7:54:02<3:43:10,  3.63s/it] 63%|██████▎   | 6218/9908 [7:54:06<3:47:47,  3.70s/it] 63%|██████▎   | 6219/9908 [7:54:10<3:59:44,  3.90s/it] 63%|██████▎   | 6220/9908 [7:54:14<3:57:01,  3.86s/it] 63%|██████▎   | 6221/9908 [7:54:17<3:50:49,  3.76s/it] 63%|██████▎   | 6222/9908 [7:54:21<3:47:10,  3.70s/it] 63%|██████▎   | 6223/9908 [7:54:25<3:44:39,  3.66s/it] 63%|██████▎   | 6224/9908 [7:54:28<3:47:38,  3.71s/it] 63%|██████▎   | 6225/9908 [7:54:32<3:45:29,  3.67s/it] 63%|██████▎   | 6226/9908 [7:54:36<3:50:36,  3.76s/it] 63%|██████▎   | 6227/9908 [7:54:40<3:50:27,  3.76s/it] 63%|██████▎   | 6228/9908 [7:54:43<3:49:58,  3.75s/it] 63%|██████▎   | 6229/9908 [7:54:47<3:44:23,  3.66s/it] 63%|██████▎   | 6230/9908 [7:54:51<3:44:08,  3.66s/it] 63%|██████▎   | 6231/9908 [7:54:54<3:42:54,  3.64s/it] 63%|██████▎   | 6232/9908 [7:54:58<3:38:03,  3.56s/it] 63%|██████▎   | 6233/9908 [7:55:02<3:45:47,  3.69s/it] 63%|██████▎   | 6234/9908 [7:55:06<3:53:42,  3.82s/it] 63%|██████▎   | 6235/9908 [7:55:09<3:49:41,  3.75s/it] 63%|██████▎   | 6236/9908 [7:55:13<3:48:45,  3.74s/it] 63%|██████▎   | 6237/9908 [7:55:17<3:49:04,  3.74s/it] 63%|██████▎   | 6238/9908 [7:55:20<3:43:32,  3.65s/it] 63%|██████▎   | 6239/9908 [7:55:24<3:40:42,  3.61s/it] 63%|██████▎   | 6240/9908 [7:55:28<3:46:38,  3.71s/it] 63%|██████▎   | 6241/9908 [7:55:31<3:45:37,  3.69s/it] 63%|██████▎   | 6242/9908 [7:55:35<3:49:28,  3.76s/it] 63%|██████▎   | 6243/9908 [7:55:39<3:44:42,  3.68s/it] 63%|██████▎   | 6244/9908 [7:55:43<3:49:17,  3.75s/it] 63%|██████▎   | 6245/9908 [7:55:46<3:48:39,  3.75s/it] 63%|██████▎   | 6246/9908 [7:55:50<3:47:16,  3.72s/it] 63%|██████▎   | 6247/9908 [7:55:54<3:49:17,  3.76s/it] 63%|██████▎   | 6248/9908 [7:55:57<3:42:55,  3.65s/it] 63%|██████▎   | 6249/9908 [7:56:01<3:38:53,  3.59s/it]09/20/2024 09:32:35 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03131720423698425, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2544019222259521, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.2857191562652588}
 63%|██████▎   | 6250/9908 [7:56:04<3:42:10,  3.64s/it] 63%|██████▎   | 6251/9908 [7:56:08<3:38:18,  3.58s/it] 63%|██████▎   | 6252/9908 [7:56:11<3:36:04,  3.55s/it] 63%|██████▎   | 6253/9908 [7:56:15<3:43:03,  3.66s/it] 63%|██████▎   | 6254/9908 [7:56:19<3:48:04,  3.75s/it] 63%|██████▎   | 6255/9908 [7:56:23<3:48:36,  3.75s/it] 63%|██████▎   | 6256/9908 [7:56:27<3:47:50,  3.74s/it] 63%|██████▎   | 6257/9908 [7:56:30<3:43:39,  3.68s/it] 63%|██████▎   | 6258/9908 [7:56:34<3:42:41,  3.66s/it] 63%|██████▎   | 6259/9908 [7:56:38<3:44:37,  3.69s/it] 63%|██████▎   | 6260/9908 [7:56:41<3:39:40,  3.61s/it] 63%|██████▎   | 6261/9908 [7:56:45<3:43:31,  3.68s/it] 63%|██████▎   | 6262/9908 [7:56:49<3:45:00,  3.70s/it] 63%|██████▎   | 6263/9908 [7:56:52<3:44:31,  3.70s/it] 63%|██████▎   | 6264/9908 [7:56:56<3:40:17,  3.63s/it] 63%|██████▎   | 6265/9908 [7:56:59<3:40:25,  3.63s/it] 63%|██████▎   | 6266/9908 [7:57:03<3:41:01,  3.64s/it] 63%|██████▎   | 6267/9908 [7:57:07<3:48:19,  3.76s/it] 63%|██████▎   | 6268/9908 [7:57:11<3:43:11,  3.68s/it] 63%|██████▎   | 6269/9908 [7:57:14<3:43:06,  3.68s/it] 63%|██████▎   | 6270/9908 [7:57:18<3:43:52,  3.69s/it] 63%|██████▎   | 6271/9908 [7:57:21<3:38:52,  3.61s/it] 63%|██████▎   | 6272/9908 [7:57:25<3:38:00,  3.60s/it] 63%|██████▎   | 6273/9908 [7:57:29<3:43:33,  3.69s/it] 63%|██████▎   | 6274/9908 [7:57:32<3:41:05,  3.65s/it] 63%|██████▎   | 6275/9908 [7:57:36<3:44:55,  3.71s/it] 63%|██████▎   | 6276/9908 [7:57:40<3:47:22,  3.76s/it] 63%|██████▎   | 6277/9908 [7:57:44<3:42:29,  3.68s/it] 63%|██████▎   | 6278/9908 [7:57:47<3:43:59,  3.70s/it] 63%|██████▎   | 6279/9908 [7:57:51<3:43:10,  3.69s/it] 63%|██████▎   | 6280/9908 [7:57:55<3:45:27,  3.73s/it] 63%|██████▎   | 6281/9908 [7:57:59<3:50:18,  3.81s/it] 63%|██████▎   | 6282/9908 [7:58:02<3:42:47,  3.69s/it] 63%|██████▎   | 6283/9908 [7:58:06<3:41:01,  3.66s/it] 63%|██████▎   | 6284/9908 [7:58:09<3:38:57,  3.63s/it] 63%|██████▎   | 6285/9908 [7:58:13<3:41:18,  3.67s/it] 63%|██████▎   | 6286/9908 [7:58:17<3:49:00,  3.79s/it] 63%|██████▎   | 6287/9908 [7:58:21<3:49:41,  3.81s/it] 63%|██████▎   | 6288/9908 [7:58:25<3:49:12,  3.80s/it] 63%|██████▎   | 6289/9908 [7:58:29<3:48:38,  3.79s/it] 63%|██████▎   | 6290/9908 [7:58:32<3:42:45,  3.69s/it] 63%|██████▎   | 6291/9908 [7:58:36<3:41:31,  3.67s/it] 64%|██████▎   | 6292/9908 [7:58:40<3:43:50,  3.71s/it] 64%|██████▎   | 6293/9908 [7:58:44<3:47:31,  3.78s/it] 64%|██████▎   | 6294/9908 [7:58:47<3:47:57,  3.78s/it] 64%|██████▎   | 6295/9908 [7:58:51<3:48:23,  3.79s/it] 64%|██████▎   | 6296/9908 [7:58:55<3:45:22,  3.74s/it] 64%|██████▎   | 6297/9908 [7:58:59<3:47:43,  3.78s/it] 64%|██████▎   | 6298/9908 [7:59:02<3:44:09,  3.73s/it] 64%|██████▎   | 6299/9908 [7:59:06<3:37:52,  3.62s/it]09/20/2024 09:35:40 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.011151833459734917, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.1727752685546875, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.183927059173584}
 64%|██████▎   | 6300/9908 [7:59:10<3:44:23,  3.73s/it] 64%|██████▎   | 6301/9908 [7:59:14<3:48:59,  3.81s/it] 64%|██████▎   | 6302/9908 [7:59:17<3:45:43,  3.76s/it] 64%|██████▎   | 6303/9908 [7:59:21<3:44:33,  3.74s/it] 64%|██████▎   | 6304/9908 [7:59:25<3:44:28,  3.74s/it] 64%|██████▎   | 6305/9908 [7:59:28<3:40:28,  3.67s/it] 64%|██████▎   | 6306/9908 [7:59:32<3:43:52,  3.73s/it] 64%|██████▎   | 6307/9908 [7:59:36<3:43:22,  3.72s/it] 64%|██████▎   | 6308/9908 [7:59:39<3:43:07,  3.72s/it] 64%|██████▎   | 6309/9908 [7:59:43<3:46:02,  3.77s/it] 64%|██████▎   | 6310/9908 [7:59:47<3:42:03,  3.70s/it] 64%|██████▎   | 6311/9908 [7:59:51<3:46:00,  3.77s/it] 64%|██████▎   | 6312/9908 [7:59:54<3:43:10,  3.72s/it] 64%|██████▎   | 6313/9908 [7:59:58<3:45:25,  3.76s/it] 64%|██████▎   | 6314/9908 [8:00:02<3:48:02,  3.81s/it] 64%|██████▎   | 6315/9908 [8:00:06<3:41:19,  3.70s/it] 64%|██████▎   | 6316/9908 [8:00:09<3:42:51,  3.72s/it] 64%|██████▍   | 6317/9908 [8:00:13<3:46:00,  3.78s/it] 64%|██████▍   | 6318/9908 [8:00:17<3:51:43,  3.87s/it] 64%|██████▍   | 6319/9908 [8:00:21<3:43:15,  3.73s/it] 64%|██████▍   | 6320/9908 [8:00:25<3:42:45,  3.73s/it] 64%|██████▍   | 6321/9908 [8:00:28<3:43:01,  3.73s/it] 64%|██████▍   | 6322/9908 [8:00:32<3:44:57,  3.76s/it] 64%|██████▍   | 6323/9908 [8:00:36<3:48:45,  3.83s/it] 64%|██████▍   | 6324/9908 [8:00:40<3:44:52,  3.76s/it] 64%|██████▍   | 6325/9908 [8:00:44<3:51:18,  3.87s/it] 64%|██████▍   | 6326/9908 [8:00:48<3:47:27,  3.81s/it] 64%|██████▍   | 6327/9908 [8:00:51<3:48:38,  3.83s/it] 64%|██████▍   | 6328/9908 [8:00:55<3:49:25,  3.85s/it] 64%|██████▍   | 6329/9908 [8:00:59<3:45:56,  3.79s/it] 64%|██████▍   | 6330/9908 [8:01:02<3:38:38,  3.67s/it] 64%|██████▍   | 6331/9908 [8:01:06<3:42:25,  3.73s/it] 64%|██████▍   | 6332/9908 [8:01:10<3:39:05,  3.68s/it] 64%|██████▍   | 6333/9908 [8:01:13<3:39:18,  3.68s/it] 64%|██████▍   | 6334/9908 [8:01:17<3:38:32,  3.67s/it] 64%|██████▍   | 6335/9908 [8:01:21<3:40:54,  3.71s/it] 64%|██████▍   | 6336/9908 [8:01:24<3:37:30,  3.65s/it] 64%|██████▍   | 6337/9908 [8:01:28<3:40:37,  3.71s/it] 64%|██████▍   | 6338/9908 [8:01:32<3:43:58,  3.76s/it] 64%|██████▍   | 6339/9908 [8:01:36<3:40:07,  3.70s/it] 64%|██████▍   | 6340/9908 [8:01:39<3:41:42,  3.73s/it] 64%|██████▍   | 6341/9908 [8:01:43<3:35:40,  3.63s/it] 64%|██████▍   | 6342/9908 [8:01:46<3:34:31,  3.61s/it] 64%|██████▍   | 6343/9908 [8:01:50<3:32:48,  3.58s/it] 64%|██████▍   | 6344/9908 [8:01:54<3:36:16,  3.64s/it] 64%|██████▍   | 6345/9908 [8:01:57<3:33:45,  3.60s/it] 64%|██████▍   | 6346/9908 [8:02:01<3:32:04,  3.57s/it] 64%|██████▍   | 6347/9908 [8:02:04<3:35:22,  3.63s/it] 64%|██████▍   | 6348/9908 [8:02:08<3:34:42,  3.62s/it] 64%|██████▍   | 6349/9908 [8:02:12<3:41:26,  3.73s/it]09/20/2024 09:38:47 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.0318138562142849, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.7793939113616943, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.8112077713012695}
 64%|██████▍   | 6350/9908 [8:02:16<3:43:16,  3.77s/it] 64%|██████▍   | 6351/9908 [8:02:20<3:46:23,  3.82s/it] 64%|██████▍   | 6352/9908 [8:02:23<3:41:07,  3.73s/it] 64%|██████▍   | 6353/9908 [8:02:27<3:40:45,  3.73s/it] 64%|██████▍   | 6354/9908 [8:02:31<3:40:26,  3.72s/it] 64%|██████▍   | 6355/9908 [8:02:35<3:41:16,  3.74s/it] 64%|██████▍   | 6356/9908 [8:02:38<3:35:03,  3.63s/it] 64%|██████▍   | 6357/9908 [8:02:42<3:33:51,  3.61s/it] 64%|██████▍   | 6358/9908 [8:02:46<3:41:44,  3.75s/it] 64%|██████▍   | 6359/9908 [8:02:49<3:41:54,  3.75s/it] 64%|██████▍   | 6360/9908 [8:02:53<3:39:12,  3.71s/it] 64%|██████▍   | 6361/9908 [8:02:57<3:35:53,  3.65s/it] 64%|██████▍   | 6362/9908 [8:03:00<3:31:18,  3.58s/it] 64%|██████▍   | 6363/9908 [8:03:04<3:33:22,  3.61s/it] 64%|██████▍   | 6364/9908 [8:03:08<3:39:07,  3.71s/it] 64%|██████▍   | 6365/9908 [8:03:12<3:45:41,  3.82s/it] 64%|██████▍   | 6366/9908 [8:03:16<3:47:35,  3.86s/it] 64%|██████▍   | 6367/9908 [8:03:19<3:45:21,  3.82s/it] 64%|██████▍   | 6368/9908 [8:03:23<3:37:55,  3.69s/it] 64%|██████▍   | 6369/9908 [8:03:27<3:40:55,  3.75s/it] 64%|██████▍   | 6370/9908 [8:03:30<3:39:37,  3.72s/it] 64%|██████▍   | 6371/9908 [8:03:34<3:39:19,  3.72s/it] 64%|██████▍   | 6372/9908 [8:03:38<3:36:45,  3.68s/it] 64%|██████▍   | 6373/9908 [8:03:41<3:34:04,  3.63s/it] 64%|██████▍   | 6374/9908 [8:03:45<3:35:36,  3.66s/it] 64%|██████▍   | 6375/9908 [8:03:48<3:34:43,  3.65s/it] 64%|██████▍   | 6376/9908 [8:03:52<3:37:01,  3.69s/it] 64%|██████▍   | 6377/9908 [8:03:56<3:36:39,  3.68s/it] 64%|██████▍   | 6378/9908 [8:04:00<3:37:06,  3.69s/it] 64%|██████▍   | 6379/9908 [8:04:03<3:39:42,  3.74s/it] 64%|██████▍   | 6380/9908 [8:04:07<3:38:39,  3.72s/it] 64%|██████▍   | 6381/9908 [8:04:11<3:38:02,  3.71s/it] 64%|██████▍   | 6382/9908 [8:04:14<3:36:07,  3.68s/it] 64%|██████▍   | 6383/9908 [8:04:18<3:32:30,  3.62s/it] 64%|██████▍   | 6384/9908 [8:04:22<3:34:11,  3.65s/it] 64%|██████▍   | 6385/9908 [8:04:26<3:39:51,  3.74s/it] 64%|██████▍   | 6386/9908 [8:04:29<3:37:31,  3.71s/it] 64%|██████▍   | 6387/9908 [8:04:33<3:40:42,  3.76s/it] 64%|██████▍   | 6388/9908 [8:04:37<3:42:28,  3.79s/it] 64%|██████▍   | 6389/9908 [8:04:41<3:42:50,  3.80s/it] 64%|██████▍   | 6390/9908 [8:04:45<3:48:52,  3.90s/it] 65%|██████▍   | 6391/9908 [8:04:48<3:41:10,  3.77s/it] 65%|██████▍   | 6392/9908 [8:04:52<3:42:04,  3.79s/it] 65%|██████▍   | 6393/9908 [8:04:56<3:45:52,  3.86s/it] 65%|██████▍   | 6394/9908 [8:05:00<3:42:57,  3.81s/it] 65%|██████▍   | 6395/9908 [8:05:03<3:35:46,  3.69s/it] 65%|██████▍   | 6396/9908 [8:05:07<3:38:40,  3.74s/it] 65%|██████▍   | 6397/9908 [8:05:11<3:33:37,  3.65s/it] 65%|██████▍   | 6398/9908 [8:05:14<3:34:46,  3.67s/it] 65%|██████▍   | 6399/9908 [8:05:18<3:32:32,  3.63s/it]09/20/2024 09:41:52 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.013845923356711864, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.025197982788086, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.03904390335083}
 65%|██████▍   | 6400/9908 [8:05:21<3:29:29,  3.58s/it] 65%|██████▍   | 6401/9908 [8:05:25<3:29:28,  3.58s/it] 65%|██████▍   | 6402/9908 [8:05:28<3:27:39,  3.55s/it] 65%|██████▍   | 6403/9908 [8:05:32<3:33:15,  3.65s/it] 65%|██████▍   | 6404/9908 [8:05:36<3:38:45,  3.75s/it] 65%|██████▍   | 6405/9908 [8:05:40<3:37:00,  3.72s/it] 65%|██████▍   | 6406/9908 [8:05:43<3:32:11,  3.64s/it] 65%|██████▍   | 6407/9908 [8:05:47<3:39:10,  3.76s/it] 65%|██████▍   | 6408/9908 [8:05:51<3:37:42,  3.73s/it] 65%|██████▍   | 6409/9908 [8:05:55<3:38:55,  3.75s/it] 65%|██████▍   | 6410/9908 [8:05:58<3:32:39,  3.65s/it] 65%|██████▍   | 6411/9908 [8:06:02<3:34:04,  3.67s/it] 65%|██████▍   | 6412/9908 [8:06:05<3:29:57,  3.60s/it] 65%|██████▍   | 6413/9908 [8:06:09<3:30:27,  3.61s/it] 65%|██████▍   | 6414/9908 [8:06:13<3:29:48,  3.60s/it] 65%|██████▍   | 6415/9908 [8:06:16<3:27:29,  3.56s/it] 65%|██████▍   | 6416/9908 [8:06:20<3:33:23,  3.67s/it] 65%|██████▍   | 6417/9908 [8:06:24<3:31:08,  3.63s/it] 65%|██████▍   | 6418/9908 [8:06:27<3:34:43,  3.69s/it] 65%|██████▍   | 6419/9908 [8:06:31<3:37:08,  3.73s/it] 65%|██████▍   | 6420/9908 [8:06:35<3:35:54,  3.71s/it] 65%|██████▍   | 6421/9908 [8:06:39<3:34:44,  3.70s/it] 65%|██████▍   | 6422/9908 [8:06:42<3:30:46,  3.63s/it] 65%|██████▍   | 6423/9908 [8:06:45<3:26:55,  3.56s/it] 65%|██████▍   | 6424/9908 [8:06:49<3:32:08,  3.65s/it] 65%|██████▍   | 6425/9908 [8:06:53<3:40:28,  3.80s/it] 65%|██████▍   | 6426/9908 [8:06:57<3:36:10,  3.72s/it] 65%|██████▍   | 6427/9908 [8:07:01<3:34:21,  3.69s/it] 65%|██████▍   | 6428/9908 [8:07:04<3:34:13,  3.69s/it] 65%|██████▍   | 6429/9908 [8:07:08<3:40:19,  3.80s/it] 65%|██████▍   | 6430/9908 [8:07:12<3:37:29,  3.75s/it] 65%|██████▍   | 6431/9908 [8:07:15<3:31:24,  3.65s/it] 65%|██████▍   | 6432/9908 [8:07:19<3:36:41,  3.74s/it] 65%|██████▍   | 6433/9908 [8:07:23<3:39:02,  3.78s/it] 65%|██████▍   | 6434/9908 [8:07:27<3:39:35,  3.79s/it] 65%|██████▍   | 6435/9908 [8:07:31<3:41:02,  3.82s/it] 65%|██████▍   | 6436/9908 [8:07:35<3:42:38,  3.85s/it] 65%|██████▍   | 6437/9908 [8:07:38<3:34:41,  3.71s/it] 65%|██████▍   | 6438/9908 [8:07:42<3:39:46,  3.80s/it] 65%|██████▍   | 6439/9908 [8:07:46<3:36:11,  3.74s/it] 65%|██████▍   | 6440/9908 [8:07:50<3:37:15,  3.76s/it] 65%|██████▌   | 6441/9908 [8:07:53<3:32:01,  3.67s/it] 65%|██████▌   | 6442/9908 [8:07:57<3:29:56,  3.63s/it] 65%|██████▌   | 6443/9908 [8:08:00<3:30:56,  3.65s/it] 65%|██████▌   | 6444/9908 [8:08:04<3:27:56,  3.60s/it] 65%|██████▌   | 6445/9908 [8:08:08<3:30:56,  3.65s/it] 65%|██████▌   | 6446/9908 [8:08:11<3:29:44,  3.64s/it] 65%|██████▌   | 6447/9908 [8:08:15<3:37:31,  3.77s/it] 65%|██████▌   | 6448/9908 [8:08:19<3:41:40,  3.84s/it] 65%|██████▌   | 6449/9908 [8:08:23<3:45:15,  3.91s/it]09/20/2024 09:44:58 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.012485546991229057, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 0.9996329545974731, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.0121184587478638}
 65%|██████▌   | 6450/9908 [8:08:27<3:37:11,  3.77s/it] 65%|██████▌   | 6451/9908 [8:08:31<3:36:55,  3.76s/it] 65%|██████▌   | 6452/9908 [8:08:34<3:40:08,  3.82s/it] 65%|██████▌   | 6453/9908 [8:08:38<3:31:32,  3.67s/it] 65%|██████▌   | 6454/9908 [8:08:41<3:28:47,  3.63s/it] 65%|██████▌   | 6455/9908 [8:08:45<3:30:18,  3.65s/it] 65%|██████▌   | 6456/9908 [8:08:49<3:32:14,  3.69s/it] 65%|██████▌   | 6457/9908 [8:08:52<3:29:21,  3.64s/it] 65%|██████▌   | 6458/9908 [8:08:56<3:30:20,  3.66s/it] 65%|██████▌   | 6459/9908 [8:09:00<3:30:35,  3.66s/it] 65%|██████▌   | 6460/9908 [8:09:03<3:32:10,  3.69s/it] 65%|██████▌   | 6461/9908 [8:09:07<3:34:23,  3.73s/it] 65%|██████▌   | 6462/9908 [8:09:11<3:31:05,  3.68s/it] 65%|██████▌   | 6463/9908 [8:09:15<3:36:39,  3.77s/it] 65%|██████▌   | 6464/9908 [8:09:19<3:39:12,  3.82s/it] 65%|██████▌   | 6465/9908 [8:09:22<3:33:54,  3.73s/it] 65%|██████▌   | 6466/9908 [8:09:26<3:29:00,  3.64s/it] 65%|██████▌   | 6467/9908 [8:09:30<3:31:06,  3.68s/it] 65%|██████▌   | 6468/9908 [8:09:33<3:34:50,  3.75s/it] 65%|██████▌   | 6469/9908 [8:09:37<3:35:46,  3.76s/it] 65%|██████▌   | 6470/9908 [8:09:41<3:28:28,  3.64s/it] 65%|██████▌   | 6471/9908 [8:09:44<3:31:59,  3.70s/it] 65%|██████▌   | 6472/9908 [8:09:48<3:32:38,  3.71s/it] 65%|██████▌   | 6473/9908 [8:09:52<3:38:03,  3.81s/it] 65%|██████▌   | 6474/9908 [8:09:56<3:37:59,  3.81s/it] 65%|██████▌   | 6475/9908 [8:10:00<3:36:19,  3.78s/it] 65%|██████▌   | 6476/9908 [8:10:03<3:27:33,  3.63s/it] 65%|██████▌   | 6477/9908 [8:10:07<3:27:33,  3.63s/it] 65%|██████▌   | 6478/9908 [8:10:10<3:26:07,  3.61s/it] 65%|██████▌   | 6479/9908 [8:10:14<3:31:55,  3.71s/it] 65%|██████▌   | 6480/9908 [8:10:18<3:34:47,  3.76s/it] 65%|██████▌   | 6481/9908 [8:10:22<3:34:51,  3.76s/it] 65%|██████▌   | 6482/9908 [8:10:26<3:36:01,  3.78s/it] 65%|██████▌   | 6483/9908 [8:10:29<3:37:12,  3.81s/it] 65%|██████▌   | 6484/9908 [8:10:33<3:26:44,  3.62s/it] 65%|██████▌   | 6485/9908 [8:10:36<3:21:36,  3.53s/it] 65%|██████▌   | 6486/9908 [8:10:40<3:25:27,  3.60s/it] 65%|██████▌   | 6487/9908 [8:10:43<3:27:18,  3.64s/it] 65%|██████▌   | 6488/9908 [8:10:47<3:28:24,  3.66s/it] 65%|██████▌   | 6489/9908 [8:10:51<3:33:18,  3.74s/it] 66%|██████▌   | 6490/9908 [8:10:54<3:23:39,  3.58s/it] 66%|██████▌   | 6491/9908 [8:10:58<3:29:45,  3.68s/it] 66%|██████▌   | 6492/9908 [8:11:02<3:31:07,  3.71s/it] 66%|██████▌   | 6493/9908 [8:11:06<3:37:51,  3.83s/it] 66%|██████▌   | 6494/9908 [8:11:10<3:38:08,  3.83s/it] 66%|██████▌   | 6495/9908 [8:11:13<3:32:38,  3.74s/it] 66%|██████▌   | 6496/9908 [8:11:17<3:30:28,  3.70s/it] 66%|██████▌   | 6497/9908 [8:11:21<3:30:07,  3.70s/it] 66%|██████▌   | 6498/9908 [8:11:25<3:33:42,  3.76s/it] 66%|██████▌   | 6499/9908 [8:11:28<3:26:29,  3.63s/it]09/20/2024 09:48:01 - INFO - __main__ -   evaluate on ret%tvas--msrvtt_ret task
09/20/2024 09:48:01 - INFO - __main__ -   start running ret%tvas validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:00<03:30,  1.04it/s][A
  1%|          | 2/221 [00:01<02:10,  1.67it/s][A
  1%|▏         | 3/221 [00:01<02:08,  1.70it/s][A
  2%|▏         | 4/221 [00:02<01:38,  2.20it/s][A
  3%|▎         | 6/221 [00:02<00:58,  3.69it/s][A
  3%|▎         | 7/221 [00:02<00:53,  4.03it/s][A
  4%|▎         | 8/221 [00:02<01:03,  3.35it/s][A
  4%|▍         | 9/221 [00:03<01:12,  2.93it/s][A
  5%|▍         | 10/221 [00:03<01:16,  2.75it/s][A
  5%|▌         | 12/221 [00:06<03:09,  1.10it/s][A
  6%|▌         | 13/221 [00:07<02:35,  1.34it/s][A
  6%|▋         | 14/221 [00:07<02:00,  1.72it/s][A
  7%|▋         | 15/221 [00:07<01:58,  1.74it/s][A
  7%|▋         | 16/221 [00:08<01:58,  1.73it/s][A
  8%|▊         | 17/221 [00:09<02:06,  1.61it/s][A
  8%|▊         | 18/221 [00:09<01:42,  1.98it/s][A
  9%|▊         | 19/221 [00:12<03:51,  1.15s/it][A
  9%|▉         | 20/221 [00:12<02:49,  1.19it/s][A
 10%|▉         | 21/221 [00:12<02:18,  1.45it/s][A
 10%|▉         | 22/221 [00:13<02:24,  1.38it/s][A
 10%|█         | 23/221 [00:13<01:49,  1.81it/s][A
 11%|█         | 24/221 [00:13<01:30,  2.18it/s][A
 11%|█▏        | 25/221 [00:13<01:16,  2.56it/s][A
 12%|█▏        | 26/221 [00:14<01:11,  2.71it/s][A
 12%|█▏        | 27/221 [00:14<00:56,  3.43it/s][A
 13%|█▎        | 28/221 [00:14<01:08,  2.82it/s][A
 13%|█▎        | 29/221 [00:15<01:00,  3.20it/s][A
 14%|█▎        | 30/221 [00:15<01:18,  2.44it/s][A
 14%|█▍        | 31/221 [00:16<01:19,  2.40it/s][A
 14%|█▍        | 32/221 [00:16<01:02,  3.02it/s][A
 15%|█▍        | 33/221 [00:16<01:08,  2.76it/s][A
 15%|█▌        | 34/221 [00:16<00:56,  3.33it/s][A
 16%|█▌        | 35/221 [00:17<00:46,  3.97it/s][A
 16%|█▋        | 36/221 [00:17<00:43,  4.30it/s][A
 17%|█▋        | 37/221 [00:17<01:02,  2.94it/s][A
 17%|█▋        | 38/221 [00:18<01:08,  2.68it/s][A
 18%|█▊        | 39/221 [00:18<01:01,  2.98it/s][A
 18%|█▊        | 40/221 [00:19<01:14,  2.43it/s][A
 19%|█▊        | 41/221 [00:19<01:01,  2.94it/s][A
 19%|█▉        | 42/221 [00:19<00:48,  3.71it/s][A
 19%|█▉        | 43/221 [00:19<00:39,  4.50it/s][A
 20%|█▉        | 44/221 [00:19<00:33,  5.36it/s][A
 20%|██        | 45/221 [00:23<03:27,  1.18s/it][A
 21%|██        | 46/221 [00:23<02:37,  1.11it/s][A
 21%|██▏       | 47/221 [00:23<02:15,  1.29it/s][A
 22%|██▏       | 48/221 [00:23<01:39,  1.73it/s][A
 22%|██▏       | 49/221 [00:24<01:27,  1.96it/s][A
 23%|██▎       | 50/221 [00:24<01:30,  1.88it/s][A
 23%|██▎       | 51/221 [00:25<01:11,  2.37it/s][A
 24%|██▎       | 52/221 [00:25<00:58,  2.88it/s][A
 24%|██▍       | 53/221 [00:25<00:52,  3.17it/s][A
 24%|██▍       | 54/221 [00:26<01:16,  2.19it/s][A
 25%|██▍       | 55/221 [00:27<01:45,  1.57it/s][A
 25%|██▌       | 56/221 [00:27<01:25,  1.94it/s][A
 26%|██▌       | 57/221 [00:27<01:07,  2.45it/s][A
 27%|██▋       | 59/221 [00:27<00:46,  3.51it/s][A
 27%|██▋       | 60/221 [00:28<00:50,  3.17it/s][A
 28%|██▊       | 61/221 [00:28<00:47,  3.38it/s][A
 28%|██▊       | 62/221 [00:28<00:45,  3.47it/s][A
 29%|██▊       | 63/221 [00:29<00:41,  3.78it/s][A
 29%|██▉       | 64/221 [00:30<01:16,  2.05it/s][A
 29%|██▉       | 65/221 [00:30<01:00,  2.60it/s][A
 30%|██▉       | 66/221 [00:30<01:07,  2.31it/s][A
 30%|███       | 67/221 [00:31<01:00,  2.53it/s][A
 31%|███       | 68/221 [00:31<00:47,  3.24it/s][A
 31%|███       | 69/221 [00:32<01:42,  1.48it/s][A
 32%|███▏      | 70/221 [00:32<01:16,  1.98it/s][A
 32%|███▏      | 71/221 [00:33<01:09,  2.15it/s][A
 33%|███▎      | 72/221 [00:33<01:17,  1.91it/s][A
 33%|███▎      | 73/221 [00:34<01:15,  1.97it/s][A
 33%|███▎      | 74/221 [00:34<00:56,  2.58it/s][A
 34%|███▍      | 75/221 [00:34<00:54,  2.68it/s][A
 34%|███▍      | 76/221 [00:35<00:47,  3.03it/s][A
 35%|███▍      | 77/221 [00:37<02:10,  1.10it/s][A
 35%|███▌      | 78/221 [00:37<01:35,  1.50it/s][A
 36%|███▌      | 79/221 [00:38<01:55,  1.23it/s][A
 36%|███▌      | 80/221 [00:38<01:26,  1.62it/s][A
 37%|███▋      | 81/221 [00:39<01:26,  1.62it/s][A
 37%|███▋      | 82/221 [00:42<03:23,  1.46s/it][A
 38%|███▊      | 83/221 [00:43<02:47,  1.21s/it][A
 38%|███▊      | 84/221 [00:43<02:06,  1.08it/s][A
 38%|███▊      | 85/221 [00:43<01:32,  1.48it/s][A
 39%|███▉      | 86/221 [00:44<01:16,  1.76it/s][A
 39%|███▉      | 87/221 [00:44<01:21,  1.64it/s][A
 40%|███▉      | 88/221 [00:45<01:09,  1.92it/s][A
 40%|████      | 89/221 [00:45<01:02,  2.12it/s][A
 41%|████      | 90/221 [00:45<00:54,  2.40it/s][A
 41%|████      | 91/221 [00:45<00:43,  3.02it/s][A
 42%|████▏     | 92/221 [00:46<00:37,  3.42it/s][A
 42%|████▏     | 93/221 [00:46<00:43,  2.95it/s][A
 43%|████▎     | 94/221 [00:47<00:59,  2.15it/s][A
 43%|████▎     | 95/221 [00:47<00:58,  2.16it/s][A
 43%|████▎     | 96/221 [00:48<01:05,  1.90it/s][A
 44%|████▍     | 97/221 [00:48<00:52,  2.38it/s][A
 44%|████▍     | 98/221 [00:49<00:56,  2.16it/s][A
 45%|████▍     | 99/221 [00:49<00:50,  2.41it/s][A
 45%|████▌     | 100/221 [00:50<01:08,  1.77it/s][A
 46%|████▌     | 101/221 [00:50<00:53,  2.24it/s][A
 46%|████▌     | 102/221 [00:51<01:09,  1.70it/s][A
 47%|████▋     | 104/221 [00:51<00:49,  2.36it/s][A
 48%|████▊     | 105/221 [00:52<00:51,  2.27it/s][A
 48%|████▊     | 106/221 [00:54<01:28,  1.30it/s][A
 48%|████▊     | 107/221 [00:54<01:13,  1.56it/s][A
 49%|████▉     | 108/221 [00:54<01:08,  1.65it/s][A
 49%|████▉     | 109/221 [00:55<00:59,  1.87it/s][A
 50%|████▉     | 110/221 [00:55<00:45,  2.44it/s][A
 50%|█████     | 111/221 [00:55<00:45,  2.44it/s][A
 51%|█████     | 112/221 [00:56<00:42,  2.56it/s][A
 51%|█████     | 113/221 [00:56<00:36,  2.98it/s][A
 52%|█████▏    | 114/221 [00:56<00:28,  3.75it/s][A
 52%|█████▏    | 115/221 [00:56<00:34,  3.05it/s][A
 52%|█████▏    | 116/221 [00:57<00:35,  3.00it/s][A
 53%|█████▎    | 117/221 [00:57<00:37,  2.81it/s][A
 53%|█████▎    | 118/221 [00:58<00:39,  2.59it/s][A
 54%|█████▍    | 119/221 [00:58<00:30,  3.32it/s][A
 54%|█████▍    | 120/221 [00:58<00:26,  3.74it/s][A
 55%|█████▍    | 121/221 [00:59<00:36,  2.77it/s][A
 55%|█████▌    | 122/221 [00:59<00:36,  2.70it/s][A
 56%|█████▌    | 123/221 [01:01<01:13,  1.33it/s][A
 56%|█████▌    | 124/221 [01:01<00:56,  1.72it/s][A
 57%|█████▋    | 125/221 [01:02<01:01,  1.55it/s][A
 57%|█████▋    | 126/221 [01:10<04:38,  2.93s/it][A
 57%|█████▋    | 127/221 [01:10<03:31,  2.25s/it][A
 58%|█████▊    | 128/221 [01:11<02:38,  1.70s/it][A
 58%|█████▊    | 129/221 [01:11<02:01,  1.32s/it][A
 59%|█████▉    | 130/221 [01:12<01:30,  1.01it/s][A
 59%|█████▉    | 131/221 [01:12<01:25,  1.05it/s][A
 60%|█████▉    | 132/221 [01:14<01:38,  1.11s/it][A
 60%|██████    | 133/221 [01:15<01:25,  1.03it/s][A
 61%|██████    | 134/221 [01:15<01:20,  1.08it/s][A
 61%|██████    | 135/221 [01:16<01:09,  1.23it/s][A
 62%|██████▏   | 136/221 [01:16<00:56,  1.50it/s][A
 62%|██████▏   | 137/221 [01:17<00:47,  1.77it/s][A
 62%|██████▏   | 138/221 [01:17<00:45,  1.83it/s][A
 63%|██████▎   | 139/221 [01:17<00:36,  2.27it/s][A
 63%|██████▎   | 140/221 [01:18<00:37,  2.18it/s][A
 64%|██████▍   | 141/221 [01:18<00:36,  2.19it/s][A
 64%|██████▍   | 142/221 [01:19<00:33,  2.38it/s][A
 65%|██████▍   | 143/221 [01:19<00:31,  2.49it/s][A
 65%|██████▌   | 144/221 [01:19<00:27,  2.84it/s][A
 66%|██████▌   | 146/221 [01:19<00:17,  4.29it/s][A
 67%|██████▋   | 147/221 [01:19<00:15,  4.92it/s][A
 67%|██████▋   | 148/221 [01:21<00:32,  2.25it/s][A
 67%|██████▋   | 149/221 [01:21<00:31,  2.26it/s][A
 68%|██████▊   | 150/221 [01:21<00:32,  2.18it/s][A
 68%|██████▊   | 151/221 [01:22<00:28,  2.49it/s][A
 69%|██████▉   | 152/221 [01:22<00:26,  2.65it/s][A
 69%|██████▉   | 153/221 [01:22<00:20,  3.25it/s][A
 70%|██████▉   | 154/221 [01:22<00:18,  3.67it/s][A
 70%|███████   | 155/221 [01:23<00:16,  4.11it/s][A
 71%|███████   | 156/221 [01:23<00:15,  4.17it/s][A
 71%|███████   | 157/221 [01:29<02:07,  1.99s/it][A
 71%|███████▏  | 158/221 [01:30<01:42,  1.63s/it][A
 72%|███████▏  | 159/221 [01:30<01:15,  1.21s/it][A
 72%|███████▏  | 160/221 [01:30<00:54,  1.12it/s][A
 73%|███████▎  | 162/221 [01:30<00:30,  1.92it/s][A
 74%|███████▍  | 163/221 [01:31<00:27,  2.15it/s][A
 74%|███████▍  | 164/221 [01:31<00:22,  2.55it/s][A
 75%|███████▍  | 165/221 [01:31<00:22,  2.50it/s][A
 75%|███████▌  | 166/221 [01:32<00:27,  2.01it/s][A
 76%|███████▌  | 167/221 [01:32<00:23,  2.28it/s][A
 76%|███████▌  | 168/221 [01:36<01:16,  1.44s/it][A
 76%|███████▋  | 169/221 [01:36<00:59,  1.14s/it][A
 77%|███████▋  | 170/221 [01:37<00:46,  1.09it/s][A
 77%|███████▋  | 171/221 [01:37<00:37,  1.34it/s][A
 78%|███████▊  | 172/221 [01:37<00:29,  1.64it/s][A
 78%|███████▊  | 173/221 [01:38<00:27,  1.75it/s][A
 79%|███████▊  | 174/221 [01:38<00:23,  1.99it/s][A
 79%|███████▉  | 175/221 [01:39<00:20,  2.28it/s][A
 80%|███████▉  | 176/221 [01:39<00:17,  2.51it/s][A
 80%|████████  | 177/221 [01:39<00:16,  2.71it/s][A
 81%|████████  | 178/221 [01:40<00:16,  2.64it/s][A
 81%|████████  | 179/221 [01:40<00:14,  2.92it/s][A
 81%|████████▏ | 180/221 [01:40<00:12,  3.16it/s][A
 82%|████████▏ | 181/221 [01:40<00:11,  3.43it/s][A
 82%|████████▏ | 182/221 [01:41<00:13,  2.99it/s][A
 83%|████████▎ | 183/221 [01:41<00:16,  2.27it/s][A
 83%|████████▎ | 184/221 [01:42<00:15,  2.38it/s][A
 84%|████████▎ | 185/221 [01:42<00:13,  2.69it/s][A
 84%|████████▍ | 186/221 [01:42<00:11,  3.12it/s][A
 85%|████████▍ | 187/221 [01:43<00:10,  3.15it/s][A
 85%|████████▌ | 188/221 [01:43<00:09,  3.34it/s][A
 86%|████████▌ | 189/221 [01:43<00:09,  3.33it/s][A
 86%|████████▌ | 190/221 [01:44<00:11,  2.71it/s][A
 86%|████████▋ | 191/221 [01:44<00:09,  3.03it/s][A
 87%|████████▋ | 192/221 [01:45<00:13,  2.19it/s][A
 87%|████████▋ | 193/221 [01:45<00:10,  2.64it/s][A
 88%|████████▊ | 194/221 [01:45<00:11,  2.33it/s][A
 88%|████████▊ | 195/221 [01:46<00:09,  2.76it/s][A
 89%|████████▊ | 196/221 [01:46<00:10,  2.46it/s][A
 89%|████████▉ | 197/221 [01:46<00:09,  2.65it/s][A
 90%|████████▉ | 198/221 [01:47<00:07,  2.95it/s][A
 90%|█████████ | 199/221 [01:47<00:06,  3.32it/s][A
 90%|█████████ | 200/221 [01:48<00:10,  1.91it/s][A
 91%|█████████ | 201/221 [01:49<00:10,  1.88it/s][A
 91%|█████████▏| 202/221 [01:49<00:08,  2.14it/s][A
 92%|█████████▏| 203/221 [01:50<00:11,  1.63it/s][A
 92%|█████████▏| 204/221 [01:51<00:11,  1.47it/s][A
 93%|█████████▎| 206/221 [01:51<00:07,  2.07it/s][A
 94%|█████████▎| 207/221 [01:51<00:05,  2.53it/s][A
 94%|█████████▍| 208/221 [01:52<00:05,  2.28it/s][A
 95%|█████████▌| 210/221 [01:52<00:03,  3.14it/s][A
 95%|█████████▌| 211/221 [01:53<00:03,  2.59it/s][A
 96%|█████████▌| 212/221 [01:53<00:03,  2.83it/s][A
 96%|█████████▋| 213/221 [01:53<00:02,  3.36it/s][A
 97%|█████████▋| 214/221 [01:54<00:02,  2.95it/s][A
 97%|█████████▋| 215/221 [01:54<00:02,  2.55it/s][A
 98%|█████████▊| 216/221 [01:54<00:01,  2.66it/s][A
 98%|█████████▊| 217/221 [01:56<00:02,  1.45it/s][A
 99%|█████████▊| 218/221 [01:56<00:01,  1.69it/s][A
 99%|█████████▉| 219/221 [01:57<00:01,  1.93it/s][A
100%|█████████▉| 220/221 [01:59<00:00,  1.02it/s][A
100%|██████████| 221/221 [01:59<00:00,  1.36it/s][A100%|██████████| 221/221 [01:59<00:00,  1.85it/s]

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:00<01:56,  1.89it/s][A
  1%|          | 2/221 [00:01<01:55,  1.89it/s][A
  1%|▏         | 3/221 [00:01<01:55,  1.89it/s][A
  2%|▏         | 4/221 [00:02<01:54,  1.89it/s][A
  2%|▏         | 5/221 [00:02<01:54,  1.89it/s][A
  3%|▎         | 6/221 [00:03<01:53,  1.89it/s][A
  3%|▎         | 7/221 [00:03<01:53,  1.89it/s][A
  4%|▎         | 8/221 [00:04<01:52,  1.89it/s][A
  4%|▍         | 9/221 [00:04<01:52,  1.89it/s][A
  5%|▍         | 10/221 [00:05<01:51,  1.89it/s][A
  5%|▍         | 11/221 [00:05<01:51,  1.89it/s][A
  5%|▌         | 12/221 [00:06<01:50,  1.89it/s][A
  6%|▌         | 13/221 [00:06<01:49,  1.89it/s][A
  6%|▋         | 14/221 [00:07<01:49,  1.89it/s][A
  7%|▋         | 15/221 [00:07<01:48,  1.89it/s][A
  7%|▋         | 16/221 [00:08<01:48,  1.89it/s][A
  8%|▊         | 17/221 [00:08<01:47,  1.89it/s][A
  8%|▊         | 18/221 [00:09<01:47,  1.89it/s][A
  9%|▊         | 19/221 [00:10<01:46,  1.89it/s][A
  9%|▉         | 20/221 [00:10<01:46,  1.89it/s][A
 10%|▉         | 21/221 [00:11<01:45,  1.89it/s][A
 10%|▉         | 22/221 [00:11<01:45,  1.89it/s][A
 10%|█         | 23/221 [00:12<01:44,  1.89it/s][A
 11%|█         | 24/221 [00:12<01:44,  1.89it/s][A
 11%|█▏        | 25/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 26/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 27/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 28/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 29/221 [00:15<01:41,  1.89it/s][A
 14%|█▎        | 30/221 [00:15<01:40,  1.89it/s][A
 14%|█▍        | 31/221 [00:16<01:40,  1.89it/s][A
 14%|█▍        | 32/221 [00:16<01:39,  1.89it/s][A
 15%|█▍        | 33/221 [00:17<01:39,  1.89it/s][A
 15%|█▌        | 34/221 [00:17<01:38,  1.89it/s][A
 16%|█▌        | 35/221 [00:18<01:38,  1.89it/s][A
 16%|█▋        | 36/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 37/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 38/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 39/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 40/221 [00:21<01:35,  1.89it/s][A
 19%|█▊        | 41/221 [00:21<01:35,  1.89it/s][A
 19%|█▉        | 42/221 [00:22<01:34,  1.89it/s][A
 19%|█▉        | 43/221 [00:22<01:34,  1.89it/s][A
 20%|█▉        | 44/221 [00:23<01:33,  1.89it/s][A
 20%|██        | 45/221 [00:23<01:33,  1.89it/s][A
 21%|██        | 46/221 [00:24<01:32,  1.89it/s][A
 21%|██▏       | 47/221 [00:24<01:31,  1.89it/s][A
 22%|██▏       | 48/221 [00:25<01:31,  1.89it/s][A
 22%|██▏       | 49/221 [00:25<01:30,  1.89it/s][A
 23%|██▎       | 50/221 [00:26<01:30,  1.89it/s][A
 23%|██▎       | 51/221 [00:26<01:29,  1.89it/s][A
 24%|██▎       | 52/221 [00:27<01:29,  1.89it/s][A
 24%|██▍       | 53/221 [00:28<01:28,  1.89it/s][A
 24%|██▍       | 54/221 [00:28<01:28,  1.89it/s][A
 25%|██▍       | 55/221 [00:29<01:27,  1.89it/s][A
 25%|██▌       | 56/221 [00:29<01:27,  1.89it/s][A
 26%|██▌       | 57/221 [00:30<01:26,  1.89it/s][A
 26%|██▌       | 58/221 [00:30<01:26,  1.89it/s][A
 27%|██▋       | 59/221 [00:31<01:25,  1.89it/s][A
 27%|██▋       | 60/221 [00:31<01:25,  1.89it/s][A
 28%|██▊       | 61/221 [00:32<01:24,  1.89it/s][A
 28%|██▊       | 62/221 [00:32<01:24,  1.89it/s][A
 29%|██▊       | 63/221 [00:33<01:23,  1.89it/s][A
 29%|██▉       | 64/221 [00:33<01:22,  1.89it/s][A
 29%|██▉       | 65/221 [00:34<01:22,  1.89it/s][A
 30%|██▉       | 66/221 [00:34<01:21,  1.89it/s][A
 30%|███       | 67/221 [00:35<01:21,  1.89it/s][A
 31%|███       | 68/221 [00:35<01:20,  1.89it/s][A
 31%|███       | 69/221 [00:36<01:20,  1.89it/s][A
 32%|███▏      | 70/221 [00:37<01:19,  1.89it/s][A
 32%|███▏      | 71/221 [00:37<01:19,  1.89it/s][A
 33%|███▎      | 72/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 73/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 74/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 75/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 76/221 [00:40<01:16,  1.89it/s][A
 35%|███▍      | 77/221 [00:40<01:16,  1.89it/s][A
 35%|███▌      | 78/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 79/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 80/221 [00:42<01:14,  1.89it/s][A
 37%|███▋      | 81/221 [00:42<01:14,  1.89it/s][A
 37%|███▋      | 82/221 [00:43<01:13,  1.89it/s][A
 38%|███▊      | 83/221 [00:43<01:12,  1.89it/s][A
 38%|███▊      | 84/221 [00:44<01:12,  1.89it/s][A
 38%|███▊      | 85/221 [00:44<01:11,  1.89it/s][A
 39%|███▉      | 86/221 [00:45<01:11,  1.89it/s][A
 39%|███▉      | 87/221 [00:45<01:10,  1.89it/s][A
 40%|███▉      | 88/221 [00:46<01:10,  1.89it/s][A
 40%|████      | 89/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 90/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 91/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 92/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 93/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 94/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 95/221 [00:50<01:06,  1.89it/s][A
 43%|████▎     | 96/221 [00:50<01:06,  1.89it/s][A
 44%|████▍     | 97/221 [00:51<01:05,  1.89it/s][A
 44%|████▍     | 98/221 [00:51<01:05,  1.89it/s][A
 45%|████▍     | 99/221 [00:52<01:04,  1.89it/s][A
 45%|████▌     | 100/221 [00:52<01:03,  1.89it/s][A
 46%|████▌     | 101/221 [00:53<01:03,  1.89it/s][A
 46%|████▌     | 102/221 [00:53<01:02,  1.89it/s][A
 47%|████▋     | 103/221 [00:54<01:02,  1.89it/s][A
 47%|████▋     | 104/221 [00:54<01:01,  1.89it/s][A
 48%|████▊     | 105/221 [00:55<01:01,  1.89it/s][A
 48%|████▊     | 106/221 [00:56<01:00,  1.89it/s][A
 48%|████▊     | 107/221 [00:56<01:00,  1.89it/s][A
 49%|████▉     | 108/221 [00:57<00:59,  1.89it/s][A
 49%|████▉     | 109/221 [00:57<00:59,  1.89it/s][A
 50%|████▉     | 110/221 [00:58<00:58,  1.89it/s][A
 50%|█████     | 111/221 [00:58<00:58,  1.89it/s][A
 51%|█████     | 112/221 [00:59<00:57,  1.89it/s][A
 51%|█████     | 113/221 [00:59<00:57,  1.89it/s][A
 52%|█████▏    | 114/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 115/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 116/221 [01:01<00:55,  1.89it/s][A
 53%|█████▎    | 117/221 [01:01<00:54,  1.89it/s][A
 53%|█████▎    | 118/221 [01:02<00:54,  1.89it/s][A
 54%|█████▍    | 119/221 [01:02<00:53,  1.89it/s][A
 54%|█████▍    | 120/221 [01:03<00:53,  1.89it/s][A
 55%|█████▍    | 121/221 [01:03<00:52,  1.89it/s][A
 55%|█████▌    | 122/221 [01:04<00:52,  1.89it/s][A
 56%|█████▌    | 123/221 [01:05<00:51,  1.89it/s][A
 56%|█████▌    | 124/221 [01:05<00:51,  1.89it/s][A
 57%|█████▋    | 125/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 126/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 127/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 128/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 129/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 130/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 131/221 [01:09<00:47,  1.89it/s][A
 60%|█████▉    | 132/221 [01:09<00:47,  1.89it/s][A
 60%|██████    | 133/221 [01:10<00:46,  1.89it/s][A
 61%|██████    | 134/221 [01:10<00:45,  1.89it/s][A
 61%|██████    | 135/221 [01:11<00:45,  1.89it/s][A
 62%|██████▏   | 136/221 [01:11<00:44,  1.89it/s][A
 62%|██████▏   | 137/221 [01:12<00:44,  1.89it/s][A
 62%|██████▏   | 138/221 [01:12<00:43,  1.89it/s][A
 63%|██████▎   | 139/221 [01:13<00:43,  1.89it/s][A
 63%|██████▎   | 140/221 [01:14<00:42,  1.89it/s][A
 64%|██████▍   | 141/221 [01:14<00:42,  1.89it/s][A
 64%|██████▍   | 142/221 [01:15<00:41,  1.89it/s][A
 65%|██████▍   | 143/221 [01:15<00:41,  1.89it/s][A
 65%|██████▌   | 144/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 145/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 146/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 147/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 148/221 [01:18<00:38,  1.89it/s][A
 67%|██████▋   | 149/221 [01:18<00:38,  1.89it/s][A
 68%|██████▊   | 150/221 [01:19<00:37,  1.89it/s][A
 68%|██████▊   | 151/221 [01:19<00:37,  1.89it/s][A
 69%|██████▉   | 152/221 [01:20<00:36,  1.89it/s][A
 69%|██████▉   | 153/221 [01:20<00:35,  1.89it/s][A
 70%|██████▉   | 154/221 [01:21<00:35,  1.89it/s][A
 70%|███████   | 155/221 [01:21<00:34,  1.89it/s][A
 71%|███████   | 156/221 [01:22<00:34,  1.89it/s][A
 71%|███████   | 157/221 [01:22<00:33,  1.89it/s][A
 71%|███████▏  | 158/221 [01:23<00:33,  1.89it/s][A
 72%|███████▏  | 159/221 [01:24<00:32,  1.89it/s][A
 72%|███████▏  | 160/221 [01:24<00:32,  1.89it/s][A
 73%|███████▎  | 161/221 [01:25<00:31,  1.89it/s][A
 73%|███████▎  | 162/221 [01:25<00:31,  1.89it/s][A
 74%|███████▍  | 163/221 [01:26<00:30,  1.89it/s][A
 74%|███████▍  | 164/221 [01:26<00:30,  1.89it/s][A
 75%|███████▍  | 165/221 [01:27<00:29,  1.89it/s][A
 75%|███████▌  | 166/221 [01:27<00:29,  1.89it/s][A
 76%|███████▌  | 167/221 [01:28<00:28,  1.89it/s][A
 76%|███████▌  | 168/221 [01:28<00:28,  1.89it/s][A
 76%|███████▋  | 169/221 [01:29<00:27,  1.89it/s][A
 77%|███████▋  | 170/221 [01:29<00:26,  1.89it/s][A
 77%|███████▋  | 171/221 [01:30<00:26,  1.89it/s][A
 78%|███████▊  | 172/221 [01:30<00:25,  1.89it/s][A
 78%|███████▊  | 173/221 [01:31<00:25,  1.89it/s][A
 79%|███████▊  | 174/221 [01:31<00:24,  1.89it/s][A
 79%|███████▉  | 175/221 [01:32<00:24,  1.89it/s][A
 80%|███████▉  | 176/221 [01:33<00:23,  1.89it/s][A
 80%|████████  | 177/221 [01:33<00:23,  1.89it/s][A
 81%|████████  | 178/221 [01:34<00:22,  1.89it/s][A
 81%|████████  | 179/221 [01:34<00:22,  1.89it/s][A
 81%|████████▏ | 180/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 181/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 182/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 183/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 184/221 [01:37<00:19,  1.89it/s][A
 84%|████████▎ | 185/221 [01:37<00:19,  1.89it/s][A
 84%|████████▍ | 186/221 [01:38<00:18,  1.89it/s][A
 85%|████████▍ | 187/221 [01:38<00:17,  1.89it/s][A
 85%|████████▌ | 188/221 [01:39<00:17,  1.89it/s][A
 86%|████████▌ | 189/221 [01:39<00:16,  1.89it/s][A
 86%|████████▌ | 190/221 [01:40<00:16,  1.89it/s][A
 86%|████████▋ | 191/221 [01:40<00:15,  1.89it/s][A
 87%|████████▋ | 192/221 [01:41<00:15,  1.89it/s][A
 87%|████████▋ | 193/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 194/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 195/221 [01:43<00:13,  1.89it/s][A
 89%|████████▊ | 196/221 [01:43<00:13,  1.89it/s][A
 89%|████████▉ | 197/221 [01:44<00:12,  1.89it/s][A
 90%|████████▉ | 198/221 [01:44<00:12,  1.89it/s][A
 90%|█████████ | 199/221 [01:45<00:11,  1.89it/s][A
 90%|█████████ | 200/221 [01:45<00:11,  1.89it/s][A
 91%|█████████ | 201/221 [01:46<00:10,  1.89it/s][A
 91%|█████████▏| 202/221 [01:46<00:10,  1.89it/s][A
 92%|█████████▏| 203/221 [01:47<00:09,  1.89it/s][A
 92%|█████████▏| 204/221 [01:47<00:08,  1.89it/s][A
 93%|█████████▎| 205/221 [01:48<00:08,  1.89it/s][A
 93%|█████████▎| 206/221 [01:48<00:07,  1.89it/s][A
 94%|█████████▎| 207/221 [01:49<00:07,  1.89it/s][A
 94%|█████████▍| 208/221 [01:49<00:06,  1.89it/s][A
 95%|█████████▍| 209/221 [01:50<00:06,  1.89it/s][A
 95%|█████████▌| 210/221 [01:51<00:05,  1.89it/s][A
 95%|█████████▌| 211/221 [01:51<00:05,  1.89it/s][A
 96%|█████████▌| 212/221 [01:52<00:04,  1.89it/s][A
 96%|█████████▋| 213/221 [01:52<00:04,  1.89it/s][A
 97%|█████████▋| 214/221 [01:53<00:03,  1.89it/s][A
 97%|█████████▋| 215/221 [01:53<00:03,  1.89it/s][A
 98%|█████████▊| 216/221 [01:54<00:02,  1.89it/s][A
 98%|█████████▊| 217/221 [01:54<00:02,  1.89it/s][A
 99%|█████████▊| 218/221 [01:55<00:01,  1.89it/s][A
 99%|█████████▉| 219/221 [01:55<00:01,  1.89it/s][A
100%|█████████▉| 220/221 [01:56<00:00,  1.89it/s][A
100%|██████████| 221/221 [01:56<00:00,  1.89it/s][A100%|██████████| 221/221 [01:56<00:00,  1.89it/s]
09/20/2024 09:54:51 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_forward=====step 6499--===========

09/20/2024 09:54:51 - INFO - __main__ -   {'area_r1': 47.4, 'area_recall': '47.4/77.0/84.0', 'area_ravg': 69.5}
09/20/2024 09:54:51 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_backard=====step 6499--===========

09/20/2024 09:54:51 - INFO - __main__ -   {'forward_r1': 51.4, 'forward_recall': '51.4/79.2/88.0', 'forward_ravg': 72.9}
09/20/2024 09:54:51 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video=====step 6499--===========

09/20/2024 09:54:51 - INFO - __main__ -   {'area_video_r1': 50.3, 'area_video_recall': '50.3/79.6/88.6', 'area_video_ravg': 72.9}
09/20/2024 09:54:51 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video====history best step: 6499=======

09/20/2024 09:54:51 - INFO - __main__ -   {'area_video_r1': 50.3, 'area_video_recall': '50.3/79.6/88.6', 'area_video_ravg': 72.9}
09/20/2024 09:54:51 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itm_area=====step 6499--===========

09/20/2024 09:54:51 - INFO - __main__ -   {'area_video_r1': 62.4, 'area_video_recall': '62.4/83.3/89.7', 'area_video_ravg': 78.5, 'area_video_back_r1': 60.5, 'area_video_back_recall': '60.5/84.8/91.6', 'area_video_back_ravg': 79.0}
09/20/2024 09:54:51 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itm_area====history best step: 6499=======

09/20/2024 09:54:51 - INFO - __main__ -   {'area_video_r1': 62.4, 'area_video_recall': '62.4/83.3/89.7', 'area_video_ravg': 78.5, 'area_video_back_r1': 60.5, 'area_video_back_recall': '60.5/84.8/91.6', 'area_video_back_ravg': 79.0}
09/20/2024 09:54:51 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas=====step 6499--===========

09/20/2024 09:54:51 - INFO - __main__ -   {'video_r1': 30.8, 'video_recall': '30.8/56.6/67.2', 'video_ravg': 51.5}
09/20/2024 09:54:51 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas====history best step: 1499=======

09/20/2024 09:54:51 - INFO - __main__ -   {'video_r1': 34.7, 'video_recall': '34.7/60.5/72.3', 'video_ravg': 55.8}
09/20/2024 09:55:21 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.029336323961615562, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 0.9928330183029175, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.0221693515777588}
 66%|██████▌   | 6500/9908 [8:18:50<127:49:44, 135.03s/it] 66%|██████▌   | 6501/9908 [8:18:53<90:24:17, 95.53s/it]   66%|██████▌   | 6502/9908 [8:18:56<64:13:57, 67.89s/it] 66%|██████▌   | 6503/9908 [8:19:00<45:59:34, 48.63s/it] 66%|██████▌   | 6504/9908 [8:19:04<33:19:11, 35.24s/it] 66%|██████▌   | 6505/9908 [8:19:08<24:19:46, 25.74s/it] 66%|██████▌   | 6506/9908 [8:19:11<18:02:24, 19.09s/it] 66%|██████▌   | 6507/9908 [8:19:15<13:46:42, 14.58s/it] 66%|██████▌   | 6508/9908 [8:19:19<10:48:10, 11.44s/it] 66%|██████▌   | 6509/9908 [8:19:23<8:30:45,  9.02s/it]  66%|██████▌   | 6510/9908 [8:19:27<7:02:40,  7.46s/it] 66%|██████▌   | 6511/9908 [8:19:30<5:59:00,  6.34s/it] 66%|██████▌   | 6512/9908 [8:19:34<5:12:39,  5.52s/it] 66%|██████▌   | 6513/9908 [8:19:37<4:39:34,  4.94s/it] 66%|██████▌   | 6514/9908 [8:19:41<4:17:47,  4.56s/it] 66%|██████▌   | 6515/9908 [8:19:45<3:57:28,  4.20s/it] 66%|██████▌   | 6516/9908 [8:19:48<3:51:06,  4.09s/it] 66%|██████▌   | 6517/9908 [8:19:52<3:46:06,  4.00s/it] 66%|██████▌   | 6518/9908 [8:19:56<3:42:59,  3.95s/it] 66%|██████▌   | 6519/9908 [8:20:00<3:40:12,  3.90s/it] 66%|██████▌   | 6520/9908 [8:20:03<3:36:05,  3.83s/it] 66%|██████▌   | 6521/9908 [8:20:07<3:39:47,  3.89s/it] 66%|██████▌   | 6522/9908 [8:20:11<3:30:38,  3.73s/it] 66%|██████▌   | 6523/9908 [8:20:15<3:32:52,  3.77s/it] 66%|██████▌   | 6524/9908 [8:20:18<3:28:41,  3.70s/it] 66%|██████▌   | 6525/9908 [8:20:22<3:29:41,  3.72s/it] 66%|██████▌   | 6526/9908 [8:20:26<3:33:25,  3.79s/it] 66%|██████▌   | 6527/9908 [8:20:30<3:32:13,  3.77s/it] 66%|██████▌   | 6528/9908 [8:20:33<3:32:22,  3.77s/it] 66%|██████▌   | 6529/9908 [8:20:37<3:23:48,  3.62s/it] 66%|██████▌   | 6530/9908 [8:20:40<3:25:59,  3.66s/it] 66%|██████▌   | 6531/9908 [8:20:44<3:26:33,  3.67s/it] 66%|██████▌   | 6532/9908 [8:20:48<3:25:51,  3.66s/it] 66%|██████▌   | 6533/9908 [8:20:51<3:21:56,  3.59s/it] 66%|██████▌   | 6534/9908 [8:20:55<3:27:37,  3.69s/it] 66%|██████▌   | 6535/9908 [8:20:59<3:35:58,  3.84s/it] 66%|██████▌   | 6536/9908 [8:21:03<3:32:24,  3.78s/it] 66%|██████▌   | 6537/9908 [8:21:07<3:28:41,  3.71s/it] 66%|██████▌   | 6538/9908 [8:21:10<3:25:49,  3.66s/it] 66%|██████▌   | 6539/9908 [8:21:14<3:29:50,  3.74s/it] 66%|██████▌   | 6540/9908 [8:21:18<3:31:12,  3.76s/it] 66%|██████▌   | 6541/9908 [8:21:22<3:32:00,  3.78s/it] 66%|██████▌   | 6542/9908 [8:21:25<3:29:47,  3.74s/it] 66%|██████▌   | 6543/9908 [8:21:30<3:38:11,  3.89s/it] 66%|██████▌   | 6544/9908 [8:21:33<3:33:52,  3.81s/it] 66%|██████▌   | 6545/9908 [8:21:37<3:32:29,  3.79s/it] 66%|██████▌   | 6546/9908 [8:21:41<3:32:58,  3.80s/it] 66%|██████▌   | 6547/9908 [8:21:44<3:27:31,  3.70s/it] 66%|██████▌   | 6548/9908 [8:21:48<3:26:44,  3.69s/it] 66%|██████▌   | 6549/9908 [8:21:51<3:25:34,  3.67s/it]09/20/2024 09:58:26 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.027511129155755043, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.3522990942001343, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.3798102140426636}
 66%|██████▌   | 6550/9908 [8:21:55<3:26:29,  3.69s/it] 66%|██████▌   | 6551/9908 [8:21:59<3:27:43,  3.71s/it] 66%|██████▌   | 6552/9908 [8:22:02<3:23:43,  3.64s/it] 66%|██████▌   | 6553/9908 [8:22:06<3:21:59,  3.61s/it] 66%|██████▌   | 6554/9908 [8:22:10<3:22:52,  3.63s/it] 66%|██████▌   | 6555/9908 [8:22:14<3:33:36,  3.82s/it] 66%|██████▌   | 6556/9908 [8:22:18<3:30:26,  3.77s/it] 66%|██████▌   | 6557/9908 [8:22:21<3:31:05,  3.78s/it] 66%|██████▌   | 6558/9908 [8:22:25<3:31:12,  3.78s/it] 66%|██████▌   | 6559/9908 [8:22:29<3:25:33,  3.68s/it] 66%|██████▌   | 6560/9908 [8:22:32<3:23:56,  3.65s/it] 66%|██████▌   | 6561/9908 [8:22:36<3:24:55,  3.67s/it] 66%|██████▌   | 6562/9908 [8:22:39<3:20:14,  3.59s/it] 66%|██████▌   | 6563/9908 [8:22:43<3:19:48,  3.58s/it] 66%|██████▌   | 6564/9908 [8:22:47<3:22:22,  3.63s/it] 66%|██████▋   | 6565/9908 [8:22:50<3:22:44,  3.64s/it] 66%|██████▋   | 6566/9908 [8:22:54<3:27:03,  3.72s/it] 66%|██████▋   | 6567/9908 [8:22:58<3:22:06,  3.63s/it] 66%|██████▋   | 6568/9908 [8:23:01<3:24:40,  3.68s/it] 66%|██████▋   | 6569/9908 [8:23:05<3:25:45,  3.70s/it] 66%|██████▋   | 6570/9908 [8:23:09<3:30:09,  3.78s/it] 66%|██████▋   | 6571/9908 [8:23:13<3:30:19,  3.78s/it] 66%|██████▋   | 6572/9908 [8:23:16<3:25:16,  3.69s/it] 66%|██████▋   | 6573/9908 [8:23:20<3:27:07,  3.73s/it] 66%|██████▋   | 6574/9908 [8:23:24<3:29:22,  3.77s/it] 66%|██████▋   | 6575/9908 [8:23:27<3:22:15,  3.64s/it] 66%|██████▋   | 6576/9908 [8:23:31<3:20:17,  3.61s/it] 66%|██████▋   | 6577/9908 [8:23:35<3:25:05,  3.69s/it] 66%|██████▋   | 6578/9908 [8:23:39<3:26:20,  3.72s/it] 66%|██████▋   | 6579/9908 [8:23:42<3:23:03,  3.66s/it] 66%|██████▋   | 6580/9908 [8:23:46<3:19:05,  3.59s/it] 66%|██████▋   | 6581/9908 [8:23:50<3:27:26,  3.74s/it] 66%|██████▋   | 6582/9908 [8:23:54<3:29:44,  3.78s/it] 66%|██████▋   | 6583/9908 [8:23:57<3:26:35,  3.73s/it] 66%|██████▋   | 6584/9908 [8:24:01<3:21:40,  3.64s/it] 66%|██████▋   | 6585/9908 [8:24:04<3:24:15,  3.69s/it] 66%|██████▋   | 6586/9908 [8:24:08<3:22:30,  3.66s/it] 66%|██████▋   | 6587/9908 [8:24:11<3:19:35,  3.61s/it] 66%|██████▋   | 6588/9908 [8:24:16<3:29:55,  3.79s/it] 67%|██████▋   | 6589/9908 [8:24:19<3:24:08,  3.69s/it] 67%|██████▋   | 6590/9908 [8:24:23<3:21:48,  3.65s/it] 67%|██████▋   | 6591/9908 [8:24:26<3:20:55,  3.63s/it] 67%|██████▋   | 6592/9908 [8:24:30<3:28:59,  3.78s/it] 67%|██████▋   | 6593/9908 [8:24:34<3:25:34,  3.72s/it] 67%|██████▋   | 6594/9908 [8:24:38<3:24:14,  3.70s/it] 67%|██████▋   | 6595/9908 [8:24:41<3:24:57,  3.71s/it] 67%|██████▋   | 6596/9908 [8:24:45<3:23:55,  3.69s/it] 67%|██████▋   | 6597/9908 [8:24:49<3:21:53,  3.66s/it] 67%|██████▋   | 6598/9908 [8:24:52<3:14:30,  3.53s/it] 67%|██████▋   | 6599/9908 [8:24:56<3:20:19,  3.63s/it]09/20/2024 10:01:30 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.021778520196676254, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2420785427093506, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.2638570070266724}
 67%|██████▋   | 6600/9908 [8:25:00<3:23:51,  3.70s/it] 67%|██████▋   | 6601/9908 [8:25:03<3:27:09,  3.76s/it] 67%|██████▋   | 6602/9908 [8:25:07<3:28:24,  3.78s/it] 67%|██████▋   | 6603/9908 [8:25:11<3:26:01,  3.74s/it] 67%|██████▋   | 6604/9908 [8:25:15<3:29:04,  3.80s/it] 67%|██████▋   | 6605/9908 [8:25:18<3:25:01,  3.72s/it] 67%|██████▋   | 6606/9908 [8:25:22<3:26:38,  3.75s/it] 67%|██████▋   | 6607/9908 [8:25:26<3:25:07,  3.73s/it] 67%|██████▋   | 6608/9908 [8:25:30<3:28:57,  3.80s/it] 67%|██████▋   | 6609/9908 [8:25:34<3:29:15,  3.81s/it] 67%|██████▋   | 6610/9908 [8:25:37<3:28:16,  3.79s/it] 67%|██████▋   | 6611/9908 [8:25:41<3:27:26,  3.78s/it] 67%|██████▋   | 6612/9908 [8:25:45<3:28:59,  3.80s/it] 67%|██████▋   | 6613/9908 [8:25:49<3:24:55,  3.73s/it] 67%|██████▋   | 6614/9908 [8:25:52<3:27:00,  3.77s/it] 67%|██████▋   | 6615/9908 [8:25:56<3:26:32,  3.76s/it] 67%|██████▋   | 6616/9908 [8:26:00<3:21:26,  3.67s/it] 67%|██████▋   | 6617/9908 [8:26:04<3:26:21,  3.76s/it] 67%|██████▋   | 6618/9908 [8:26:08<3:31:53,  3.86s/it] 67%|██████▋   | 6619/9908 [8:26:11<3:25:37,  3.75s/it] 67%|██████▋   | 6620/9908 [8:26:15<3:20:16,  3.65s/it] 67%|██████▋   | 6621/9908 [8:26:18<3:19:50,  3.65s/it] 67%|██████▋   | 6622/9908 [8:26:22<3:22:06,  3.69s/it] 67%|██████▋   | 6623/9908 [8:26:26<3:22:41,  3.70s/it] 67%|██████▋   | 6624/9908 [8:26:30<3:23:40,  3.72s/it] 67%|██████▋   | 6625/9908 [8:26:33<3:20:34,  3.67s/it] 67%|██████▋   | 6626/9908 [8:26:37<3:19:33,  3.65s/it] 67%|██████▋   | 6627/9908 [8:26:40<3:20:09,  3.66s/it] 67%|██████▋   | 6628/9908 [8:26:44<3:15:42,  3.58s/it] 67%|██████▋   | 6629/9908 [8:26:48<3:22:31,  3.71s/it] 67%|██████▋   | 6630/9908 [8:26:52<3:24:18,  3.74s/it] 67%|██████▋   | 6631/9908 [8:26:55<3:24:47,  3.75s/it] 67%|██████▋   | 6632/9908 [8:26:59<3:23:32,  3.73s/it] 67%|██████▋   | 6633/9908 [8:27:03<3:25:15,  3.76s/it] 67%|██████▋   | 6634/9908 [8:27:07<3:26:02,  3.78s/it] 67%|██████▋   | 6635/9908 [8:27:10<3:22:26,  3.71s/it] 67%|██████▋   | 6636/9908 [8:27:14<3:18:48,  3.65s/it] 67%|██████▋   | 6637/9908 [8:27:17<3:18:25,  3.64s/it] 67%|██████▋   | 6638/9908 [8:27:21<3:20:38,  3.68s/it] 67%|██████▋   | 6639/9908 [8:27:25<3:23:22,  3.73s/it] 67%|██████▋   | 6640/9908 [8:27:29<3:22:47,  3.72s/it] 67%|██████▋   | 6641/9908 [8:27:32<3:20:33,  3.68s/it] 67%|██████▋   | 6642/9908 [8:27:36<3:23:49,  3.74s/it] 67%|██████▋   | 6643/9908 [8:27:40<3:18:34,  3.65s/it] 67%|██████▋   | 6644/9908 [8:27:43<3:14:36,  3.58s/it] 67%|██████▋   | 6645/9908 [8:27:47<3:16:29,  3.61s/it] 67%|██████▋   | 6646/9908 [8:27:51<3:23:47,  3.75s/it] 67%|██████▋   | 6647/9908 [8:27:54<3:18:41,  3.66s/it] 67%|██████▋   | 6648/9908 [8:27:58<3:21:18,  3.71s/it] 67%|██████▋   | 6649/9908 [8:28:02<3:19:54,  3.68s/it]09/20/2024 10:04:36 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04003627598285675, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.3473219871520996, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.38735830783844}
 67%|██████▋   | 6650/9908 [8:28:05<3:18:12,  3.65s/it] 67%|██████▋   | 6651/9908 [8:28:09<3:22:33,  3.73s/it] 67%|██████▋   | 6652/9908 [8:28:13<3:17:56,  3.65s/it] 67%|██████▋   | 6653/9908 [8:28:16<3:15:18,  3.60s/it] 67%|██████▋   | 6654/9908 [8:28:20<3:21:42,  3.72s/it] 67%|██████▋   | 6655/9908 [8:28:24<3:18:05,  3.65s/it] 67%|██████▋   | 6656/9908 [8:28:28<3:21:48,  3.72s/it] 67%|██████▋   | 6657/9908 [8:28:31<3:17:45,  3.65s/it] 67%|██████▋   | 6658/9908 [8:28:35<3:16:14,  3.62s/it] 67%|██████▋   | 6659/9908 [8:28:38<3:14:52,  3.60s/it] 67%|██████▋   | 6660/9908 [8:28:42<3:23:06,  3.75s/it] 67%|██████▋   | 6661/9908 [8:28:46<3:27:56,  3.84s/it] 67%|██████▋   | 6662/9908 [8:28:50<3:26:37,  3.82s/it] 67%|██████▋   | 6663/9908 [8:28:54<3:24:20,  3.78s/it] 67%|██████▋   | 6664/9908 [8:28:57<3:20:57,  3.72s/it] 67%|██████▋   | 6665/9908 [8:29:01<3:20:37,  3.71s/it] 67%|██████▋   | 6666/9908 [8:29:04<3:16:11,  3.63s/it] 67%|██████▋   | 6667/9908 [8:29:08<3:13:35,  3.58s/it] 67%|██████▋   | 6668/9908 [8:29:12<3:18:41,  3.68s/it] 67%|██████▋   | 6669/9908 [8:29:16<3:21:51,  3.74s/it] 67%|██████▋   | 6670/9908 [8:29:20<3:29:06,  3.87s/it] 67%|██████▋   | 6671/9908 [8:29:24<3:26:06,  3.82s/it] 67%|██████▋   | 6672/9908 [8:29:27<3:20:50,  3.72s/it] 67%|██████▋   | 6673/9908 [8:29:31<3:17:45,  3.67s/it] 67%|██████▋   | 6674/9908 [8:29:35<3:23:35,  3.78s/it] 67%|██████▋   | 6675/9908 [8:29:38<3:17:25,  3.66s/it] 67%|██████▋   | 6676/9908 [8:29:42<3:15:40,  3.63s/it] 67%|██████▋   | 6677/9908 [8:29:45<3:17:17,  3.66s/it] 67%|██████▋   | 6678/9908 [8:29:49<3:16:45,  3.66s/it] 67%|██████▋   | 6679/9908 [8:29:53<3:18:59,  3.70s/it] 67%|██████▋   | 6680/9908 [8:29:56<3:17:44,  3.68s/it] 67%|██████▋   | 6681/9908 [8:30:00<3:14:21,  3.61s/it] 67%|██████▋   | 6682/9908 [8:30:04<3:15:36,  3.64s/it] 67%|██████▋   | 6683/9908 [8:30:07<3:17:28,  3.67s/it] 67%|██████▋   | 6684/9908 [8:30:11<3:15:48,  3.64s/it] 67%|██████▋   | 6685/9908 [8:30:15<3:18:20,  3.69s/it] 67%|██████▋   | 6686/9908 [8:30:19<3:21:19,  3.75s/it] 67%|██████▋   | 6687/9908 [8:30:22<3:19:42,  3.72s/it] 68%|██████▊   | 6688/9908 [8:30:26<3:15:35,  3.64s/it] 68%|██████▊   | 6689/9908 [8:30:29<3:12:08,  3.58s/it] 68%|██████▊   | 6690/9908 [8:30:33<3:18:43,  3.71s/it] 68%|██████▊   | 6691/9908 [8:30:37<3:22:19,  3.77s/it] 68%|██████▊   | 6692/9908 [8:30:41<3:21:50,  3.77s/it] 68%|██████▊   | 6693/9908 [8:30:44<3:19:32,  3.72s/it] 68%|██████▊   | 6694/9908 [8:30:48<3:15:37,  3.65s/it] 68%|██████▊   | 6695/9908 [8:30:51<3:13:41,  3.62s/it] 68%|██████▊   | 6696/9908 [8:30:55<3:14:33,  3.63s/it] 68%|██████▊   | 6697/9908 [8:30:59<3:17:30,  3.69s/it] 68%|██████▊   | 6698/9908 [8:31:03<3:19:46,  3.73s/it] 68%|██████▊   | 6699/9908 [8:31:07<3:25:45,  3.85s/it]09/20/2024 10:07:41 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.030279312282800674, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2926502227783203, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.3229295015335083}
 68%|██████▊   | 6700/9908 [8:31:10<3:20:13,  3.74s/it] 68%|██████▊   | 6701/9908 [8:31:14<3:16:13,  3.67s/it] 68%|██████▊   | 6702/9908 [8:31:17<3:14:16,  3.64s/it] 68%|██████▊   | 6703/9908 [8:31:21<3:19:46,  3.74s/it] 68%|██████▊   | 6704/9908 [8:31:25<3:16:06,  3.67s/it] 68%|██████▊   | 6705/9908 [8:31:29<3:14:38,  3.65s/it] 68%|██████▊   | 6706/9908 [8:31:33<3:22:10,  3.79s/it] 68%|██████▊   | 6707/9908 [8:31:37<3:23:15,  3.81s/it] 68%|██████▊   | 6708/9908 [8:31:40<3:25:29,  3.85s/it] 68%|██████▊   | 6709/9908 [8:31:44<3:25:04,  3.85s/it] 68%|██████▊   | 6710/9908 [8:31:48<3:27:47,  3.90s/it] 68%|██████▊   | 6711/9908 [8:31:52<3:19:51,  3.75s/it] 68%|██████▊   | 6712/9908 [8:31:56<3:21:24,  3.78s/it] 68%|██████▊   | 6713/9908 [8:31:59<3:21:36,  3.79s/it] 68%|██████▊   | 6714/9908 [8:32:03<3:18:22,  3.73s/it] 68%|██████▊   | 6715/9908 [8:32:07<3:20:20,  3.76s/it] 68%|██████▊   | 6716/9908 [8:32:10<3:19:02,  3.74s/it] 68%|██████▊   | 6717/9908 [8:32:14<3:16:34,  3.70s/it] 68%|██████▊   | 6718/9908 [8:32:18<3:25:56,  3.87s/it] 68%|██████▊   | 6719/9908 [8:32:22<3:22:20,  3.81s/it] 68%|██████▊   | 6720/9908 [8:32:26<3:17:17,  3.71s/it] 68%|██████▊   | 6721/9908 [8:32:30<3:22:22,  3.81s/it] 68%|██████▊   | 6722/9908 [8:32:33<3:19:56,  3.77s/it] 68%|██████▊   | 6723/9908 [8:32:37<3:16:13,  3.70s/it] 68%|██████▊   | 6724/9908 [8:32:40<3:12:46,  3.63s/it] 68%|██████▊   | 6725/9908 [8:32:44<3:12:34,  3.63s/it] 68%|██████▊   | 6726/9908 [8:32:47<3:10:27,  3.59s/it] 68%|██████▊   | 6727/9908 [8:32:51<3:17:48,  3.73s/it] 68%|██████▊   | 6728/9908 [8:32:55<3:18:46,  3.75s/it] 68%|██████▊   | 6729/9908 [8:32:59<3:16:25,  3.71s/it] 68%|██████▊   | 6730/9908 [8:33:03<3:17:56,  3.74s/it] 68%|██████▊   | 6731/9908 [8:33:06<3:15:06,  3.68s/it] 68%|██████▊   | 6732/9908 [8:33:10<3:18:53,  3.76s/it] 68%|██████▊   | 6733/9908 [8:33:14<3:17:05,  3.72s/it] 68%|██████▊   | 6734/9908 [8:33:17<3:14:34,  3.68s/it] 68%|██████▊   | 6735/9908 [8:33:21<3:13:36,  3.66s/it] 68%|██████▊   | 6736/9908 [8:33:25<3:18:19,  3.75s/it] 68%|██████▊   | 6737/9908 [8:33:29<3:20:20,  3.79s/it] 68%|██████▊   | 6738/9908 [8:33:33<3:19:48,  3.78s/it] 68%|██████▊   | 6739/9908 [8:33:36<3:13:29,  3.66s/it] 68%|██████▊   | 6740/9908 [8:33:40<3:12:57,  3.65s/it] 68%|██████▊   | 6741/9908 [8:33:43<3:15:57,  3.71s/it] 68%|██████▊   | 6742/9908 [8:33:47<3:17:28,  3.74s/it] 68%|██████▊   | 6743/9908 [8:33:51<3:15:06,  3.70s/it] 68%|██████▊   | 6744/9908 [8:33:54<3:10:00,  3.60s/it] 68%|██████▊   | 6745/9908 [8:33:58<3:15:45,  3.71s/it] 68%|██████▊   | 6746/9908 [8:34:02<3:10:03,  3.61s/it] 68%|██████▊   | 6747/9908 [8:34:05<3:12:06,  3.65s/it] 68%|██████▊   | 6748/9908 [8:34:09<3:16:46,  3.74s/it] 68%|██████▊   | 6749/9908 [8:34:13<3:19:43,  3.79s/it]09/20/2024 10:10:48 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.022433919832110405, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.1907455921173096, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.2131794691085815}
 68%|██████▊   | 6750/9908 [8:34:17<3:17:39,  3.76s/it] 68%|██████▊   | 6751/9908 [8:34:20<3:14:15,  3.69s/it] 68%|██████▊   | 6752/9908 [8:34:24<3:15:01,  3.71s/it] 68%|██████▊   | 6753/9908 [8:34:28<3:13:07,  3.67s/it] 68%|██████▊   | 6754/9908 [8:34:31<3:14:39,  3.70s/it] 68%|██████▊   | 6755/9908 [8:34:35<3:14:38,  3.70s/it] 68%|██████▊   | 6756/9908 [8:34:39<3:13:00,  3.67s/it] 68%|██████▊   | 6757/9908 [8:34:42<3:09:48,  3.61s/it] 68%|██████▊   | 6758/9908 [8:34:46<3:08:13,  3.59s/it] 68%|██████▊   | 6759/9908 [8:34:50<3:13:48,  3.69s/it] 68%|██████▊   | 6760/9908 [8:34:53<3:10:32,  3.63s/it] 68%|██████▊   | 6761/9908 [8:34:57<3:16:30,  3.75s/it] 68%|██████▊   | 6762/9908 [8:35:01<3:15:50,  3.74s/it] 68%|██████▊   | 6763/9908 [8:35:05<3:13:41,  3.70s/it] 68%|██████▊   | 6764/9908 [8:35:09<3:21:40,  3.85s/it] 68%|██████▊   | 6765/9908 [8:35:13<3:20:18,  3.82s/it] 68%|██████▊   | 6766/9908 [8:35:16<3:20:42,  3.83s/it] 68%|██████▊   | 6767/9908 [8:35:20<3:16:52,  3.76s/it] 68%|██████▊   | 6768/9908 [8:35:23<3:12:51,  3.69s/it] 68%|██████▊   | 6769/9908 [8:35:27<3:11:27,  3.66s/it] 68%|██████▊   | 6770/9908 [8:35:31<3:11:39,  3.66s/it] 68%|██████▊   | 6771/9908 [8:35:34<3:08:22,  3.60s/it] 68%|██████▊   | 6772/9908 [8:35:38<3:09:09,  3.62s/it] 68%|██████▊   | 6773/9908 [8:35:42<3:11:36,  3.67s/it] 68%|██████▊   | 6774/9908 [8:35:45<3:11:56,  3.67s/it] 68%|██████▊   | 6775/9908 [8:35:49<3:11:30,  3.67s/it] 68%|██████▊   | 6776/9908 [8:35:53<3:12:14,  3.68s/it] 68%|██████▊   | 6777/9908 [8:35:56<3:13:29,  3.71s/it] 68%|██████▊   | 6778/9908 [8:36:00<3:11:19,  3.67s/it] 68%|██████▊   | 6779/9908 [8:36:04<3:12:08,  3.68s/it] 68%|██████▊   | 6780/9908 [8:36:08<3:16:41,  3.77s/it] 68%|██████▊   | 6781/9908 [8:36:11<3:14:22,  3.73s/it] 68%|██████▊   | 6782/9908 [8:36:15<3:12:07,  3.69s/it] 68%|██████▊   | 6783/9908 [8:36:19<3:13:14,  3.71s/it] 68%|██████▊   | 6784/9908 [8:36:22<3:12:09,  3.69s/it] 68%|██████▊   | 6785/9908 [8:36:26<3:05:49,  3.57s/it] 68%|██████▊   | 6786/9908 [8:36:29<3:08:07,  3.62s/it] 69%|██████▊   | 6787/9908 [8:36:33<3:11:19,  3.68s/it] 69%|██████▊   | 6788/9908 [8:36:37<3:12:09,  3.70s/it] 69%|██████▊   | 6789/9908 [8:36:41<3:11:01,  3.67s/it] 69%|██████▊   | 6790/9908 [8:36:44<3:09:21,  3.64s/it] 69%|██████▊   | 6791/9908 [8:36:48<3:12:55,  3.71s/it] 69%|██████▊   | 6792/9908 [8:36:52<3:10:49,  3.67s/it] 69%|██████▊   | 6793/9908 [8:36:55<3:12:17,  3.70s/it] 69%|██████▊   | 6794/9908 [8:36:59<3:17:14,  3.80s/it] 69%|██████▊   | 6795/9908 [8:37:03<3:18:41,  3.83s/it] 69%|██████▊   | 6796/9908 [8:37:07<3:14:37,  3.75s/it] 69%|██████▊   | 6797/9908 [8:37:11<3:14:26,  3.75s/it] 69%|██████▊   | 6798/9908 [8:37:14<3:14:36,  3.75s/it] 69%|██████▊   | 6799/9908 [8:37:18<3:10:24,  3.67s/it]09/20/2024 10:13:52 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.024354061111807823, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.0186793804168701, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.043033480644226}
 69%|██████▊   | 6800/9908 [8:37:22<3:10:34,  3.68s/it] 69%|██████▊   | 6801/9908 [8:37:25<3:07:55,  3.63s/it] 69%|██████▊   | 6802/9908 [8:37:29<3:09:57,  3.67s/it] 69%|██████▊   | 6803/9908 [8:37:33<3:15:02,  3.77s/it] 69%|██████▊   | 6804/9908 [8:37:36<3:10:45,  3.69s/it] 69%|██████▊   | 6805/9908 [8:37:40<3:12:28,  3.72s/it] 69%|██████▊   | 6806/9908 [8:37:44<3:12:57,  3.73s/it] 69%|██████▊   | 6807/9908 [8:37:48<3:11:26,  3.70s/it] 69%|██████▊   | 6808/9908 [8:37:51<3:09:59,  3.68s/it] 69%|██████▊   | 6809/9908 [8:37:55<3:14:50,  3.77s/it] 69%|██████▊   | 6810/9908 [8:37:59<3:12:33,  3.73s/it] 69%|██████▊   | 6811/9908 [8:38:02<3:09:11,  3.67s/it] 69%|██████▉   | 6812/9908 [8:38:06<3:12:06,  3.72s/it] 69%|██████▉   | 6813/9908 [8:38:10<3:17:49,  3.84s/it] 69%|██████▉   | 6814/9908 [8:38:14<3:17:17,  3.83s/it] 69%|██████▉   | 6815/9908 [8:38:18<3:11:53,  3.72s/it] 69%|██████▉   | 6816/9908 [8:38:21<3:08:13,  3.65s/it] 69%|██████▉   | 6817/9908 [8:38:25<3:06:56,  3.63s/it] 69%|██████▉   | 6818/9908 [8:38:28<3:10:23,  3.70s/it] 69%|██████▉   | 6819/9908 [8:38:33<3:17:04,  3.83s/it] 69%|██████▉   | 6820/9908 [8:38:37<3:18:56,  3.87s/it] 69%|██████▉   | 6821/9908 [8:38:41<3:21:12,  3.91s/it] 69%|██████▉   | 6822/9908 [8:38:44<3:14:33,  3.78s/it] 69%|██████▉   | 6823/9908 [8:38:47<3:07:26,  3.65s/it] 69%|██████▉   | 6824/9908 [8:38:51<3:07:24,  3.65s/it] 69%|██████▉   | 6825/9908 [8:38:55<3:05:18,  3.61s/it] 69%|██████▉   | 6826/9908 [8:38:58<3:03:47,  3.58s/it] 69%|██████▉   | 6827/9908 [8:39:02<3:07:46,  3.66s/it] 69%|██████▉   | 6828/9908 [8:39:06<3:14:26,  3.79s/it] 69%|██████▉   | 6829/9908 [8:39:10<3:12:23,  3.75s/it] 69%|██████▉   | 6830/9908 [8:39:13<3:08:07,  3.67s/it] 69%|██████▉   | 6831/9908 [8:39:17<3:08:32,  3.68s/it] 69%|██████▉   | 6832/9908 [8:39:20<3:07:18,  3.65s/it] 69%|██████▉   | 6833/9908 [8:39:24<3:05:43,  3.62s/it] 69%|██████▉   | 6834/9908 [8:39:28<3:10:59,  3.73s/it] 69%|██████▉   | 6835/9908 [8:39:32<3:09:55,  3.71s/it] 69%|██████▉   | 6836/9908 [8:39:35<3:11:42,  3.74s/it] 69%|██████▉   | 6837/9908 [8:39:39<3:12:58,  3.77s/it] 69%|██████▉   | 6838/9908 [8:39:43<3:10:59,  3.73s/it] 69%|██████▉   | 6839/9908 [8:39:46<3:05:56,  3.64s/it] 69%|██████▉   | 6840/9908 [8:39:50<3:03:51,  3.60s/it] 69%|██████▉   | 6841/9908 [8:39:53<3:05:08,  3.62s/it] 69%|██████▉   | 6842/9908 [8:39:57<3:05:46,  3.64s/it] 69%|██████▉   | 6843/9908 [8:40:01<3:07:37,  3.67s/it] 69%|██████▉   | 6844/9908 [8:40:05<3:10:07,  3.72s/it] 69%|██████▉   | 6845/9908 [8:40:09<3:11:06,  3.74s/it] 69%|██████▉   | 6846/9908 [8:40:12<3:04:36,  3.62s/it] 69%|██████▉   | 6847/9908 [8:40:16<3:07:53,  3.68s/it] 69%|██████▉   | 6848/9908 [8:40:20<3:10:54,  3.74s/it] 69%|██████▉   | 6849/9908 [8:40:24<3:14:05,  3.81s/it]09/20/2024 10:16:58 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04692356288433075, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.6158617734909058, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.662785291671753}
 69%|██████▉   | 6850/9908 [8:40:27<3:14:27,  3.82s/it] 69%|██████▉   | 6851/9908 [8:40:31<3:10:11,  3.73s/it] 69%|██████▉   | 6852/9908 [8:40:34<3:07:04,  3.67s/it] 69%|██████▉   | 6853/9908 [8:40:38<3:05:40,  3.65s/it] 69%|██████▉   | 6854/9908 [8:40:41<3:02:33,  3.59s/it] 69%|██████▉   | 6855/9908 [8:40:45<3:02:34,  3.59s/it] 69%|██████▉   | 6856/9908 [8:40:49<3:01:26,  3.57s/it] 69%|██████▉   | 6857/9908 [8:40:52<3:04:07,  3.62s/it] 69%|██████▉   | 6858/9908 [8:40:56<3:04:49,  3.64s/it] 69%|██████▉   | 6859/9908 [8:41:00<3:07:41,  3.69s/it] 69%|██████▉   | 6860/9908 [8:41:04<3:15:20,  3.85s/it] 69%|██████▉   | 6861/9908 [8:41:08<3:11:12,  3.77s/it] 69%|██████▉   | 6862/9908 [8:41:11<3:12:10,  3.79s/it] 69%|██████▉   | 6863/9908 [8:41:15<3:07:51,  3.70s/it] 69%|██████▉   | 6864/9908 [8:41:19<3:09:00,  3.73s/it] 69%|██████▉   | 6865/9908 [8:41:23<3:10:10,  3.75s/it] 69%|██████▉   | 6866/9908 [8:41:26<3:08:06,  3.71s/it] 69%|██████▉   | 6867/9908 [8:41:30<3:07:40,  3.70s/it] 69%|██████▉   | 6868/9908 [8:41:33<3:06:43,  3.69s/it] 69%|██████▉   | 6869/9908 [8:41:37<3:04:00,  3.63s/it] 69%|██████▉   | 6870/9908 [8:41:41<3:02:09,  3.60s/it] 69%|██████▉   | 6871/9908 [8:41:44<3:08:08,  3.72s/it] 69%|██████▉   | 6872/9908 [8:41:48<3:09:09,  3.74s/it] 69%|██████▉   | 6873/9908 [8:41:52<3:11:01,  3.78s/it] 69%|██████▉   | 6874/9908 [8:41:56<3:08:08,  3.72s/it] 69%|██████▉   | 6875/9908 [8:41:59<3:07:11,  3.70s/it] 69%|██████▉   | 6876/9908 [8:42:03<3:08:45,  3.74s/it] 69%|██████▉   | 6877/9908 [8:42:07<3:07:20,  3.71s/it] 69%|██████▉   | 6878/9908 [8:42:10<3:03:54,  3.64s/it] 69%|██████▉   | 6879/9908 [8:42:14<3:02:50,  3.62s/it] 69%|██████▉   | 6880/9908 [8:42:18<3:04:50,  3.66s/it] 69%|██████▉   | 6881/9908 [8:42:21<3:03:38,  3.64s/it] 69%|██████▉   | 6882/9908 [8:42:25<3:11:51,  3.80s/it] 69%|██████▉   | 6883/9908 [8:42:29<3:11:05,  3.79s/it] 69%|██████▉   | 6884/9908 [8:42:33<3:14:19,  3.86s/it] 69%|██████▉   | 6885/9908 [8:42:37<3:11:37,  3.80s/it] 69%|██████▉   | 6886/9908 [8:42:40<3:05:44,  3.69s/it] 70%|██████▉   | 6887/9908 [8:42:44<3:05:33,  3.69s/it] 70%|██████▉   | 6888/9908 [8:42:48<3:04:18,  3.66s/it] 70%|██████▉   | 6889/9908 [8:42:51<3:01:21,  3.60s/it] 70%|██████▉   | 6890/9908 [8:42:55<3:04:39,  3.67s/it] 70%|██████▉   | 6891/9908 [8:42:59<3:07:58,  3.74s/it] 70%|██████▉   | 6892/9908 [8:43:02<3:06:38,  3.71s/it] 70%|██████▉   | 6893/9908 [8:43:07<3:11:41,  3.81s/it] 70%|██████▉   | 6894/9908 [8:43:10<3:05:35,  3.69s/it] 70%|██████▉   | 6895/9908 [8:43:14<3:11:25,  3.81s/it] 70%|██████▉   | 6896/9908 [8:43:18<3:09:12,  3.77s/it] 70%|██████▉   | 6897/9908 [8:43:22<3:10:37,  3.80s/it] 70%|██████▉   | 6898/9908 [8:43:25<3:08:57,  3.77s/it] 70%|██████▉   | 6899/9908 [8:43:29<3:04:34,  3.68s/it]09/20/2024 10:20:03 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.02594437077641487, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.0625734329223633, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.0885177850723267}
 70%|██████▉   | 6900/9908 [8:43:32<3:05:51,  3.71s/it] 70%|██████▉   | 6901/9908 [8:43:36<3:08:30,  3.76s/it] 70%|██████▉   | 6902/9908 [8:43:40<3:10:11,  3.80s/it] 70%|██████▉   | 6903/9908 [8:43:44<3:04:46,  3.69s/it] 70%|██████▉   | 6904/9908 [8:43:47<2:59:25,  3.58s/it] 70%|██████▉   | 6905/9908 [8:43:51<3:05:58,  3.72s/it] 70%|██████▉   | 6906/9908 [8:43:55<3:05:34,  3.71s/it] 70%|██████▉   | 6907/9908 [8:43:59<3:09:59,  3.80s/it] 70%|██████▉   | 6908/9908 [8:44:02<3:05:49,  3.72s/it] 70%|██████▉   | 6909/9908 [8:44:06<3:05:45,  3.72s/it] 70%|██████▉   | 6910/9908 [8:44:10<3:06:56,  3.74s/it] 70%|██████▉   | 6911/9908 [8:44:13<3:04:18,  3.69s/it] 70%|██████▉   | 6912/9908 [8:44:17<2:59:14,  3.59s/it] 70%|██████▉   | 6913/9908 [8:44:21<3:05:37,  3.72s/it] 70%|██████▉   | 6914/9908 [8:44:25<3:07:35,  3.76s/it] 70%|██████▉   | 6915/9908 [8:44:28<3:02:37,  3.66s/it] 70%|██████▉   | 6916/9908 [8:44:32<3:05:15,  3.72s/it] 70%|██████▉   | 6917/9908 [8:44:36<3:04:43,  3.71s/it] 70%|██████▉   | 6918/9908 [8:44:39<3:08:03,  3.77s/it] 70%|██████▉   | 6919/9908 [8:44:43<3:00:20,  3.62s/it] 70%|██████▉   | 6920/9908 [8:44:47<3:05:02,  3.72s/it] 70%|██████▉   | 6921/9908 [8:44:50<3:05:03,  3.72s/it] 70%|██████▉   | 6922/9908 [8:44:54<3:03:14,  3.68s/it] 70%|██████▉   | 6923/9908 [8:44:58<3:02:16,  3.66s/it] 70%|██████▉   | 6924/9908 [8:45:01<3:04:55,  3.72s/it] 70%|██████▉   | 6925/9908 [8:45:05<3:06:21,  3.75s/it] 70%|██████▉   | 6926/9908 [8:45:09<3:00:24,  3.63s/it] 70%|██████▉   | 6927/9908 [8:45:12<3:02:02,  3.66s/it] 70%|██████▉   | 6928/9908 [8:45:16<3:06:38,  3.76s/it] 70%|██████▉   | 6929/9908 [8:45:20<3:07:37,  3.78s/it] 70%|██████▉   | 6930/9908 [8:45:24<3:11:29,  3.86s/it] 70%|██████▉   | 6931/9908 [8:45:28<3:07:14,  3.77s/it] 70%|██████▉   | 6932/9908 [8:45:32<3:08:09,  3.79s/it] 70%|██████▉   | 6933/9908 [8:45:35<3:05:10,  3.73s/it] 70%|██████▉   | 6934/9908 [8:45:39<3:04:11,  3.72s/it] 70%|██████▉   | 6935/9908 [8:45:43<3:09:55,  3.83s/it] 70%|███████   | 6936/9908 [8:45:47<3:06:45,  3.77s/it] 70%|███████   | 6937/9908 [8:45:50<2:59:29,  3.63s/it] 70%|███████   | 6938/9908 [8:45:54<3:00:46,  3.65s/it] 70%|███████   | 6939/9908 [8:45:57<2:58:55,  3.62s/it] 70%|███████   | 6940/9908 [8:46:01<3:02:45,  3.69s/it] 70%|███████   | 6941/9908 [8:46:05<3:04:35,  3.73s/it] 70%|███████   | 6942/9908 [8:46:08<3:01:52,  3.68s/it] 70%|███████   | 6943/9908 [8:46:12<2:56:45,  3.58s/it] 70%|███████   | 6944/9908 [8:46:15<2:57:15,  3.59s/it] 70%|███████   | 6945/9908 [8:46:19<2:58:05,  3.61s/it] 70%|███████   | 6946/9908 [8:46:24<3:16:24,  3.98s/it] 70%|███████   | 6947/9908 [8:46:28<3:17:17,  4.00s/it] 70%|███████   | 6948/9908 [8:46:31<3:09:33,  3.84s/it] 70%|███████   | 6949/9908 [8:46:35<3:01:47,  3.69s/it]09/20/2024 10:23:09 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.024347029626369476, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2319930791854858, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.2563401460647583}
 70%|███████   | 6950/9908 [8:46:39<3:09:02,  3.83s/it] 70%|███████   | 6951/9908 [8:46:42<3:04:59,  3.75s/it] 70%|███████   | 6952/9908 [8:46:46<3:06:47,  3.79s/it] 70%|███████   | 6953/9908 [8:46:50<3:05:08,  3.76s/it] 70%|███████   | 6954/9908 [8:46:54<3:03:38,  3.73s/it] 70%|███████   | 6955/9908 [8:46:58<3:07:27,  3.81s/it] 70%|███████   | 6956/9908 [8:47:02<3:08:59,  3.84s/it] 70%|███████   | 6957/9908 [8:47:05<3:05:58,  3.78s/it] 70%|███████   | 6958/9908 [8:47:09<3:01:17,  3.69s/it] 70%|███████   | 6959/9908 [8:47:13<3:03:17,  3.73s/it] 70%|███████   | 6960/9908 [8:47:16<3:01:00,  3.68s/it] 70%|███████   | 6961/9908 [8:47:20<3:02:57,  3.72s/it] 70%|███████   | 6962/9908 [8:47:23<2:57:48,  3.62s/it] 70%|███████   | 6963/9908 [8:47:27<3:02:33,  3.72s/it] 70%|███████   | 6964/9908 [8:47:31<2:59:45,  3.66s/it] 70%|███████   | 6965/9908 [8:47:34<3:00:00,  3.67s/it] 70%|███████   | 6966/9908 [8:47:38<2:57:55,  3.63s/it] 70%|███████   | 6967/9908 [8:47:42<3:03:16,  3.74s/it] 70%|███████   | 6968/9908 [8:47:46<3:04:29,  3.77s/it] 70%|███████   | 6969/9908 [8:47:49<3:00:46,  3.69s/it] 70%|███████   | 6970/9908 [8:47:53<2:59:13,  3.66s/it] 70%|███████   | 6971/9908 [8:47:57<3:02:23,  3.73s/it] 70%|███████   | 6972/9908 [8:48:00<2:59:53,  3.68s/it] 70%|███████   | 6973/9908 [8:48:04<2:58:43,  3.65s/it] 70%|███████   | 6974/9908 [8:48:08<3:03:03,  3.74s/it] 70%|███████   | 6975/9908 [8:48:12<3:02:29,  3.73s/it] 70%|███████   | 6976/9908 [8:48:15<3:01:22,  3.71s/it] 70%|███████   | 6977/9908 [8:48:19<3:02:10,  3.73s/it] 70%|███████   | 6978/9908 [8:48:22<2:55:36,  3.60s/it] 70%|███████   | 6979/9908 [8:48:26<3:02:59,  3.75s/it] 70%|███████   | 6980/9908 [8:48:30<2:59:25,  3.68s/it] 70%|███████   | 6981/9908 [8:48:34<3:08:43,  3.87s/it] 70%|███████   | 6982/9908 [8:48:38<3:03:00,  3.75s/it] 70%|███████   | 6983/9908 [8:48:41<2:57:15,  3.64s/it] 70%|███████   | 6984/9908 [8:48:45<3:04:01,  3.78s/it] 70%|███████   | 6985/9908 [8:48:49<3:04:24,  3.79s/it] 71%|███████   | 6986/9908 [8:48:53<3:01:48,  3.73s/it] 71%|███████   | 6987/9908 [8:48:56<3:01:58,  3.74s/it] 71%|███████   | 6988/9908 [8:49:00<3:00:13,  3.70s/it] 71%|███████   | 6989/9908 [8:49:04<2:58:55,  3.68s/it] 71%|███████   | 6990/9908 [8:49:07<2:58:18,  3.67s/it] 71%|███████   | 6991/9908 [8:49:11<2:58:20,  3.67s/it] 71%|███████   | 6992/9908 [8:49:15<3:03:23,  3.77s/it] 71%|███████   | 6993/9908 [8:49:19<3:05:32,  3.82s/it] 71%|███████   | 6994/9908 [8:49:22<3:00:14,  3.71s/it] 71%|███████   | 6995/9908 [8:49:26<3:02:44,  3.76s/it] 71%|███████   | 6996/9908 [8:49:30<3:01:18,  3.74s/it] 71%|███████   | 6997/9908 [8:49:34<2:58:56,  3.69s/it] 71%|███████   | 6998/9908 [8:49:37<2:58:23,  3.68s/it] 71%|███████   | 6999/9908 [8:49:41<2:59:11,  3.70s/it]09/20/2024 10:26:14 - INFO - __main__ -   evaluate on ret%tvas--msrvtt_ret task
09/20/2024 10:26:14 - INFO - __main__ -   start running ret%tvas validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:01<04:42,  1.29s/it][A
  1%|          | 2/221 [00:01<02:54,  1.25it/s][A
  1%|▏         | 3/221 [00:02<02:07,  1.71it/s][A
  2%|▏         | 4/221 [00:02<01:41,  2.14it/s][A
  3%|▎         | 6/221 [00:02<00:54,  3.95it/s][A
  3%|▎         | 7/221 [00:02<00:49,  4.36it/s][A
  4%|▎         | 8/221 [00:03<01:02,  3.41it/s][A
  4%|▍         | 9/221 [00:03<01:08,  3.11it/s][A
  5%|▍         | 10/221 [00:03<01:09,  3.02it/s][A
  5%|▌         | 12/221 [00:08<04:31,  1.30s/it][A
  6%|▌         | 13/221 [00:09<03:36,  1.04s/it][A
  7%|▋         | 15/221 [00:09<02:26,  1.40it/s][A
  7%|▋         | 16/221 [00:10<02:23,  1.43it/s][A
  8%|▊         | 17/221 [00:10<02:25,  1.40it/s][A
  8%|▊         | 18/221 [00:11<01:57,  1.73it/s][A
  9%|▊         | 19/221 [00:12<03:00,  1.12it/s][A
  9%|▉         | 20/221 [00:12<02:15,  1.48it/s][A
 10%|▉         | 21/221 [00:13<01:53,  1.77it/s][A
 10%|▉         | 22/221 [00:14<02:19,  1.43it/s][A
 10%|█         | 23/221 [00:14<01:45,  1.87it/s][A
 11%|█         | 24/221 [00:14<01:23,  2.37it/s][A
 11%|█▏        | 25/221 [00:14<01:13,  2.68it/s][A
 12%|█▏        | 26/221 [00:15<01:06,  2.92it/s][A
 13%|█▎        | 28/221 [00:15<01:03,  3.04it/s][A
 13%|█▎        | 29/221 [00:15<00:54,  3.52it/s][A
 14%|█▎        | 30/221 [00:16<01:05,  2.90it/s][A
 14%|█▍        | 31/221 [00:16<01:08,  2.78it/s][A
 14%|█▍        | 32/221 [00:16<00:55,  3.38it/s][A
 15%|█▍        | 33/221 [00:17<01:01,  3.05it/s][A
 15%|█▌        | 34/221 [00:17<00:50,  3.69it/s][A
 16%|█▌        | 35/221 [00:17<00:41,  4.46it/s][A
 16%|█▋        | 36/221 [00:17<00:39,  4.69it/s][A
 17%|█▋        | 37/221 [00:18<01:04,  2.87it/s][A
 17%|█▋        | 38/221 [00:18<01:12,  2.52it/s][A
 18%|█▊        | 39/221 [00:19<01:03,  2.86it/s][A
 18%|█▊        | 40/221 [00:19<01:16,  2.37it/s][A
 19%|█▊        | 41/221 [00:19<01:02,  2.88it/s][A
 19%|█▉        | 42/221 [00:20<00:49,  3.64it/s][A
 19%|█▉        | 43/221 [00:20<00:40,  4.43it/s][A
 20%|█▉        | 44/221 [00:20<00:33,  5.29it/s][A
 20%|██        | 45/221 [00:26<05:36,  1.91s/it][A
 21%|██        | 46/221 [00:26<04:13,  1.45s/it][A
 21%|██▏       | 47/221 [00:27<03:22,  1.16s/it][A
 22%|██▏       | 48/221 [00:27<02:26,  1.18it/s][A
 22%|██▏       | 49/221 [00:27<02:00,  1.42it/s][A
 23%|██▎       | 50/221 [00:28<02:00,  1.41it/s][A
 23%|██▎       | 51/221 [00:28<01:36,  1.75it/s][A
 24%|██▎       | 52/221 [00:28<01:16,  2.20it/s][A
 24%|██▍       | 53/221 [00:28<01:03,  2.64it/s][A
 24%|██▍       | 54/221 [00:29<01:28,  1.89it/s][A
 25%|██▍       | 55/221 [00:31<02:22,  1.16it/s][A
 25%|██▌       | 56/221 [00:31<01:51,  1.48it/s][A
 26%|██▌       | 57/221 [00:31<01:26,  1.89it/s][A
 27%|██▋       | 59/221 [00:32<00:55,  2.92it/s][A
 27%|██▋       | 60/221 [00:32<00:58,  2.75it/s][A
 28%|██▊       | 61/221 [00:32<00:53,  3.00it/s][A
 28%|██▊       | 62/221 [00:33<00:54,  2.94it/s][A
 29%|██▊       | 63/221 [00:33<00:47,  3.34it/s][A
 29%|██▉       | 64/221 [00:34<01:17,  2.02it/s][A
 29%|██▉       | 65/221 [00:34<01:01,  2.52it/s][A
 30%|██▉       | 66/221 [00:34<01:05,  2.38it/s][A
 30%|███       | 67/221 [00:35<00:59,  2.58it/s][A
 31%|███       | 68/221 [00:35<00:46,  3.27it/s][A
 31%|███       | 69/221 [00:37<01:59,  1.27it/s][A
 32%|███▏      | 70/221 [00:37<01:28,  1.70it/s][A
 32%|███▏      | 71/221 [00:37<01:20,  1.85it/s][A
 33%|███▎      | 72/221 [00:38<01:28,  1.69it/s][A
 33%|███▎      | 73/221 [00:39<01:28,  1.67it/s][A
 33%|███▎      | 74/221 [00:39<01:06,  2.20it/s][A
 34%|███▍      | 75/221 [00:39<01:01,  2.36it/s][A
 34%|███▍      | 76/221 [00:39<00:54,  2.67it/s][A
 35%|███▍      | 77/221 [00:43<03:09,  1.32s/it][A
 35%|███▌      | 78/221 [00:43<02:16,  1.04it/s][A
 36%|███▌      | 79/221 [00:44<02:36,  1.10s/it][A
 36%|███▌      | 80/221 [00:45<01:54,  1.23it/s][A
 37%|███▋      | 81/221 [00:45<01:36,  1.45it/s][A
 37%|███▋      | 82/221 [00:48<03:15,  1.40s/it][A
 38%|███▊      | 83/221 [00:49<02:40,  1.16s/it][A
 38%|███▊      | 84/221 [00:49<02:04,  1.10it/s][A
 39%|███▉      | 86/221 [00:49<01:18,  1.72it/s][A
 39%|███▉      | 87/221 [00:50<01:17,  1.73it/s][A
 40%|███▉      | 88/221 [00:50<01:08,  1.94it/s][A
 40%|████      | 89/221 [00:51<01:00,  2.19it/s][A
 41%|████      | 90/221 [00:51<00:52,  2.48it/s][A
 41%|████      | 91/221 [00:51<00:42,  3.07it/s][A
 42%|████▏     | 92/221 [00:51<00:37,  3.42it/s][A
 42%|████▏     | 93/221 [00:52<00:39,  3.21it/s][A
 43%|████▎     | 94/221 [00:52<00:55,  2.31it/s][A
 43%|████▎     | 95/221 [00:53<00:54,  2.33it/s][A
 43%|████▎     | 96/221 [00:53<01:02,  2.00it/s][A
 44%|████▍     | 97/221 [00:54<00:50,  2.48it/s][A
 44%|████▍     | 98/221 [00:54<00:56,  2.18it/s][A
 45%|████▍     | 99/221 [00:54<00:50,  2.41it/s][A
 45%|████▌     | 100/221 [00:55<01:04,  1.87it/s][A
 46%|████▌     | 101/221 [00:55<00:51,  2.33it/s][A
 46%|████▌     | 102/221 [00:56<01:12,  1.64it/s][A
 47%|████▋     | 104/221 [00:57<00:49,  2.37it/s][A
 48%|████▊     | 105/221 [00:57<00:50,  2.30it/s][A
 48%|████▊     | 106/221 [00:59<01:27,  1.32it/s][A
 48%|████▊     | 107/221 [00:59<01:13,  1.54it/s][A
 49%|████▉     | 108/221 [01:00<01:07,  1.67it/s][A
 49%|████▉     | 109/221 [01:00<00:58,  1.92it/s][A
 50%|████▉     | 110/221 [01:00<00:45,  2.44it/s][A
 50%|█████     | 111/221 [01:01<00:42,  2.61it/s][A
 51%|█████     | 112/221 [01:01<00:40,  2.67it/s][A
 51%|█████     | 113/221 [01:01<00:34,  3.11it/s][A
 52%|█████▏    | 115/221 [01:02<00:37,  2.83it/s][A
 52%|█████▏    | 116/221 [01:02<00:35,  2.93it/s][A
 53%|█████▎    | 117/221 [01:03<00:36,  2.83it/s][A
 53%|█████▎    | 118/221 [01:03<00:39,  2.64it/s][A
 54%|█████▍    | 119/221 [01:03<00:31,  3.28it/s][A
 54%|█████▍    | 120/221 [01:03<00:26,  3.81it/s][A
 55%|█████▍    | 121/221 [01:04<00:33,  2.97it/s][A
 55%|█████▌    | 122/221 [01:04<00:34,  2.90it/s][A
 56%|█████▌    | 123/221 [01:06<01:01,  1.59it/s][A
 56%|█████▌    | 124/221 [01:06<00:47,  2.06it/s][A
 57%|█████▋    | 125/221 [01:07<00:58,  1.65it/s][A
 57%|█████▋    | 126/221 [01:15<04:36,  2.91s/it][A
 57%|█████▋    | 127/221 [01:16<03:30,  2.24s/it][A
 58%|█████▊    | 128/221 [01:16<02:38,  1.70s/it][A
 58%|█████▊    | 129/221 [01:17<02:03,  1.35s/it][A
 59%|█████▉    | 130/221 [01:17<01:32,  1.01s/it][A
 59%|█████▉    | 131/221 [01:18<01:24,  1.07it/s][A
 60%|█████▉    | 132/221 [01:19<01:35,  1.07s/it][A
 60%|██████    | 133/221 [01:20<01:20,  1.09it/s][A
 61%|██████    | 134/221 [01:21<01:27,  1.01s/it][A
 61%|██████    | 135/221 [01:21<01:16,  1.12it/s][A
 62%|██████▏   | 136/221 [01:22<01:01,  1.37it/s][A
 62%|██████▏   | 137/221 [01:22<00:50,  1.65it/s][A
 62%|██████▏   | 138/221 [01:23<00:47,  1.75it/s][A
 63%|██████▎   | 139/221 [01:23<00:37,  2.21it/s][A
 63%|██████▎   | 140/221 [01:23<00:36,  2.22it/s][A
 64%|██████▍   | 141/221 [01:24<00:35,  2.28it/s][A
 64%|██████▍   | 142/221 [01:24<00:32,  2.46it/s][A
 65%|██████▍   | 143/221 [01:24<00:30,  2.56it/s][A
 65%|██████▌   | 144/221 [01:24<00:26,  2.89it/s][A
 66%|██████▌   | 146/221 [01:25<00:17,  4.31it/s][A
 67%|██████▋   | 148/221 [01:27<00:37,  1.95it/s][A
 67%|██████▋   | 149/221 [01:27<00:33,  2.14it/s][A
 68%|██████▊   | 150/221 [01:27<00:33,  2.13it/s][A
 68%|██████▊   | 151/221 [01:28<00:30,  2.30it/s][A
 69%|██████▉   | 152/221 [01:28<00:28,  2.43it/s][A
 69%|██████▉   | 153/221 [01:28<00:22,  3.00it/s][A
 70%|██████▉   | 154/221 [01:28<00:20,  3.28it/s][A
 70%|███████   | 155/221 [01:29<00:18,  3.66it/s][A
 71%|███████   | 156/221 [01:29<00:15,  4.13it/s][A
 71%|███████   | 157/221 [01:36<02:21,  2.21s/it][A
 71%|███████▏  | 158/221 [01:37<01:57,  1.86s/it][A
 72%|███████▏  | 159/221 [01:37<01:23,  1.35s/it][A
 72%|███████▏  | 160/221 [01:37<01:00,  1.00it/s][A
 73%|███████▎  | 162/221 [01:37<00:33,  1.74it/s][A
 74%|███████▍  | 163/221 [01:37<00:29,  1.97it/s][A
 74%|███████▍  | 164/221 [01:38<00:23,  2.38it/s][A
 75%|███████▍  | 165/221 [01:38<00:22,  2.53it/s][A
 75%|███████▌  | 166/221 [01:39<00:25,  2.14it/s][A
 76%|███████▌  | 167/221 [01:39<00:22,  2.35it/s][A
 76%|███████▌  | 168/221 [01:44<01:26,  1.63s/it][A
 76%|███████▋  | 169/221 [01:44<01:06,  1.29s/it][A
 77%|███████▋  | 170/221 [01:44<00:53,  1.04s/it][A
 77%|███████▋  | 171/221 [01:45<00:42,  1.16it/s][A
 78%|███████▊  | 172/221 [01:45<00:33,  1.45it/s][A
 78%|███████▊  | 173/221 [01:46<00:29,  1.61it/s][A
 79%|███████▊  | 174/221 [01:46<00:24,  1.95it/s][A
 79%|███████▉  | 175/221 [01:46<00:20,  2.29it/s][A
 80%|███████▉  | 176/221 [01:46<00:17,  2.55it/s][A
 80%|████████  | 177/221 [01:47<00:15,  2.88it/s][A
 81%|████████  | 178/221 [01:47<00:15,  2.78it/s][A
 81%|████████  | 179/221 [01:47<00:14,  2.95it/s][A
 81%|████████▏ | 180/221 [01:48<00:12,  3.35it/s][A
 82%|████████▏ | 181/221 [01:48<00:09,  4.04it/s][A
 82%|████████▏ | 182/221 [01:48<00:14,  2.75it/s][A
 83%|████████▎ | 183/221 [01:49<00:18,  2.06it/s][A
 83%|████████▎ | 184/221 [01:50<00:17,  2.12it/s][A
 84%|████████▎ | 185/221 [01:50<00:14,  2.40it/s][A
 84%|████████▍ | 186/221 [01:50<00:12,  2.81it/s][A
 85%|████████▍ | 187/221 [01:50<00:11,  2.95it/s][A
 85%|████████▌ | 188/221 [01:51<00:10,  3.05it/s][A
 86%|████████▌ | 189/221 [01:51<00:10,  3.08it/s][A
 86%|████████▌ | 190/221 [01:51<00:10,  2.88it/s][A
 86%|████████▋ | 191/221 [01:52<00:09,  3.25it/s][A
 87%|████████▋ | 192/221 [01:52<00:12,  2.39it/s][A
 87%|████████▋ | 193/221 [01:52<00:09,  2.86it/s][A
 88%|████████▊ | 194/221 [01:53<00:10,  2.59it/s][A
 88%|████████▊ | 195/221 [01:53<00:08,  3.02it/s][A
 89%|████████▊ | 196/221 [01:54<00:09,  2.63it/s][A
 89%|████████▉ | 197/221 [01:54<00:08,  2.72it/s][A
 90%|████████▉ | 198/221 [01:54<00:07,  3.04it/s][A
 90%|█████████ | 199/221 [01:54<00:06,  3.46it/s][A
 90%|█████████ | 200/221 [01:56<00:12,  1.73it/s][A
 91%|█████████ | 201/221 [01:56<00:11,  1.79it/s][A
 91%|█████████▏| 202/221 [01:56<00:09,  2.05it/s][A
 92%|█████████▏| 203/221 [01:58<00:12,  1.50it/s][A
 92%|█████████▏| 204/221 [01:58<00:11,  1.49it/s][A
 93%|█████████▎| 206/221 [01:59<00:06,  2.18it/s][A
 94%|█████████▎| 207/221 [01:59<00:05,  2.58it/s][A
 94%|█████████▍| 208/221 [01:59<00:05,  2.21it/s][A
 95%|█████████▌| 210/221 [02:00<00:03,  3.03it/s][A
 95%|█████████▌| 211/221 [02:00<00:03,  2.60it/s][A
 96%|█████████▌| 212/221 [02:01<00:03,  2.93it/s][A
 96%|█████████▋| 213/221 [02:01<00:02,  3.47it/s][A
 97%|█████████▋| 214/221 [02:01<00:02,  2.97it/s][A
 97%|█████████▋| 215/221 [02:02<00:02,  2.61it/s][A
 98%|█████████▊| 216/221 [02:02<00:01,  2.78it/s][A
 98%|█████████▊| 217/221 [02:03<00:02,  1.61it/s][A
 99%|█████████▊| 218/221 [02:04<00:01,  1.85it/s][A
 99%|█████████▉| 219/221 [02:04<00:00,  2.20it/s][A
100%|█████████▉| 220/221 [02:09<00:01,  1.96s/it][A
100%|██████████| 221/221 [02:09<00:00,  1.42s/it][A100%|██████████| 221/221 [02:09<00:00,  1.70it/s]

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:00<01:56,  1.89it/s][A
  1%|          | 2/221 [00:01<01:55,  1.89it/s][A
  1%|▏         | 3/221 [00:01<01:55,  1.89it/s][A
  2%|▏         | 4/221 [00:02<01:54,  1.89it/s][A
  2%|▏         | 5/221 [00:02<01:54,  1.89it/s][A
  3%|▎         | 6/221 [00:03<01:53,  1.89it/s][A
  3%|▎         | 7/221 [00:03<01:53,  1.89it/s][A
  4%|▎         | 8/221 [00:04<01:52,  1.89it/s][A
  4%|▍         | 9/221 [00:04<01:52,  1.89it/s][A
  5%|▍         | 10/221 [00:05<01:51,  1.89it/s][A
  5%|▍         | 11/221 [00:05<01:51,  1.89it/s][A
  5%|▌         | 12/221 [00:06<01:50,  1.89it/s][A
  6%|▌         | 13/221 [00:06<01:49,  1.89it/s][A
  6%|▋         | 14/221 [00:07<01:49,  1.89it/s][A
  7%|▋         | 15/221 [00:07<01:48,  1.89it/s][A
  7%|▋         | 16/221 [00:08<01:48,  1.89it/s][A
  8%|▊         | 17/221 [00:08<01:47,  1.89it/s][A
  8%|▊         | 18/221 [00:09<01:47,  1.89it/s][A
  9%|▊         | 19/221 [00:10<01:46,  1.89it/s][A
  9%|▉         | 20/221 [00:10<01:46,  1.89it/s][A
 10%|▉         | 21/221 [00:11<01:45,  1.89it/s][A
 10%|▉         | 22/221 [00:11<01:45,  1.89it/s][A
 10%|█         | 23/221 [00:12<01:44,  1.89it/s][A
 11%|█         | 24/221 [00:12<01:44,  1.89it/s][A
 11%|█▏        | 25/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 26/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 27/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 28/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 29/221 [00:15<01:41,  1.89it/s][A
 14%|█▎        | 30/221 [00:15<01:40,  1.89it/s][A
 14%|█▍        | 31/221 [00:16<01:40,  1.89it/s][A
 14%|█▍        | 32/221 [00:16<01:39,  1.89it/s][A
 15%|█▍        | 33/221 [00:17<01:39,  1.89it/s][A
 15%|█▌        | 34/221 [00:17<01:38,  1.89it/s][A
 16%|█▌        | 35/221 [00:18<01:38,  1.89it/s][A
 16%|█▋        | 36/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 37/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 38/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 39/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 40/221 [00:21<01:35,  1.89it/s][A
 19%|█▊        | 41/221 [00:21<01:35,  1.89it/s][A
 19%|█▉        | 42/221 [00:22<01:34,  1.89it/s][A
 19%|█▉        | 43/221 [00:22<01:34,  1.89it/s][A
 20%|█▉        | 44/221 [00:23<01:33,  1.89it/s][A
 20%|██        | 45/221 [00:23<01:33,  1.89it/s][A
 21%|██        | 46/221 [00:24<01:32,  1.89it/s][A
 21%|██▏       | 47/221 [00:24<01:31,  1.89it/s][A
 22%|██▏       | 48/221 [00:25<01:31,  1.89it/s][A
 22%|██▏       | 49/221 [00:25<01:30,  1.89it/s][A
 23%|██▎       | 50/221 [00:26<01:30,  1.89it/s][A
 23%|██▎       | 51/221 [00:26<01:29,  1.89it/s][A
 24%|██▎       | 52/221 [00:27<01:29,  1.89it/s][A
 24%|██▍       | 53/221 [00:28<01:28,  1.89it/s][A
 24%|██▍       | 54/221 [00:28<01:28,  1.89it/s][A
 25%|██▍       | 55/221 [00:29<01:27,  1.89it/s][A
 25%|██▌       | 56/221 [00:29<01:27,  1.89it/s][A
 26%|██▌       | 57/221 [00:30<01:26,  1.89it/s][A
 26%|██▌       | 58/221 [00:30<01:26,  1.89it/s][A
 27%|██▋       | 59/221 [00:31<01:25,  1.89it/s][A
 27%|██▋       | 60/221 [00:31<01:25,  1.89it/s][A
 28%|██▊       | 61/221 [00:32<01:24,  1.89it/s][A
 28%|██▊       | 62/221 [00:32<01:24,  1.89it/s][A
 29%|██▊       | 63/221 [00:33<01:23,  1.89it/s][A
 29%|██▉       | 64/221 [00:33<01:22,  1.89it/s][A
 29%|██▉       | 65/221 [00:34<01:22,  1.89it/s][A
 30%|██▉       | 66/221 [00:34<01:21,  1.89it/s][A
 30%|███       | 67/221 [00:35<01:21,  1.89it/s][A
 31%|███       | 68/221 [00:35<01:20,  1.89it/s][A
 31%|███       | 69/221 [00:36<01:20,  1.89it/s][A
 32%|███▏      | 70/221 [00:37<01:19,  1.89it/s][A
 32%|███▏      | 71/221 [00:37<01:19,  1.89it/s][A
 33%|███▎      | 72/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 73/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 74/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 75/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 76/221 [00:40<01:16,  1.89it/s][A
 35%|███▍      | 77/221 [00:40<01:16,  1.89it/s][A
 35%|███▌      | 78/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 79/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 80/221 [00:42<01:14,  1.89it/s][A
 37%|███▋      | 81/221 [00:42<01:13,  1.89it/s][A
 37%|███▋      | 82/221 [00:43<01:13,  1.89it/s][A
 38%|███▊      | 83/221 [00:43<01:12,  1.89it/s][A
 38%|███▊      | 84/221 [00:44<01:12,  1.89it/s][A
 38%|███▊      | 85/221 [00:44<01:11,  1.89it/s][A
 39%|███▉      | 86/221 [00:45<01:11,  1.89it/s][A
 39%|███▉      | 87/221 [00:45<01:10,  1.89it/s][A
 40%|███▉      | 88/221 [00:46<01:10,  1.89it/s][A
 40%|████      | 89/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 90/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 91/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 92/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 93/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 94/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 95/221 [00:50<01:06,  1.89it/s][A
 43%|████▎     | 96/221 [00:50<01:06,  1.89it/s][A
 44%|████▍     | 97/221 [00:51<01:05,  1.89it/s][A
 44%|████▍     | 98/221 [00:51<01:05,  1.89it/s][A
 45%|████▍     | 99/221 [00:52<01:04,  1.89it/s][A
 45%|████▌     | 100/221 [00:52<01:03,  1.89it/s][A
 46%|████▌     | 101/221 [00:53<01:03,  1.89it/s][A
 46%|████▌     | 102/221 [00:53<01:02,  1.89it/s][A
 47%|████▋     | 103/221 [00:54<01:02,  1.89it/s][A
 47%|████▋     | 104/221 [00:54<01:01,  1.89it/s][A
 48%|████▊     | 105/221 [00:55<01:01,  1.89it/s][A
 48%|████▊     | 106/221 [00:56<01:00,  1.89it/s][A
 48%|████▊     | 107/221 [00:56<01:00,  1.89it/s][A
 49%|████▉     | 108/221 [00:57<00:59,  1.89it/s][A
 49%|████▉     | 109/221 [00:57<00:59,  1.89it/s][A
 50%|████▉     | 110/221 [00:58<00:58,  1.89it/s][A
 50%|█████     | 111/221 [00:58<00:58,  1.89it/s][A
 51%|█████     | 112/221 [00:59<00:57,  1.89it/s][A
 51%|█████     | 113/221 [00:59<00:57,  1.89it/s][A
 52%|█████▏    | 114/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 115/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 116/221 [01:01<00:55,  1.89it/s][A
 53%|█████▎    | 117/221 [01:01<00:54,  1.89it/s][A
 53%|█████▎    | 118/221 [01:02<00:54,  1.89it/s][A
 54%|█████▍    | 119/221 [01:02<00:53,  1.89it/s][A
 54%|█████▍    | 120/221 [01:03<00:53,  1.89it/s][A
 55%|█████▍    | 121/221 [01:03<00:52,  1.89it/s][A
 55%|█████▌    | 122/221 [01:04<00:52,  1.89it/s][A
 56%|█████▌    | 123/221 [01:05<00:51,  1.89it/s][A
 56%|█████▌    | 124/221 [01:05<00:51,  1.89it/s][A
 57%|█████▋    | 125/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 126/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 127/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 128/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 129/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 130/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 131/221 [01:09<00:47,  1.89it/s][A
 60%|█████▉    | 132/221 [01:09<00:47,  1.89it/s][A
 60%|██████    | 133/221 [01:10<00:46,  1.89it/s][A
 61%|██████    | 134/221 [01:10<00:45,  1.89it/s][A
 61%|██████    | 135/221 [01:11<00:45,  1.89it/s][A
 62%|██████▏   | 136/221 [01:11<00:44,  1.89it/s][A
 62%|██████▏   | 137/221 [01:12<00:44,  1.89it/s][A
 62%|██████▏   | 138/221 [01:12<00:43,  1.89it/s][A
 63%|██████▎   | 139/221 [01:13<00:43,  1.89it/s][A
 63%|██████▎   | 140/221 [01:13<00:42,  1.89it/s][A
 64%|██████▍   | 141/221 [01:14<00:42,  1.89it/s][A
 64%|██████▍   | 142/221 [01:15<00:41,  1.89it/s][A
 65%|██████▍   | 143/221 [01:15<00:41,  1.89it/s][A
 65%|██████▌   | 144/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 145/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 146/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 147/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 148/221 [01:18<00:38,  1.89it/s][A
 67%|██████▋   | 149/221 [01:18<00:38,  1.89it/s][A
 68%|██████▊   | 150/221 [01:19<00:37,  1.89it/s][A
 68%|██████▊   | 151/221 [01:19<00:36,  1.89it/s][A
 69%|██████▉   | 152/221 [01:20<00:36,  1.89it/s][A
 69%|██████▉   | 153/221 [01:20<00:35,  1.89it/s][A
 70%|██████▉   | 154/221 [01:21<00:35,  1.89it/s][A
 70%|███████   | 155/221 [01:21<00:34,  1.89it/s][A
 71%|███████   | 156/221 [01:22<00:34,  1.89it/s][A
 71%|███████   | 157/221 [01:22<00:33,  1.89it/s][A
 71%|███████▏  | 158/221 [01:23<00:33,  1.89it/s][A
 72%|███████▏  | 159/221 [01:24<00:32,  1.89it/s][A
 72%|███████▏  | 160/221 [01:24<00:32,  1.89it/s][A
 73%|███████▎  | 161/221 [01:25<00:31,  1.89it/s][A
 73%|███████▎  | 162/221 [01:25<00:31,  1.89it/s][A
 74%|███████▍  | 163/221 [01:26<00:30,  1.89it/s][A
 74%|███████▍  | 164/221 [01:26<00:30,  1.89it/s][A
 75%|███████▍  | 165/221 [01:27<00:29,  1.89it/s][A
 75%|███████▌  | 166/221 [01:27<00:29,  1.89it/s][A
 76%|███████▌  | 167/221 [01:28<00:28,  1.89it/s][A
 76%|███████▌  | 168/221 [01:28<00:28,  1.89it/s][A
 76%|███████▋  | 169/221 [01:29<00:27,  1.89it/s][A
 77%|███████▋  | 170/221 [01:29<00:26,  1.89it/s][A
 77%|███████▋  | 171/221 [01:30<00:26,  1.89it/s][A
 78%|███████▊  | 172/221 [01:30<00:25,  1.89it/s][A
 78%|███████▊  | 173/221 [01:31<00:25,  1.89it/s][A
 79%|███████▊  | 174/221 [01:31<00:24,  1.89it/s][A
 79%|███████▉  | 175/221 [01:32<00:24,  1.89it/s][A
 80%|███████▉  | 176/221 [01:33<00:23,  1.89it/s][A
 80%|████████  | 177/221 [01:33<00:23,  1.89it/s][A
 81%|████████  | 178/221 [01:34<00:22,  1.89it/s][A
 81%|████████  | 179/221 [01:34<00:22,  1.89it/s][A
 81%|████████▏ | 180/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 181/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 182/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 183/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 184/221 [01:37<00:19,  1.89it/s][A
 84%|████████▎ | 185/221 [01:37<00:19,  1.89it/s][A
 84%|████████▍ | 186/221 [01:38<00:18,  1.89it/s][A
 85%|████████▍ | 187/221 [01:38<00:17,  1.89it/s][A
 85%|████████▌ | 188/221 [01:39<00:17,  1.89it/s][A
 86%|████████▌ | 189/221 [01:39<00:16,  1.89it/s][A
 86%|████████▌ | 190/221 [01:40<00:16,  1.89it/s][A
 86%|████████▋ | 191/221 [01:40<00:15,  1.89it/s][A
 87%|████████▋ | 192/221 [01:41<00:15,  1.89it/s][A
 87%|████████▋ | 193/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 194/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 195/221 [01:43<00:13,  1.89it/s][A
 89%|████████▊ | 196/221 [01:43<00:13,  1.89it/s][A
 89%|████████▉ | 197/221 [01:44<00:12,  1.89it/s][A
 90%|████████▉ | 198/221 [01:44<00:12,  1.89it/s][A
 90%|█████████ | 199/221 [01:45<00:11,  1.89it/s][A
 90%|█████████ | 200/221 [01:45<00:11,  1.89it/s][A
 91%|█████████ | 201/221 [01:46<00:10,  1.89it/s][A
 91%|█████████▏| 202/221 [01:46<00:10,  1.89it/s][A
 92%|█████████▏| 203/221 [01:47<00:09,  1.89it/s][A
 92%|█████████▏| 204/221 [01:47<00:08,  1.89it/s][A
 93%|█████████▎| 205/221 [01:48<00:08,  1.89it/s][A
 93%|█████████▎| 206/221 [01:48<00:07,  1.89it/s][A
 94%|█████████▎| 207/221 [01:49<00:07,  1.89it/s][A
 94%|█████████▍| 208/221 [01:49<00:06,  1.89it/s][A
 95%|█████████▍| 209/221 [01:50<00:06,  1.89it/s][A
 95%|█████████▌| 210/221 [01:50<00:05,  1.89it/s][A
 95%|█████████▌| 211/221 [01:51<00:05,  1.89it/s][A
 96%|█████████▌| 212/221 [01:52<00:04,  1.89it/s][A
 96%|█████████▋| 213/221 [01:52<00:04,  1.89it/s][A
 97%|█████████▋| 214/221 [01:53<00:03,  1.89it/s][A
 97%|█████████▋| 215/221 [01:53<00:03,  1.89it/s][A
 98%|█████████▊| 216/221 [01:54<00:02,  1.89it/s][A
 98%|█████████▊| 217/221 [01:54<00:02,  1.89it/s][A
 99%|█████████▊| 218/221 [01:55<00:01,  1.89it/s][A
 99%|█████████▉| 219/221 [01:55<00:01,  1.89it/s][A
100%|█████████▉| 220/221 [01:56<00:00,  1.89it/s][A
100%|██████████| 221/221 [01:56<00:00,  1.89it/s][A100%|██████████| 221/221 [01:56<00:00,  1.89it/s]
09/20/2024 10:33:06 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_forward=====step 6999--===========

09/20/2024 10:33:06 - INFO - __main__ -   {'area_r1': 46.9, 'area_recall': '46.9/76.4/84.4', 'area_ravg': 69.2}
09/20/2024 10:33:06 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_backard=====step 6999--===========

09/20/2024 10:33:06 - INFO - __main__ -   {'forward_r1': 50.8, 'forward_recall': '50.8/78.7/87.6', 'forward_ravg': 72.4}
09/20/2024 10:33:06 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video=====step 6999--===========

09/20/2024 10:33:06 - INFO - __main__ -   {'area_video_r1': 48.9, 'area_video_recall': '48.9/78.3/88.0', 'area_video_ravg': 71.7}
09/20/2024 10:33:06 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video====history best step: 6499=======

09/20/2024 10:33:06 - INFO - __main__ -   {'area_video_r1': 50.3, 'area_video_recall': '50.3/79.6/88.6', 'area_video_ravg': 72.9}
09/20/2024 10:33:06 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itm_area=====step 6999--===========

09/20/2024 10:33:06 - INFO - __main__ -   {'area_video_r1': 62.6, 'area_video_recall': '62.6/83.6/89.9', 'area_video_ravg': 78.7, 'area_video_back_r1': 61.1, 'area_video_back_recall': '61.1/85.3/91.4', 'area_video_back_ravg': 79.3}
09/20/2024 10:33:06 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itm_area====history best step: 6999=======

09/20/2024 10:33:06 - INFO - __main__ -   {'area_video_r1': 62.6, 'area_video_recall': '62.6/83.6/89.9', 'area_video_ravg': 78.7, 'area_video_back_r1': 61.1, 'area_video_back_recall': '61.1/85.3/91.4', 'area_video_back_ravg': 79.3}
09/20/2024 10:33:06 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas=====step 6999--===========

09/20/2024 10:33:06 - INFO - __main__ -   {'video_r1': 29.9, 'video_recall': '29.9/55.1/65.6', 'video_ravg': 50.2}
09/20/2024 10:33:06 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas====history best step: 1499=======

09/20/2024 10:33:06 - INFO - __main__ -   {'video_r1': 34.7, 'video_recall': '34.7/60.5/72.3', 'video_ravg': 55.8}
09/20/2024 10:33:32 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04668169468641281, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.6152881383895874, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.661969780921936}
 71%|███████   | 7000/9908 [8:57:01<108:43:22, 134.60s/it] 71%|███████   | 7001/9908 [8:57:04<76:49:00, 95.13s/it]   71%|███████   | 7002/9908 [8:57:07<54:35:47, 67.64s/it] 71%|███████   | 7003/9908 [8:57:12<39:11:19, 48.56s/it] 71%|███████   | 7004/9908 [8:57:15<28:20:25, 35.13s/it] 71%|███████   | 7005/9908 [8:57:19<20:41:28, 25.66s/it] 71%|███████   | 7006/9908 [8:57:22<15:17:31, 18.97s/it] 71%|███████   | 7007/9908 [8:57:26<11:36:33, 14.41s/it] 71%|███████   | 7008/9908 [8:57:30<9:01:43, 11.21s/it]  71%|███████   | 7009/9908 [8:57:33<7:08:48,  8.87s/it] 71%|███████   | 7010/9908 [8:57:37<5:55:39,  7.36s/it] 71%|███████   | 7011/9908 [8:57:41<5:06:52,  6.36s/it] 71%|███████   | 7012/9908 [8:57:45<4:33:09,  5.66s/it] 71%|███████   | 7013/9908 [8:57:49<4:03:54,  5.06s/it] 71%|███████   | 7014/9908 [8:57:52<3:44:44,  4.66s/it] 71%|███████   | 7015/9908 [8:57:56<3:30:51,  4.37s/it] 71%|███████   | 7016/9908 [8:58:00<3:22:24,  4.20s/it] 71%|███████   | 7017/9908 [8:58:04<3:18:29,  4.12s/it] 71%|███████   | 7018/9908 [8:58:08<3:12:13,  3.99s/it] 71%|███████   | 7019/9908 [8:58:11<3:05:47,  3.86s/it] 71%|███████   | 7020/9908 [8:58:15<3:02:21,  3.79s/it] 71%|███████   | 7021/9908 [8:58:19<3:02:53,  3.80s/it] 71%|███████   | 7022/9908 [8:58:22<3:03:08,  3.81s/it] 71%|███████   | 7023/9908 [8:58:26<3:01:56,  3.78s/it] 71%|███████   | 7024/9908 [8:58:30<3:02:41,  3.80s/it] 71%|███████   | 7025/9908 [8:58:34<3:04:54,  3.85s/it] 71%|███████   | 7026/9908 [8:58:38<3:03:25,  3.82s/it] 71%|███████   | 7027/9908 [8:58:41<3:01:33,  3.78s/it] 71%|███████   | 7028/9908 [8:58:45<2:58:10,  3.71s/it] 71%|███████   | 7029/9908 [8:58:48<2:52:31,  3.60s/it] 71%|███████   | 7030/9908 [8:58:52<2:49:30,  3.53s/it] 71%|███████   | 7031/9908 [8:58:56<2:58:19,  3.72s/it] 71%|███████   | 7032/9908 [8:59:00<3:00:28,  3.77s/it] 71%|███████   | 7033/9908 [8:59:03<2:59:57,  3.76s/it] 71%|███████   | 7034/9908 [8:59:07<2:58:19,  3.72s/it] 71%|███████   | 7035/9908 [8:59:11<2:57:48,  3.71s/it] 71%|███████   | 7036/9908 [8:59:14<2:57:38,  3.71s/it] 71%|███████   | 7037/9908 [8:59:18<2:57:22,  3.71s/it] 71%|███████   | 7038/9908 [8:59:22<3:00:31,  3.77s/it] 71%|███████   | 7039/9908 [8:59:26<2:59:53,  3.76s/it] 71%|███████   | 7040/9908 [8:59:30<3:02:16,  3.81s/it] 71%|███████   | 7041/9908 [8:59:33<2:58:07,  3.73s/it] 71%|███████   | 7042/9908 [8:59:37<2:55:44,  3.68s/it] 71%|███████   | 7043/9908 [8:59:40<2:53:54,  3.64s/it] 71%|███████   | 7044/9908 [8:59:44<2:57:32,  3.72s/it] 71%|███████   | 7045/9908 [8:59:48<2:57:04,  3.71s/it] 71%|███████   | 7046/9908 [8:59:52<2:57:57,  3.73s/it] 71%|███████   | 7047/9908 [8:59:55<2:52:50,  3.62s/it] 71%|███████   | 7048/9908 [8:59:59<2:57:44,  3.73s/it] 71%|███████   | 7049/9908 [9:00:03<2:54:52,  3.67s/it]09/20/2024 10:36:37 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.022608131170272827, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 0.9500243663787842, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 0.9726325273513794}
 71%|███████   | 7050/9908 [9:00:07<3:02:33,  3.83s/it] 71%|███████   | 7051/9908 [9:00:11<3:01:02,  3.80s/it] 71%|███████   | 7052/9908 [9:00:14<2:57:46,  3.73s/it] 71%|███████   | 7053/9908 [9:00:18<3:06:27,  3.92s/it] 71%|███████   | 7054/9908 [9:00:22<3:02:05,  3.83s/it] 71%|███████   | 7055/9908 [9:00:25<2:54:36,  3.67s/it] 71%|███████   | 7056/9908 [9:00:29<2:55:20,  3.69s/it] 71%|███████   | 7057/9908 [9:00:33<2:58:29,  3.76s/it] 71%|███████   | 7058/9908 [9:00:37<2:55:04,  3.69s/it] 71%|███████   | 7059/9908 [9:00:41<2:59:22,  3.78s/it] 71%|███████▏  | 7060/9908 [9:00:44<3:00:47,  3.81s/it] 71%|███████▏  | 7061/9908 [9:00:48<2:58:49,  3.77s/it] 71%|███████▏  | 7062/9908 [9:00:52<2:56:17,  3.72s/it] 71%|███████▏  | 7063/9908 [9:00:55<2:54:15,  3.67s/it] 71%|███████▏  | 7064/9908 [9:00:59<2:58:08,  3.76s/it] 71%|███████▏  | 7065/9908 [9:01:03<2:58:46,  3.77s/it] 71%|███████▏  | 7066/9908 [9:01:07<3:01:25,  3.83s/it] 71%|███████▏  | 7067/9908 [9:01:11<3:02:21,  3.85s/it] 71%|███████▏  | 7068/9908 [9:01:14<2:58:44,  3.78s/it] 71%|███████▏  | 7069/9908 [9:01:18<2:54:35,  3.69s/it] 71%|███████▏  | 7070/9908 [9:01:22<2:58:29,  3.77s/it] 71%|███████▏  | 7071/9908 [9:01:25<2:53:19,  3.67s/it] 71%|███████▏  | 7072/9908 [9:01:29<2:54:46,  3.70s/it] 71%|███████▏  | 7073/9908 [9:01:33<2:56:19,  3.73s/it] 71%|███████▏  | 7074/9908 [9:01:37<2:54:49,  3.70s/it] 71%|███████▏  | 7075/9908 [9:01:40<2:54:16,  3.69s/it] 71%|███████▏  | 7076/9908 [9:01:44<2:51:56,  3.64s/it] 71%|███████▏  | 7077/9908 [9:01:48<2:57:46,  3.77s/it] 71%|███████▏  | 7078/9908 [9:01:52<2:59:23,  3.80s/it] 71%|███████▏  | 7079/9908 [9:01:56<2:59:33,  3.81s/it] 71%|███████▏  | 7080/9908 [9:01:59<2:57:41,  3.77s/it] 71%|███████▏  | 7081/9908 [9:02:03<2:56:37,  3.75s/it] 71%|███████▏  | 7082/9908 [9:02:07<2:59:51,  3.82s/it] 71%|███████▏  | 7083/9908 [9:02:11<2:57:11,  3.76s/it] 71%|███████▏  | 7084/9908 [9:02:14<2:55:41,  3.73s/it] 72%|███████▏  | 7085/9908 [9:02:18<2:54:06,  3.70s/it] 72%|███████▏  | 7086/9908 [9:02:22<2:56:20,  3.75s/it] 72%|███████▏  | 7087/9908 [9:02:25<2:54:13,  3.71s/it] 72%|███████▏  | 7088/9908 [9:02:29<2:55:19,  3.73s/it] 72%|███████▏  | 7089/9908 [9:02:33<2:58:37,  3.80s/it] 72%|███████▏  | 7090/9908 [9:02:37<3:00:13,  3.84s/it] 72%|███████▏  | 7091/9908 [9:02:41<2:59:44,  3.83s/it] 72%|███████▏  | 7092/9908 [9:02:44<2:55:04,  3.73s/it] 72%|███████▏  | 7093/9908 [9:02:48<2:52:56,  3.69s/it] 72%|███████▏  | 7094/9908 [9:02:52<2:52:35,  3.68s/it] 72%|███████▏  | 7095/9908 [9:02:55<2:50:07,  3.63s/it] 72%|███████▏  | 7096/9908 [9:02:59<2:55:04,  3.74s/it] 72%|███████▏  | 7097/9908 [9:03:02<2:50:15,  3.63s/it] 72%|███████▏  | 7098/9908 [9:03:06<2:49:15,  3.61s/it] 72%|███████▏  | 7099/9908 [9:03:10<2:53:34,  3.71s/it]09/20/2024 10:39:44 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.02908928692340851, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.3641937971115112, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.3932831287384033}
 72%|███████▏  | 7100/9908 [9:03:13<2:50:36,  3.65s/it] 72%|███████▏  | 7101/9908 [9:03:17<2:52:56,  3.70s/it] 72%|███████▏  | 7102/9908 [9:03:21<2:51:21,  3.66s/it] 72%|███████▏  | 7103/9908 [9:03:24<2:50:56,  3.66s/it] 72%|███████▏  | 7104/9908 [9:03:28<2:49:52,  3.63s/it] 72%|███████▏  | 7105/9908 [9:03:32<2:49:53,  3.64s/it] 72%|███████▏  | 7106/9908 [9:03:35<2:51:57,  3.68s/it] 72%|███████▏  | 7107/9908 [9:03:39<2:50:58,  3.66s/it] 72%|███████▏  | 7108/9908 [9:03:43<2:49:19,  3.63s/it] 72%|███████▏  | 7109/9908 [9:03:46<2:49:06,  3.62s/it] 72%|███████▏  | 7110/9908 [9:03:50<2:48:03,  3.60s/it] 72%|███████▏  | 7111/9908 [9:03:53<2:49:09,  3.63s/it] 72%|███████▏  | 7112/9908 [9:03:57<2:51:58,  3.69s/it] 72%|███████▏  | 7113/9908 [9:04:01<2:50:48,  3.67s/it] 72%|███████▏  | 7114/9908 [9:04:05<2:56:59,  3.80s/it] 72%|███████▏  | 7115/9908 [9:04:09<2:52:56,  3.72s/it] 72%|███████▏  | 7116/9908 [9:04:12<2:51:34,  3.69s/it] 72%|███████▏  | 7117/9908 [9:04:16<2:54:59,  3.76s/it] 72%|███████▏  | 7118/9908 [9:04:19<2:49:05,  3.64s/it] 72%|███████▏  | 7119/9908 [9:04:23<2:48:06,  3.62s/it] 72%|███████▏  | 7120/9908 [9:04:27<2:51:12,  3.68s/it] 72%|███████▏  | 7121/9908 [9:04:31<2:52:01,  3.70s/it] 72%|███████▏  | 7122/9908 [9:04:35<2:54:48,  3.76s/it] 72%|███████▏  | 7123/9908 [9:04:38<2:49:50,  3.66s/it] 72%|███████▏  | 7124/9908 [9:04:42<2:48:37,  3.63s/it] 72%|███████▏  | 7125/9908 [9:04:45<2:52:48,  3.73s/it] 72%|███████▏  | 7126/9908 [9:04:49<2:52:51,  3.73s/it] 72%|███████▏  | 7127/9908 [9:04:52<2:46:42,  3.60s/it] 72%|███████▏  | 7128/9908 [9:04:56<2:50:49,  3.69s/it] 72%|███████▏  | 7129/9908 [9:05:00<2:50:23,  3.68s/it] 72%|███████▏  | 7130/9908 [9:05:04<2:50:02,  3.67s/it] 72%|███████▏  | 7131/9908 [9:05:08<2:55:10,  3.78s/it] 72%|███████▏  | 7132/9908 [9:05:12<2:55:03,  3.78s/it] 72%|███████▏  | 7133/9908 [9:05:15<2:50:50,  3.69s/it] 72%|███████▏  | 7134/9908 [9:05:18<2:47:01,  3.61s/it] 72%|███████▏  | 7135/9908 [9:05:22<2:44:36,  3.56s/it] 72%|███████▏  | 7136/9908 [9:05:26<2:45:23,  3.58s/it] 72%|███████▏  | 7137/9908 [9:05:30<2:52:31,  3.74s/it] 72%|███████▏  | 7138/9908 [9:05:33<2:53:21,  3.76s/it] 72%|███████▏  | 7139/9908 [9:05:37<2:52:38,  3.74s/it] 72%|███████▏  | 7140/9908 [9:05:41<2:51:14,  3.71s/it] 72%|███████▏  | 7141/9908 [9:05:44<2:47:46,  3.64s/it] 72%|███████▏  | 7142/9908 [9:05:48<2:49:47,  3.68s/it] 72%|███████▏  | 7143/9908 [9:05:52<2:52:23,  3.74s/it] 72%|███████▏  | 7144/9908 [9:05:55<2:49:49,  3.69s/it] 72%|███████▏  | 7145/9908 [9:05:59<2:49:45,  3.69s/it] 72%|███████▏  | 7146/9908 [9:06:03<2:54:58,  3.80s/it] 72%|███████▏  | 7147/9908 [9:06:07<2:52:11,  3.74s/it] 72%|███████▏  | 7148/9908 [9:06:11<2:52:21,  3.75s/it] 72%|███████▏  | 7149/9908 [9:06:14<2:51:14,  3.72s/it]09/20/2024 10:42:49 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.02058439888060093, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2798570394515991, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.3004413843154907}
 72%|███████▏  | 7150/9908 [9:06:18<2:50:24,  3.71s/it] 72%|███████▏  | 7151/9908 [9:06:21<2:48:44,  3.67s/it] 72%|███████▏  | 7152/9908 [9:06:25<2:52:29,  3.76s/it] 72%|███████▏  | 7153/9908 [9:06:29<2:50:18,  3.71s/it] 72%|███████▏  | 7154/9908 [9:06:33<2:52:15,  3.75s/it] 72%|███████▏  | 7155/9908 [9:06:37<2:50:54,  3.72s/it] 72%|███████▏  | 7156/9908 [9:06:40<2:47:49,  3.66s/it] 72%|███████▏  | 7157/9908 [9:06:44<2:48:55,  3.68s/it] 72%|███████▏  | 7158/9908 [9:06:47<2:47:19,  3.65s/it] 72%|███████▏  | 7159/9908 [9:06:51<2:46:33,  3.64s/it] 72%|███████▏  | 7160/9908 [9:06:54<2:44:07,  3.58s/it] 72%|███████▏  | 7161/9908 [9:06:58<2:45:06,  3.61s/it] 72%|███████▏  | 7162/9908 [9:07:02<2:48:43,  3.69s/it] 72%|███████▏  | 7163/9908 [9:07:06<2:47:03,  3.65s/it] 72%|███████▏  | 7164/9908 [9:07:09<2:42:52,  3.56s/it] 72%|███████▏  | 7165/9908 [9:07:13<2:44:34,  3.60s/it] 72%|███████▏  | 7166/9908 [9:07:16<2:46:30,  3.64s/it] 72%|███████▏  | 7167/9908 [9:07:20<2:53:27,  3.80s/it] 72%|███████▏  | 7168/9908 [9:07:24<2:53:15,  3.79s/it] 72%|███████▏  | 7169/9908 [9:07:28<2:47:11,  3.66s/it] 72%|███████▏  | 7170/9908 [9:07:31<2:48:09,  3.68s/it] 72%|███████▏  | 7171/9908 [9:07:35<2:50:21,  3.73s/it] 72%|███████▏  | 7172/9908 [9:07:39<2:51:06,  3.75s/it] 72%|███████▏  | 7173/9908 [9:07:42<2:47:16,  3.67s/it] 72%|███████▏  | 7174/9908 [9:07:46<2:48:53,  3.71s/it] 72%|███████▏  | 7175/9908 [9:07:50<2:47:38,  3.68s/it] 72%|███████▏  | 7176/9908 [9:07:53<2:45:19,  3.63s/it] 72%|███████▏  | 7177/9908 [9:07:57<2:45:15,  3.63s/it] 72%|███████▏  | 7178/9908 [9:08:01<2:48:43,  3.71s/it] 72%|███████▏  | 7179/9908 [9:08:05<2:50:32,  3.75s/it] 72%|███████▏  | 7180/9908 [9:08:08<2:48:02,  3.70s/it] 72%|███████▏  | 7181/9908 [9:08:12<2:48:30,  3.71s/it] 72%|███████▏  | 7182/9908 [9:08:16<2:50:24,  3.75s/it] 72%|███████▏  | 7183/9908 [9:08:20<2:50:55,  3.76s/it] 73%|███████▎  | 7184/9908 [9:08:23<2:48:48,  3.72s/it] 73%|███████▎  | 7185/9908 [9:08:27<2:49:49,  3.74s/it] 73%|███████▎  | 7186/9908 [9:08:31<2:53:18,  3.82s/it] 73%|███████▎  | 7187/9908 [9:08:35<2:56:03,  3.88s/it] 73%|███████▎  | 7188/9908 [9:08:39<2:51:05,  3.77s/it] 73%|███████▎  | 7189/9908 [9:08:42<2:50:08,  3.75s/it] 73%|███████▎  | 7190/9908 [9:08:46<2:47:41,  3.70s/it] 73%|███████▎  | 7191/9908 [9:08:49<2:44:23,  3.63s/it] 73%|███████▎  | 7192/9908 [9:08:53<2:48:21,  3.72s/it] 73%|███████▎  | 7193/9908 [9:08:57<2:48:08,  3.72s/it] 73%|███████▎  | 7194/9908 [9:09:01<2:47:36,  3.71s/it] 73%|███████▎  | 7195/9908 [9:09:05<2:51:56,  3.80s/it] 73%|███████▎  | 7196/9908 [9:09:08<2:48:51,  3.74s/it] 73%|███████▎  | 7197/9908 [9:09:12<2:48:52,  3.74s/it] 73%|███████▎  | 7198/9908 [9:09:16<2:48:01,  3.72s/it] 73%|███████▎  | 7199/9908 [9:09:20<2:50:01,  3.77s/it]09/20/2024 10:45:54 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.013322447426617146, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 0.9224888682365417, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 0.9358113408088684}
 73%|███████▎  | 7200/9908 [9:09:23<2:49:51,  3.76s/it] 73%|███████▎  | 7201/9908 [9:09:27<2:48:17,  3.73s/it] 73%|███████▎  | 7202/9908 [9:09:31<2:47:27,  3.71s/it] 73%|███████▎  | 7203/9908 [9:09:34<2:45:37,  3.67s/it] 73%|███████▎  | 7204/9908 [9:09:38<2:43:37,  3.63s/it] 73%|███████▎  | 7205/9908 [9:09:41<2:39:51,  3.55s/it] 73%|███████▎  | 7206/9908 [9:09:45<2:40:05,  3.55s/it] 73%|███████▎  | 7207/9908 [9:09:48<2:41:14,  3.58s/it] 73%|███████▎  | 7208/9908 [9:09:52<2:43:45,  3.64s/it] 73%|███████▎  | 7209/9908 [9:09:56<2:44:24,  3.65s/it] 73%|███████▎  | 7210/9908 [9:09:59<2:42:30,  3.61s/it] 73%|███████▎  | 7211/9908 [9:10:03<2:42:33,  3.62s/it] 73%|███████▎  | 7212/9908 [9:10:06<2:39:29,  3.55s/it] 73%|███████▎  | 7213/9908 [9:10:10<2:44:03,  3.65s/it] 73%|███████▎  | 7214/9908 [9:10:14<2:40:35,  3.58s/it] 73%|███████▎  | 7215/9908 [9:10:17<2:38:22,  3.53s/it] 73%|███████▎  | 7216/9908 [9:10:21<2:45:25,  3.69s/it] 73%|███████▎  | 7217/9908 [9:10:25<2:42:44,  3.63s/it] 73%|███████▎  | 7218/9908 [9:10:28<2:41:42,  3.61s/it] 73%|███████▎  | 7219/9908 [9:10:32<2:43:09,  3.64s/it] 73%|███████▎  | 7220/9908 [9:10:36<2:44:43,  3.68s/it] 73%|███████▎  | 7221/9908 [9:10:40<2:50:43,  3.81s/it] 73%|███████▎  | 7222/9908 [9:10:44<2:50:39,  3.81s/it] 73%|███████▎  | 7223/9908 [9:10:48<2:54:44,  3.90s/it] 73%|███████▎  | 7224/9908 [9:10:51<2:47:48,  3.75s/it] 73%|███████▎  | 7225/9908 [9:10:55<2:47:58,  3.76s/it] 73%|███████▎  | 7226/9908 [9:10:59<2:45:30,  3.70s/it] 73%|███████▎  | 7227/9908 [9:11:02<2:47:15,  3.74s/it] 73%|███████▎  | 7228/9908 [9:11:06<2:46:34,  3.73s/it] 73%|███████▎  | 7229/9908 [9:11:10<2:46:26,  3.73s/it] 73%|███████▎  | 7230/9908 [9:11:13<2:44:01,  3.67s/it] 73%|███████▎  | 7231/9908 [9:11:17<2:48:41,  3.78s/it] 73%|███████▎  | 7232/9908 [9:11:21<2:46:01,  3.72s/it] 73%|███████▎  | 7233/9908 [9:11:25<2:44:36,  3.69s/it] 73%|███████▎  | 7234/9908 [9:11:28<2:45:03,  3.70s/it] 73%|███████▎  | 7235/9908 [9:11:32<2:41:43,  3.63s/it] 73%|███████▎  | 7236/9908 [9:11:36<2:43:39,  3.67s/it] 73%|███████▎  | 7237/9908 [9:11:39<2:39:20,  3.58s/it] 73%|███████▎  | 7238/9908 [9:11:42<2:37:22,  3.54s/it] 73%|███████▎  | 7239/9908 [9:11:46<2:42:26,  3.65s/it] 73%|███████▎  | 7240/9908 [9:11:50<2:43:15,  3.67s/it] 73%|███████▎  | 7241/9908 [9:11:54<2:43:13,  3.67s/it] 73%|███████▎  | 7242/9908 [9:11:57<2:43:56,  3.69s/it] 73%|███████▎  | 7243/9908 [9:12:01<2:44:12,  3.70s/it] 73%|███████▎  | 7244/9908 [9:12:05<2:46:36,  3.75s/it] 73%|███████▎  | 7245/9908 [9:12:09<2:46:18,  3.75s/it] 73%|███████▎  | 7246/9908 [9:12:13<2:51:38,  3.87s/it] 73%|███████▎  | 7247/9908 [9:12:16<2:47:34,  3.78s/it] 73%|███████▎  | 7248/9908 [9:12:20<2:48:03,  3.79s/it] 73%|███████▎  | 7249/9908 [9:12:24<2:42:06,  3.66s/it]09/20/2024 10:48:58 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.024561269208788872, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2566230297088623, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.2811843156814575}
 73%|███████▎  | 7250/9908 [9:12:27<2:41:01,  3.63s/it] 73%|███████▎  | 7251/9908 [9:12:31<2:39:44,  3.61s/it] 73%|███████▎  | 7252/9908 [9:12:35<2:43:38,  3.70s/it] 73%|███████▎  | 7253/9908 [9:12:38<2:43:19,  3.69s/it] 73%|███████▎  | 7254/9908 [9:12:42<2:40:03,  3.62s/it] 73%|███████▎  | 7255/9908 [9:12:45<2:39:15,  3.60s/it] 73%|███████▎  | 7256/9908 [9:12:49<2:46:18,  3.76s/it] 73%|███████▎  | 7257/9908 [9:12:53<2:38:41,  3.59s/it] 73%|███████▎  | 7258/9908 [9:12:56<2:39:58,  3.62s/it] 73%|███████▎  | 7259/9908 [9:13:00<2:45:04,  3.74s/it] 73%|███████▎  | 7260/9908 [9:13:04<2:45:43,  3.76s/it] 73%|███████▎  | 7261/9908 [9:13:08<2:47:05,  3.79s/it] 73%|███████▎  | 7262/9908 [9:13:11<2:41:36,  3.66s/it] 73%|███████▎  | 7263/9908 [9:13:15<2:42:31,  3.69s/it] 73%|███████▎  | 7264/9908 [9:13:19<2:41:59,  3.68s/it] 73%|███████▎  | 7265/9908 [9:13:22<2:39:52,  3.63s/it] 73%|███████▎  | 7266/9908 [9:13:26<2:43:29,  3.71s/it] 73%|███████▎  | 7267/9908 [9:13:30<2:43:58,  3.73s/it] 73%|███████▎  | 7268/9908 [9:13:34<2:44:32,  3.74s/it] 73%|███████▎  | 7269/9908 [9:13:37<2:43:56,  3.73s/it] 73%|███████▎  | 7270/9908 [9:13:41<2:41:35,  3.68s/it] 73%|███████▎  | 7271/9908 [9:13:45<2:41:57,  3.68s/it] 73%|███████▎  | 7272/9908 [9:13:49<2:45:06,  3.76s/it] 73%|███████▎  | 7273/9908 [9:13:52<2:45:53,  3.78s/it] 73%|███████▎  | 7274/9908 [9:13:56<2:43:46,  3.73s/it] 73%|███████▎  | 7275/9908 [9:14:00<2:44:33,  3.75s/it] 73%|███████▎  | 7276/9908 [9:14:04<2:43:39,  3.73s/it] 73%|███████▎  | 7277/9908 [9:14:07<2:41:14,  3.68s/it] 73%|███████▎  | 7278/9908 [9:14:11<2:43:48,  3.74s/it] 73%|███████▎  | 7279/9908 [9:14:15<2:43:37,  3.73s/it] 73%|███████▎  | 7280/9908 [9:14:18<2:41:57,  3.70s/it] 73%|███████▎  | 7281/9908 [9:14:22<2:45:44,  3.79s/it] 73%|███████▎  | 7282/9908 [9:14:26<2:46:38,  3.81s/it] 74%|███████▎  | 7283/9908 [9:14:30<2:46:23,  3.80s/it] 74%|███████▎  | 7284/9908 [9:14:34<2:45:26,  3.78s/it] 74%|███████▎  | 7285/9908 [9:14:37<2:41:22,  3.69s/it] 74%|███████▎  | 7286/9908 [9:14:41<2:39:42,  3.65s/it] 74%|███████▎  | 7287/9908 [9:14:45<2:41:31,  3.70s/it] 74%|███████▎  | 7288/9908 [9:14:49<2:54:27,  4.00s/it] 74%|███████▎  | 7289/9908 [9:14:53<2:48:33,  3.86s/it] 74%|███████▎  | 7290/9908 [9:14:56<2:46:39,  3.82s/it] 74%|███████▎  | 7291/9908 [9:15:00<2:41:29,  3.70s/it] 74%|███████▎  | 7292/9908 [9:15:04<2:43:43,  3.76s/it] 74%|███████▎  | 7293/9908 [9:15:08<2:43:55,  3.76s/it] 74%|███████▎  | 7294/9908 [9:15:11<2:40:49,  3.69s/it] 74%|███████▎  | 7295/9908 [9:15:15<2:39:06,  3.65s/it] 74%|███████▎  | 7296/9908 [9:15:18<2:38:09,  3.63s/it] 74%|███████▎  | 7297/9908 [9:15:22<2:43:05,  3.75s/it] 74%|███████▎  | 7298/9908 [9:15:26<2:37:15,  3.62s/it] 74%|███████▎  | 7299/9908 [9:15:29<2:38:53,  3.65s/it]09/20/2024 10:52:04 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.030167410150170326, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2684009075164795, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.2985683679580688}
 74%|███████▎  | 7300/9908 [9:15:33<2:42:34,  3.74s/it] 74%|███████▎  | 7301/9908 [9:15:37<2:39:31,  3.67s/it] 74%|███████▎  | 7302/9908 [9:15:41<2:40:48,  3.70s/it] 74%|███████▎  | 7303/9908 [9:15:44<2:42:06,  3.73s/it] 74%|███████▎  | 7304/9908 [9:15:48<2:39:26,  3.67s/it] 74%|███████▎  | 7305/9908 [9:15:51<2:37:56,  3.64s/it] 74%|███████▎  | 7306/9908 [9:15:55<2:38:24,  3.65s/it] 74%|███████▎  | 7307/9908 [9:15:59<2:42:15,  3.74s/it] 74%|███████▍  | 7308/9908 [9:16:03<2:42:57,  3.76s/it] 74%|███████▍  | 7309/9908 [9:16:07<2:46:08,  3.84s/it] 74%|███████▍  | 7310/9908 [9:16:11<2:44:13,  3.79s/it] 74%|███████▍  | 7311/9908 [9:16:15<2:46:06,  3.84s/it] 74%|███████▍  | 7312/9908 [9:16:18<2:36:58,  3.63s/it] 74%|███████▍  | 7313/9908 [9:16:21<2:38:17,  3.66s/it] 74%|███████▍  | 7314/9908 [9:16:25<2:40:17,  3.71s/it] 74%|███████▍  | 7315/9908 [9:16:29<2:40:39,  3.72s/it] 74%|███████▍  | 7316/9908 [9:16:32<2:37:32,  3.65s/it] 74%|███████▍  | 7317/9908 [9:16:36<2:37:21,  3.64s/it] 74%|███████▍  | 7318/9908 [9:16:40<2:37:55,  3.66s/it] 74%|███████▍  | 7319/9908 [9:16:44<2:43:04,  3.78s/it] 74%|███████▍  | 7320/9908 [9:16:48<2:42:27,  3.77s/it] 74%|███████▍  | 7321/9908 [9:16:51<2:39:27,  3.70s/it] 74%|███████▍  | 7322/9908 [9:16:55<2:40:55,  3.73s/it] 74%|███████▍  | 7323/9908 [9:16:59<2:43:51,  3.80s/it] 74%|███████▍  | 7324/9908 [9:17:03<2:44:05,  3.81s/it] 74%|███████▍  | 7325/9908 [9:17:06<2:41:31,  3.75s/it] 74%|███████▍  | 7326/9908 [9:17:10<2:43:07,  3.79s/it] 74%|███████▍  | 7327/9908 [9:17:14<2:39:26,  3.71s/it] 74%|███████▍  | 7328/9908 [9:17:17<2:33:57,  3.58s/it] 74%|███████▍  | 7329/9908 [9:17:21<2:33:32,  3.57s/it] 74%|███████▍  | 7330/9908 [9:17:24<2:37:59,  3.68s/it] 74%|███████▍  | 7331/9908 [9:17:28<2:39:46,  3.72s/it] 74%|███████▍  | 7332/9908 [9:17:32<2:39:20,  3.71s/it] 74%|███████▍  | 7333/9908 [9:17:36<2:39:28,  3.72s/it] 74%|███████▍  | 7334/9908 [9:17:40<2:42:35,  3.79s/it] 74%|███████▍  | 7335/9908 [9:17:44<2:43:09,  3.80s/it] 74%|███████▍  | 7336/9908 [9:17:47<2:38:16,  3.69s/it] 74%|███████▍  | 7337/9908 [9:17:51<2:38:37,  3.70s/it] 74%|███████▍  | 7338/9908 [9:17:55<2:41:48,  3.78s/it] 74%|███████▍  | 7339/9908 [9:17:58<2:42:23,  3.79s/it] 74%|███████▍  | 7340/9908 [9:18:02<2:43:34,  3.82s/it] 74%|███████▍  | 7341/9908 [9:18:06<2:41:08,  3.77s/it] 74%|███████▍  | 7342/9908 [9:18:10<2:41:36,  3.78s/it] 74%|███████▍  | 7343/9908 [9:18:13<2:36:50,  3.67s/it] 74%|███████▍  | 7344/9908 [9:18:17<2:41:32,  3.78s/it] 74%|███████▍  | 7345/9908 [9:18:21<2:44:53,  3.86s/it] 74%|███████▍  | 7346/9908 [9:18:25<2:42:02,  3.79s/it] 74%|███████▍  | 7347/9908 [9:18:29<2:45:01,  3.87s/it] 74%|███████▍  | 7348/9908 [9:18:32<2:39:29,  3.74s/it] 74%|███████▍  | 7349/9908 [9:18:36<2:40:21,  3.76s/it]09/20/2024 10:55:10 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.026296695694327354, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.354701280593872, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.3809980154037476}
 74%|███████▍  | 7350/9908 [9:18:40<2:35:20,  3.64s/it] 74%|███████▍  | 7351/9908 [9:18:43<2:38:19,  3.71s/it] 74%|███████▍  | 7352/9908 [9:18:47<2:40:16,  3.76s/it] 74%|███████▍  | 7353/9908 [9:18:51<2:42:03,  3.81s/it] 74%|███████▍  | 7354/9908 [9:18:55<2:41:43,  3.80s/it] 74%|███████▍  | 7355/9908 [9:18:59<2:38:57,  3.74s/it] 74%|███████▍  | 7356/9908 [9:19:02<2:38:29,  3.73s/it] 74%|███████▍  | 7357/9908 [9:19:06<2:35:16,  3.65s/it] 74%|███████▍  | 7358/9908 [9:19:10<2:38:12,  3.72s/it] 74%|███████▍  | 7359/9908 [9:19:13<2:36:25,  3.68s/it] 74%|███████▍  | 7360/9908 [9:19:17<2:40:41,  3.78s/it] 74%|███████▍  | 7361/9908 [9:19:21<2:35:58,  3.67s/it] 74%|███████▍  | 7362/9908 [9:19:24<2:35:38,  3.67s/it] 74%|███████▍  | 7363/9908 [9:19:28<2:38:17,  3.73s/it] 74%|███████▍  | 7364/9908 [9:19:32<2:38:28,  3.74s/it] 74%|███████▍  | 7365/9908 [9:19:36<2:40:04,  3.78s/it] 74%|███████▍  | 7366/9908 [9:19:40<2:41:10,  3.80s/it] 74%|███████▍  | 7367/9908 [9:19:43<2:40:09,  3.78s/it] 74%|███████▍  | 7368/9908 [9:19:47<2:38:10,  3.74s/it] 74%|███████▍  | 7369/9908 [9:19:51<2:35:35,  3.68s/it] 74%|███████▍  | 7370/9908 [9:19:54<2:37:21,  3.72s/it] 74%|███████▍  | 7371/9908 [9:19:58<2:38:41,  3.75s/it] 74%|███████▍  | 7372/9908 [9:20:02<2:38:58,  3.76s/it] 74%|███████▍  | 7373/9908 [9:20:06<2:39:22,  3.77s/it] 74%|███████▍  | 7374/9908 [9:20:10<2:40:09,  3.79s/it] 74%|███████▍  | 7375/9908 [9:20:14<2:41:28,  3.83s/it] 74%|███████▍  | 7376/9908 [9:20:17<2:36:13,  3.70s/it] 74%|███████▍  | 7377/9908 [9:20:21<2:35:50,  3.69s/it] 74%|███████▍  | 7378/9908 [9:20:25<2:37:21,  3.73s/it] 74%|███████▍  | 7379/9908 [9:20:28<2:37:42,  3.74s/it] 74%|███████▍  | 7380/9908 [9:20:32<2:38:09,  3.75s/it] 74%|███████▍  | 7381/9908 [9:20:36<2:38:20,  3.76s/it] 75%|███████▍  | 7382/9908 [9:20:40<2:40:29,  3.81s/it] 75%|███████▍  | 7383/9908 [9:20:43<2:37:32,  3.74s/it] 75%|███████▍  | 7384/9908 [9:20:47<2:36:34,  3.72s/it] 75%|███████▍  | 7385/9908 [9:20:51<2:36:35,  3.72s/it] 75%|███████▍  | 7386/9908 [9:20:55<2:39:10,  3.79s/it] 75%|███████▍  | 7387/9908 [9:20:58<2:36:59,  3.74s/it] 75%|███████▍  | 7388/9908 [9:21:02<2:36:33,  3.73s/it] 75%|███████▍  | 7389/9908 [9:21:06<2:35:13,  3.70s/it] 75%|███████▍  | 7390/9908 [9:21:09<2:31:37,  3.61s/it] 75%|███████▍  | 7391/9908 [9:21:12<2:28:12,  3.53s/it] 75%|███████▍  | 7392/9908 [9:21:16<2:30:49,  3.60s/it] 75%|███████▍  | 7393/9908 [9:21:20<2:33:04,  3.65s/it] 75%|███████▍  | 7394/9908 [9:21:24<2:34:34,  3.69s/it] 75%|███████▍  | 7395/9908 [9:21:28<2:37:10,  3.75s/it] 75%|███████▍  | 7396/9908 [9:21:31<2:33:41,  3.67s/it] 75%|███████▍  | 7397/9908 [9:21:35<2:38:57,  3.80s/it] 75%|███████▍  | 7398/9908 [9:21:39<2:36:07,  3.73s/it] 75%|███████▍  | 7399/9908 [9:21:42<2:31:43,  3.63s/it]09/20/2024 10:58:17 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.039170172065496445, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.1293509006500244, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.1685210466384888}
 75%|███████▍  | 7400/9908 [9:21:46<2:33:39,  3.68s/it] 75%|███████▍  | 7401/9908 [9:21:49<2:29:02,  3.57s/it] 75%|███████▍  | 7402/9908 [9:21:53<2:33:32,  3.68s/it] 75%|███████▍  | 7403/9908 [9:21:57<2:36:34,  3.75s/it] 75%|███████▍  | 7404/9908 [9:22:01<2:35:28,  3.73s/it] 75%|███████▍  | 7405/9908 [9:22:05<2:35:49,  3.74s/it] 75%|███████▍  | 7406/9908 [9:22:08<2:32:00,  3.65s/it] 75%|███████▍  | 7407/9908 [9:22:12<2:33:12,  3.68s/it] 75%|███████▍  | 7408/9908 [9:22:16<2:37:14,  3.77s/it] 75%|███████▍  | 7409/9908 [9:22:19<2:30:35,  3.62s/it] 75%|███████▍  | 7410/9908 [9:22:22<2:28:42,  3.57s/it] 75%|███████▍  | 7411/9908 [9:22:26<2:28:32,  3.57s/it] 75%|███████▍  | 7412/9908 [9:22:30<2:31:52,  3.65s/it] 75%|███████▍  | 7413/9908 [9:22:34<2:33:58,  3.70s/it] 75%|███████▍  | 7414/9908 [9:22:37<2:33:25,  3.69s/it] 75%|███████▍  | 7415/9908 [9:22:41<2:27:23,  3.55s/it] 75%|███████▍  | 7416/9908 [9:22:43<2:18:36,  3.34s/it] 75%|███████▍  | 7417/9908 [9:22:46<2:12:29,  3.19s/it] 75%|███████▍  | 7418/9908 [9:22:49<2:08:11,  3.09s/it] 75%|███████▍  | 7419/9908 [9:22:52<2:05:06,  3.02s/it] 75%|███████▍  | 7420/9908 [9:22:55<2:02:54,  2.96s/it] 75%|███████▍  | 7421/9908 [9:22:58<2:01:16,  2.93s/it] 75%|███████▍  | 7422/9908 [9:23:00<2:00:19,  2.90s/it] 75%|███████▍  | 7423/9908 [9:23:03<1:59:27,  2.88s/it] 75%|███████▍  | 7424/9908 [9:23:06<1:59:00,  2.87s/it] 75%|███████▍  | 7425/9908 [9:23:09<1:58:40,  2.87s/it] 75%|███████▍  | 7426/9908 [9:23:12<1:58:15,  2.86s/it] 75%|███████▍  | 7427/9908 [9:23:15<1:58:07,  2.86s/it] 75%|███████▍  | 7428/9908 [9:23:18<1:57:54,  2.85s/it] 75%|███████▍  | 7429/9908 [9:23:20<1:57:51,  2.85s/it] 75%|███████▍  | 7430/9908 [9:23:23<1:57:42,  2.85s/it]/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
 75%|███████▌  | 7431/9908 [9:24:08<10:38:04, 15.46s/it] 75%|███████▌  | 7432/9908 [9:24:15<8:54:16, 12.95s/it]  75%|███████▌  | 7433/9908 [9:24:22<7:37:09, 11.08s/it] 75%|███████▌  | 7434/9908 [9:24:27<6:18:50,  9.19s/it] 75%|███████▌  | 7435/9908 [9:24:32<5:25:32,  7.90s/it] 75%|███████▌  | 7436/9908 [9:24:37<4:56:41,  7.20s/it] 75%|███████▌  | 7437/9908 [9:24:42<4:33:16,  6.64s/it] 75%|███████▌  | 7438/9908 [9:24:46<3:59:03,  5.81s/it] 75%|███████▌  | 7439/9908 [9:24:50<3:35:51,  5.25s/it] 75%|███████▌  | 7440/9908 [9:24:54<3:17:32,  4.80s/it] 75%|███████▌  | 7441/9908 [9:24:58<3:00:46,  4.40s/it] 75%|███████▌  | 7442/9908 [9:25:01<2:50:58,  4.16s/it] 75%|███████▌  | 7443/9908 [9:25:05<2:43:40,  3.98s/it] 75%|███████▌  | 7444/9908 [9:25:08<2:40:09,  3.90s/it] 75%|███████▌  | 7445/9908 [9:25:12<2:40:07,  3.90s/it] 75%|███████▌  | 7446/9908 [9:25:16<2:37:27,  3.84s/it] 75%|███████▌  | 7447/9908 [9:25:20<2:38:26,  3.86s/it] 75%|███████▌  | 7448/9908 [9:25:24<2:38:09,  3.86s/it] 75%|███████▌  | 7449/9908 [9:25:27<2:33:43,  3.75s/it]09/20/2024 11:02:02 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.031551700085401535, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.385594367980957, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.41714608669281}
 75%|███████▌  | 7450/9908 [9:25:31<2:30:00,  3.66s/it] 75%|███████▌  | 7451/9908 [9:25:34<2:28:55,  3.64s/it] 75%|███████▌  | 7452/9908 [9:25:38<2:33:44,  3.76s/it] 75%|███████▌  | 7453/9908 [9:25:42<2:31:42,  3.71s/it] 75%|███████▌  | 7454/9908 [9:25:46<2:31:27,  3.70s/it] 75%|███████▌  | 7455/9908 [9:25:50<2:34:59,  3.79s/it] 75%|███████▌  | 7456/9908 [9:25:54<2:37:13,  3.85s/it] 75%|███████▌  | 7457/9908 [9:25:57<2:35:21,  3.80s/it] 75%|███████▌  | 7458/9908 [9:26:01<2:35:33,  3.81s/it] 75%|███████▌  | 7459/9908 [9:26:05<2:39:34,  3.91s/it] 75%|███████▌  | 7460/9908 [9:26:09<2:38:13,  3.88s/it] 75%|███████▌  | 7461/9908 [9:26:13<2:34:40,  3.79s/it] 75%|███████▌  | 7462/9908 [9:26:16<2:34:36,  3.79s/it] 75%|███████▌  | 7463/9908 [9:26:20<2:32:31,  3.74s/it] 75%|███████▌  | 7464/9908 [9:26:24<2:31:25,  3.72s/it] 75%|███████▌  | 7465/9908 [9:26:27<2:30:53,  3.71s/it] 75%|███████▌  | 7466/9908 [9:26:31<2:33:11,  3.76s/it] 75%|███████▌  | 7467/9908 [9:26:35<2:36:15,  3.84s/it] 75%|███████▌  | 7468/9908 [9:26:39<2:31:39,  3.73s/it] 75%|███████▌  | 7469/9908 [9:26:42<2:30:52,  3.71s/it] 75%|███████▌  | 7470/9908 [9:26:46<2:31:36,  3.73s/it] 75%|███████▌  | 7471/9908 [9:26:50<2:29:44,  3.69s/it] 75%|███████▌  | 7472/9908 [9:26:54<2:31:27,  3.73s/it] 75%|███████▌  | 7473/9908 [9:26:57<2:32:16,  3.75s/it] 75%|███████▌  | 7474/9908 [9:27:01<2:31:24,  3.73s/it] 75%|███████▌  | 7475/9908 [9:27:05<2:29:01,  3.67s/it] 75%|███████▌  | 7476/9908 [9:27:08<2:27:21,  3.64s/it] 75%|███████▌  | 7477/9908 [9:27:12<2:28:30,  3.67s/it] 75%|███████▌  | 7478/9908 [9:27:16<2:29:45,  3.70s/it] 75%|███████▌  | 7479/9908 [9:27:19<2:27:48,  3.65s/it] 75%|███████▌  | 7480/9908 [9:27:23<2:28:05,  3.66s/it] 76%|███████▌  | 7481/9908 [9:27:27<2:31:12,  3.74s/it] 76%|███████▌  | 7482/9908 [9:27:31<2:29:53,  3.71s/it] 76%|███████▌  | 7483/9908 [9:27:34<2:27:52,  3.66s/it] 76%|███████▌  | 7484/9908 [9:27:38<2:26:34,  3.63s/it] 76%|███████▌  | 7485/9908 [9:27:41<2:28:38,  3.68s/it] 76%|███████▌  | 7486/9908 [9:27:45<2:29:04,  3.69s/it] 76%|███████▌  | 7487/9908 [9:27:49<2:28:50,  3.69s/it] 76%|███████▌  | 7488/9908 [9:27:53<2:32:20,  3.78s/it] 76%|███████▌  | 7489/9908 [9:27:56<2:28:25,  3.68s/it] 76%|███████▌  | 7490/9908 [9:28:00<2:25:18,  3.61s/it] 76%|███████▌  | 7491/9908 [9:28:03<2:26:51,  3.65s/it] 76%|███████▌  | 7492/9908 [9:28:07<2:29:30,  3.71s/it] 76%|███████▌  | 7493/9908 [9:28:11<2:32:03,  3.78s/it] 76%|███████▌  | 7494/9908 [9:28:15<2:30:56,  3.75s/it] 76%|███████▌  | 7495/9908 [9:28:19<2:29:54,  3.73s/it] 76%|███████▌  | 7496/9908 [9:28:23<2:32:15,  3.79s/it] 76%|███████▌  | 7497/9908 [9:28:26<2:26:30,  3.65s/it] 76%|███████▌  | 7498/9908 [9:28:29<2:25:30,  3.62s/it] 76%|███████▌  | 7499/9908 [9:28:33<2:28:57,  3.71s/it]09/20/2024 11:05:07 - INFO - __main__ -   evaluate on ret%tvas--msrvtt_ret task
09/20/2024 11:05:07 - INFO - __main__ -   start running ret%tvas validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:01<03:58,  1.09s/it][A
  1%|          | 2/221 [00:01<02:25,  1.50it/s][A
  1%|▏         | 3/221 [00:01<01:49,  1.98it/s][A
  2%|▏         | 4/221 [00:02<01:30,  2.38it/s][A
  3%|▎         | 6/221 [00:02<00:56,  3.82it/s][A
  3%|▎         | 7/221 [00:02<00:52,  4.11it/s][A
  4%|▎         | 8/221 [00:02<01:02,  3.39it/s][A
  4%|▍         | 9/221 [00:03<01:07,  3.15it/s][A
  5%|▍         | 10/221 [00:03<01:10,  3.00it/s][A
  5%|▌         | 12/221 [00:06<02:30,  1.39it/s][A
  6%|▌         | 13/221 [00:06<02:03,  1.68it/s][A
  7%|▋         | 15/221 [00:06<01:37,  2.10it/s][A
  7%|▋         | 16/221 [00:07<01:36,  2.11it/s][A
  8%|▊         | 17/221 [00:07<01:45,  1.94it/s][A
  8%|▊         | 18/221 [00:08<01:26,  2.34it/s][A
  9%|▊         | 19/221 [00:09<02:20,  1.44it/s][A
  9%|▉         | 20/221 [00:09<01:46,  1.88it/s][A
 10%|▉         | 21/221 [00:09<01:34,  2.11it/s][A
 10%|▉         | 22/221 [00:10<01:52,  1.77it/s][A
 10%|█         | 23/221 [00:10<01:25,  2.33it/s][A
 11%|█         | 24/221 [00:11<01:08,  2.86it/s][A
 11%|█▏        | 25/221 [00:11<01:05,  2.98it/s][A
 12%|█▏        | 26/221 [00:11<01:03,  3.05it/s][A
 13%|█▎        | 28/221 [00:12<01:02,  3.09it/s][A
 13%|█▎        | 29/221 [00:12<00:58,  3.30it/s][A
 14%|█▎        | 30/221 [00:12<01:04,  2.98it/s][A
 14%|█▍        | 31/221 [00:13<01:07,  2.83it/s][A
 14%|█▍        | 32/221 [00:13<00:55,  3.41it/s][A
 15%|█▍        | 33/221 [00:13<00:57,  3.29it/s][A
 15%|█▌        | 34/221 [00:13<00:46,  4.03it/s][A
 16%|█▌        | 35/221 [00:14<00:43,  4.26it/s][A
 16%|█▋        | 36/221 [00:14<00:40,  4.53it/s][A
 17%|█▋        | 37/221 [00:14<01:01,  2.98it/s][A
 17%|█▋        | 38/221 [00:15<01:10,  2.58it/s][A
 18%|█▊        | 39/221 [00:15<01:02,  2.91it/s][A
 18%|█▊        | 40/221 [00:16<01:15,  2.40it/s][A
 19%|█▊        | 41/221 [00:16<01:01,  2.92it/s][A
 19%|█▉        | 43/221 [00:16<00:40,  4.34it/s][A
 20%|█▉        | 44/221 [00:16<00:35,  5.03it/s][A
 20%|██        | 45/221 [00:20<03:07,  1.07s/it][A
 21%|██        | 46/221 [00:20<02:35,  1.13it/s][A
 21%|██▏       | 47/221 [00:21<02:13,  1.31it/s][A
 22%|██▏       | 48/221 [00:21<01:40,  1.73it/s][A
 22%|██▏       | 49/221 [00:21<01:33,  1.84it/s][A
 23%|██▎       | 50/221 [00:22<01:40,  1.70it/s][A
 23%|██▎       | 51/221 [00:22<01:21,  2.09it/s][A
 24%|██▎       | 52/221 [00:22<01:06,  2.52it/s][A
 24%|██▍       | 53/221 [00:22<00:55,  3.03it/s][A
 24%|██▍       | 54/221 [00:23<01:01,  2.70it/s][A
 25%|██▍       | 55/221 [00:24<01:45,  1.57it/s][A
 25%|██▌       | 56/221 [00:24<01:23,  1.96it/s][A
 26%|██▌       | 57/221 [00:25<01:07,  2.45it/s][A
 27%|██▋       | 59/221 [00:25<00:44,  3.68it/s][A
 27%|██▋       | 60/221 [00:25<00:52,  3.04it/s][A
 28%|██▊       | 61/221 [00:26<00:46,  3.40it/s][A
 28%|██▊       | 62/221 [00:26<00:48,  3.27it/s][A
 29%|██▊       | 63/221 [00:26<00:45,  3.51it/s][A
 29%|██▉       | 64/221 [00:27<01:14,  2.12it/s][A
 29%|██▉       | 65/221 [00:27<00:59,  2.61it/s][A
 30%|██▉       | 66/221 [00:28<01:05,  2.38it/s][A
 30%|███       | 67/221 [00:28<00:57,  2.66it/s][A
 31%|███       | 68/221 [00:28<00:46,  3.27it/s][A
 31%|███       | 69/221 [00:30<01:42,  1.48it/s][A
 32%|███▏      | 70/221 [00:30<01:17,  1.95it/s][A
 32%|███▏      | 71/221 [00:30<01:12,  2.07it/s][A
 33%|███▎      | 72/221 [00:31<01:18,  1.89it/s][A
 33%|███▎      | 73/221 [00:31<01:22,  1.80it/s][A
 33%|███▎      | 74/221 [00:32<01:02,  2.37it/s][A
 34%|███▍      | 75/221 [00:32<01:00,  2.41it/s][A
 34%|███▍      | 76/221 [00:32<00:56,  2.59it/s][A
 35%|███▍      | 77/221 [00:34<02:11,  1.09it/s][A
 35%|███▌      | 78/221 [00:35<01:35,  1.49it/s][A
 36%|███▌      | 79/221 [00:36<01:57,  1.21it/s][A
 36%|███▌      | 80/221 [00:36<01:27,  1.61it/s][A
 37%|███▋      | 81/221 [00:36<01:18,  1.78it/s][A
 37%|███▋      | 82/221 [00:40<03:13,  1.39s/it][A
 38%|███▊      | 83/221 [00:40<02:38,  1.15s/it][A
 38%|███▊      | 84/221 [00:41<02:03,  1.11it/s][A
 39%|███▉      | 86/221 [00:41<01:20,  1.68it/s][A
 39%|███▉      | 87/221 [00:41<01:16,  1.76it/s][A
 40%|███▉      | 88/221 [00:42<01:03,  2.08it/s][A
 40%|████      | 89/221 [00:42<00:58,  2.24it/s][A
 41%|████      | 90/221 [00:42<00:53,  2.45it/s][A
 41%|████      | 91/221 [00:43<00:44,  2.90it/s][A
 42%|████▏     | 92/221 [00:43<00:38,  3.38it/s][A
 42%|████▏     | 93/221 [00:43<00:40,  3.14it/s][A
 43%|████▎     | 94/221 [00:44<00:52,  2.43it/s][A
 43%|████▎     | 95/221 [00:44<00:50,  2.50it/s][A
 43%|████▎     | 96/221 [00:45<00:58,  2.15it/s][A
 44%|████▍     | 97/221 [00:45<00:46,  2.65it/s][A
 44%|████▍     | 98/221 [00:45<00:51,  2.40it/s][A
 45%|████▍     | 99/221 [00:46<00:48,  2.52it/s][A
 45%|████▌     | 100/221 [00:47<01:02,  1.95it/s][A
 46%|████▌     | 101/221 [00:47<00:51,  2.33it/s][A
 46%|████▌     | 102/221 [00:48<01:07,  1.76it/s][A
 47%|████▋     | 104/221 [00:48<00:48,  2.44it/s][A
 48%|████▊     | 105/221 [00:49<00:48,  2.41it/s][A
 48%|████▊     | 106/221 [00:50<01:25,  1.35it/s][A
 48%|████▊     | 107/221 [00:51<01:12,  1.57it/s][A
 49%|████▉     | 108/221 [00:51<01:09,  1.62it/s][A
 49%|████▉     | 109/221 [00:52<01:01,  1.83it/s][A
 50%|█████     | 111/221 [00:52<00:44,  2.47it/s][A
 51%|█████     | 112/221 [00:52<00:43,  2.48it/s][A
 51%|█████     | 113/221 [00:53<00:37,  2.87it/s][A
 52%|█████▏    | 114/221 [00:53<00:30,  3.52it/s][A
 52%|█████▏    | 115/221 [00:53<00:43,  2.41it/s][A
 52%|█████▏    | 116/221 [00:54<00:42,  2.50it/s][A
 53%|█████▎    | 117/221 [00:54<00:40,  2.55it/s][A
 53%|█████▎    | 118/221 [00:55<00:40,  2.52it/s][A
 54%|█████▍    | 119/221 [00:55<00:32,  3.14it/s][A
 54%|█████▍    | 120/221 [00:55<00:27,  3.63it/s][A
 55%|█████▍    | 121/221 [00:56<00:39,  2.56it/s][A
 55%|█████▌    | 122/221 [00:56<00:39,  2.49it/s][A
 56%|█████▌    | 123/221 [00:58<01:13,  1.33it/s][A
 56%|█████▌    | 124/221 [00:58<00:55,  1.75it/s][A
 57%|█████▋    | 125/221 [00:59<01:04,  1.50it/s][A
 57%|█████▋    | 126/221 [01:07<04:49,  3.05s/it][A
 57%|█████▋    | 127/221 [01:08<03:33,  2.28s/it][A
 58%|█████▊    | 128/221 [01:08<02:40,  1.72s/it][A
 58%|█████▊    | 129/221 [01:09<02:04,  1.36s/it][A
 59%|█████▉    | 130/221 [01:09<01:33,  1.03s/it][A
 59%|█████▉    | 131/221 [01:10<01:33,  1.04s/it][A
 60%|█████▉    | 132/221 [01:12<01:46,  1.19s/it][A
 60%|██████    | 133/221 [01:12<01:28,  1.01s/it][A
 61%|██████    | 134/221 [01:13<01:25,  1.02it/s][A
 61%|██████    | 135/221 [01:14<01:14,  1.15it/s][A
 62%|██████▏   | 136/221 [01:14<01:01,  1.39it/s][A
 62%|██████▏   | 137/221 [01:14<00:50,  1.65it/s][A
 62%|██████▏   | 138/221 [01:15<00:45,  1.84it/s][A
 63%|██████▎   | 139/221 [01:15<00:35,  2.34it/s][A
 63%|██████▎   | 140/221 [01:15<00:35,  2.28it/s][A
 64%|██████▍   | 141/221 [01:16<00:35,  2.23it/s][A
 64%|██████▍   | 142/221 [01:16<00:31,  2.47it/s][A
 65%|██████▍   | 143/221 [01:16<00:29,  2.62it/s][A
 65%|██████▌   | 144/221 [01:17<00:25,  3.04it/s][A
 66%|██████▌   | 146/221 [01:17<00:16,  4.67it/s][A
 67%|██████▋   | 148/221 [01:19<00:38,  1.88it/s][A
 67%|██████▋   | 149/221 [01:19<00:33,  2.14it/s][A
 68%|██████▊   | 150/221 [01:20<00:33,  2.13it/s][A
 68%|██████▊   | 151/221 [01:20<00:30,  2.33it/s][A
 69%|██████▉   | 152/221 [01:20<00:27,  2.50it/s][A
 69%|██████▉   | 153/221 [01:20<00:22,  3.08it/s][A
 70%|██████▉   | 154/221 [01:21<00:19,  3.35it/s][A
 70%|███████   | 155/221 [01:21<00:17,  3.72it/s][A
 71%|███████   | 156/221 [01:21<00:15,  4.19it/s][A
 71%|███████   | 157/221 [01:27<01:56,  1.83s/it][A
 71%|███████▏  | 158/221 [01:28<01:42,  1.63s/it][A
 72%|███████▏  | 159/221 [01:28<01:14,  1.19s/it][A
 72%|███████▏  | 160/221 [01:28<00:54,  1.13it/s][A
 73%|███████▎  | 162/221 [01:28<00:30,  1.96it/s][A
 74%|███████▍  | 163/221 [01:28<00:26,  2.19it/s][A
 74%|███████▍  | 164/221 [01:29<00:21,  2.61it/s][A
 75%|███████▍  | 165/221 [01:29<00:19,  2.91it/s][A
 75%|███████▌  | 166/221 [01:30<00:26,  2.07it/s][A
 76%|███████▌  | 167/221 [01:30<00:24,  2.19it/s][A
 76%|███████▌  | 168/221 [01:34<01:13,  1.38s/it][A
 76%|███████▋  | 169/221 [01:34<00:57,  1.10s/it][A
 77%|███████▋  | 170/221 [01:35<00:46,  1.10it/s][A
 77%|███████▋  | 171/221 [01:35<00:37,  1.34it/s][A
 78%|███████▊  | 172/221 [01:35<00:29,  1.67it/s][A
 78%|███████▊  | 173/221 [01:36<00:27,  1.73it/s][A
 79%|███████▊  | 174/221 [01:36<00:22,  2.07it/s][A
 79%|███████▉  | 175/221 [01:36<00:19,  2.32it/s][A
 80%|███████▉  | 176/221 [01:37<00:16,  2.66it/s][A
 80%|████████  | 177/221 [01:37<00:15,  2.91it/s][A
 81%|████████  | 178/221 [01:37<00:14,  3.00it/s][A
 81%|████████  | 179/221 [01:37<00:13,  3.12it/s][A
 81%|████████▏ | 180/221 [01:38<00:11,  3.53it/s][A
 82%|████████▏ | 181/221 [01:38<00:09,  4.12it/s][A
 82%|████████▏ | 182/221 [01:38<00:13,  2.95it/s][A
 83%|████████▎ | 183/221 [01:39<00:16,  2.25it/s][A
 83%|████████▎ | 184/221 [01:39<00:15,  2.40it/s][A
 84%|████████▎ | 185/221 [01:40<00:13,  2.71it/s][A
 84%|████████▍ | 186/221 [01:40<00:11,  3.05it/s][A
 85%|████████▍ | 187/221 [01:40<00:10,  3.29it/s][A
 85%|████████▌ | 188/221 [01:40<00:09,  3.44it/s][A
 86%|████████▌ | 189/221 [01:41<00:09,  3.53it/s][A
 86%|████████▌ | 190/221 [01:41<00:09,  3.14it/s][A
 86%|████████▋ | 191/221 [01:41<00:08,  3.63it/s][A
 87%|████████▋ | 192/221 [01:42<00:11,  2.51it/s][A
 87%|████████▋ | 193/221 [01:42<00:09,  3.02it/s][A
 88%|████████▊ | 194/221 [01:43<00:10,  2.69it/s][A
 88%|████████▊ | 195/221 [01:43<00:08,  3.14it/s][A
 89%|████████▊ | 196/221 [01:43<00:09,  2.52it/s][A
 89%|████████▉ | 197/221 [01:44<00:09,  2.60it/s][A
 90%|████████▉ | 198/221 [01:44<00:08,  2.70it/s][A
 90%|█████████ | 199/221 [01:44<00:06,  3.17it/s][A
 90%|█████████ | 200/221 [01:45<00:11,  1.87it/s][A
 91%|█████████ | 201/221 [01:46<00:10,  1.93it/s][A
 91%|█████████▏| 202/221 [01:46<00:08,  2.15it/s][A
 92%|█████████▏| 203/221 [01:47<00:11,  1.57it/s][A
 92%|█████████▏| 204/221 [01:48<00:09,  1.74it/s][A
 93%|█████████▎| 206/221 [01:48<00:06,  2.38it/s][A
 94%|█████████▎| 207/221 [01:48<00:04,  2.84it/s][A
 94%|█████████▍| 208/221 [01:49<00:05,  2.36it/s][A
 95%|█████████▌| 210/221 [01:49<00:03,  3.07it/s][A
 95%|█████████▌| 211/221 [01:50<00:03,  2.74it/s][A
 96%|█████████▌| 212/221 [01:50<00:03,  2.81it/s][A
 96%|█████████▋| 213/221 [01:50<00:02,  3.35it/s][A
 97%|█████████▋| 214/221 [01:51<00:02,  3.02it/s][A
 97%|█████████▋| 215/221 [01:51<00:02,  2.31it/s][A
 98%|█████████▊| 216/221 [01:52<00:01,  2.51it/s][A
 98%|█████████▊| 217/221 [01:52<00:02,  1.91it/s][A
 99%|█████████▊| 218/221 [01:53<00:01,  2.06it/s][A
 99%|█████████▉| 219/221 [01:53<00:00,  2.22it/s][A
100%|█████████▉| 220/221 [01:59<00:02,  2.15s/it][A
100%|██████████| 221/221 [01:59<00:00,  1.55s/it][A100%|██████████| 221/221 [01:59<00:00,  1.84it/s]

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:00<01:56,  1.89it/s][A
  1%|          | 2/221 [00:01<01:55,  1.89it/s][A
  1%|▏         | 3/221 [00:01<01:55,  1.89it/s][A
  2%|▏         | 4/221 [00:02<01:54,  1.89it/s][A
  2%|▏         | 5/221 [00:02<01:54,  1.89it/s][A
  3%|▎         | 6/221 [00:03<01:53,  1.89it/s][A
  3%|▎         | 7/221 [00:03<01:53,  1.89it/s][A
  4%|▎         | 8/221 [00:04<01:52,  1.89it/s][A
  4%|▍         | 9/221 [00:04<01:52,  1.89it/s][A
  5%|▍         | 10/221 [00:05<01:51,  1.89it/s][A
  5%|▍         | 11/221 [00:05<01:51,  1.89it/s][A
  5%|▌         | 12/221 [00:06<01:50,  1.89it/s][A
  6%|▌         | 13/221 [00:06<01:49,  1.89it/s][A
  6%|▋         | 14/221 [00:07<01:49,  1.89it/s][A
  7%|▋         | 15/221 [00:07<01:48,  1.89it/s][A
  7%|▋         | 16/221 [00:08<01:48,  1.89it/s][A
  8%|▊         | 17/221 [00:08<01:47,  1.89it/s][A
  8%|▊         | 18/221 [00:09<01:47,  1.89it/s][A
  9%|▊         | 19/221 [00:10<01:46,  1.89it/s][A
  9%|▉         | 20/221 [00:10<01:46,  1.89it/s][A
 10%|▉         | 21/221 [00:11<01:45,  1.89it/s][A
 10%|▉         | 22/221 [00:11<01:45,  1.89it/s][A
 10%|█         | 23/221 [00:12<01:44,  1.89it/s][A
 11%|█         | 24/221 [00:12<01:44,  1.89it/s][A
 11%|█▏        | 25/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 26/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 27/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 28/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 29/221 [00:15<01:41,  1.89it/s][A
 14%|█▎        | 30/221 [00:15<01:40,  1.89it/s][A
 14%|█▍        | 31/221 [00:16<01:40,  1.89it/s][A
 14%|█▍        | 32/221 [00:16<01:39,  1.89it/s][A
 15%|█▍        | 33/221 [00:17<01:39,  1.89it/s][A
 15%|█▌        | 34/221 [00:17<01:38,  1.89it/s][A
 16%|█▌        | 35/221 [00:18<01:38,  1.89it/s][A
 16%|█▋        | 36/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 37/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 38/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 39/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 40/221 [00:21<01:35,  1.89it/s][A
 19%|█▊        | 41/221 [00:21<01:35,  1.89it/s][A
 19%|█▉        | 42/221 [00:22<01:34,  1.89it/s][A
 19%|█▉        | 43/221 [00:22<01:34,  1.89it/s][A
 20%|█▉        | 44/221 [00:23<01:33,  1.89it/s][A
 20%|██        | 45/221 [00:23<01:33,  1.89it/s][A
 21%|██        | 46/221 [00:24<01:32,  1.89it/s][A
 21%|██▏       | 47/221 [00:24<01:31,  1.89it/s][A
 22%|██▏       | 48/221 [00:25<01:31,  1.89it/s][A
 22%|██▏       | 49/221 [00:25<01:30,  1.89it/s][A
 23%|██▎       | 50/221 [00:26<01:30,  1.89it/s][A
 23%|██▎       | 51/221 [00:26<01:29,  1.89it/s][A
 24%|██▎       | 52/221 [00:27<01:29,  1.89it/s][A
 24%|██▍       | 53/221 [00:28<01:28,  1.89it/s][A
 24%|██▍       | 54/221 [00:28<01:28,  1.89it/s][A
 25%|██▍       | 55/221 [00:29<01:27,  1.89it/s][A
 25%|██▌       | 56/221 [00:29<01:27,  1.89it/s][A
 26%|██▌       | 57/221 [00:30<01:26,  1.89it/s][A
 26%|██▌       | 58/221 [00:30<01:26,  1.89it/s][A
 27%|██▋       | 59/221 [00:31<01:25,  1.89it/s][A
 27%|██▋       | 60/221 [00:31<01:25,  1.89it/s][A
 28%|██▊       | 61/221 [00:32<01:24,  1.89it/s][A
 28%|██▊       | 62/221 [00:32<01:24,  1.89it/s][A
 29%|██▊       | 63/221 [00:33<01:23,  1.89it/s][A
 29%|██▉       | 64/221 [00:33<01:22,  1.89it/s][A
 29%|██▉       | 65/221 [00:34<01:22,  1.89it/s][A
 30%|██▉       | 66/221 [00:34<01:21,  1.89it/s][A
 30%|███       | 67/221 [00:35<01:21,  1.89it/s][A
 31%|███       | 68/221 [00:35<01:20,  1.89it/s][A
 31%|███       | 69/221 [00:36<01:20,  1.89it/s][A
 32%|███▏      | 70/221 [00:37<01:19,  1.89it/s][A
 32%|███▏      | 71/221 [00:37<01:19,  1.89it/s][A
 33%|███▎      | 72/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 73/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 74/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 75/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 76/221 [00:40<01:16,  1.89it/s][A
 35%|███▍      | 77/221 [00:40<01:16,  1.89it/s][A
 35%|███▌      | 78/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 79/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 80/221 [00:42<01:14,  1.89it/s][A
 37%|███▋      | 81/221 [00:42<01:13,  1.89it/s][A
 37%|███▋      | 82/221 [00:43<01:13,  1.89it/s][A
 38%|███▊      | 83/221 [00:43<01:12,  1.89it/s][A
 38%|███▊      | 84/221 [00:44<01:12,  1.89it/s][A
 38%|███▊      | 85/221 [00:44<01:11,  1.89it/s][A
 39%|███▉      | 86/221 [00:45<01:11,  1.89it/s][A
 39%|███▉      | 87/221 [00:45<01:10,  1.89it/s][A
 40%|███▉      | 88/221 [00:46<01:10,  1.89it/s][A
 40%|████      | 89/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 90/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 91/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 92/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 93/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 94/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 95/221 [00:50<01:06,  1.89it/s][A
 43%|████▎     | 96/221 [00:50<01:06,  1.89it/s][A
 44%|████▍     | 97/221 [00:51<01:05,  1.89it/s][A
 44%|████▍     | 98/221 [00:51<01:05,  1.89it/s][A
 45%|████▍     | 99/221 [00:52<01:04,  1.89it/s][A
 45%|████▌     | 100/221 [00:52<01:03,  1.89it/s][A
 46%|████▌     | 101/221 [00:53<01:03,  1.89it/s][A
 46%|████▌     | 102/221 [00:53<01:02,  1.89it/s][A
 47%|████▋     | 103/221 [00:54<01:02,  1.89it/s][A
 47%|████▋     | 104/221 [00:54<01:01,  1.89it/s][A
 48%|████▊     | 105/221 [00:55<01:01,  1.89it/s][A
 48%|████▊     | 106/221 [00:56<01:00,  1.89it/s][A
 48%|████▊     | 107/221 [00:56<01:00,  1.89it/s][A
 49%|████▉     | 108/221 [00:57<00:59,  1.89it/s][A
 49%|████▉     | 109/221 [00:57<00:59,  1.89it/s][A
 50%|████▉     | 110/221 [00:58<00:58,  1.89it/s][A
 50%|█████     | 111/221 [00:58<00:58,  1.89it/s][A
 51%|█████     | 112/221 [00:59<00:57,  1.89it/s][A
 51%|█████     | 113/221 [00:59<00:57,  1.89it/s][A
 52%|█████▏    | 114/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 115/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 116/221 [01:01<00:55,  1.89it/s][A
 53%|█████▎    | 117/221 [01:01<00:54,  1.89it/s][A
 53%|█████▎    | 118/221 [01:02<00:54,  1.89it/s][A
 54%|█████▍    | 119/221 [01:02<00:53,  1.89it/s][A
 54%|█████▍    | 120/221 [01:03<00:53,  1.89it/s][A
 55%|█████▍    | 121/221 [01:03<00:52,  1.89it/s][A
 55%|█████▌    | 122/221 [01:04<00:52,  1.89it/s][A
 56%|█████▌    | 123/221 [01:05<00:51,  1.89it/s][A
 56%|█████▌    | 124/221 [01:05<00:51,  1.89it/s][A
 57%|█████▋    | 125/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 126/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 127/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 128/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 129/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 130/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 131/221 [01:09<00:47,  1.89it/s][A
 60%|█████▉    | 132/221 [01:09<00:47,  1.89it/s][A
 60%|██████    | 133/221 [01:10<00:46,  1.89it/s][A
 61%|██████    | 134/221 [01:10<00:45,  1.89it/s][A
 61%|██████    | 135/221 [01:11<00:45,  1.89it/s][A
 62%|██████▏   | 136/221 [01:11<00:44,  1.89it/s][A
 62%|██████▏   | 137/221 [01:12<00:44,  1.89it/s][A
 62%|██████▏   | 138/221 [01:12<00:43,  1.89it/s][A
 63%|██████▎   | 139/221 [01:13<00:43,  1.89it/s][A
 63%|██████▎   | 140/221 [01:14<00:42,  1.89it/s][A
 64%|██████▍   | 141/221 [01:14<00:42,  1.89it/s][A
 64%|██████▍   | 142/221 [01:15<00:41,  1.89it/s][A
 65%|██████▍   | 143/221 [01:15<00:41,  1.89it/s][A
 65%|██████▌   | 144/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 145/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 146/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 147/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 148/221 [01:18<00:38,  1.89it/s][A
 67%|██████▋   | 149/221 [01:18<00:38,  1.89it/s][A
 68%|██████▊   | 150/221 [01:19<00:37,  1.89it/s][A
 68%|██████▊   | 151/221 [01:19<00:36,  1.89it/s][A
 69%|██████▉   | 152/221 [01:20<00:36,  1.89it/s][A
 69%|██████▉   | 153/221 [01:20<00:35,  1.89it/s][A
 70%|██████▉   | 154/221 [01:21<00:35,  1.89it/s][A
 70%|███████   | 155/221 [01:21<00:34,  1.89it/s][A
 71%|███████   | 156/221 [01:22<00:34,  1.89it/s][A
 71%|███████   | 157/221 [01:22<00:33,  1.89it/s][A
 71%|███████▏  | 158/221 [01:23<00:33,  1.89it/s][A
 72%|███████▏  | 159/221 [01:24<00:32,  1.89it/s][A
 72%|███████▏  | 160/221 [01:24<00:32,  1.89it/s][A
 73%|███████▎  | 161/221 [01:25<00:31,  1.89it/s][A
 73%|███████▎  | 162/221 [01:25<00:31,  1.89it/s][A
 74%|███████▍  | 163/221 [01:26<00:30,  1.89it/s][A
 74%|███████▍  | 164/221 [01:26<00:30,  1.89it/s][A
 75%|███████▍  | 165/221 [01:27<00:29,  1.89it/s][A
 75%|███████▌  | 166/221 [01:27<00:29,  1.89it/s][A
 76%|███████▌  | 167/221 [01:28<00:28,  1.89it/s][A
 76%|███████▌  | 168/221 [01:28<00:28,  1.89it/s][A
 76%|███████▋  | 169/221 [01:29<00:27,  1.89it/s][A
 77%|███████▋  | 170/221 [01:29<00:26,  1.89it/s][A
 77%|███████▋  | 171/221 [01:30<00:26,  1.89it/s][A
 78%|███████▊  | 172/221 [01:30<00:25,  1.89it/s][A
 78%|███████▊  | 173/221 [01:31<00:25,  1.89it/s][A
 79%|███████▊  | 174/221 [01:31<00:24,  1.89it/s][A
 79%|███████▉  | 175/221 [01:32<00:24,  1.89it/s][A
 80%|███████▉  | 176/221 [01:33<00:23,  1.89it/s][A
 80%|████████  | 177/221 [01:33<00:23,  1.89it/s][A
 81%|████████  | 178/221 [01:34<00:22,  1.89it/s][A
 81%|████████  | 179/221 [01:34<00:22,  1.89it/s][A
 81%|████████▏ | 180/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 181/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 182/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 183/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 184/221 [01:37<00:19,  1.89it/s][A
 84%|████████▎ | 185/221 [01:37<00:19,  1.89it/s][A
 84%|████████▍ | 186/221 [01:38<00:18,  1.89it/s][A
 85%|████████▍ | 187/221 [01:38<00:17,  1.89it/s][A
 85%|████████▌ | 188/221 [01:39<00:17,  1.89it/s][A
 86%|████████▌ | 189/221 [01:39<00:16,  1.89it/s][A
 86%|████████▌ | 190/221 [01:40<00:16,  1.89it/s][A
 86%|████████▋ | 191/221 [01:40<00:15,  1.89it/s][A
 87%|████████▋ | 192/221 [01:41<00:15,  1.89it/s][A
 87%|████████▋ | 193/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 194/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 195/221 [01:43<00:13,  1.89it/s][A
 89%|████████▊ | 196/221 [01:43<00:13,  1.89it/s][A
 89%|████████▉ | 197/221 [01:44<00:12,  1.89it/s][A
 90%|████████▉ | 198/221 [01:44<00:12,  1.89it/s][A
 90%|█████████ | 199/221 [01:45<00:11,  1.89it/s][A
 90%|█████████ | 200/221 [01:45<00:11,  1.89it/s][A
 91%|█████████ | 201/221 [01:46<00:10,  1.89it/s][A
 91%|█████████▏| 202/221 [01:46<00:10,  1.89it/s][A
 92%|█████████▏| 203/221 [01:47<00:09,  1.89it/s][A
 92%|█████████▏| 204/221 [01:47<00:08,  1.89it/s][A
 93%|█████████▎| 205/221 [01:48<00:08,  1.89it/s][A
 93%|█████████▎| 206/221 [01:48<00:07,  1.89it/s][A
 94%|█████████▎| 207/221 [01:49<00:07,  1.89it/s][A
 94%|█████████▍| 208/221 [01:49<00:06,  1.89it/s][A
 95%|█████████▍| 209/221 [01:50<00:06,  1.89it/s][A
 95%|█████████▌| 210/221 [01:50<00:05,  1.89it/s][A
 95%|█████████▌| 211/221 [01:51<00:05,  1.89it/s][A
 96%|█████████▌| 212/221 [01:52<00:04,  1.89it/s][A
 96%|█████████▋| 213/221 [01:52<00:04,  1.89it/s][A
 97%|█████████▋| 214/221 [01:53<00:03,  1.89it/s][A
 97%|█████████▋| 215/221 [01:53<00:03,  1.89it/s][A
 98%|█████████▊| 216/221 [01:54<00:02,  1.89it/s][A
 98%|█████████▊| 217/221 [01:54<00:02,  1.89it/s][A
 99%|█████████▊| 218/221 [01:55<00:01,  1.89it/s][A
 99%|█████████▉| 219/221 [01:55<00:01,  1.89it/s][A
100%|█████████▉| 220/221 [01:56<00:00,  1.89it/s][A
100%|██████████| 221/221 [01:56<00:00,  1.89it/s][A100%|██████████| 221/221 [01:56<00:00,  1.89it/s]
09/20/2024 11:11:59 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_forward=====step 7499--===========

09/20/2024 11:11:59 - INFO - __main__ -   {'area_r1': 46.9, 'area_recall': '46.9/76.2/84.6', 'area_ravg': 69.3}
09/20/2024 11:11:59 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_backard=====step 7499--===========

09/20/2024 11:11:59 - INFO - __main__ -   {'forward_r1': 50.3, 'forward_recall': '50.3/79.8/87.3', 'forward_ravg': 72.5}
09/20/2024 11:11:59 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video=====step 7499--===========

09/20/2024 11:11:59 - INFO - __main__ -   {'area_video_r1': 49.2, 'area_video_recall': '49.2/78.7/87.6', 'area_video_ravg': 71.8}
09/20/2024 11:11:59 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video====history best step: 6499=======

09/20/2024 11:11:59 - INFO - __main__ -   {'area_video_r1': 50.3, 'area_video_recall': '50.3/79.6/88.6', 'area_video_ravg': 72.9}
09/20/2024 11:11:59 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itm_area=====step 7499--===========

09/20/2024 11:11:59 - INFO - __main__ -   {'area_video_r1': 62.9, 'area_video_recall': '62.9/83.8/89.0', 'area_video_ravg': 78.6, 'area_video_back_r1': 62.8, 'area_video_back_recall': '62.8/86.1/91.3', 'area_video_back_ravg': 80.1}
09/20/2024 11:11:59 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itm_area====history best step: 7499=======

09/20/2024 11:11:59 - INFO - __main__ -   {'area_video_r1': 62.9, 'area_video_recall': '62.9/83.8/89.0', 'area_video_ravg': 78.6, 'area_video_back_r1': 62.8, 'area_video_back_recall': '62.8/86.1/91.3', 'area_video_back_ravg': 80.1}
09/20/2024 11:11:59 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas=====step 7499--===========

09/20/2024 11:11:59 - INFO - __main__ -   {'video_r1': 29.9, 'video_recall': '29.9/55.9/66.7', 'video_ravg': 50.8}
09/20/2024 11:11:59 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas====history best step: 1499=======

09/20/2024 11:11:59 - INFO - __main__ -   {'video_r1': 34.7, 'video_recall': '34.7/60.5/72.3', 'video_ravg': 55.8}
09/20/2024 11:12:27 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.014494127593934536, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 0.994448721408844, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.0089428424835205}
 76%|███████▌  | 7500/9908 [9:35:55<90:27:33, 135.24s/it] 76%|███████▌  | 7501/9908 [9:35:59<63:58:42, 95.69s/it]  76%|███████▌  | 7502/9908 [9:36:03<45:31:05, 68.11s/it] 76%|███████▌  | 7503/9908 [9:36:06<32:36:21, 48.81s/it] 76%|███████▌  | 7504/9908 [9:36:10<23:30:32, 35.20s/it] 76%|███████▌  | 7505/9908 [9:36:14<17:12:10, 25.77s/it] 76%|███████▌  | 7506/9908 [9:36:17<12:48:03, 19.19s/it] 76%|███████▌  | 7507/9908 [9:36:21<9:40:33, 14.51s/it]  76%|███████▌  | 7508/9908 [9:36:25<7:31:56, 11.30s/it] 76%|███████▌  | 7509/9908 [9:36:28<5:56:58,  8.93s/it] 76%|███████▌  | 7510/9908 [9:36:32<4:56:48,  7.43s/it] 76%|███████▌  | 7511/9908 [9:36:36<4:14:45,  6.38s/it] 76%|███████▌  | 7512/9908 [9:36:40<3:42:21,  5.57s/it] 76%|███████▌  | 7513/9908 [9:36:43<3:17:54,  4.96s/it] 76%|███████▌  | 7514/9908 [9:36:47<2:57:47,  4.46s/it] 76%|███████▌  | 7515/9908 [9:36:51<2:52:53,  4.33s/it] 76%|███████▌  | 7516/9908 [9:36:54<2:46:04,  4.17s/it] 76%|███████▌  | 7517/9908 [9:36:58<2:40:41,  4.03s/it] 76%|███████▌  | 7518/9908 [9:37:02<2:35:00,  3.89s/it] 76%|███████▌  | 7519/9908 [9:37:06<2:34:20,  3.88s/it] 76%|███████▌  | 7520/9908 [9:37:09<2:31:00,  3.79s/it] 76%|███████▌  | 7521/9908 [9:37:13<2:28:50,  3.74s/it] 76%|███████▌  | 7522/9908 [9:37:16<2:28:09,  3.73s/it] 76%|███████▌  | 7523/9908 [9:37:20<2:25:39,  3.66s/it] 76%|███████▌  | 7524/9908 [9:37:24<2:29:00,  3.75s/it] 76%|███████▌  | 7525/9908 [9:37:28<2:28:48,  3.75s/it] 76%|███████▌  | 7526/9908 [9:37:31<2:28:36,  3.74s/it] 76%|███████▌  | 7527/9908 [9:37:35<2:25:34,  3.67s/it] 76%|███████▌  | 7528/9908 [9:37:38<2:24:38,  3.65s/it] 76%|███████▌  | 7529/9908 [9:37:42<2:25:23,  3.67s/it] 76%|███████▌  | 7530/9908 [9:37:46<2:28:36,  3.75s/it] 76%|███████▌  | 7531/9908 [9:37:50<2:29:20,  3.77s/it] 76%|███████▌  | 7532/9908 [9:37:54<2:27:21,  3.72s/it] 76%|███████▌  | 7533/9908 [9:37:57<2:21:14,  3.57s/it] 76%|███████▌  | 7534/9908 [9:38:01<2:26:42,  3.71s/it] 76%|███████▌  | 7535/9908 [9:38:05<2:28:25,  3.75s/it] 76%|███████▌  | 7536/9908 [9:38:09<2:30:09,  3.80s/it] 76%|███████▌  | 7537/9908 [9:38:12<2:29:16,  3.78s/it] 76%|███████▌  | 7538/9908 [9:38:16<2:30:57,  3.82s/it] 76%|███████▌  | 7539/9908 [9:38:20<2:26:42,  3.72s/it] 76%|███████▌  | 7540/9908 [9:38:23<2:23:34,  3.64s/it] 76%|███████▌  | 7541/9908 [9:38:27<2:24:45,  3.67s/it] 76%|███████▌  | 7542/9908 [9:38:30<2:21:14,  3.58s/it] 76%|███████▌  | 7543/9908 [9:38:34<2:27:41,  3.75s/it] 76%|███████▌  | 7544/9908 [9:38:38<2:29:15,  3.79s/it] 76%|███████▌  | 7545/9908 [9:38:42<2:26:22,  3.72s/it] 76%|███████▌  | 7546/9908 [9:38:46<2:30:35,  3.83s/it] 76%|███████▌  | 7547/9908 [9:38:49<2:27:34,  3.75s/it] 76%|███████▌  | 7548/9908 [9:38:53<2:26:11,  3.72s/it] 76%|███████▌  | 7549/9908 [9:38:57<2:23:44,  3.66s/it]09/20/2024 11:15:31 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.015219275839626789, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 0.8626101613044739, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 0.8778294324874878}
 76%|███████▌  | 7550/9908 [9:39:00<2:24:21,  3.67s/it] 76%|███████▌  | 7551/9908 [9:39:04<2:25:48,  3.71s/it] 76%|███████▌  | 7552/9908 [9:39:08<2:23:00,  3.64s/it] 76%|███████▌  | 7553/9908 [9:39:12<2:25:38,  3.71s/it] 76%|███████▌  | 7554/9908 [9:39:15<2:25:03,  3.70s/it] 76%|███████▋  | 7555/9908 [9:39:19<2:22:52,  3.64s/it] 76%|███████▋  | 7556/9908 [9:39:22<2:22:38,  3.64s/it] 76%|███████▋  | 7557/9908 [9:39:26<2:25:09,  3.70s/it] 76%|███████▋  | 7558/9908 [9:39:30<2:26:34,  3.74s/it] 76%|███████▋  | 7559/9908 [9:39:34<2:23:41,  3.67s/it] 76%|███████▋  | 7560/9908 [9:39:37<2:24:13,  3.69s/it] 76%|███████▋  | 7561/9908 [9:39:41<2:29:12,  3.81s/it] 76%|███████▋  | 7562/9908 [9:39:45<2:27:25,  3.77s/it] 76%|███████▋  | 7563/9908 [9:39:49<2:27:37,  3.78s/it] 76%|███████▋  | 7564/9908 [9:39:52<2:26:17,  3.74s/it] 76%|███████▋  | 7565/9908 [9:39:56<2:26:58,  3.76s/it] 76%|███████▋  | 7566/9908 [9:40:00<2:23:36,  3.68s/it] 76%|███████▋  | 7567/9908 [9:40:03<2:22:15,  3.65s/it] 76%|███████▋  | 7568/9908 [9:40:07<2:22:43,  3.66s/it] 76%|███████▋  | 7569/9908 [9:40:11<2:23:30,  3.68s/it] 76%|███████▋  | 7570/9908 [9:40:14<2:20:12,  3.60s/it] 76%|███████▋  | 7571/9908 [9:40:18<2:24:35,  3.71s/it] 76%|███████▋  | 7572/9908 [9:40:22<2:23:42,  3.69s/it] 76%|███████▋  | 7573/9908 [9:40:26<2:27:52,  3.80s/it] 76%|███████▋  | 7574/9908 [9:40:29<2:25:46,  3.75s/it] 76%|███████▋  | 7575/9908 [9:40:33<2:21:31,  3.64s/it] 76%|███████▋  | 7576/9908 [9:40:37<2:23:59,  3.70s/it] 76%|███████▋  | 7577/9908 [9:40:41<2:25:37,  3.75s/it] 76%|███████▋  | 7578/9908 [9:40:44<2:25:47,  3.75s/it] 76%|███████▋  | 7579/9908 [9:40:48<2:25:36,  3.75s/it] 77%|███████▋  | 7580/9908 [9:40:51<2:21:36,  3.65s/it] 77%|███████▋  | 7581/9908 [9:40:55<2:24:18,  3.72s/it] 77%|███████▋  | 7582/9908 [9:40:59<2:21:56,  3.66s/it] 77%|███████▋  | 7583/9908 [9:41:03<2:23:05,  3.69s/it] 77%|███████▋  | 7584/9908 [9:41:06<2:22:25,  3.68s/it] 77%|███████▋  | 7585/9908 [9:41:10<2:23:35,  3.71s/it] 77%|███████▋  | 7586/9908 [9:41:14<2:24:12,  3.73s/it] 77%|███████▋  | 7587/9908 [9:41:18<2:25:28,  3.76s/it] 77%|███████▋  | 7588/9908 [9:41:21<2:22:04,  3.67s/it] 77%|███████▋  | 7589/9908 [9:41:25<2:21:30,  3.66s/it] 77%|███████▋  | 7590/9908 [9:41:29<2:25:59,  3.78s/it] 77%|███████▋  | 7591/9908 [9:41:32<2:21:50,  3.67s/it] 77%|███████▋  | 7592/9908 [9:41:36<2:17:19,  3.56s/it] 77%|███████▋  | 7593/9908 [9:41:39<2:17:28,  3.56s/it] 77%|███████▋  | 7594/9908 [9:41:43<2:20:13,  3.64s/it] 77%|███████▋  | 7595/9908 [9:41:47<2:24:19,  3.74s/it] 77%|███████▋  | 7596/9908 [9:41:51<2:24:11,  3.74s/it] 77%|███████▋  | 7597/9908 [9:41:55<2:25:15,  3.77s/it] 77%|███████▋  | 7598/9908 [9:41:58<2:26:15,  3.80s/it] 77%|███████▋  | 7599/9908 [9:42:02<2:23:00,  3.72s/it]09/20/2024 11:18:36 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.02127770148217678, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.080651044845581, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.1019287109375}
 77%|███████▋  | 7600/9908 [9:42:05<2:19:59,  3.64s/it] 77%|███████▋  | 7601/9908 [9:42:09<2:18:33,  3.60s/it] 77%|███████▋  | 7602/9908 [9:42:13<2:20:35,  3.66s/it] 77%|███████▋  | 7603/9908 [9:42:16<2:20:12,  3.65s/it] 77%|███████▋  | 7604/9908 [9:42:20<2:21:09,  3.68s/it] 77%|███████▋  | 7605/9908 [9:42:24<2:19:08,  3.62s/it] 77%|███████▋  | 7606/9908 [9:42:27<2:20:16,  3.66s/it] 77%|███████▋  | 7607/9908 [9:42:31<2:21:14,  3.68s/it] 77%|███████▋  | 7608/9908 [9:42:35<2:21:30,  3.69s/it] 77%|███████▋  | 7609/9908 [9:42:38<2:21:49,  3.70s/it] 77%|███████▋  | 7610/9908 [9:42:42<2:25:07,  3.79s/it] 77%|███████▋  | 7611/9908 [9:42:46<2:27:38,  3.86s/it] 77%|███████▋  | 7612/9908 [9:42:50<2:28:07,  3.87s/it] 77%|███████▋  | 7613/9908 [9:42:54<2:27:42,  3.86s/it] 77%|███████▋  | 7614/9908 [9:42:58<2:27:02,  3.85s/it] 77%|███████▋  | 7615/9908 [9:43:01<2:22:11,  3.72s/it] 77%|███████▋  | 7616/9908 [9:43:05<2:18:21,  3.62s/it] 77%|███████▋  | 7617/9908 [9:43:09<2:20:04,  3.67s/it] 77%|███████▋  | 7618/9908 [9:43:12<2:20:08,  3.67s/it] 77%|███████▋  | 7619/9908 [9:43:16<2:16:48,  3.59s/it] 77%|███████▋  | 7620/9908 [9:43:20<2:22:51,  3.75s/it] 77%|███████▋  | 7621/9908 [9:43:23<2:21:07,  3.70s/it] 77%|███████▋  | 7622/9908 [9:43:27<2:23:10,  3.76s/it] 77%|███████▋  | 7623/9908 [9:43:31<2:25:38,  3.82s/it] 77%|███████▋  | 7624/9908 [9:43:35<2:22:32,  3.74s/it] 77%|███████▋  | 7625/9908 [9:43:39<2:23:43,  3.78s/it] 77%|███████▋  | 7626/9908 [9:43:42<2:22:01,  3.73s/it] 77%|███████▋  | 7627/9908 [9:43:46<2:24:04,  3.79s/it] 77%|███████▋  | 7628/9908 [9:43:50<2:22:09,  3.74s/it] 77%|███████▋  | 7629/9908 [9:43:54<2:23:37,  3.78s/it] 77%|███████▋  | 7630/9908 [9:43:57<2:21:03,  3.72s/it] 77%|███████▋  | 7631/9908 [9:44:01<2:17:01,  3.61s/it] 77%|███████▋  | 7632/9908 [9:44:04<2:19:10,  3.67s/it] 77%|███████▋  | 7633/9908 [9:44:08<2:20:18,  3.70s/it] 77%|███████▋  | 7634/9908 [9:44:12<2:22:02,  3.75s/it] 77%|███████▋  | 7635/9908 [9:44:16<2:20:26,  3.71s/it] 77%|███████▋  | 7636/9908 [9:44:19<2:20:36,  3.71s/it] 77%|███████▋  | 7637/9908 [9:44:23<2:19:35,  3.69s/it] 77%|███████▋  | 7638/9908 [9:44:27<2:21:11,  3.73s/it] 77%|███████▋  | 7639/9908 [9:44:31<2:20:15,  3.71s/it] 77%|███████▋  | 7640/9908 [9:44:34<2:21:10,  3.73s/it] 77%|███████▋  | 7641/9908 [9:44:38<2:23:48,  3.81s/it] 77%|███████▋  | 7642/9908 [9:44:42<2:20:53,  3.73s/it] 77%|███████▋  | 7643/9908 [9:44:46<2:21:08,  3.74s/it] 77%|███████▋  | 7644/9908 [9:44:49<2:21:51,  3.76s/it] 77%|███████▋  | 7645/9908 [9:44:53<2:20:26,  3.72s/it] 77%|███████▋  | 7646/9908 [9:44:57<2:24:57,  3.85s/it] 77%|███████▋  | 7647/9908 [9:45:01<2:20:26,  3.73s/it] 77%|███████▋  | 7648/9908 [9:45:05<2:26:13,  3.88s/it] 77%|███████▋  | 7649/9908 [9:45:09<2:25:59,  3.88s/it]09/20/2024 11:21:43 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.022577719762921333, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2282052040100098, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.2507829666137695}
 77%|███████▋  | 7650/9908 [9:45:12<2:23:26,  3.81s/it] 77%|███████▋  | 7651/9908 [9:45:16<2:20:43,  3.74s/it] 77%|███████▋  | 7652/9908 [9:45:20<2:21:45,  3.77s/it] 77%|███████▋  | 7653/9908 [9:45:23<2:19:33,  3.71s/it] 77%|███████▋  | 7654/9908 [9:45:27<2:22:28,  3.79s/it] 77%|███████▋  | 7655/9908 [9:45:31<2:20:53,  3.75s/it] 77%|███████▋  | 7656/9908 [9:45:35<2:19:06,  3.71s/it] 77%|███████▋  | 7657/9908 [9:45:38<2:20:09,  3.74s/it] 77%|███████▋  | 7658/9908 [9:45:42<2:20:46,  3.75s/it] 77%|███████▋  | 7659/9908 [9:45:46<2:21:01,  3.76s/it] 77%|███████▋  | 7660/9908 [9:45:50<2:20:07,  3.74s/it] 77%|███████▋  | 7661/9908 [9:45:54<2:22:35,  3.81s/it] 77%|███████▋  | 7662/9908 [9:45:57<2:18:00,  3.69s/it] 77%|███████▋  | 7663/9908 [9:46:01<2:19:21,  3.72s/it] 77%|███████▋  | 7664/9908 [9:46:05<2:22:04,  3.80s/it] 77%|███████▋  | 7665/9908 [9:46:08<2:19:51,  3.74s/it] 77%|███████▋  | 7666/9908 [9:46:12<2:20:10,  3.75s/it] 77%|███████▋  | 7667/9908 [9:46:16<2:17:13,  3.67s/it] 77%|███████▋  | 7668/9908 [9:46:19<2:13:56,  3.59s/it] 77%|███████▋  | 7669/9908 [9:46:23<2:15:48,  3.64s/it] 77%|███████▋  | 7670/9908 [9:46:26<2:14:21,  3.60s/it] 77%|███████▋  | 7671/9908 [9:46:30<2:17:42,  3.69s/it] 77%|███████▋  | 7672/9908 [9:46:34<2:15:49,  3.64s/it] 77%|███████▋  | 7673/9908 [9:46:38<2:15:57,  3.65s/it] 77%|███████▋  | 7674/9908 [9:46:41<2:15:52,  3.65s/it] 77%|███████▋  | 7675/9908 [9:46:45<2:15:15,  3.63s/it] 77%|███████▋  | 7676/9908 [9:46:49<2:18:30,  3.72s/it] 77%|███████▋  | 7677/9908 [9:46:53<2:19:29,  3.75s/it] 77%|███████▋  | 7678/9908 [9:46:56<2:17:31,  3.70s/it] 78%|███████▊  | 7679/9908 [9:47:00<2:18:32,  3.73s/it] 78%|███████▊  | 7680/9908 [9:47:03<2:14:22,  3.62s/it] 78%|███████▊  | 7681/9908 [9:47:07<2:14:53,  3.63s/it] 78%|███████▊  | 7682/9908 [9:47:11<2:17:11,  3.70s/it] 78%|███████▊  | 7683/9908 [9:47:14<2:17:01,  3.70s/it] 78%|███████▊  | 7684/9908 [9:47:18<2:18:05,  3.73s/it] 78%|███████▊  | 7685/9908 [9:47:22<2:15:07,  3.65s/it] 78%|███████▊  | 7686/9908 [9:47:26<2:17:59,  3.73s/it] 78%|███████▊  | 7687/9908 [9:47:29<2:17:35,  3.72s/it] 78%|███████▊  | 7688/9908 [9:47:33<2:18:32,  3.74s/it] 78%|███████▊  | 7689/9908 [9:47:37<2:16:51,  3.70s/it] 78%|███████▊  | 7690/9908 [9:47:40<2:16:38,  3.70s/it] 78%|███████▊  | 7691/9908 [9:47:44<2:13:37,  3.62s/it] 78%|███████▊  | 7692/9908 [9:47:47<2:10:02,  3.52s/it] 78%|███████▊  | 7693/9908 [9:47:51<2:15:55,  3.68s/it] 78%|███████▊  | 7694/9908 [9:47:55<2:17:09,  3.72s/it] 78%|███████▊  | 7695/9908 [9:47:59<2:20:16,  3.80s/it] 78%|███████▊  | 7696/9908 [9:48:02<2:15:08,  3.67s/it] 78%|███████▊  | 7697/9908 [9:48:06<2:18:52,  3.77s/it] 78%|███████▊  | 7698/9908 [9:48:10<2:20:49,  3.82s/it] 78%|███████▊  | 7699/9908 [9:48:14<2:18:58,  3.77s/it]09/20/2024 11:24:48 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.028670459985733032, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.226956844329834, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.2556272745132446}
 78%|███████▊  | 7700/9908 [9:48:18<2:18:49,  3.77s/it] 78%|███████▊  | 7701/9908 [9:48:21<2:16:58,  3.72s/it] 78%|███████▊  | 7702/9908 [9:48:25<2:19:15,  3.79s/it] 78%|███████▊  | 7703/9908 [9:48:29<2:19:08,  3.79s/it] 78%|███████▊  | 7704/9908 [9:48:33<2:17:39,  3.75s/it] 78%|███████▊  | 7705/9908 [9:48:36<2:16:05,  3.71s/it] 78%|███████▊  | 7706/9908 [9:48:40<2:17:38,  3.75s/it] 78%|███████▊  | 7707/9908 [9:48:44<2:16:02,  3.71s/it] 78%|███████▊  | 7708/9908 [9:48:48<2:18:13,  3.77s/it] 78%|███████▊  | 7709/9908 [9:48:51<2:17:49,  3.76s/it] 78%|███████▊  | 7710/9908 [9:48:55<2:16:05,  3.72s/it] 78%|███████▊  | 7711/9908 [9:48:59<2:13:19,  3.64s/it] 78%|███████▊  | 7712/9908 [9:49:02<2:10:08,  3.56s/it] 78%|███████▊  | 7713/9908 [9:49:05<2:09:43,  3.55s/it] 78%|███████▊  | 7714/9908 [9:49:09<2:10:28,  3.57s/it] 78%|███████▊  | 7715/9908 [9:49:13<2:12:41,  3.63s/it] 78%|███████▊  | 7716/9908 [9:49:17<2:13:42,  3.66s/it] 78%|███████▊  | 7717/9908 [9:49:20<2:14:11,  3.67s/it] 78%|███████▊  | 7718/9908 [9:49:24<2:17:45,  3.77s/it] 78%|███████▊  | 7719/9908 [9:49:28<2:16:47,  3.75s/it] 78%|███████▊  | 7720/9908 [9:49:32<2:15:20,  3.71s/it] 78%|███████▊  | 7721/9908 [9:49:35<2:15:08,  3.71s/it] 78%|███████▊  | 7722/9908 [9:49:39<2:15:49,  3.73s/it] 78%|███████▊  | 7723/9908 [9:49:43<2:15:06,  3.71s/it] 78%|███████▊  | 7724/9908 [9:49:47<2:18:27,  3.80s/it] 78%|███████▊  | 7725/9908 [9:49:50<2:16:43,  3.76s/it] 78%|███████▊  | 7726/9908 [9:49:54<2:19:09,  3.83s/it] 78%|███████▊  | 7727/9908 [9:49:58<2:16:23,  3.75s/it] 78%|███████▊  | 7728/9908 [9:50:01<2:13:55,  3.69s/it] 78%|███████▊  | 7729/9908 [9:50:05<2:15:52,  3.74s/it] 78%|███████▊  | 7730/9908 [9:50:09<2:18:45,  3.82s/it] 78%|███████▊  | 7731/9908 [9:50:13<2:15:52,  3.74s/it] 78%|███████▊  | 7732/9908 [9:50:17<2:16:29,  3.76s/it] 78%|███████▊  | 7733/9908 [9:50:20<2:14:26,  3.71s/it] 78%|███████▊  | 7734/9908 [9:50:24<2:14:23,  3.71s/it] 78%|███████▊  | 7735/9908 [9:50:28<2:12:46,  3.67s/it] 78%|███████▊  | 7736/9908 [9:50:31<2:12:52,  3.67s/it] 78%|███████▊  | 7737/9908 [9:50:35<2:14:35,  3.72s/it] 78%|███████▊  | 7738/9908 [9:50:39<2:13:41,  3.70s/it] 78%|███████▊  | 7739/9908 [9:50:43<2:15:01,  3.74s/it] 78%|███████▊  | 7740/9908 [9:50:46<2:10:57,  3.62s/it] 78%|███████▊  | 7741/9908 [9:50:50<2:11:01,  3.63s/it] 78%|███████▊  | 7742/9908 [9:50:53<2:10:02,  3.60s/it] 78%|███████▊  | 7743/9908 [9:50:57<2:11:27,  3.64s/it] 78%|███████▊  | 7744/9908 [9:51:01<2:17:06,  3.80s/it] 78%|███████▊  | 7745/9908 [9:51:05<2:14:41,  3.74s/it] 78%|███████▊  | 7746/9908 [9:51:08<2:12:14,  3.67s/it] 78%|███████▊  | 7747/9908 [9:51:12<2:15:39,  3.77s/it] 78%|███████▊  | 7748/9908 [9:51:16<2:14:16,  3.73s/it] 78%|███████▊  | 7749/9908 [9:51:19<2:12:02,  3.67s/it]09/20/2024 11:27:54 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.04437987133860588, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2188220024108887, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.2632018327713013}
 78%|███████▊  | 7750/9908 [9:51:23<2:15:36,  3.77s/it] 78%|███████▊  | 7751/9908 [9:51:27<2:14:30,  3.74s/it] 78%|███████▊  | 7752/9908 [9:51:30<2:11:43,  3.67s/it] 78%|███████▊  | 7753/9908 [9:51:35<2:16:12,  3.79s/it] 78%|███████▊  | 7754/9908 [9:51:38<2:15:42,  3.78s/it] 78%|███████▊  | 7755/9908 [9:51:42<2:15:20,  3.77s/it] 78%|███████▊  | 7756/9908 [9:51:45<2:11:07,  3.66s/it] 78%|███████▊  | 7757/9908 [9:51:49<2:08:37,  3.59s/it] 78%|███████▊  | 7758/9908 [9:51:52<2:07:43,  3.56s/it] 78%|███████▊  | 7759/9908 [9:51:56<2:06:42,  3.54s/it] 78%|███████▊  | 7760/9908 [9:52:00<2:18:26,  3.87s/it] 78%|███████▊  | 7761/9908 [9:52:04<2:12:14,  3.70s/it] 78%|███████▊  | 7762/9908 [9:52:07<2:11:38,  3.68s/it] 78%|███████▊  | 7763/9908 [9:52:11<2:10:03,  3.64s/it] 78%|███████▊  | 7764/9908 [9:52:15<2:10:27,  3.65s/it] 78%|███████▊  | 7765/9908 [9:52:19<2:12:51,  3.72s/it] 78%|███████▊  | 7766/9908 [9:52:22<2:12:55,  3.72s/it] 78%|███████▊  | 7767/9908 [9:52:26<2:16:28,  3.82s/it] 78%|███████▊  | 7768/9908 [9:52:30<2:14:07,  3.76s/it] 78%|███████▊  | 7769/9908 [9:52:34<2:16:17,  3.82s/it] 78%|███████▊  | 7770/9908 [9:52:38<2:16:22,  3.83s/it] 78%|███████▊  | 7771/9908 [9:52:41<2:13:49,  3.76s/it] 78%|███████▊  | 7772/9908 [9:52:45<2:10:06,  3.65s/it] 78%|███████▊  | 7773/9908 [9:52:49<2:14:13,  3.77s/it] 78%|███████▊  | 7774/9908 [9:52:52<2:12:04,  3.71s/it] 78%|███████▊  | 7775/9908 [9:52:56<2:11:03,  3.69s/it] 78%|███████▊  | 7776/9908 [9:53:00<2:13:16,  3.75s/it] 78%|███████▊  | 7777/9908 [9:53:04<2:13:06,  3.75s/it] 79%|███████▊  | 7778/9908 [9:53:07<2:12:27,  3.73s/it] 79%|███████▊  | 7779/9908 [9:53:11<2:12:01,  3.72s/it] 79%|███████▊  | 7780/9908 [9:53:14<2:08:43,  3.63s/it] 79%|███████▊  | 7781/9908 [9:53:18<2:11:50,  3.72s/it] 79%|███████▊  | 7782/9908 [9:53:22<2:10:34,  3.69s/it] 79%|███████▊  | 7783/9908 [9:53:26<2:12:47,  3.75s/it] 79%|███████▊  | 7784/9908 [9:53:30<2:11:38,  3.72s/it] 79%|███████▊  | 7785/9908 [9:53:33<2:07:27,  3.60s/it] 79%|███████▊  | 7786/9908 [9:53:37<2:08:41,  3.64s/it] 79%|███████▊  | 7787/9908 [9:53:40<2:08:12,  3.63s/it] 79%|███████▊  | 7788/9908 [9:53:44<2:07:52,  3.62s/it] 79%|███████▊  | 7789/9908 [9:53:47<2:08:43,  3.65s/it] 79%|███████▊  | 7790/9908 [9:53:51<2:12:01,  3.74s/it] 79%|███████▊  | 7791/9908 [9:53:55<2:09:51,  3.68s/it] 79%|███████▊  | 7792/9908 [9:53:59<2:09:56,  3.68s/it] 79%|███████▊  | 7793/9908 [9:54:03<2:12:59,  3.77s/it] 79%|███████▊  | 7794/9908 [9:54:06<2:08:30,  3.65s/it] 79%|███████▊  | 7795/9908 [9:54:10<2:10:37,  3.71s/it] 79%|███████▊  | 7796/9908 [9:54:14<2:13:21,  3.79s/it] 79%|███████▊  | 7797/9908 [9:54:18<2:14:04,  3.81s/it] 79%|███████▊  | 7798/9908 [9:54:21<2:11:48,  3.75s/it] 79%|███████▊  | 7799/9908 [9:54:25<2:08:43,  3.66s/it]09/20/2024 11:30:59 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.020833361893892288, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.1568365097045898, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.177669882774353}
 79%|███████▊  | 7800/9908 [9:54:28<2:06:41,  3.61s/it] 79%|███████▊  | 7801/9908 [9:54:32<2:06:49,  3.61s/it] 79%|███████▊  | 7802/9908 [9:54:35<2:03:05,  3.51s/it] 79%|███████▉  | 7803/9908 [9:54:39<2:07:43,  3.64s/it] 79%|███████▉  | 7804/9908 [9:54:43<2:09:23,  3.69s/it] 79%|███████▉  | 7805/9908 [9:54:47<2:09:02,  3.68s/it] 79%|███████▉  | 7806/9908 [9:54:50<2:10:11,  3.72s/it] 79%|███████▉  | 7807/9908 [9:54:54<2:06:16,  3.61s/it] 79%|███████▉  | 7808/9908 [9:54:57<2:06:59,  3.63s/it] 79%|███████▉  | 7809/9908 [9:55:01<2:10:20,  3.73s/it] 79%|███████▉  | 7810/9908 [9:55:05<2:10:44,  3.74s/it] 79%|███████▉  | 7811/9908 [9:55:09<2:13:18,  3.81s/it] 79%|███████▉  | 7812/9908 [9:55:13<2:11:13,  3.76s/it] 79%|███████▉  | 7813/9908 [9:55:16<2:09:40,  3.71s/it] 79%|███████▉  | 7814/9908 [9:55:20<2:07:57,  3.67s/it] 79%|███████▉  | 7815/9908 [9:55:23<2:06:00,  3.61s/it] 79%|███████▉  | 7816/9908 [9:55:27<2:04:08,  3.56s/it] 79%|███████▉  | 7817/9908 [9:55:30<2:03:01,  3.53s/it] 79%|███████▉  | 7818/9908 [9:55:34<2:05:15,  3.60s/it] 79%|███████▉  | 7819/9908 [9:55:38<2:07:05,  3.65s/it] 79%|███████▉  | 7820/9908 [9:55:42<2:13:11,  3.83s/it] 79%|███████▉  | 7821/9908 [9:55:46<2:11:00,  3.77s/it] 79%|███████▉  | 7822/9908 [9:55:50<2:15:04,  3.89s/it] 79%|███████▉  | 7823/9908 [9:55:53<2:12:06,  3.80s/it] 79%|███████▉  | 7824/9908 [9:55:57<2:08:06,  3.69s/it] 79%|███████▉  | 7825/9908 [9:56:01<2:12:18,  3.81s/it] 79%|███████▉  | 7826/9908 [9:56:05<2:17:04,  3.95s/it] 79%|███████▉  | 7827/9908 [9:56:09<2:15:25,  3.90s/it] 79%|███████▉  | 7828/9908 [9:56:13<2:11:04,  3.78s/it] 79%|███████▉  | 7829/9908 [9:56:16<2:09:56,  3.75s/it] 79%|███████▉  | 7830/9908 [9:56:20<2:12:25,  3.82s/it] 79%|███████▉  | 7831/9908 [9:56:24<2:10:44,  3.78s/it] 79%|███████▉  | 7832/9908 [9:56:27<2:07:36,  3.69s/it] 79%|███████▉  | 7833/9908 [9:56:31<2:05:21,  3.62s/it] 79%|███████▉  | 7834/9908 [9:56:34<2:04:44,  3.61s/it] 79%|███████▉  | 7835/9908 [9:56:38<2:04:54,  3.62s/it] 79%|███████▉  | 7836/9908 [9:56:42<2:03:54,  3.59s/it] 79%|███████▉  | 7837/9908 [9:56:45<2:06:28,  3.66s/it] 79%|███████▉  | 7838/9908 [9:56:49<2:06:48,  3.68s/it] 79%|███████▉  | 7839/9908 [9:56:53<2:04:58,  3.62s/it] 79%|███████▉  | 7840/9908 [9:56:56<2:04:54,  3.62s/it] 79%|███████▉  | 7841/9908 [9:57:01<2:12:22,  3.84s/it] 79%|███████▉  | 7842/9908 [9:57:04<2:09:58,  3.77s/it] 79%|███████▉  | 7843/9908 [9:57:08<2:10:49,  3.80s/it] 79%|███████▉  | 7844/9908 [9:57:12<2:07:51,  3.72s/it] 79%|███████▉  | 7845/9908 [9:57:15<2:06:41,  3.68s/it] 79%|███████▉  | 7846/9908 [9:57:19<2:12:31,  3.86s/it] 79%|███████▉  | 7847/9908 [9:57:23<2:09:37,  3.77s/it] 79%|███████▉  | 7848/9908 [9:57:27<2:08:37,  3.75s/it] 79%|███████▉  | 7849/9908 [9:57:30<2:06:30,  3.69s/it]09/20/2024 11:34:05 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.017619185149669647, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.2554157972335815, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.273034930229187}
 79%|███████▉  | 7850/9908 [9:57:34<2:09:45,  3.78s/it] 79%|███████▉  | 7851/9908 [9:57:38<2:07:02,  3.71s/it] 79%|███████▉  | 7852/9908 [9:57:41<2:05:22,  3.66s/it] 79%|███████▉  | 7853/9908 [9:57:45<2:02:17,  3.57s/it] 79%|███████▉  | 7854/9908 [9:57:49<2:07:39,  3.73s/it] 79%|███████▉  | 7855/9908 [9:57:53<2:09:48,  3.79s/it] 79%|███████▉  | 7856/9908 [9:57:56<2:09:17,  3.78s/it] 79%|███████▉  | 7857/9908 [9:58:00<2:08:59,  3.77s/it] 79%|███████▉  | 7858/9908 [9:58:04<2:06:29,  3.70s/it] 79%|███████▉  | 7859/9908 [9:58:07<2:06:15,  3.70s/it] 79%|███████▉  | 7860/9908 [9:58:11<2:06:37,  3.71s/it] 79%|███████▉  | 7861/9908 [9:58:15<2:08:50,  3.78s/it] 79%|███████▉  | 7862/9908 [9:58:19<2:07:37,  3.74s/it] 79%|███████▉  | 7863/9908 [9:58:23<2:08:55,  3.78s/it] 79%|███████▉  | 7864/9908 [9:58:26<2:06:04,  3.70s/it] 79%|███████▉  | 7865/9908 [9:58:30<2:04:13,  3.65s/it] 79%|███████▉  | 7866/9908 [9:58:33<2:04:14,  3.65s/it] 79%|███████▉  | 7867/9908 [9:58:37<2:08:20,  3.77s/it] 79%|███████▉  | 7868/9908 [9:58:41<2:09:24,  3.81s/it] 79%|███████▉  | 7869/9908 [9:58:45<2:10:36,  3.84s/it] 79%|███████▉  | 7870/9908 [9:58:49<2:06:14,  3.72s/it] 79%|███████▉  | 7871/9908 [9:58:52<2:06:31,  3.73s/it] 79%|███████▉  | 7872/9908 [9:58:56<2:04:01,  3.65s/it] 79%|███████▉  | 7873/9908 [9:59:00<2:05:46,  3.71s/it] 79%|███████▉  | 7874/9908 [9:59:03<2:06:27,  3.73s/it] 79%|███████▉  | 7875/9908 [9:59:07<2:05:19,  3.70s/it] 79%|███████▉  | 7876/9908 [9:59:11<2:04:08,  3.67s/it] 80%|███████▉  | 7877/9908 [9:59:15<2:06:00,  3.72s/it] 80%|███████▉  | 7878/9908 [9:59:18<2:04:19,  3.67s/it] 80%|███████▉  | 7879/9908 [9:59:22<2:03:06,  3.64s/it] 80%|███████▉  | 7880/9908 [9:59:26<2:05:43,  3.72s/it] 80%|███████▉  | 7881/9908 [9:59:29<2:06:16,  3.74s/it] 80%|███████▉  | 7882/9908 [9:59:33<2:07:24,  3.77s/it] 80%|███████▉  | 7883/9908 [9:59:37<2:07:39,  3.78s/it] 80%|███████▉  | 7884/9908 [9:59:41<2:08:35,  3.81s/it] 80%|███████▉  | 7885/9908 [9:59:45<2:06:58,  3.77s/it] 80%|███████▉  | 7886/9908 [9:59:48<2:04:46,  3.70s/it] 80%|███████▉  | 7887/9908 [9:59:52<2:04:33,  3.70s/it] 80%|███████▉  | 7888/9908 [9:59:55<2:03:33,  3.67s/it] 80%|███████▉  | 7889/9908 [9:59:59<2:03:49,  3.68s/it] 80%|███████▉  | 7890/9908 [10:00:03<2:04:14,  3.69s/it] 80%|███████▉  | 7891/9908 [10:00:07<2:06:24,  3.76s/it] 80%|███████▉  | 7892/9908 [10:00:11<2:06:56,  3.78s/it] 80%|███████▉  | 7893/9908 [10:00:14<2:04:32,  3.71s/it] 80%|███████▉  | 7894/9908 [10:00:18<2:03:46,  3.69s/it] 80%|███████▉  | 7895/9908 [10:00:21<2:04:05,  3.70s/it] 80%|███████▉  | 7896/9908 [10:00:25<2:02:32,  3.65s/it] 80%|███████▉  | 7897/9908 [10:00:29<2:04:34,  3.72s/it] 80%|███████▉  | 7898/9908 [10:00:32<2:00:08,  3.59s/it] 80%|███████▉  | 7899/9908 [10:00:36<2:00:17,  3.59s/it]09/20/2024 11:37:10 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.02883247472345829, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.1614879369735718, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.190320372581482}
 80%|███████▉  | 7900/9908 [10:00:39<2:00:15,  3.59s/it] 80%|███████▉  | 7901/9908 [10:00:43<2:04:33,  3.72s/it] 80%|███████▉  | 7902/9908 [10:00:47<2:04:55,  3.74s/it] 80%|███████▉  | 7903/9908 [10:00:51<2:04:25,  3.72s/it] 80%|███████▉  | 7904/9908 [10:00:54<2:00:57,  3.62s/it] 80%|███████▉  | 7905/9908 [10:00:58<2:04:29,  3.73s/it] 80%|███████▉  | 7906/9908 [10:01:02<2:05:24,  3.76s/it] 80%|███████▉  | 7907/9908 [10:01:06<2:06:43,  3.80s/it] 80%|███████▉  | 7908/9908 [10:01:10<2:04:09,  3.72s/it] 80%|███████▉  | 7909/9908 [10:01:13<2:04:28,  3.74s/it] 80%|███████▉  | 7910/9908 [10:01:17<2:00:50,  3.63s/it] 80%|███████▉  | 7911/9908 [10:01:20<2:01:48,  3.66s/it] 80%|███████▉  | 7912/9908 [10:01:24<2:03:52,  3.72s/it] 80%|███████▉  | 7913/9908 [10:01:28<2:00:38,  3.63s/it] 80%|███████▉  | 7914/9908 [10:01:31<2:00:23,  3.62s/it] 80%|███████▉  | 7915/9908 [10:01:35<2:00:46,  3.64s/it] 80%|███████▉  | 7916/9908 [10:01:39<2:04:53,  3.76s/it] 80%|███████▉  | 7917/9908 [10:01:42<1:59:45,  3.61s/it] 80%|███████▉  | 7918/9908 [10:01:46<2:01:30,  3.66s/it] 80%|███████▉  | 7919/9908 [10:01:50<2:03:08,  3.71s/it] 80%|███████▉  | 7920/9908 [10:01:54<2:05:23,  3.78s/it] 80%|███████▉  | 7921/9908 [10:01:57<2:02:57,  3.71s/it] 80%|███████▉  | 7922/9908 [10:02:02<2:07:37,  3.86s/it] 80%|███████▉  | 7923/9908 [10:02:05<2:07:52,  3.87s/it] 80%|███████▉  | 7924/9908 [10:02:09<2:01:00,  3.66s/it] 80%|███████▉  | 7925/9908 [10:02:12<2:01:35,  3.68s/it] 80%|███████▉  | 7926/9908 [10:02:16<1:59:46,  3.63s/it] 80%|████████  | 7927/9908 [10:02:20<2:00:14,  3.64s/it] 80%|████████  | 7928/9908 [10:02:23<2:00:46,  3.66s/it] 80%|████████  | 7929/9908 [10:02:27<2:01:50,  3.69s/it] 80%|████████  | 7930/9908 [10:02:31<2:01:35,  3.69s/it] 80%|████████  | 7931/9908 [10:02:34<1:59:56,  3.64s/it] 80%|████████  | 7932/9908 [10:02:38<2:01:16,  3.68s/it] 80%|████████  | 7933/9908 [10:02:42<2:04:37,  3.79s/it] 80%|████████  | 7934/9908 [10:02:45<2:00:44,  3.67s/it] 80%|████████  | 7935/9908 [10:02:49<2:00:50,  3.67s/it] 80%|████████  | 7936/9908 [10:02:53<2:03:16,  3.75s/it] 80%|████████  | 7937/9908 [10:02:57<2:01:37,  3.70s/it] 80%|████████  | 7938/9908 [10:03:01<2:03:59,  3.78s/it] 80%|████████  | 7939/9908 [10:03:04<2:02:27,  3.73s/it] 80%|████████  | 7940/9908 [10:03:08<1:59:37,  3.65s/it] 80%|████████  | 7941/9908 [10:03:11<2:00:39,  3.68s/it] 80%|████████  | 7942/9908 [10:03:15<2:01:42,  3.71s/it] 80%|████████  | 7943/9908 [10:03:19<1:59:52,  3.66s/it] 80%|████████  | 7944/9908 [10:03:23<2:02:01,  3.73s/it] 80%|████████  | 7945/9908 [10:03:27<2:05:16,  3.83s/it] 80%|████████  | 7946/9908 [10:03:30<2:02:51,  3.76s/it] 80%|████████  | 7947/9908 [10:03:34<2:01:36,  3.72s/it] 80%|████████  | 7948/9908 [10:03:37<1:59:25,  3.66s/it] 80%|████████  | 7949/9908 [10:03:41<1:58:05,  3.62s/it]09/20/2024 11:40:15 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.020107239484786987, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 0.939902663230896, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 0.9600099325180054}
 80%|████████  | 7950/9908 [10:03:45<2:00:53,  3.70s/it] 80%|████████  | 7951/9908 [10:03:49<2:04:59,  3.83s/it] 80%|████████  | 7952/9908 [10:03:53<2:03:04,  3.78s/it] 80%|████████  | 7953/9908 [10:03:56<2:02:23,  3.76s/it] 80%|████████  | 7954/9908 [10:04:00<1:59:13,  3.66s/it] 80%|████████  | 7955/9908 [10:04:04<2:00:08,  3.69s/it] 80%|████████  | 7956/9908 [10:04:07<1:59:06,  3.66s/it] 80%|████████  | 7957/9908 [10:04:11<1:58:41,  3.65s/it] 80%|████████  | 7958/9908 [10:04:14<1:55:23,  3.55s/it] 80%|████████  | 7959/9908 [10:04:18<1:59:35,  3.68s/it] 80%|████████  | 7960/9908 [10:04:22<1:57:19,  3.61s/it] 80%|████████  | 7961/9908 [10:04:25<2:00:44,  3.72s/it] 80%|████████  | 7962/9908 [10:04:29<2:00:13,  3.71s/it] 80%|████████  | 7963/9908 [10:04:33<1:57:54,  3.64s/it] 80%|████████  | 7964/9908 [10:04:36<1:59:53,  3.70s/it] 80%|████████  | 7965/9908 [10:04:40<2:00:21,  3.72s/it] 80%|████████  | 7966/9908 [10:04:44<1:58:18,  3.66s/it] 80%|████████  | 7967/9908 [10:04:48<2:00:04,  3.71s/it] 80%|████████  | 7968/9908 [10:04:51<2:00:51,  3.74s/it] 80%|████████  | 7969/9908 [10:04:55<1:58:56,  3.68s/it] 80%|████████  | 7970/9908 [10:04:59<2:01:13,  3.75s/it] 80%|████████  | 7971/9908 [10:05:03<2:01:35,  3.77s/it] 80%|████████  | 7972/9908 [10:05:06<1:58:49,  3.68s/it] 80%|████████  | 7973/9908 [10:05:10<2:05:03,  3.88s/it] 80%|████████  | 7974/9908 [10:05:14<2:03:03,  3.82s/it] 80%|████████  | 7975/9908 [10:05:18<2:00:20,  3.74s/it] 81%|████████  | 7976/9908 [10:05:21<2:00:19,  3.74s/it] 81%|████████  | 7977/9908 [10:05:25<1:57:00,  3.64s/it] 81%|████████  | 7978/9908 [10:05:29<2:00:02,  3.73s/it] 81%|████████  | 7979/9908 [10:05:32<1:58:10,  3.68s/it] 81%|████████  | 7980/9908 [10:05:36<2:01:02,  3.77s/it] 81%|████████  | 7981/9908 [10:05:40<1:59:57,  3.73s/it] 81%|████████  | 7982/9908 [10:05:43<1:57:43,  3.67s/it] 81%|████████  | 7983/9908 [10:05:47<1:56:52,  3.64s/it] 81%|████████  | 7984/9908 [10:05:51<1:55:56,  3.62s/it] 81%|████████  | 7985/9908 [10:05:55<2:00:58,  3.77s/it] 81%|████████  | 7986/9908 [10:05:58<1:59:15,  3.72s/it] 81%|████████  | 7987/9908 [10:06:02<1:58:29,  3.70s/it] 81%|████████  | 7988/9908 [10:06:06<1:58:55,  3.72s/it] 81%|████████  | 7989/9908 [10:06:09<1:57:56,  3.69s/it] 81%|████████  | 7990/9908 [10:06:13<1:58:04,  3.69s/it] 81%|████████  | 7991/9908 [10:06:17<2:01:22,  3.80s/it] 81%|████████  | 7992/9908 [10:06:21<2:00:43,  3.78s/it] 81%|████████  | 7993/9908 [10:06:25<2:02:42,  3.84s/it] 81%|████████  | 7994/9908 [10:06:28<1:59:11,  3.74s/it] 81%|████████  | 7995/9908 [10:06:32<1:54:36,  3.59s/it] 81%|████████  | 7996/9908 [10:06:35<1:55:56,  3.64s/it] 81%|████████  | 7997/9908 [10:06:39<1:56:01,  3.64s/it] 81%|████████  | 7998/9908 [10:06:42<1:54:04,  3.58s/it] 81%|████████  | 7999/9908 [10:06:46<1:56:59,  3.68s/it]09/20/2024 11:43:20 - INFO - __main__ -   evaluate on ret%tvas--msrvtt_ret task
09/20/2024 11:43:20 - INFO - __main__ -   start running ret%tvas validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:01<05:20,  1.46s/it][A
  1%|          | 2/221 [00:01<02:55,  1.25it/s][A
  1%|▏         | 3/221 [00:02<02:08,  1.70it/s][A
  2%|▏         | 4/221 [00:02<01:48,  2.00it/s][A
  3%|▎         | 6/221 [00:02<01:02,  3.42it/s][A
  3%|▎         | 7/221 [00:02<01:01,  3.50it/s][A
  4%|▎         | 8/221 [00:03<01:13,  2.89it/s][A
  4%|▍         | 9/221 [00:03<01:12,  2.93it/s][A
  5%|▍         | 10/221 [00:04<01:16,  2.75it/s][A
  5%|▌         | 12/221 [00:07<02:58,  1.17it/s][A
  6%|▌         | 13/221 [00:07<02:26,  1.42it/s][A
  7%|▋         | 15/221 [00:07<01:44,  1.97it/s][A
  7%|▋         | 16/221 [00:08<01:41,  2.02it/s][A
  8%|▊         | 17/221 [00:08<01:52,  1.82it/s][A
  8%|▊         | 18/221 [00:09<01:32,  2.19it/s][A
  9%|▊         | 19/221 [00:11<02:54,  1.16it/s][A
  9%|▉         | 20/221 [00:11<02:11,  1.53it/s][A
 10%|▉         | 21/221 [00:11<01:53,  1.77it/s][A
 10%|▉         | 22/221 [00:12<02:04,  1.60it/s][A
 10%|█         | 23/221 [00:12<01:36,  2.06it/s][A
 11%|█         | 24/221 [00:12<01:17,  2.54it/s][A
 11%|█▏        | 25/221 [00:12<01:09,  2.83it/s][A
 12%|█▏        | 26/221 [00:13<01:08,  2.85it/s][A
 13%|█▎        | 28/221 [00:13<01:06,  2.92it/s][A
 13%|█▎        | 29/221 [00:14<00:59,  3.25it/s][A
 14%|█▎        | 30/221 [00:14<01:05,  2.93it/s][A
 14%|█▍        | 31/221 [00:14<01:08,  2.78it/s][A
 14%|█▍        | 32/221 [00:15<00:56,  3.35it/s][A
 15%|█▍        | 33/221 [00:15<00:59,  3.15it/s][A
 15%|█▌        | 34/221 [00:15<00:48,  3.88it/s][A
 16%|█▌        | 35/221 [00:15<00:43,  4.29it/s][A
 16%|█▋        | 36/221 [00:15<00:41,  4.46it/s][A
 17%|█▋        | 37/221 [00:16<01:02,  2.96it/s][A
 17%|█▋        | 38/221 [00:17<01:10,  2.61it/s][A
 18%|█▊        | 39/221 [00:17<01:02,  2.93it/s][A
 18%|█▊        | 40/221 [00:17<01:13,  2.46it/s][A
 19%|█▊        | 41/221 [00:18<01:00,  2.99it/s][A
 19%|█▉        | 42/221 [00:18<00:47,  3.76it/s][A
 19%|█▉        | 43/221 [00:18<00:40,  4.45it/s][A
 20%|█▉        | 44/221 [00:18<00:33,  5.30it/s][A
 20%|██        | 45/221 [00:22<03:53,  1.33s/it][A
 21%|██        | 46/221 [00:22<03:04,  1.05s/it][A
 21%|██▏       | 47/221 [00:23<02:32,  1.14it/s][A
 22%|██▏       | 48/221 [00:23<01:51,  1.55it/s][A
 22%|██▏       | 49/221 [00:23<01:40,  1.70it/s][A
 23%|██▎       | 50/221 [00:24<01:39,  1.72it/s][A
 23%|██▎       | 51/221 [00:24<01:19,  2.14it/s][A
 24%|██▎       | 52/221 [00:24<01:04,  2.61it/s][A
 24%|██▍       | 53/221 [00:25<00:58,  2.87it/s][A
 24%|██▍       | 54/221 [00:25<01:08,  2.45it/s][A
 25%|██▍       | 55/221 [00:26<01:51,  1.49it/s][A
 25%|██▌       | 56/221 [00:27<01:27,  1.89it/s][A
 26%|██▌       | 57/221 [00:27<01:08,  2.38it/s][A
 27%|██▋       | 59/221 [00:27<00:46,  3.49it/s][A
 27%|██▋       | 60/221 [00:27<00:53,  3.00it/s][A
 28%|██▊       | 61/221 [00:28<00:47,  3.39it/s][A
 28%|██▊       | 62/221 [00:28<00:49,  3.21it/s][A
 29%|██▊       | 63/221 [00:28<00:46,  3.37it/s][A
 29%|██▉       | 64/221 [00:29<01:13,  2.14it/s][A
 29%|██▉       | 65/221 [00:29<00:58,  2.65it/s][A
 30%|██▉       | 66/221 [00:30<01:02,  2.48it/s][A
 30%|███       | 67/221 [00:30<00:55,  2.76it/s][A
 31%|███       | 68/221 [00:30<00:46,  3.28it/s][A
 31%|███       | 69/221 [00:32<01:44,  1.45it/s][A
 32%|███▏      | 70/221 [00:32<01:19,  1.91it/s][A
 32%|███▏      | 71/221 [00:32<01:13,  2.05it/s][A
 33%|███▎      | 72/221 [00:33<01:16,  1.95it/s][A
 33%|███▎      | 73/221 [00:34<01:20,  1.84it/s][A
 33%|███▎      | 74/221 [00:34<01:00,  2.41it/s][A
 34%|███▍      | 75/221 [00:34<00:58,  2.50it/s][A
 34%|███▍      | 76/221 [00:34<00:51,  2.80it/s][A
 35%|███▍      | 77/221 [00:36<01:47,  1.34it/s][A
 35%|███▌      | 78/221 [00:36<01:20,  1.77it/s][A
 36%|███▌      | 79/221 [00:37<01:48,  1.31it/s][A
 36%|███▌      | 80/221 [00:37<01:21,  1.73it/s][A
 37%|███▋      | 81/221 [00:38<01:13,  1.91it/s][A
 37%|███▋      | 82/221 [00:41<03:11,  1.38s/it][A
 38%|███▊      | 83/221 [00:42<02:38,  1.15s/it][A
 38%|███▊      | 84/221 [00:42<02:00,  1.14it/s][A
 39%|███▉      | 86/221 [00:42<01:16,  1.76it/s][A
 39%|███▉      | 87/221 [00:43<01:13,  1.81it/s][A
 40%|███▉      | 88/221 [00:43<01:02,  2.12it/s][A
 40%|████      | 89/221 [00:44<00:56,  2.33it/s][A
 41%|████      | 90/221 [00:44<00:51,  2.53it/s][A
 41%|████      | 91/221 [00:44<00:42,  3.03it/s][A
 42%|████▏     | 92/221 [00:44<00:37,  3.47it/s][A
 42%|████▏     | 93/221 [00:45<00:39,  3.28it/s][A
 43%|████▎     | 94/221 [00:45<00:49,  2.57it/s][A
 43%|████▎     | 95/221 [00:46<00:49,  2.53it/s][A
 43%|████▎     | 96/221 [00:46<00:56,  2.22it/s][A
 44%|████▍     | 97/221 [00:46<00:44,  2.76it/s][A
 44%|████▍     | 98/221 [00:47<00:48,  2.53it/s][A
 45%|████▍     | 99/221 [00:47<00:45,  2.70it/s][A
 45%|████▌     | 100/221 [00:48<01:01,  1.96it/s][A
 46%|████▌     | 101/221 [00:48<00:50,  2.39it/s][A
 46%|████▌     | 102/221 [00:49<01:07,  1.76it/s][A
 47%|████▋     | 103/221 [00:49<00:50,  2.34it/s][A
 47%|████▋     | 104/221 [00:49<00:46,  2.53it/s][A
 48%|████▊     | 105/221 [00:50<00:46,  2.49it/s][A
 48%|████▊     | 106/221 [00:51<01:26,  1.33it/s][A
 48%|████▊     | 107/221 [00:52<01:11,  1.60it/s][A
 49%|████▉     | 108/221 [00:52<01:05,  1.74it/s][A
 49%|████▉     | 109/221 [00:53<00:59,  1.89it/s][A
 50%|████▉     | 110/221 [00:53<00:45,  2.41it/s][A
 50%|█████     | 111/221 [00:53<00:44,  2.46it/s][A
 51%|█████     | 112/221 [00:54<00:42,  2.59it/s][A
 51%|█████     | 113/221 [00:54<00:35,  3.02it/s][A
 52%|█████▏    | 114/221 [00:54<00:28,  3.77it/s][A
 52%|█████▏    | 115/221 [00:54<00:40,  2.62it/s][A
 52%|█████▏    | 116/221 [00:55<00:39,  2.68it/s][A
 53%|█████▎    | 117/221 [00:55<00:39,  2.60it/s][A
 53%|█████▎    | 118/221 [00:56<00:40,  2.55it/s][A
 54%|█████▍    | 119/221 [00:56<00:31,  3.25it/s][A
 54%|█████▍    | 120/221 [00:56<00:27,  3.74it/s][A
 55%|█████▍    | 121/221 [00:56<00:35,  2.84it/s][A
 55%|█████▌    | 122/221 [00:57<00:37,  2.65it/s][A
 56%|█████▌    | 123/221 [00:58<01:06,  1.47it/s][A
 56%|█████▌    | 124/221 [00:58<00:50,  1.92it/s][A
 57%|█████▋    | 125/221 [00:59<00:57,  1.66it/s][A
 57%|█████▋    | 126/221 [01:08<04:38,  2.93s/it][A
 57%|█████▋    | 127/221 [01:08<03:27,  2.21s/it][A
 58%|█████▊    | 128/221 [01:09<02:35,  1.68s/it][A
 58%|█████▊    | 129/221 [01:09<02:04,  1.35s/it][A
 59%|█████▉    | 130/221 [01:09<01:31,  1.01s/it][A
 59%|█████▉    | 131/221 [01:10<01:27,  1.03it/s][A
 60%|█████▉    | 132/221 [01:12<01:40,  1.13s/it][A
 60%|██████    | 133/221 [01:12<01:24,  1.04it/s][A
 61%|██████    | 134/221 [01:13<01:20,  1.09it/s][A
 61%|██████    | 135/221 [01:14<01:10,  1.21it/s][A
 62%|██████▏   | 136/221 [01:14<00:58,  1.46it/s][A
 62%|██████▏   | 137/221 [01:14<00:47,  1.76it/s][A
 62%|██████▏   | 138/221 [01:15<00:42,  1.93it/s][A
 63%|██████▎   | 139/221 [01:15<00:33,  2.44it/s][A
 63%|██████▎   | 140/221 [01:15<00:35,  2.29it/s][A
 64%|██████▍   | 141/221 [01:16<00:34,  2.33it/s][A
 64%|██████▍   | 142/221 [01:16<00:30,  2.63it/s][A
 65%|██████▍   | 143/221 [01:17<00:31,  2.49it/s][A
 65%|██████▌   | 144/221 [01:17<00:25,  3.02it/s][A
 66%|██████▌   | 145/221 [01:17<00:19,  3.81it/s][A
 67%|██████▋   | 147/221 [01:17<00:13,  5.54it/s][A
 67%|██████▋   | 148/221 [01:18<00:34,  2.12it/s][A
 67%|██████▋   | 149/221 [01:19<00:28,  2.52it/s][A
 68%|██████▊   | 150/221 [01:19<00:30,  2.34it/s][A
 68%|██████▊   | 151/221 [01:19<00:26,  2.66it/s][A
 69%|██████▉   | 152/221 [01:20<00:25,  2.67it/s][A
 69%|██████▉   | 153/221 [01:20<00:20,  3.26it/s][A
 70%|██████▉   | 154/221 [01:20<00:19,  3.45it/s][A
 70%|███████   | 155/221 [01:20<00:19,  3.45it/s][A
 71%|███████   | 156/221 [01:21<00:16,  4.00it/s][A
 71%|███████   | 157/221 [01:28<02:26,  2.28s/it][A
 71%|███████▏  | 158/221 [01:29<02:07,  2.02s/it][A
 72%|███████▏  | 159/221 [01:29<01:30,  1.46s/it][A
 72%|███████▏  | 160/221 [01:29<01:05,  1.07s/it][A
 73%|███████▎  | 161/221 [01:29<00:47,  1.26it/s][A
 74%|███████▍  | 163/221 [01:30<00:29,  1.96it/s][A
 74%|███████▍  | 164/221 [01:30<00:24,  2.36it/s][A
 75%|███████▍  | 165/221 [01:30<00:20,  2.73it/s][A
 75%|███████▌  | 166/221 [01:31<00:24,  2.22it/s][A
 76%|███████▌  | 167/221 [01:31<00:23,  2.34it/s][A
 76%|███████▌  | 168/221 [01:34<00:57,  1.09s/it][A
 76%|███████▋  | 169/221 [01:34<00:47,  1.09it/s][A
 77%|███████▋  | 170/221 [01:35<00:40,  1.27it/s][A
 77%|███████▋  | 171/221 [01:35<00:32,  1.55it/s][A
 78%|███████▊  | 172/221 [01:36<00:26,  1.84it/s][A
 78%|███████▊  | 173/221 [01:36<00:24,  1.96it/s][A
 79%|███████▊  | 174/221 [01:36<00:19,  2.37it/s][A
 79%|███████▉  | 175/221 [01:36<00:17,  2.70it/s][A
 80%|███████▉  | 176/221 [01:37<00:14,  3.04it/s][A
 80%|████████  | 177/221 [01:37<00:14,  3.12it/s][A
 81%|████████  | 178/221 [01:37<00:13,  3.21it/s][A
 81%|████████  | 179/221 [01:38<00:13,  3.19it/s][A
 81%|████████▏ | 180/221 [01:38<00:11,  3.46it/s][A
 82%|████████▏ | 181/221 [01:38<00:09,  4.10it/s][A
 82%|████████▏ | 182/221 [01:38<00:12,  3.19it/s][A
 83%|████████▎ | 183/221 [01:39<00:16,  2.37it/s][A
 83%|████████▎ | 184/221 [01:40<00:15,  2.39it/s][A
 84%|████████▎ | 185/221 [01:40<00:12,  2.83it/s][A
 84%|████████▍ | 186/221 [01:40<00:10,  3.24it/s][A
 85%|████████▍ | 187/221 [01:40<00:10,  3.30it/s][A
 85%|████████▌ | 188/221 [01:40<00:09,  3.46it/s][A
 86%|████████▌ | 189/221 [01:41<00:09,  3.29it/s][A
 86%|████████▌ | 190/221 [01:41<00:10,  2.88it/s][A
 86%|████████▋ | 191/221 [01:41<00:08,  3.39it/s][A
 87%|████████▋ | 192/221 [01:42<00:13,  2.18it/s][A
 87%|████████▋ | 193/221 [01:43<00:10,  2.56it/s][A
 88%|████████▊ | 194/221 [01:43<00:10,  2.67it/s][A
 88%|████████▊ | 195/221 [01:43<00:08,  2.97it/s][A
 89%|████████▊ | 196/221 [01:44<00:10,  2.35it/s][A
 89%|████████▉ | 197/221 [01:44<00:09,  2.50it/s][A
 90%|████████▉ | 198/221 [01:44<00:08,  2.68it/s][A
 90%|█████████ | 199/221 [01:45<00:06,  3.22it/s][A
 90%|█████████ | 200/221 [01:46<00:11,  1.84it/s][A
 91%|█████████ | 201/221 [01:46<00:11,  1.79it/s][A
 91%|█████████▏| 202/221 [01:47<00:09,  1.99it/s][A
 92%|█████████▏| 203/221 [01:48<00:11,  1.51it/s][A
 92%|█████████▏| 204/221 [01:48<00:11,  1.54it/s][A
 93%|█████████▎| 206/221 [01:49<00:06,  2.27it/s][A
 94%|█████████▎| 207/221 [01:49<00:05,  2.70it/s][A
 94%|█████████▍| 208/221 [01:49<00:05,  2.22it/s][A
 95%|█████████▌| 210/221 [01:50<00:03,  2.92it/s][A
 95%|█████████▌| 211/221 [01:50<00:03,  2.61it/s][A
 96%|█████████▌| 212/221 [01:51<00:03,  2.82it/s][A
 96%|█████████▋| 213/221 [01:51<00:02,  3.36it/s][A
 97%|█████████▋| 214/221 [01:51<00:02,  3.14it/s][A
 97%|█████████▋| 215/221 [01:52<00:02,  2.27it/s][A
 98%|█████████▊| 216/221 [01:52<00:01,  2.63it/s][A
 98%|█████████▊| 217/221 [01:53<00:02,  1.82it/s][A
 99%|█████████▊| 218/221 [01:53<00:01,  2.01it/s][A
 99%|█████████▉| 219/221 [01:54<00:00,  2.22it/s][A
100%|█████████▉| 220/221 [02:02<00:02,  2.65s/it][A
100%|██████████| 221/221 [02:02<00:00,  1.91s/it][A100%|██████████| 221/221 [02:02<00:00,  1.81it/s]

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:00<01:56,  1.89it/s][A
  1%|          | 2/221 [00:01<01:55,  1.89it/s][A
  1%|▏         | 3/221 [00:01<01:55,  1.89it/s][A
  2%|▏         | 4/221 [00:02<01:54,  1.89it/s][A
  2%|▏         | 5/221 [00:02<01:54,  1.89it/s][A
  3%|▎         | 6/221 [00:03<01:53,  1.89it/s][A
  3%|▎         | 7/221 [00:03<01:53,  1.89it/s][A
  4%|▎         | 8/221 [00:04<01:52,  1.89it/s][A
  4%|▍         | 9/221 [00:04<01:52,  1.89it/s][A
  5%|▍         | 10/221 [00:05<01:51,  1.89it/s][A
  5%|▍         | 11/221 [00:05<01:51,  1.89it/s][A
  5%|▌         | 12/221 [00:06<01:50,  1.89it/s][A
  6%|▌         | 13/221 [00:06<01:49,  1.89it/s][A
  6%|▋         | 14/221 [00:07<01:49,  1.89it/s][A
  7%|▋         | 15/221 [00:07<01:48,  1.89it/s][A
  7%|▋         | 16/221 [00:08<01:48,  1.89it/s][A
  8%|▊         | 17/221 [00:08<01:47,  1.89it/s][A
  8%|▊         | 18/221 [00:09<01:47,  1.89it/s][A
  9%|▊         | 19/221 [00:10<01:46,  1.89it/s][A
  9%|▉         | 20/221 [00:10<01:46,  1.89it/s][A
 10%|▉         | 21/221 [00:11<01:45,  1.89it/s][A
 10%|▉         | 22/221 [00:11<01:45,  1.89it/s][A
 10%|█         | 23/221 [00:12<01:44,  1.89it/s][A
 11%|█         | 24/221 [00:12<01:44,  1.89it/s][A
 11%|█▏        | 25/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 26/221 [00:13<01:43,  1.89it/s][A
 12%|█▏        | 27/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 28/221 [00:14<01:42,  1.89it/s][A
 13%|█▎        | 29/221 [00:15<01:41,  1.89it/s][A
 14%|█▎        | 30/221 [00:15<01:40,  1.89it/s][A
 14%|█▍        | 31/221 [00:16<01:40,  1.89it/s][A
 14%|█▍        | 32/221 [00:16<01:39,  1.89it/s][A
 15%|█▍        | 33/221 [00:17<01:39,  1.89it/s][A
 15%|█▌        | 34/221 [00:17<01:38,  1.89it/s][A
 16%|█▌        | 35/221 [00:18<01:38,  1.89it/s][A
 16%|█▋        | 36/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 37/221 [00:19<01:37,  1.89it/s][A
 17%|█▋        | 38/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 39/221 [00:20<01:36,  1.89it/s][A
 18%|█▊        | 40/221 [00:21<01:35,  1.89it/s][A
 19%|█▊        | 41/221 [00:21<01:35,  1.89it/s][A
 19%|█▉        | 42/221 [00:22<01:34,  1.89it/s][A
 19%|█▉        | 43/221 [00:22<01:34,  1.89it/s][A
 20%|█▉        | 44/221 [00:23<01:33,  1.89it/s][A
 20%|██        | 45/221 [00:23<01:33,  1.89it/s][A
 21%|██        | 46/221 [00:24<01:32,  1.89it/s][A
 21%|██▏       | 47/221 [00:24<01:31,  1.89it/s][A
 22%|██▏       | 48/221 [00:25<01:31,  1.89it/s][A
 22%|██▏       | 49/221 [00:25<01:30,  1.89it/s][A
 23%|██▎       | 50/221 [00:26<01:30,  1.89it/s][A
 23%|██▎       | 51/221 [00:26<01:29,  1.89it/s][A
 24%|██▎       | 52/221 [00:27<01:29,  1.89it/s][A
 24%|██▍       | 53/221 [00:28<01:28,  1.89it/s][A
 24%|██▍       | 54/221 [00:28<01:28,  1.89it/s][A
 25%|██▍       | 55/221 [00:29<01:27,  1.89it/s][A
 25%|██▌       | 56/221 [00:29<01:27,  1.89it/s][A
 26%|██▌       | 57/221 [00:30<01:26,  1.89it/s][A
 26%|██▌       | 58/221 [00:30<01:26,  1.89it/s][A
 27%|██▋       | 59/221 [00:31<01:25,  1.89it/s][A
 27%|██▋       | 60/221 [00:31<01:25,  1.89it/s][A
 28%|██▊       | 61/221 [00:32<01:24,  1.89it/s][A
 28%|██▊       | 62/221 [00:32<01:24,  1.89it/s][A
 29%|██▊       | 63/221 [00:33<01:23,  1.89it/s][A
 29%|██▉       | 64/221 [00:33<01:22,  1.89it/s][A
 29%|██▉       | 65/221 [00:34<01:22,  1.89it/s][A
 30%|██▉       | 66/221 [00:34<01:21,  1.89it/s][A
 30%|███       | 67/221 [00:35<01:21,  1.89it/s][A
 31%|███       | 68/221 [00:35<01:20,  1.89it/s][A
 31%|███       | 69/221 [00:36<01:20,  1.89it/s][A
 32%|███▏      | 70/221 [00:37<01:19,  1.89it/s][A
 32%|███▏      | 71/221 [00:37<01:19,  1.89it/s][A
 33%|███▎      | 72/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 73/221 [00:38<01:18,  1.89it/s][A
 33%|███▎      | 74/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 75/221 [00:39<01:17,  1.89it/s][A
 34%|███▍      | 76/221 [00:40<01:16,  1.89it/s][A
 35%|███▍      | 77/221 [00:40<01:16,  1.89it/s][A
 35%|███▌      | 78/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 79/221 [00:41<01:15,  1.89it/s][A
 36%|███▌      | 80/221 [00:42<01:14,  1.89it/s][A
 37%|███▋      | 81/221 [00:42<01:13,  1.89it/s][A
 37%|███▋      | 82/221 [00:43<01:13,  1.89it/s][A
 38%|███▊      | 83/221 [00:43<01:12,  1.89it/s][A
 38%|███▊      | 84/221 [00:44<01:12,  1.89it/s][A
 38%|███▊      | 85/221 [00:44<01:11,  1.89it/s][A
 39%|███▉      | 86/221 [00:45<01:11,  1.89it/s][A
 39%|███▉      | 87/221 [00:45<01:10,  1.89it/s][A
 40%|███▉      | 88/221 [00:46<01:10,  1.89it/s][A
 40%|████      | 89/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 90/221 [00:47<01:09,  1.89it/s][A
 41%|████      | 91/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 92/221 [00:48<01:08,  1.89it/s][A
 42%|████▏     | 93/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 94/221 [00:49<01:07,  1.89it/s][A
 43%|████▎     | 95/221 [00:50<01:06,  1.89it/s][A
 43%|████▎     | 96/221 [00:50<01:06,  1.89it/s][A
 44%|████▍     | 97/221 [00:51<01:05,  1.89it/s][A
 44%|████▍     | 98/221 [00:51<01:05,  1.89it/s][A
 45%|████▍     | 99/221 [00:52<01:04,  1.89it/s][A
 45%|████▌     | 100/221 [00:52<01:03,  1.89it/s][A
 46%|████▌     | 101/221 [00:53<01:03,  1.89it/s][A
 46%|████▌     | 102/221 [00:53<01:02,  1.89it/s][A
 47%|████▋     | 103/221 [00:54<01:02,  1.89it/s][A
 47%|████▋     | 104/221 [00:54<01:01,  1.89it/s][A
 48%|████▊     | 105/221 [00:55<01:01,  1.89it/s][A
 48%|████▊     | 106/221 [00:56<01:00,  1.89it/s][A
 48%|████▊     | 107/221 [00:56<01:00,  1.89it/s][A
 49%|████▉     | 108/221 [00:57<00:59,  1.89it/s][A
 49%|████▉     | 109/221 [00:57<00:59,  1.89it/s][A
 50%|████▉     | 110/221 [00:58<00:58,  1.89it/s][A
 50%|█████     | 111/221 [00:58<00:58,  1.89it/s][A
 51%|█████     | 112/221 [00:59<00:57,  1.89it/s][A
 51%|█████     | 113/221 [00:59<00:57,  1.89it/s][A
 52%|█████▏    | 114/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 115/221 [01:00<00:56,  1.89it/s][A
 52%|█████▏    | 116/221 [01:01<00:55,  1.89it/s][A
 53%|█████▎    | 117/221 [01:01<00:54,  1.89it/s][A
 53%|█████▎    | 118/221 [01:02<00:54,  1.89it/s][A
 54%|█████▍    | 119/221 [01:02<00:53,  1.89it/s][A
 54%|█████▍    | 120/221 [01:03<00:53,  1.89it/s][A
 55%|█████▍    | 121/221 [01:03<00:52,  1.89it/s][A
 55%|█████▌    | 122/221 [01:04<00:52,  1.89it/s][A
 56%|█████▌    | 123/221 [01:05<00:51,  1.89it/s][A
 56%|█████▌    | 124/221 [01:05<00:51,  1.89it/s][A
 57%|█████▋    | 125/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 126/221 [01:06<00:50,  1.89it/s][A
 57%|█████▋    | 127/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 128/221 [01:07<00:49,  1.89it/s][A
 58%|█████▊    | 129/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 130/221 [01:08<00:48,  1.89it/s][A
 59%|█████▉    | 131/221 [01:09<00:47,  1.89it/s][A
 60%|█████▉    | 132/221 [01:09<00:47,  1.89it/s][A
 60%|██████    | 133/221 [01:10<00:46,  1.89it/s][A
 61%|██████    | 134/221 [01:10<00:45,  1.89it/s][A
 61%|██████    | 135/221 [01:11<00:45,  1.89it/s][A
 62%|██████▏   | 136/221 [01:11<00:44,  1.89it/s][A
 62%|██████▏   | 137/221 [01:12<00:44,  1.89it/s][A
 62%|██████▏   | 138/221 [01:12<00:43,  1.89it/s][A
 63%|██████▎   | 139/221 [01:13<00:43,  1.89it/s][A
 63%|██████▎   | 140/221 [01:14<00:42,  1.89it/s][A
 64%|██████▍   | 141/221 [01:14<00:42,  1.89it/s][A
 64%|██████▍   | 142/221 [01:15<00:41,  1.89it/s][A
 65%|██████▍   | 143/221 [01:15<00:41,  1.89it/s][A
 65%|██████▌   | 144/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 145/221 [01:16<00:40,  1.89it/s][A
 66%|██████▌   | 146/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 147/221 [01:17<00:39,  1.89it/s][A
 67%|██████▋   | 148/221 [01:18<00:38,  1.89it/s][A
 67%|██████▋   | 149/221 [01:18<00:38,  1.89it/s][A
 68%|██████▊   | 150/221 [01:19<00:37,  1.89it/s][A
 68%|██████▊   | 151/221 [01:19<00:37,  1.89it/s][A
 69%|██████▉   | 152/221 [01:20<00:36,  1.89it/s][A
 69%|██████▉   | 153/221 [01:20<00:35,  1.89it/s][A
 70%|██████▉   | 154/221 [01:21<00:35,  1.89it/s][A
 70%|███████   | 155/221 [01:21<00:34,  1.89it/s][A
 71%|███████   | 156/221 [01:22<00:34,  1.89it/s][A
 71%|███████   | 157/221 [01:22<00:33,  1.89it/s][A
 71%|███████▏  | 158/221 [01:23<00:33,  1.89it/s][A
 72%|███████▏  | 159/221 [01:24<00:32,  1.89it/s][A
 72%|███████▏  | 160/221 [01:24<00:32,  1.89it/s][A
 73%|███████▎  | 161/221 [01:25<00:31,  1.89it/s][A
 73%|███████▎  | 162/221 [01:25<00:31,  1.89it/s][A
 74%|███████▍  | 163/221 [01:26<00:30,  1.89it/s][A
 74%|███████▍  | 164/221 [01:26<00:30,  1.89it/s][A
 75%|███████▍  | 165/221 [01:27<00:29,  1.89it/s][A
 75%|███████▌  | 166/221 [01:27<00:29,  1.89it/s][A
 76%|███████▌  | 167/221 [01:28<00:28,  1.89it/s][A
 76%|███████▌  | 168/221 [01:28<00:28,  1.89it/s][A
 76%|███████▋  | 169/221 [01:29<00:27,  1.89it/s][A
 77%|███████▋  | 170/221 [01:29<00:26,  1.89it/s][A
 77%|███████▋  | 171/221 [01:30<00:26,  1.89it/s][A
 78%|███████▊  | 172/221 [01:30<00:25,  1.89it/s][A
 78%|███████▊  | 173/221 [01:31<00:25,  1.89it/s][A
 79%|███████▊  | 174/221 [01:31<00:24,  1.89it/s][A
 79%|███████▉  | 175/221 [01:32<00:24,  1.89it/s][A
 80%|███████▉  | 176/221 [01:33<00:23,  1.89it/s][A
 80%|████████  | 177/221 [01:33<00:23,  1.89it/s][A
 81%|████████  | 178/221 [01:34<00:22,  1.89it/s][A
 81%|████████  | 179/221 [01:34<00:22,  1.89it/s][A
 81%|████████▏ | 180/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 181/221 [01:35<00:21,  1.89it/s][A
 82%|████████▏ | 182/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 183/221 [01:36<00:20,  1.89it/s][A
 83%|████████▎ | 184/221 [01:37<00:19,  1.89it/s][A
 84%|████████▎ | 185/221 [01:37<00:19,  1.89it/s][A
 84%|████████▍ | 186/221 [01:38<00:18,  1.89it/s][A
 85%|████████▍ | 187/221 [01:38<00:17,  1.89it/s][A
 85%|████████▌ | 188/221 [01:39<00:17,  1.89it/s][A
 86%|████████▌ | 189/221 [01:39<00:16,  1.89it/s][A
 86%|████████▌ | 190/221 [01:40<00:16,  1.89it/s][A
 86%|████████▋ | 191/221 [01:40<00:15,  1.89it/s][A
 87%|████████▋ | 192/221 [01:41<00:15,  1.89it/s][A
 87%|████████▋ | 193/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 194/221 [01:42<00:14,  1.89it/s][A
 88%|████████▊ | 195/221 [01:43<00:13,  1.89it/s][A
 89%|████████▊ | 196/221 [01:43<00:13,  1.89it/s][A
 89%|████████▉ | 197/221 [01:44<00:12,  1.89it/s][A
 90%|████████▉ | 198/221 [01:44<00:12,  1.89it/s][A
 90%|█████████ | 199/221 [01:45<00:11,  1.89it/s][A
 90%|█████████ | 200/221 [01:45<00:11,  1.89it/s][A
 91%|█████████ | 201/221 [01:46<00:10,  1.89it/s][A
 91%|█████████▏| 202/221 [01:46<00:10,  1.89it/s][A
 92%|█████████▏| 203/221 [01:47<00:09,  1.89it/s][A
 92%|█████████▏| 204/221 [01:47<00:08,  1.89it/s][A
 93%|█████████▎| 205/221 [01:48<00:08,  1.89it/s][A
 93%|█████████▎| 206/221 [01:48<00:07,  1.89it/s][A
 94%|█████████▎| 207/221 [01:49<00:07,  1.89it/s][A
 94%|█████████▍| 208/221 [01:49<00:06,  1.89it/s][A
 95%|█████████▍| 209/221 [01:50<00:06,  1.89it/s][A
 95%|█████████▌| 210/221 [01:51<00:05,  1.89it/s][A
 95%|█████████▌| 211/221 [01:51<00:05,  1.89it/s][A
 96%|█████████▌| 212/221 [01:52<00:04,  1.89it/s][A
 96%|█████████▋| 213/221 [01:52<00:04,  1.89it/s][A
 97%|█████████▋| 214/221 [01:53<00:03,  1.89it/s][A
 97%|█████████▋| 215/221 [01:53<00:03,  1.89it/s][A
 98%|█████████▊| 216/221 [01:54<00:02,  1.89it/s][A
 98%|█████████▊| 217/221 [01:54<00:02,  1.89it/s][A
 99%|█████████▊| 218/221 [01:55<00:01,  1.89it/s][A
 99%|█████████▉| 219/221 [01:55<00:01,  1.89it/s][A
100%|█████████▉| 220/221 [01:56<00:00,  1.89it/s][A
100%|██████████| 221/221 [01:56<00:00,  1.89it/s][A100%|██████████| 221/221 [01:56<00:00,  1.89it/s]
09/20/2024 11:50:09 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_forward=====step 7999--===========

09/20/2024 11:50:09 - INFO - __main__ -   {'area_r1': 46.4, 'area_recall': '46.4/76.2/84.4', 'area_ravg': 69.0}
09/20/2024 11:50:09 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_backard=====step 7999--===========

09/20/2024 11:50:09 - INFO - __main__ -   {'forward_r1': 50.7, 'forward_recall': '50.7/79.0/87.6', 'forward_ravg': 72.4}
09/20/2024 11:50:09 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video=====step 7999--===========

09/20/2024 11:50:09 - INFO - __main__ -   {'area_video_r1': 49.4, 'area_video_recall': '49.4/79.0/88.1', 'area_video_ravg': 72.2}
09/20/2024 11:50:09 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_area_back_with_video====history best step: 6499=======

09/20/2024 11:50:09 - INFO - __main__ -   {'area_video_r1': 50.3, 'area_video_recall': '50.3/79.6/88.6', 'area_video_ravg': 72.9}
09/20/2024 11:50:09 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itm_area=====step 7999--===========

09/20/2024 11:50:09 - INFO - __main__ -   {'area_video_r1': 62.9, 'area_video_recall': '62.9/84.2/89.0', 'area_video_ravg': 78.7, 'area_video_back_r1': 61.3, 'area_video_back_recall': '61.3/85.3/91.2', 'area_video_back_ravg': 79.3}
09/20/2024 11:50:09 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itm_area====history best step: 7999=======

09/20/2024 11:50:09 - INFO - __main__ -   {'area_video_r1': 62.9, 'area_video_recall': '62.9/84.2/89.0', 'area_video_ravg': 78.7, 'area_video_back_r1': 61.3, 'area_video_back_recall': '61.3/85.3/91.2', 'area_video_back_ravg': 79.3}
09/20/2024 11:50:09 - INFO - __main__ -   ====-evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas=====step 7999--===========

09/20/2024 11:50:09 - INFO - __main__ -   {'video_r1': 29.8, 'video_recall': '29.8/56.4/66.5', 'video_ravg': 50.9}
09/20/2024 11:50:09 - INFO - __main__ -   ======evaluation--ret%tvas--msrvtt_ret_ret_itc_tvas====history best step: 1499=======

09/20/2024 11:50:09 - INFO - __main__ -   {'video_r1': 34.7, 'video_recall': '34.7/60.5/72.3', 'video_ravg': 55.8}
09/20/2024 11:50:33 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.024649804458022118, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 0.9479670524597168, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 0.9726168513298035}
 81%|████████  | 8000/9908 [10:14:02<70:40:25, 133.35s/it] 81%|████████  | 8001/9908 [10:14:05<49:56:17, 94.27s/it]  81%|████████  | 8002/9908 [10:14:09<35:27:56, 66.99s/it] 81%|████████  | 8003/9908 [10:14:12<25:24:30, 48.02s/it] 81%|████████  | 8004/9908 [10:14:16<18:22:29, 34.74s/it] 81%|████████  | 8005/9908 [10:14:20<13:23:44, 25.34s/it] 81%|████████  | 8006/9908 [10:14:23<9:58:02, 18.87s/it]  81%|████████  | 8007/9908 [10:14:27<7:32:57, 14.30s/it] 81%|████████  | 8008/9908 [10:14:31<5:54:17, 11.19s/it] 81%|████████  | 8009/9908 [10:14:34<4:41:20,  8.89s/it] 81%|████████  | 8010/9908 [10:14:38<3:54:19,  7.41s/it] 81%|████████  | 8011/9908 [10:14:42<3:19:26,  6.31s/it] 81%|████████  | 8012/9908 [10:14:46<2:53:36,  5.49s/it] 81%|████████  | 8013/9908 [10:14:49<2:34:52,  4.90s/it] 81%|████████  | 8014/9908 [10:14:53<2:26:08,  4.63s/it] 81%|████████  | 8015/9908 [10:14:57<2:15:51,  4.31s/it] 81%|████████  | 8016/9908 [10:15:01<2:10:02,  4.12s/it] 81%|████████  | 8017/9908 [10:15:04<2:07:07,  4.03s/it] 81%|████████  | 8018/9908 [10:15:08<2:04:29,  3.95s/it] 81%|████████  | 8019/9908 [10:15:11<1:59:07,  3.78s/it] 81%|████████  | 8020/9908 [10:15:15<1:55:54,  3.68s/it] 81%|████████  | 8021/9908 [10:15:19<1:54:41,  3.65s/it] 81%|████████  | 8022/9908 [10:15:22<1:57:45,  3.75s/it] 81%|████████  | 8023/9908 [10:15:26<1:56:40,  3.71s/it] 81%|████████  | 8024/9908 [10:15:30<1:56:02,  3.70s/it] 81%|████████  | 8025/9908 [10:15:33<1:54:57,  3.66s/it] 81%|████████  | 8026/9908 [10:15:37<1:55:38,  3.69s/it] 81%|████████  | 8027/9908 [10:15:41<1:56:53,  3.73s/it] 81%|████████  | 8028/9908 [10:15:45<1:55:26,  3.68s/it] 81%|████████  | 8029/9908 [10:15:48<1:53:22,  3.62s/it] 81%|████████  | 8030/9908 [10:15:52<1:55:24,  3.69s/it] 81%|████████  | 8031/9908 [10:15:55<1:54:22,  3.66s/it] 81%|████████  | 8032/9908 [10:15:59<1:54:15,  3.65s/it] 81%|████████  | 8033/9908 [10:16:03<1:55:10,  3.69s/it] 81%|████████  | 8034/9908 [10:16:07<1:56:04,  3.72s/it] 81%|████████  | 8035/9908 [10:16:11<2:00:41,  3.87s/it] 81%|████████  | 8036/9908 [10:16:15<1:59:36,  3.83s/it] 81%|████████  | 8037/9908 [10:16:18<1:56:10,  3.73s/it] 81%|████████  | 8038/9908 [10:16:22<1:57:52,  3.78s/it] 81%|████████  | 8039/9908 [10:16:26<1:58:29,  3.80s/it] 81%|████████  | 8040/9908 [10:16:30<2:02:23,  3.93s/it] 81%|████████  | 8041/9908 [10:16:34<2:01:20,  3.90s/it] 81%|████████  | 8042/9908 [10:16:38<1:59:26,  3.84s/it] 81%|████████  | 8043/9908 [10:16:41<1:59:37,  3.85s/it] 81%|████████  | 8044/9908 [10:16:45<1:57:19,  3.78s/it] 81%|████████  | 8045/9908 [10:16:49<1:55:03,  3.71s/it] 81%|████████  | 8046/9908 [10:16:52<1:53:40,  3.66s/it] 81%|████████  | 8047/9908 [10:16:56<1:53:21,  3.65s/it] 81%|████████  | 8048/9908 [10:17:00<1:56:49,  3.77s/it] 81%|████████  | 8049/9908 [10:17:04<1:56:40,  3.77s/it]09/20/2024 11:53:38 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.025974178686738014, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 0.9598540663719177, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 0.9858282208442688}
 81%|████████  | 8050/9908 [10:17:07<1:56:46,  3.77s/it] 81%|████████▏ | 8051/9908 [10:17:11<1:58:49,  3.84s/it] 81%|████████▏ | 8052/9908 [10:17:15<1:56:17,  3.76s/it] 81%|████████▏ | 8053/9908 [10:17:19<1:56:46,  3.78s/it] 81%|████████▏ | 8054/9908 [10:17:22<1:55:01,  3.72s/it] 81%|████████▏ | 8055/9908 [10:17:26<1:54:11,  3.70s/it] 81%|████████▏ | 8056/9908 [10:17:30<1:55:26,  3.74s/it] 81%|████████▏ | 8057/9908 [10:17:33<1:52:08,  3.64s/it] 81%|████████▏ | 8058/9908 [10:17:37<1:54:07,  3.70s/it] 81%|████████▏ | 8059/9908 [10:17:41<1:51:52,  3.63s/it] 81%|████████▏ | 8060/9908 [10:17:44<1:54:04,  3.70s/it] 81%|████████▏ | 8061/9908 [10:17:48<1:53:14,  3.68s/it] 81%|████████▏ | 8062/9908 [10:17:52<1:54:28,  3.72s/it] 81%|████████▏ | 8063/9908 [10:17:56<1:57:59,  3.84s/it] 81%|████████▏ | 8064/9908 [10:18:00<1:56:45,  3.80s/it] 81%|████████▏ | 8065/9908 [10:18:03<1:55:43,  3.77s/it] 81%|████████▏ | 8066/9908 [10:18:07<1:52:26,  3.66s/it] 81%|████████▏ | 8067/9908 [10:18:10<1:52:05,  3.65s/it] 81%|████████▏ | 8068/9908 [10:18:14<1:55:19,  3.76s/it] 81%|████████▏ | 8069/9908 [10:18:18<1:55:43,  3.78s/it] 81%|████████▏ | 8070/9908 [10:18:22<1:53:56,  3.72s/it] 81%|████████▏ | 8071/9908 [10:18:26<1:56:27,  3.80s/it] 81%|████████▏ | 8072/9908 [10:18:29<1:52:45,  3.68s/it] 81%|████████▏ | 8073/9908 [10:18:33<1:52:10,  3.67s/it] 81%|████████▏ | 8074/9908 [10:18:37<1:53:57,  3.73s/it] 81%|████████▏ | 8075/9908 [10:18:40<1:53:29,  3.72s/it] 82%|████████▏ | 8076/9908 [10:18:44<1:50:40,  3.62s/it] 82%|████████▏ | 8077/9908 [10:18:48<1:51:30,  3.65s/it] 82%|████████▏ | 8078/9908 [10:18:52<1:55:27,  3.79s/it] 82%|████████▏ | 8079/9908 [10:18:55<1:51:12,  3.65s/it] 82%|████████▏ | 8080/9908 [10:18:58<1:49:37,  3.60s/it] 82%|████████▏ | 8081/9908 [10:19:02<1:49:19,  3.59s/it] 82%|████████▏ | 8082/9908 [10:19:06<1:52:12,  3.69s/it] 82%|████████▏ | 8083/9908 [10:19:09<1:49:34,  3.60s/it] 82%|████████▏ | 8084/9908 [10:19:13<1:50:50,  3.65s/it] 82%|████████▏ | 8085/9908 [10:19:17<1:52:15,  3.69s/it] 82%|████████▏ | 8086/9908 [10:19:21<1:54:35,  3.77s/it] 82%|████████▏ | 8087/9908 [10:19:25<1:54:51,  3.78s/it] 82%|████████▏ | 8088/9908 [10:19:29<1:55:31,  3.81s/it] 82%|████████▏ | 8089/9908 [10:19:32<1:54:38,  3.78s/it] 82%|████████▏ | 8090/9908 [10:19:36<1:53:43,  3.75s/it] 82%|████████▏ | 8091/9908 [10:19:40<1:52:56,  3.73s/it] 82%|████████▏ | 8092/9908 [10:19:43<1:51:27,  3.68s/it] 82%|████████▏ | 8093/9908 [10:19:47<1:51:27,  3.68s/it] 82%|████████▏ | 8094/9908 [10:19:50<1:49:00,  3.61s/it] 82%|████████▏ | 8095/9908 [10:19:54<1:50:15,  3.65s/it] 82%|████████▏ | 8096/9908 [10:19:58<1:49:41,  3.63s/it] 82%|████████▏ | 8097/9908 [10:20:01<1:49:05,  3.61s/it] 82%|████████▏ | 8098/9908 [10:20:05<1:49:34,  3.63s/it] 82%|████████▏ | 8099/9908 [10:20:08<1:49:07,  3.62s/it]09/20/2024 11:56:43 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.03559761121869087, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.1829304695129395, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.2185280323028564}
 82%|████████▏ | 8100/9908 [10:20:12<1:52:04,  3.72s/it] 82%|████████▏ | 8101/9908 [10:20:16<1:54:50,  3.81s/it] 82%|████████▏ | 8102/9908 [10:20:20<1:50:14,  3.66s/it] 82%|████████▏ | 8103/9908 [10:20:23<1:49:40,  3.65s/it] 82%|████████▏ | 8104/9908 [10:20:27<1:49:38,  3.65s/it] 82%|████████▏ | 8105/9908 [10:20:31<1:52:47,  3.75s/it] 82%|████████▏ | 8106/9908 [10:20:35<1:53:50,  3.79s/it] 82%|████████▏ | 8107/9908 [10:20:39<1:52:22,  3.74s/it] 82%|████████▏ | 8108/9908 [10:20:42<1:49:38,  3.65s/it] 82%|████████▏ | 8109/9908 [10:20:46<1:49:06,  3.64s/it] 82%|████████▏ | 8110/9908 [10:20:50<1:52:42,  3.76s/it] 82%|████████▏ | 8111/9908 [10:20:53<1:51:33,  3.72s/it] 82%|████████▏ | 8112/9908 [10:20:57<1:50:01,  3.68s/it] 82%|████████▏ | 8113/9908 [10:21:01<1:49:52,  3.67s/it] 82%|████████▏ | 8114/9908 [10:21:04<1:50:04,  3.68s/it] 82%|████████▏ | 8115/9908 [10:21:08<1:50:01,  3.68s/it] 82%|████████▏ | 8116/9908 [10:21:12<1:55:40,  3.87s/it] 82%|████████▏ | 8117/9908 [10:21:16<1:52:06,  3.76s/it] 82%|████████▏ | 8118/9908 [10:21:20<1:54:21,  3.83s/it] 82%|████████▏ | 8119/9908 [10:21:23<1:52:48,  3.78s/it] 82%|████████▏ | 8120/9908 [10:21:27<1:53:15,  3.80s/it] 82%|████████▏ | 8121/9908 [10:21:31<1:50:42,  3.72s/it] 82%|████████▏ | 8122/9908 [10:21:34<1:50:33,  3.71s/it] 82%|████████▏ | 8123/9908 [10:21:38<1:49:23,  3.68s/it] 82%|████████▏ | 8124/9908 [10:21:42<1:50:13,  3.71s/it] 82%|████████▏ | 8125/9908 [10:21:46<1:52:03,  3.77s/it] 82%|████████▏ | 8126/9908 [10:21:49<1:51:42,  3.76s/it] 82%|████████▏ | 8127/9908 [10:21:53<1:52:35,  3.79s/it] 82%|████████▏ | 8128/9908 [10:21:57<1:50:38,  3.73s/it] 82%|████████▏ | 8129/9908 [10:22:00<1:48:33,  3.66s/it] 82%|████████▏ | 8130/9908 [10:22:04<1:50:18,  3.72s/it] 82%|████████▏ | 8131/9908 [10:22:08<1:47:42,  3.64s/it] 82%|████████▏ | 8132/9908 [10:22:11<1:46:53,  3.61s/it] 82%|████████▏ | 8133/9908 [10:22:15<1:48:32,  3.67s/it] 82%|████████▏ | 8134/9908 [10:22:19<1:50:10,  3.73s/it] 82%|████████▏ | 8135/9908 [10:22:22<1:48:39,  3.68s/it] 82%|████████▏ | 8136/9908 [10:22:26<1:48:12,  3.66s/it] 82%|████████▏ | 8137/9908 [10:22:30<1:49:13,  3.70s/it] 82%|████████▏ | 8138/9908 [10:22:34<1:50:37,  3.75s/it] 82%|████████▏ | 8139/9908 [10:22:38<1:51:23,  3.78s/it] 82%|████████▏ | 8140/9908 [10:22:41<1:51:14,  3.78s/it] 82%|████████▏ | 8141/9908 [10:22:45<1:50:19,  3.75s/it] 82%|████████▏ | 8142/9908 [10:22:49<1:53:02,  3.84s/it] 82%|████████▏ | 8143/9908 [10:22:53<1:52:20,  3.82s/it] 82%|████████▏ | 8144/9908 [10:22:56<1:48:43,  3.70s/it] 82%|████████▏ | 8145/9908 [10:23:00<1:46:39,  3.63s/it] 82%|████████▏ | 8146/9908 [10:23:03<1:46:39,  3.63s/it] 82%|████████▏ | 8147/9908 [10:23:07<1:45:54,  3.61s/it] 82%|████████▏ | 8148/9908 [10:23:11<1:48:33,  3.70s/it] 82%|████████▏ | 8149/9908 [10:23:15<1:48:55,  3.72s/it]09/20/2024 11:59:49 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.014415698125958443, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.067399501800537, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.081815242767334}
 82%|████████▏ | 8150/9908 [10:23:19<1:51:16,  3.80s/it] 82%|████████▏ | 8151/9908 [10:23:22<1:50:24,  3.77s/it] 82%|████████▏ | 8152/9908 [10:23:26<1:50:39,  3.78s/it] 82%|████████▏ | 8153/9908 [10:23:30<1:49:54,  3.76s/it] 82%|████████▏ | 8154/9908 [10:23:33<1:47:50,  3.69s/it] 82%|████████▏ | 8155/9908 [10:23:37<1:47:51,  3.69s/it] 82%|████████▏ | 8156/9908 [10:23:41<1:50:28,  3.78s/it] 82%|████████▏ | 8157/9908 [10:23:45<1:50:25,  3.78s/it] 82%|████████▏ | 8158/9908 [10:23:49<1:52:40,  3.86s/it] 82%|████████▏ | 8159/9908 [10:23:53<1:53:39,  3.90s/it] 82%|████████▏ | 8160/9908 [10:23:57<1:53:03,  3.88s/it] 82%|████████▏ | 8161/9908 [10:24:00<1:51:16,  3.82s/it] 82%|████████▏ | 8162/9908 [10:24:04<1:46:13,  3.65s/it] 82%|████████▏ | 8163/9908 [10:24:07<1:46:51,  3.67s/it] 82%|████████▏ | 8164/9908 [10:24:11<1:46:47,  3.67s/it] 82%|████████▏ | 8165/9908 [10:24:15<1:45:57,  3.65s/it] 82%|████████▏ | 8166/9908 [10:24:19<1:48:02,  3.72s/it] 82%|████████▏ | 8167/9908 [10:24:22<1:48:04,  3.72s/it] 82%|████████▏ | 8168/9908 [10:24:26<1:44:24,  3.60s/it] 82%|████████▏ | 8169/9908 [10:24:29<1:44:42,  3.61s/it] 82%|████████▏ | 8170/9908 [10:24:33<1:47:29,  3.71s/it] 82%|████████▏ | 8171/9908 [10:24:37<1:44:27,  3.61s/it] 82%|████████▏ | 8172/9908 [10:24:40<1:46:42,  3.69s/it] 82%|████████▏ | 8173/9908 [10:24:44<1:48:17,  3.75s/it] 82%|████████▏ | 8174/9908 [10:24:48<1:47:34,  3.72s/it] 83%|████████▎ | 8175/9908 [10:24:52<1:50:05,  3.81s/it] 83%|████████▎ | 8176/9908 [10:24:56<1:48:56,  3.77s/it] 83%|████████▎ | 8177/9908 [10:24:59<1:46:07,  3.68s/it] 83%|████████▎ | 8178/9908 [10:25:03<1:45:04,  3.64s/it] 83%|████████▎ | 8179/9908 [10:25:07<1:47:49,  3.74s/it] 83%|████████▎ | 8180/9908 [10:25:10<1:47:08,  3.72s/it] 83%|████████▎ | 8181/9908 [10:25:14<1:47:21,  3.73s/it] 83%|████████▎ | 8182/9908 [10:25:18<1:47:14,  3.73s/it] 83%|████████▎ | 8183/9908 [10:25:22<1:48:38,  3.78s/it] 83%|████████▎ | 8184/9908 [10:25:25<1:43:56,  3.62s/it] 83%|████████▎ | 8185/9908 [10:25:29<1:45:44,  3.68s/it] 83%|████████▎ | 8186/9908 [10:25:32<1:44:50,  3.65s/it] 83%|████████▎ | 8187/9908 [10:25:36<1:43:05,  3.59s/it] 83%|████████▎ | 8188/9908 [10:25:40<1:48:25,  3.78s/it] 83%|████████▎ | 8189/9908 [10:25:44<1:48:16,  3.78s/it] 83%|████████▎ | 8190/9908 [10:25:47<1:47:15,  3.75s/it] 83%|████████▎ | 8191/9908 [10:25:51<1:45:20,  3.68s/it] 83%|████████▎ | 8192/9908 [10:25:54<1:43:04,  3.60s/it] 83%|████████▎ | 8193/9908 [10:25:58<1:45:41,  3.70s/it] 83%|████████▎ | 8194/9908 [10:26:02<1:43:01,  3.61s/it] 83%|████████▎ | 8195/9908 [10:26:05<1:40:26,  3.52s/it] 83%|████████▎ | 8196/9908 [10:26:09<1:42:57,  3.61s/it] 83%|████████▎ | 8197/9908 [10:26:13<1:45:43,  3.71s/it] 83%|████████▎ | 8198/9908 [10:26:17<1:45:35,  3.70s/it] 83%|████████▎ | 8199/9908 [10:26:20<1:47:56,  3.79s/it]09/20/2024 12:02:55 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.018364954739809036, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.0742573738098145, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.0926222801208496}
 83%|████████▎ | 8200/9908 [10:26:24<1:46:56,  3.76s/it] 83%|████████▎ | 8201/9908 [10:26:28<1:47:58,  3.80s/it] 83%|████████▎ | 8202/9908 [10:26:32<1:46:01,  3.73s/it] 83%|████████▎ | 8203/9908 [10:26:35<1:42:41,  3.61s/it] 83%|████████▎ | 8204/9908 [10:26:38<1:41:48,  3.58s/it] 83%|████████▎ | 8205/9908 [10:26:42<1:45:02,  3.70s/it] 83%|████████▎ | 8206/9908 [10:26:46<1:43:00,  3.63s/it] 83%|████████▎ | 8207/9908 [10:26:50<1:47:00,  3.77s/it] 83%|████████▎ | 8208/9908 [10:26:54<1:45:42,  3.73s/it] 83%|████████▎ | 8209/9908 [10:26:57<1:43:32,  3.66s/it] 83%|████████▎ | 8210/9908 [10:27:01<1:44:06,  3.68s/it] 83%|████████▎ | 8211/9908 [10:27:05<1:46:59,  3.78s/it] 83%|████████▎ | 8212/9908 [10:27:09<1:48:22,  3.83s/it] 83%|████████▎ | 8213/9908 [10:27:13<1:47:08,  3.79s/it] 83%|████████▎ | 8214/9908 [10:27:16<1:46:47,  3.78s/it] 83%|████████▎ | 8215/9908 [10:27:20<1:43:44,  3.68s/it] 83%|████████▎ | 8216/9908 [10:27:24<1:45:37,  3.75s/it] 83%|████████▎ | 8217/9908 [10:27:27<1:46:00,  3.76s/it] 83%|████████▎ | 8218/9908 [10:27:31<1:45:19,  3.74s/it] 83%|████████▎ | 8219/9908 [10:27:35<1:48:32,  3.86s/it] 83%|████████▎ | 8220/9908 [10:27:39<1:45:02,  3.73s/it] 83%|████████▎ | 8221/9908 [10:27:42<1:44:30,  3.72s/it] 83%|████████▎ | 8222/9908 [10:27:46<1:42:33,  3.65s/it] 83%|████████▎ | 8223/9908 [10:27:50<1:44:55,  3.74s/it] 83%|████████▎ | 8224/9908 [10:27:54<1:44:32,  3.72s/it] 83%|████████▎ | 8225/9908 [10:27:57<1:44:24,  3.72s/it] 83%|████████▎ | 8226/9908 [10:28:01<1:41:56,  3.64s/it] 83%|████████▎ | 8227/9908 [10:28:04<1:43:12,  3.68s/it] 83%|████████▎ | 8228/9908 [10:28:08<1:45:08,  3.76s/it] 83%|████████▎ | 8229/9908 [10:28:12<1:44:38,  3.74s/it] 83%|████████▎ | 8230/9908 [10:28:16<1:46:02,  3.79s/it] 83%|████████▎ | 8231/9908 [10:28:19<1:42:55,  3.68s/it] 83%|████████▎ | 8232/9908 [10:28:23<1:42:41,  3.68s/it] 83%|████████▎ | 8233/9908 [10:28:27<1:42:26,  3.67s/it] 83%|████████▎ | 8234/9908 [10:28:31<1:43:56,  3.73s/it] 83%|████████▎ | 8235/9908 [10:28:34<1:42:32,  3.68s/it] 83%|████████▎ | 8236/9908 [10:28:38<1:43:51,  3.73s/it] 83%|████████▎ | 8237/9908 [10:28:42<1:43:26,  3.71s/it] 83%|████████▎ | 8238/9908 [10:28:45<1:43:08,  3.71s/it] 83%|████████▎ | 8239/9908 [10:28:49<1:43:06,  3.71s/it] 83%|████████▎ | 8240/9908 [10:28:53<1:43:45,  3.73s/it] 83%|████████▎ | 8241/9908 [10:28:57<1:44:18,  3.75s/it] 83%|████████▎ | 8242/9908 [10:29:01<1:45:19,  3.79s/it] 83%|████████▎ | 8243/9908 [10:29:04<1:44:57,  3.78s/it] 83%|████████▎ | 8244/9908 [10:29:08<1:42:53,  3.71s/it] 83%|████████▎ | 8245/9908 [10:29:11<1:41:11,  3.65s/it] 83%|████████▎ | 8246/9908 [10:29:15<1:41:01,  3.65s/it] 83%|████████▎ | 8247/9908 [10:29:19<1:41:25,  3.66s/it] 83%|████████▎ | 8248/9908 [10:29:23<1:43:19,  3.73s/it] 83%|████████▎ | 8249/9908 [10:29:26<1:42:11,  3.70s/it]09/20/2024 12:06:00 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.026706624776124954, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.1704916954040527, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.1971982717514038}
 83%|████████▎ | 8250/9908 [10:29:30<1:41:47,  3.68s/it] 83%|████████▎ | 8251/9908 [10:29:34<1:44:26,  3.78s/it] 83%|████████▎ | 8252/9908 [10:29:38<1:44:57,  3.80s/it] 83%|████████▎ | 8253/9908 [10:29:41<1:42:55,  3.73s/it] 83%|████████▎ | 8254/9908 [10:29:45<1:40:56,  3.66s/it] 83%|████████▎ | 8255/9908 [10:29:49<1:41:47,  3.69s/it] 83%|████████▎ | 8256/9908 [10:29:52<1:39:13,  3.60s/it] 83%|████████▎ | 8257/9908 [10:29:56<1:40:54,  3.67s/it] 83%|████████▎ | 8258/9908 [10:30:00<1:41:42,  3.70s/it] 83%|████████▎ | 8259/9908 [10:30:03<1:42:18,  3.72s/it] 83%|████████▎ | 8260/9908 [10:30:07<1:43:15,  3.76s/it] 83%|████████▎ | 8261/9908 [10:30:11<1:40:18,  3.65s/it] 83%|████████▎ | 8262/9908 [10:30:14<1:41:16,  3.69s/it] 83%|████████▎ | 8263/9908 [10:30:18<1:43:47,  3.79s/it] 83%|████████▎ | 8264/9908 [10:30:22<1:41:48,  3.72s/it] 83%|████████▎ | 8265/9908 [10:30:26<1:43:47,  3.79s/it] 83%|████████▎ | 8266/9908 [10:30:29<1:41:19,  3.70s/it] 83%|████████▎ | 8267/9908 [10:30:33<1:42:24,  3.74s/it] 83%|████████▎ | 8268/9908 [10:30:37<1:44:15,  3.81s/it] 83%|████████▎ | 8269/9908 [10:30:41<1:43:28,  3.79s/it] 83%|████████▎ | 8270/9908 [10:30:44<1:39:37,  3.65s/it] 83%|████████▎ | 8271/9908 [10:30:48<1:41:13,  3.71s/it] 83%|████████▎ | 8272/9908 [10:30:52<1:40:10,  3.67s/it] 83%|████████▎ | 8273/9908 [10:30:55<1:40:09,  3.68s/it] 84%|████████▎ | 8274/9908 [10:30:59<1:40:27,  3.69s/it] 84%|████████▎ | 8275/9908 [10:31:03<1:40:19,  3.69s/it] 84%|████████▎ | 8276/9908 [10:31:07<1:44:35,  3.85s/it] 84%|████████▎ | 8277/9908 [10:31:11<1:41:52,  3.75s/it] 84%|████████▎ | 8278/9908 [10:31:15<1:44:23,  3.84s/it] 84%|████████▎ | 8279/9908 [10:31:18<1:41:14,  3.73s/it] 84%|████████▎ | 8280/9908 [10:31:22<1:42:32,  3.78s/it] 84%|████████▎ | 8281/9908 [10:31:26<1:40:53,  3.72s/it] 84%|████████▎ | 8282/9908 [10:31:29<1:39:34,  3.67s/it] 84%|████████▎ | 8283/9908 [10:31:33<1:41:08,  3.73s/it] 84%|████████▎ | 8284/9908 [10:31:37<1:40:15,  3.70s/it] 84%|████████▎ | 8285/9908 [10:31:40<1:40:33,  3.72s/it] 84%|████████▎ | 8286/9908 [10:31:44<1:39:36,  3.68s/it] 84%|████████▎ | 8287/9908 [10:31:48<1:38:52,  3.66s/it] 84%|████████▎ | 8288/9908 [10:31:51<1:37:53,  3.63s/it] 84%|████████▎ | 8289/9908 [10:31:55<1:42:28,  3.80s/it] 84%|████████▎ | 8290/9908 [10:31:59<1:42:30,  3.80s/it] 84%|████████▎ | 8291/9908 [10:32:03<1:42:20,  3.80s/it] 84%|████████▎ | 8292/9908 [10:32:06<1:40:11,  3.72s/it] 84%|████████▎ | 8293/9908 [10:32:10<1:38:54,  3.67s/it] 84%|████████▎ | 8294/9908 [10:32:14<1:38:53,  3.68s/it] 84%|████████▎ | 8295/9908 [10:32:17<1:38:27,  3.66s/it] 84%|████████▎ | 8296/9908 [10:32:21<1:36:10,  3.58s/it] 84%|████████▎ | 8297/9908 [10:32:24<1:37:05,  3.62s/it] 84%|████████▍ | 8298/9908 [10:32:28<1:39:46,  3.72s/it] 84%|████████▍ | 8299/9908 [10:32:32<1:40:37,  3.75s/it]09/20/2024 12:09:07 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.019624341279268265, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 0.9207612872123718, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 0.940385639667511}
 84%|████████▍ | 8300/9908 [10:32:36<1:38:25,  3.67s/it] 84%|████████▍ | 8301/9908 [10:32:39<1:38:32,  3.68s/it] 84%|████████▍ | 8302/9908 [10:32:43<1:39:11,  3.71s/it] 84%|████████▍ | 8303/9908 [10:32:47<1:36:36,  3.61s/it] 84%|████████▍ | 8304/9908 [10:32:50<1:37:01,  3.63s/it] 84%|████████▍ | 8305/9908 [10:32:54<1:38:28,  3.69s/it] 84%|████████▍ | 8306/9908 [10:32:58<1:37:41,  3.66s/it] 84%|████████▍ | 8307/9908 [10:33:01<1:36:42,  3.62s/it] 84%|████████▍ | 8308/9908 [10:33:05<1:35:56,  3.60s/it] 84%|████████▍ | 8309/9908 [10:33:08<1:36:00,  3.60s/it] 84%|████████▍ | 8310/9908 [10:33:12<1:37:40,  3.67s/it] 84%|████████▍ | 8311/9908 [10:33:16<1:38:12,  3.69s/it] 84%|████████▍ | 8312/9908 [10:33:20<1:40:46,  3.79s/it] 84%|████████▍ | 8313/9908 [10:33:24<1:40:55,  3.80s/it] 84%|████████▍ | 8314/9908 [10:33:27<1:40:42,  3.79s/it] 84%|████████▍ | 8315/9908 [10:33:31<1:37:01,  3.65s/it] 84%|████████▍ | 8316/9908 [10:33:35<1:39:42,  3.76s/it] 84%|████████▍ | 8317/9908 [10:33:38<1:38:23,  3.71s/it] 84%|████████▍ | 8318/9908 [10:33:42<1:38:40,  3.72s/it] 84%|████████▍ | 8319/9908 [10:33:46<1:41:10,  3.82s/it] 84%|████████▍ | 8320/9908 [10:33:50<1:37:36,  3.69s/it] 84%|████████▍ | 8321/9908 [10:33:54<1:39:59,  3.78s/it] 84%|████████▍ | 8322/9908 [10:33:57<1:38:59,  3.74s/it] 84%|████████▍ | 8323/9908 [10:34:01<1:37:54,  3.71s/it] 84%|████████▍ | 8324/9908 [10:34:05<1:37:51,  3.71s/it] 84%|████████▍ | 8325/9908 [10:34:08<1:36:36,  3.66s/it] 84%|████████▍ | 8326/9908 [10:34:12<1:41:40,  3.86s/it] 84%|████████▍ | 8327/9908 [10:34:16<1:40:46,  3.82s/it] 84%|████████▍ | 8328/9908 [10:34:20<1:38:16,  3.73s/it] 84%|████████▍ | 8329/9908 [10:34:23<1:35:50,  3.64s/it] 84%|████████▍ | 8330/9908 [10:34:27<1:37:56,  3.72s/it] 84%|████████▍ | 8331/9908 [10:34:31<1:38:34,  3.75s/it] 84%|████████▍ | 8332/9908 [10:34:35<1:39:26,  3.79s/it] 84%|████████▍ | 8333/9908 [10:34:38<1:38:59,  3.77s/it] 84%|████████▍ | 8334/9908 [10:34:43<1:41:51,  3.88s/it] 84%|████████▍ | 8335/9908 [10:34:46<1:38:01,  3.74s/it] 84%|████████▍ | 8336/9908 [10:34:50<1:37:16,  3.71s/it] 84%|████████▍ | 8337/9908 [10:34:53<1:35:19,  3.64s/it] 84%|████████▍ | 8338/9908 [10:34:57<1:33:56,  3.59s/it] 84%|████████▍ | 8339/9908 [10:35:01<1:36:51,  3.70s/it] 84%|████████▍ | 8340/9908 [10:35:04<1:36:19,  3.69s/it] 84%|████████▍ | 8341/9908 [10:35:08<1:34:14,  3.61s/it] 84%|████████▍ | 8342/9908 [10:35:12<1:36:40,  3.70s/it] 84%|████████▍ | 8343/9908 [10:35:15<1:37:02,  3.72s/it] 84%|████████▍ | 8344/9908 [10:35:19<1:38:56,  3.80s/it] 84%|████████▍ | 8345/9908 [10:35:23<1:38:51,  3.79s/it] 84%|████████▍ | 8346/9908 [10:35:27<1:38:56,  3.80s/it] 84%|████████▍ | 8347/9908 [10:35:31<1:39:57,  3.84s/it] 84%|████████▍ | 8348/9908 [10:35:35<1:38:28,  3.79s/it] 84%|████████▍ | 8349/9908 [10:35:38<1:36:05,  3.70s/it]09/20/2024 12:12:13 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.0286160446703434, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.0685852766036987, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.0972013473510742}
 84%|████████▍ | 8350/9908 [10:35:42<1:36:11,  3.70s/it] 84%|████████▍ | 8351/9908 [10:35:46<1:37:03,  3.74s/it] 84%|████████▍ | 8352/9908 [10:35:49<1:34:31,  3.65s/it] 84%|████████▍ | 8353/9908 [10:35:53<1:34:31,  3.65s/it] 84%|████████▍ | 8354/9908 [10:35:56<1:34:50,  3.66s/it] 84%|████████▍ | 8355/9908 [10:36:00<1:34:30,  3.65s/it] 84%|████████▍ | 8356/9908 [10:36:03<1:33:29,  3.61s/it] 84%|████████▍ | 8357/9908 [10:36:07<1:34:43,  3.66s/it] 84%|████████▍ | 8358/9908 [10:36:11<1:36:43,  3.74s/it] 84%|████████▍ | 8359/9908 [10:36:15<1:37:01,  3.76s/it] 84%|████████▍ | 8360/9908 [10:36:19<1:35:20,  3.70s/it] 84%|████████▍ | 8361/9908 [10:36:22<1:34:37,  3.67s/it] 84%|████████▍ | 8362/9908 [10:36:26<1:38:32,  3.82s/it] 84%|████████▍ | 8363/9908 [10:36:30<1:36:15,  3.74s/it] 84%|████████▍ | 8364/9908 [10:36:34<1:37:04,  3.77s/it] 84%|████████▍ | 8365/9908 [10:36:38<1:38:43,  3.84s/it] 84%|████████▍ | 8366/9908 [10:36:41<1:35:54,  3.73s/it] 84%|████████▍ | 8367/9908 [10:36:45<1:36:18,  3.75s/it] 84%|████████▍ | 8368/9908 [10:36:49<1:35:40,  3.73s/it] 84%|████████▍ | 8369/9908 [10:36:52<1:35:30,  3.72s/it] 84%|████████▍ | 8370/9908 [10:36:56<1:35:38,  3.73s/it] 84%|████████▍ | 8371/9908 [10:37:00<1:35:00,  3.71s/it] 84%|████████▍ | 8372/9908 [10:37:03<1:34:41,  3.70s/it] 85%|████████▍ | 8373/9908 [10:37:07<1:34:24,  3.69s/it] 85%|████████▍ | 8374/9908 [10:37:11<1:35:39,  3.74s/it] 85%|████████▍ | 8375/9908 [10:37:15<1:39:52,  3.91s/it] 85%|████████▍ | 8376/9908 [10:37:19<1:36:39,  3.79s/it] 85%|████████▍ | 8377/9908 [10:37:22<1:34:14,  3.69s/it] 85%|████████▍ | 8378/9908 [10:37:26<1:32:40,  3.63s/it] 85%|████████▍ | 8379/9908 [10:37:30<1:33:24,  3.67s/it] 85%|████████▍ | 8380/9908 [10:37:33<1:30:27,  3.55s/it] 85%|████████▍ | 8381/9908 [10:37:37<1:32:10,  3.62s/it] 85%|████████▍ | 8382/9908 [10:37:40<1:31:49,  3.61s/it] 85%|████████▍ | 8383/9908 [10:37:44<1:33:04,  3.66s/it] 85%|████████▍ | 8384/9908 [10:37:48<1:34:14,  3.71s/it] 85%|████████▍ | 8385/9908 [10:37:51<1:32:27,  3.64s/it] 85%|████████▍ | 8386/9908 [10:37:55<1:33:20,  3.68s/it] 85%|████████▍ | 8387/9908 [10:37:59<1:32:03,  3.63s/it] 85%|████████▍ | 8388/9908 [10:38:03<1:35:37,  3.77s/it] 85%|████████▍ | 8389/9908 [10:38:06<1:32:23,  3.65s/it] 85%|████████▍ | 8390/9908 [10:38:10<1:34:47,  3.75s/it] 85%|████████▍ | 8391/9908 [10:38:14<1:35:33,  3.78s/it] 85%|████████▍ | 8392/9908 [10:38:18<1:36:01,  3.80s/it] 85%|████████▍ | 8393/9908 [10:38:21<1:34:39,  3.75s/it] 85%|████████▍ | 8394/9908 [10:38:25<1:35:56,  3.80s/it] 85%|████████▍ | 8395/9908 [10:38:29<1:34:14,  3.74s/it] 85%|████████▍ | 8396/9908 [10:38:32<1:33:06,  3.69s/it] 85%|████████▍ | 8397/9908 [10:38:36<1:34:00,  3.73s/it] 85%|████████▍ | 8398/9908 [10:38:40<1:34:24,  3.75s/it] 85%|████████▍ | 8399/9908 [10:38:44<1:32:58,  3.70s/it]09/20/2024 12:15:18 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.01579444669187069, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 0.8879435062408447, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 0.9037379622459412}
 85%|████████▍ | 8400/9908 [10:38:47<1:30:38,  3.61s/it] 85%|████████▍ | 8401/9908 [10:38:51<1:34:53,  3.78s/it] 85%|████████▍ | 8402/9908 [10:38:55<1:32:13,  3.67s/it] 85%|████████▍ | 8403/9908 [10:38:58<1:31:06,  3.63s/it] 85%|████████▍ | 8404/9908 [10:39:02<1:33:51,  3.74s/it] 85%|████████▍ | 8405/9908 [10:39:06<1:32:24,  3.69s/it] 85%|████████▍ | 8406/9908 [10:39:10<1:38:01,  3.92s/it] 85%|████████▍ | 8407/9908 [10:39:14<1:36:16,  3.85s/it] 85%|████████▍ | 8408/9908 [10:39:17<1:32:59,  3.72s/it] 85%|████████▍ | 8409/9908 [10:39:21<1:30:32,  3.62s/it] 85%|████████▍ | 8410/9908 [10:39:25<1:34:12,  3.77s/it] 85%|████████▍ | 8411/9908 [10:39:29<1:35:19,  3.82s/it] 85%|████████▍ | 8412/9908 [10:39:32<1:33:44,  3.76s/it] 85%|████████▍ | 8413/9908 [10:39:36<1:32:36,  3.72s/it] 85%|████████▍ | 8414/9908 [10:39:40<1:33:05,  3.74s/it] 85%|████████▍ | 8415/9908 [10:39:43<1:31:07,  3.66s/it] 85%|████████▍ | 8416/9908 [10:39:47<1:31:22,  3.67s/it] 85%|████████▍ | 8417/9908 [10:39:51<1:30:47,  3.65s/it] 85%|████████▍ | 8418/9908 [10:39:54<1:31:30,  3.68s/it] 85%|████████▍ | 8419/9908 [10:39:58<1:32:50,  3.74s/it] 85%|████████▍ | 8420/9908 [10:40:02<1:30:37,  3.65s/it] 85%|████████▍ | 8421/9908 [10:40:05<1:31:51,  3.71s/it] 85%|████████▌ | 8422/9908 [10:40:09<1:33:46,  3.79s/it] 85%|████████▌ | 8423/9908 [10:40:13<1:33:15,  3.77s/it] 85%|████████▌ | 8424/9908 [10:40:17<1:33:42,  3.79s/it] 85%|████████▌ | 8425/9908 [10:40:21<1:33:24,  3.78s/it] 85%|████████▌ | 8426/9908 [10:40:24<1:32:37,  3.75s/it] 85%|████████▌ | 8427/9908 [10:40:28<1:32:41,  3.76s/it] 85%|████████▌ | 8428/9908 [10:40:32<1:31:37,  3.71s/it] 85%|████████▌ | 8429/9908 [10:40:35<1:29:02,  3.61s/it] 85%|████████▌ | 8430/9908 [10:40:39<1:29:43,  3.64s/it] 85%|████████▌ | 8431/9908 [10:40:42<1:28:25,  3.59s/it] 85%|████████▌ | 8432/9908 [10:40:46<1:29:43,  3.65s/it] 85%|████████▌ | 8433/9908 [10:40:50<1:28:33,  3.60s/it] 85%|████████▌ | 8434/9908 [10:40:53<1:30:05,  3.67s/it] 85%|████████▌ | 8435/9908 [10:40:57<1:28:45,  3.62s/it] 85%|████████▌ | 8436/9908 [10:41:01<1:30:54,  3.71s/it] 85%|████████▌ | 8437/9908 [10:41:05<1:30:38,  3.70s/it] 85%|████████▌ | 8438/9908 [10:41:08<1:30:14,  3.68s/it] 85%|████████▌ | 8439/9908 [10:41:12<1:28:11,  3.60s/it] 85%|████████▌ | 8440/9908 [10:41:16<1:31:07,  3.72s/it] 85%|████████▌ | 8441/9908 [10:41:19<1:31:45,  3.75s/it] 85%|████████▌ | 8442/9908 [10:41:23<1:29:34,  3.67s/it] 85%|████████▌ | 8443/9908 [10:41:27<1:31:44,  3.76s/it] 85%|████████▌ | 8444/9908 [10:41:31<1:33:40,  3.84s/it] 85%|████████▌ | 8445/9908 [10:41:34<1:31:01,  3.73s/it] 85%|████████▌ | 8446/9908 [10:41:38<1:31:41,  3.76s/it] 85%|████████▌ | 8447/9908 [10:41:42<1:30:17,  3.71s/it] 85%|████████▌ | 8448/9908 [10:41:45<1:29:10,  3.66s/it] 85%|████████▌ | 8449/9908 [10:41:49<1:31:00,  3.74s/it]09/20/2024 12:18:24 - INFO - __main__ -   {'loss_ret%tv%ta--msrvtt_ret/loss_itc': 0.0, 'loss_ret%tv%ta--msrvtt_ret/loss_itm': 0.018147550523281097, 'loss_ret%tv%ta--msrvtt_ret/loss_area': 1.0233612060546875, 'loss_ret%tv%ta--msrvtt_ret/total_loss': 1.0415087938308716}
 85%|████████▌ | 8450/9908 [10:41:53<1:29:44,  3.69s/it] 85%|████████▌ | 8451/9908 [10:41:57<1:31:15,  3.76s/it] 85%|████████▌ | 8452/9908 [10:42:01<1:31:53,  3.79s/it] 85%|████████▌ | 8453/9908 [10:42:04<1:30:04,  3.71s/it] 85%|████████▌ | 8454/9908 [10:42:08<1:29:25,  3.69s/it] 85%|████████▌ | 8455/9908 [10:42:12<1:30:24,  3.73s/it] 85%|████████▌ | 8456/9908 [10:42:15<1:26:25,  3.57s/it] 85%|████████▌ | 8457/9908 [10:42:19<1:29:00,  3.68s/it] 85%|████████▌ | 8458/9908 [10:42:23<1:31:00,  3.77s/it] 85%|████████▌ | 8459/9908 [10:42:26<1:30:02,  3.73s/it] 85%|████████▌ | 8460/9908 [10:42:30<1:28:58,  3.69s/it] 85%|████████▌ | 8461/9908 [10:42:34<1:30:14,  3.74s/it] 85%|████████▌ | 8462/9908 [10:42:38<1:30:26,  3.75s/it] 85%|████████▌ | 8463/9908 [10:42:42<1:31:35,  3.80s/it] 85%|████████▌ | 8464/9908 [10:42:45<1:30:56,  3.78s/it] 85%|████████▌ | 8465/9908 [10:42:49<1:30:25,  3.76s/it] 85%|████████▌ | 8466/9908 [10:42:53<1:29:32,  3.73s/it] 85%|████████▌ | 8467/9908 [10:42:56<1:28:11,  3.67s/it] 85%|████████▌ | 8468/9908 [10:43:00<1:31:19,  3.81s/it] 85%|████████▌ | 8469/9908 [10:43:04<1:29:39,  3.74s/it] 85%|████████▌ | 8470/9908 [10:43:08<1:32:42,  3.87s/it] 85%|████████▌ | 8471/9908 [10:43:12<1:29:58,  3.76s/it] 86%|████████▌ | 8472/9908 [10:43:15<1:30:08,  3.77s/it] 86%|████████▌ | 8473/9908 [10:43:19<1:27:49,  3.67s/it] 86%|████████▌ | 8474/9908 [10:43:22<1:27:00,  3.64s/it] 86%|████████▌ | 8475/9908 [10:43:26<1:29:01,  3.73s/it] 86%|████████▌ | 8476/9908 [10:43:30<1:30:00,  3.77s/it] 86%|████████▌ | 8477/9908 [10:43:34<1:30:53,  3.81s/it] 86%|████████▌ | 8478/9908 [10:43:37<1:28:07,  3.70s/it] 86%|████████▌ | 8479/9908 [10:43:41<1:25:32,  3.59s/it] 86%|████████▌ | 8480/9908 [10:43:45<1:27:27,  3.67s/it] 86%|████████▌ | 8481/9908 [10:43:48<1:28:08,  3.71s/it] 86%|████████▌ | 8482/9908 [10:43:52<1:26:50,  3.65s/it] 86%|████████▌ | 8483/9908 [10:43:56<1:28:46,  3.74s/it] 86%|████████▌ | 8484/9908 [10:44:00<1:29:04,  3.75s/it] 86%|████████▌ | 8485/9908 [10:44:03<1:28:36,  3.74s/it] 86%|████████▌ | 8486/9908 [10:44:07<1:27:32,  3.69s/it] 86%|████████▌ | 8487/9908 [10:44:11<1:27:05,  3.68s/it] 86%|████████▌ | 8488/9908 [10:44:15<1:28:43,  3.75s/it] 86%|████████▌ | 8489/9908 [10:44:19<1:30:12,  3.81s/it] 86%|████████▌ | 8490/9908 [10:44:23<1:31:10,  3.86s/it] 86%|████████▌ | 8491/9908 [10:44:26<1:27:54,  3.72s/it] 86%|████████▌ | 8492/9908 [10:44:30<1:31:15,  3.87s/it] 86%|████████▌ | 8493/9908 [10:44:34<1:30:04,  3.82s/it] 86%|████████▌ | 8494/9908 [10:44:37<1:26:12,  3.66s/it] 86%|████████▌ | 8495/9908 [10:44:41<1:26:19,  3.67s/it] 86%|████████▌ | 8496/9908 [10:44:44<1:26:24,  3.67s/it] 86%|████████▌ | 8497/9908 [10:44:48<1:25:01,  3.62s/it] 86%|████████▌ | 8498/9908 [10:44:52<1:27:20,  3.72s/it] 86%|████████▌ | 8499/9908 [10:44:56<1:29:20,  3.80s/it]09/20/2024 12:21:29 - INFO - __main__ -   evaluate on ret%tvas--msrvtt_ret task
09/20/2024 12:21:29 - INFO - __main__ -   start running ret%tvas validation...
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
/leonardo/home/userexternal/gcicchet/.conda/envs/vast/lib/python3.9/site-packages/torchvision/transforms/functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(

  0%|          | 0/221 [00:00<?, ?it/s][A
  0%|          | 1/221 [00:01<05:55,  1.62s/it][A
  1%|          | 2/221 [00:01<03:09,  1.16it/s][A
  1%|▏         | 3/221 [00:02<02:12,  1.65it/s][A
  2%|▏         | 4/221 [00:02<01:46,  2.04it/s][A
  3%|▎         | 6/221 [00:02<01:03,  3.39it/s][A
  3%|▎         | 7/221 [00:03<01:00,  3.51it/s][A
  4%|▎         | 8/221 [00:03<01:15,  2.83it/s][A
  4%|▍         | 9/221 [00:03<01:11,  2.95it/s][A
  5%|▍         | 10/221 [00:04<01:16,  2.74it/s][A
  5%|▌         | 12/221 [00:06<02:29,  1.40it/s][A
  6%|▌         | 13/221 [00:06<02:08,  1.61it/s][A
  7%|▋         | 15/221 [00:07<01:40,  2.05it/s][A
  7%|▋         | 16/221 [00:08<01:41,  2.02it/s][A
  8%|▊         | 17/221 [00:08<01:48,  1.88it/s][A
  8%|▊         | 18/221 [00:08<01:29,  2.26it/s][A
  9%|▊         | 19/221 [00:10<02:50,  1.19it/s][A
  9%|▉         | 20/221 [00:10<02:08,  1.57it/s][A
 10%|▉         | 21/221 [00:11<01:49,  1.82it/s][A
 10%|▉         | 22/221 [00:12<02:05,  1.59it/s][A
 10%|█         | 23/221 [00:12<01:36,  2.05it/s][A
 11%|█         | 24/221 [00:12<01:17,  2.54it/s][A
 11%|█▏        | 25/221 [00:12<01:08,  2.85it/s][A
 12%|█▏        | 26/221 [00:13<01:10,  2.76it/s][A
 13%|█▎        | 28/221 [00:13<01:03,  3.02it/s][A
 13%|█▎        | 29/221 [00:13<00:57,  3.31it/s][A
 14%|█▎        | 30/221 [00:14<01:07,  2.85it/s][A
 14%|█▍        | 31/221 [00:14<01:10,  2.69it/s][A
 14%|█▍        | 32/221 [00:14<00:58,  3.23it/s][A
 15%|█▍        | 33/221 [00:15<01:01,  3.08it/s][A
 15%|█▌        | 34/221 [00:15<00:49,  3.80it/s][A
 16%|█▌        | 35/221 [00:15<00:43,  4.31it/s][A
 16%|█▋        | 36/221 [00:15<00:42,  4.31it/s][A
 17%|█▋        | 37/221 [00:16<01:03,  2.89it/s][A
 17%|█▋        | 38/221 [00:16<01:08,  2.68it/s][A
 18%|█▊        | 39/221 [00:17<01:01,  2.98it/s][A
 18%|█▊        | 40/221 [00:17<01:07,  2.67it/s][A
 19%|█▊        | 41/221 [00:17<00:58,  3.10it/s][A
 19%|█▉        | 43/221 [00:17<00:40,  4.38it/s][A
 20%|█▉        | 44/221 [00:18<00:35,  5.02it/s][A
 20%|██        | 45/221 [00:21<03:06,  1.06s/it][A
 21%|██        | 46/221 [00:22<02:36,  1.11it/s][A
 21%|██▏       | 47/221 [00:22<02:15,  1.28it/s][A
 22%|██▏       | 48/221 [00:22<01:41,  1.70it/s][A
 22%|██▏       | 49/221 [00:23<01:33,  1.84it/s][A
 23%|██▎       | 50/221 [00:23<01:37,  1.75it/s][A
 23%|██▎       | 51/221 [00:23<01:18,  2.18it/s][A
 24%|██▎       | 52/221 [00:24<01:06,  2.55it/s][A
 24%|██▍       | 53/221 [00:24<00:56,  3.00it/s][A
 24%|██▍       | 54/221 [00:24<01:11,  2.33it/s][A
 25%|██▍       | 55/221 [00:26<02:01,  1.37it/s][A
 25%|██▌       | 56/221 [00:26<01:35,  1.73it/s][A
 26%|██▌       | 57/221 [00:26<01:15,  2.17it/s][A
 27%|██▋       | 59/221 [00:27<00:50,  3.18it/s][A
 27%|██▋       | 60/221 [00:27<00:55,  2.90it/s][A
 28%|██▊       | 61/221 [00:27<00:49,  3.22it/s][A
 28%|██▊       | 62/221 [00:28<00:52,  3.06it/s][A
 29%|██▊       | 63/221 [00:28<00:46,  3.39it/s][A
 29%|██▉       | 64/221 [00:29<01:12,  2.15it/s][A
 29%|██▉       | 65/221 [00:29<00:58,  2.68it/s][A
 30%|██▉       | 66/221 [00:29<01:01,  2.50it/s][A
 30%|███       | 67/221 [00:30<00:55,  2.80it/s][A
 31%|███       | 68/221 [00:30<00:45,  3.36it/s][A
 31%|███       | 69/221 [00:31<01:44,  1.45it/s][A
 32%|███▏      | 70/221 [00:31<01:18,  1.92it/s][A
 32%|███▏      | 71/221 [00:32<01:12,  2.07it/s][A
 33%|███▎      | 72/221 [00:32<01:15,  1.97it/s][A
 33%|███▎      | 73/221 [00:33<01:20,  1.85it/s][A
 33%|███▎      | 74/221 [00:33<01:00,  2.42it/s][A
 34%|███▍      | 75/221 [00:34<00:59,  2.46it/s][A
 34%|███▍      | 76/221 [00:34<00:53,  2.69it/s][A
 35%|███▍      | 77/221 [00:36<02:07,  1.13it/s][A
 35%|███▌      | 78/221 [00:36<01:34,  1.51it/s][A
 36%|███▌      | 79/221 [00:37<02:00,  1.18it/s][A
 36%|███▌      | 80/221 [00:38<01:33,  1.50it/s][A
 37%|███▋      | 81/221 [00:38<01:24,  1.65it/s][A
 37%|███▋      | 82/221 [00:41<02:57,  1.28s/it][A
 38%|███▊      | 83/221 [00:41<02:28,  1.08s/it][A
 38%|███▊      | 84/221 [00:42<01:54,  1.20it/s][A
 39%|███▉      | 86/221 [00:42<01:13,  1.83it/s][A
 39%|███▉      | 87/221 [00:43<01:10,  1.90it/s][A
 40%|███▉      | 88/221 [00:43<01:02,  2.13it/s][A
 40%|████      | 89/221 [00:43<00:56,  2.35it/s][A
 41%|████      | 90/221 [00:44<00:50,  2.58it/s][A
 41%|████      | 91/221 [00:44<00:41,  3.11it/s][A
 42%|████▏     | 92/221 [00:44<00:37,  3.45it/s][A
 42%|████▏     | 93/221 [00:44<00:39,  3.23it/s][A
 43%|████▎     | 94/221 [00:45<00:50,  2.52it/s][A
 43%|████▎     | 95/221 [00:45<00:53,  2.35it/s][A
 43%|████▎     | 96/221 [00:46<00:58,  2.13it/s][A
 44%|████▍     | 97/221 [00:46<00:47,  2.60it/s][A
 44%|████▍     | 98/221 [00:47<00:50,  2.45it/s][A
 45%|████▍     | 99/221 [00:47<00:47,  2.58it/s][A
 45%|████▌     | 100/221 [00:48<01:03,  1.90it/s][A
 46%|████▌     | 101/221 [00:48<00:50,  2.35it/s][A
 46%|████▌     | 102/221 [00:49<01:04,  1.85it/s][A
 47%|████▋     | 103/221 [00:49<00:48,  2.44it/s][A
 47%|████▋     | 104/221 [00:49<00:44,  2.63it/s][A
 48%|████▊     | 105/221 [00:50<00:46,  2.48it/s][A
 48%|████▊     | 106/221 [00:52<01:45,  1.09it/s][A
 48%|████▊     | 107/221 [00:52<01:24,  1.35it/s][A
 49%|████▉     | 108/221 [00:53<01:15,  1.49it/s][A
 49%|████▉     | 109/221 [00:53<01:05,  1.70it/s][A
 50%|████▉     | 110/221 [00:53<00:49,  2.25it/s][A
 50%|█████     | 111/221 [00:53<00:44,  2.46it/s][A
 51%|█████     | 112/221 [00:54<00:43,  2.52it/s][A
 51%|█████     | 113/221 [00:54<00:36,  2.95it/s][A
 52%|█████▏    | 115/221 [00:55<00:36,  2.87it/s][A
 52%|█████▏    | 116/221 [00:55<00:36,  2.89it/s][A
 53%|█████▎    | 117/221 [00:55<00:37,  2.80it/s][A
 53%|█████▎    | 118/221 [00:56<00:39,  2.60it/s][A
 54%|█████▍    | 119/221 [00:56<00:32,  3.09it/s][A
 54%|█████▍    | 120/221 [00:56<00:28,  3.49it/s][A
 55%|█████▍    | 121/221 [00:57<00:38,  2.60it/s][A
 55%|█████▌    | 122/221 [00:57<00:38,  2.55it/s][A
 56%|█████▌    | 123/221 [00:59<01:11,  1.37it/s][A
 56%|█████▌    | 124/221 [00:59<00:54,  1.79it/s][A
 57%|█████▋    | 125/221 [01:00<00:59,  1.60it/s][A
 57%|█████▋    | 126/221 [01:09<04:56,  3.13s/it][A
 57%|█████▋    | 127/221 [01:09<03:39,  2.33s/it][A
 58%|█████▊    | 128/221 [01:10<02:44,  1.77s/it][A
 58%|█████▊    | 129/221 [01:10<02:11,  1.43s/it][A
 59%|█████▉    | 130/221 [01:11<01:37,  1.07s/it][A
 59%|█████▉    | 131/221 [01:11<01:28,  1.02it/s][A
 60%|█████▉    | 132/221 [01:13<01:37,  1.10s/it][A
 60%|██████    | 133/221 [01:13<01:21,  1.08it/s][A
 61%|██████    | 134/221 [01:14<01:16,  1.14it/s][A
 61%|██████    | 135/221 [01:15<01:08,  1.25it/s][A
 62%|██████▏   | 136/221 [01:15<00:56,  1.51it/s][A
 62%|██████▏   | 137/221 [01:15<00:46,  1.80it/s][A
 62%|██████▏   | 138/221 [01:16<00:41,  2.00it/s][A
 63%|██████▎   | 139/221 [01:16<00:33,  2.46it/s][A
 63%|██████▎   | 140/221 [01:16<00:34,  2.37it/s][A
 64%|██████▍   | 141/221 [01:17<00:33,  2.38it/s][A
 64%|██████▍   | 142/221 [01:17<00:29,  2.69it/s][A
 65%|██████▍   | 143/221 [01:17<00:29,  2.65it/s][A
 65%|██████▌   | 144/221 [01:18<00:23,  3.24it/s][A
 66%|██████▌   | 145/221 [01:18<00:18,  4.01it/s][A
 67%|██████▋   | 147/221 [01:18<00:12,  5.77it/s][A
 67%|██████▋   | 148/221 [01:19<00:33,  2.19it/s][A
 67%|██████▋   | 149/221 [01:19<00:28,  2.55it/s][A
 68%|██████▊   | 150/221 [01:20<00:29,  2.41it/s][A
 68%|██████▊   | 151/221 [01:20<00:26,  2.68it/s][A
 69%|██████▉   | 152/221 [01:20<00:25,  2.68it/s][A
 69%|██████▉   | 153/221 [01:21<00:20,  3.27it/s][A
 70%|██████▉   | 154/221 [01:21<00:19,  3.46it/s][A
 70%|███████   | 155/221 [01:21<00:18,  3.54it/s][A
 71%|███████   | 156/221 [01:21<00:15,  4.12it/s][A
 71%|███████   | 157/221 [01:28<02:26,  2.29s/it][A
 71%|███████▏  | 158/221 [01:30<02:05,  1.99s/it][A
 72%|███████▏  | 159/221 [01:30<01:29,  1.44s/it][A
 72%|███████▏  | 160/221 [01:30<01:04,  1.05s/it][A
 73%|███████▎  | 161/221 [01:30<00:46,  1.30it/s][A
 74%|███████▍  | 163/221 [01:30<00:28,  2.02it/s][A
 74%|███████▍  | 164/221 [01:31<00:23,  2.41it/s][A
 75%|███████▍  | 165/221 [01:31<00:20,  2.78it/s][A
 75%|███████▌  | 166/221 [01:31<00:24,  2.26it/s][A
 76%|███████▌  | 167/221 [01:32<00:22,  2.39it/s][A
 76%|███████▌  | 168/221 [01:34<00:56,  1.07s/it][A
 76%|███████▋  | 169/221 [01:35<00:46,  1.11it/s][A
 77%|███████▋  | 170/221 [01:35<00:39,  1.29it/s][A
 77%|███████▋  | 171/221 [01:36<00:31,  1.58it/s][A
 78%|███████▊  | 172/221 [01:36<00:25,  1.91it/s][A
 78%|███████▊  | 173/221 [01:36<00:23,  2.02it/s][A
 79%|███████▊  | 174/221 [01:37<00:20,  2.26it/s][A
 79%|███████▉  | 175/221 [01:37<00:18,  2.52it/s][A
 80%|███████▉  | 176/221 [01:37<00:15,  2.86it/s][A
 80%|████████  | 177/221 [01:38<00:14,  3.13it/s][A
 81%|████████  | 178/221 [01:38<00:14,  3.05it/s][A
 81%|████████  | 179/221 [01:38<00:13,  3.13it/s][A
 81%|████████▏ | 180/221 [01:38<00:11,  3.48it/s][A
 82%|████████▏ | 181/221 [01:38<00:09,  4.30it/s][A
 82%|████████▏ | 182/221 [01:39<00:11,  3.34it/s][A
 83%|████████▎ | 183/221 [01:40<00:17,  2.13it/s][A
 83%|████████▎ | 184/221 [01:40<00:16,  2.20it/s][A
 84%|████████▎ | 185/221 [01:40<00:14,  2.57it/s][A
 84%|████████▍ | 186/221 [01:41<00:11,  3.02it/s][A
 85%|████████▍ | 187/221 [01:41<00:10,  3.10it/s][A
 85%|████████▌ | 188/221 [01:41<00:09,  3.36it/s][A
 86%|████████▌ | 189/221 [01:42<00:09,  3.32it/s][A
 86%|████████▌ | 190/221 [01:42<00:10,  3.10it/s][A
 86%|████████▋ | 191/221 [01:42<00:08,  3.39it/s][A
 87%|████████▋ | 192/221 [01:43<00:12,  2.27it/s][A
 87%|████████▋ | 193/221 [01:43<00:10,  2.71it/s][A
 88%|████████▊ | 194/221 [01:43<00:09,  2.84it/s][A
 88%|████████▊ | 195/221 [01:44<00:08,  3.09it/s][A
 89%|████████▊ | 196/221 [01:44<00:09,  2.53it/s][A
 89%|████████▉ | 197/221 [01:45<00:09,  2.65it/s][A
 90%|████████▉ | 198/221 [01:45<00:08,  2.82it/s][A
 90%|█████████ | 199/221 [01:45<00:06,  3.23it/s][A
